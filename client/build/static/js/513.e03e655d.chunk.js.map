{"version":3,"file":"static/js/513.e03e655d.chunk.js","mappings":"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","sources":["components/pages/add-course/add-course-form.tsx","validations/course/AddCourse.ts"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Formik, Field, Form, ErrorMessage, FormikHelpers } from \"formik\";\r\nimport { AddCourseValidationSchema } from \"../../../validations/course/AddCourse\";\r\nimport { Switch } from \"@material-tailwind/react\";\r\nimport { addCourse } from \"../../../api/endpoints/course/course\";\r\nimport { toast } from \"react-toastify\";\r\nimport { getAllCategories } from \"../../../api/endpoints/category\";\r\nimport { ApiResponseCategory } from \"../../../api/types/apiResponses/api-response-category\";\r\ninterface CourseFormValues {\r\n  title: string;\r\n  duration: string;\r\n  category: string;\r\n  level: string;\r\n  tags: string;\r\n  about: string;\r\n  description: string;\r\n  syllabus: string;\r\n  requirements: string;\r\n  price: string;\r\n  [key: string]: string;\r\n}\r\n\r\n\r\nconst initialValues = {\r\n  title: \"\",\r\n  duration: \"\",\r\n  category: \"\",\r\n  level:\"\",  \r\n  tags: \"\",  \r\n  about:\"\",  \r\n  description: \"\",\r\n  syllabus:\"\",\r\n  requirements: \"\",\r\n  price: \"\",\r\n};\r\n\r\nconst CombinedForm: React.FC = () => {\r\n  const [paid, setPaid] = useState(false);\r\n  const [thumbnail, setThumbnail] = useState<File | null>(null);\r\n  const [guidelines, setGuidelines] = useState<File | null>(null);\r\n  const [categories, setCategories] = useState<ApiResponseCategory[] | null>(\r\n    null\r\n  );\r\n\r\n  const handleFormSubmit = async (values: CourseFormValues,  { resetForm }: FormikHelpers<CourseFormValues>) => {\r\n    try {\r\n      const formData = new FormData();\r\n      guidelines && formData.append(\"files\", guidelines);\r\n      thumbnail && formData.append(\"files\", thumbnail);\r\n      Object.keys(values).forEach((key) => formData.append(key, values[key]));\r\n      const response = await addCourse(formData);\r\n      toast.success(response.data.message, { \r\n        position: toast.POSITION.BOTTOM_RIGHT,\r\n      });\r\n      resetForm()  \r\n    } catch (error: any) {\r\n      toast.error(error.data.message, {\r\n        position: toast.POSITION.BOTTOM_RIGHT,\r\n      });\r\n    }\r\n  };\r\n\r\n  const fetchCategory = async () => {\r\n    try {\r\n      const response = await getAllCategories();\r\n      setCategories(response.data);\r\n    } catch (error) {\r\n      toast.error(\"something went wrong\")\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchCategory();\r\n  }, []);\r\n\r\n  const handlePaid = () => {\r\n    setPaid(!paid);\r\n  };\r\n\r\n  return (\r\n    <div className='mb-20'>\r\n      <div className='ml-12 pl-20'>\r\n        <h1 className='font-bold text-xl text-gray-800'>Create Course</h1>\r\n      </div>\r\n      <Formik\r\n        initialValues={initialValues}\r\n        validationSchema={AddCourseValidationSchema}\r\n        onSubmit={handleFormSubmit}\r\n      >\r\n        <Form>\r\n          <div className='bg-white ml-32  rounded-lg border-2 border-gray-200 mr-32 mb-24 mt-2 p-5'>\r\n            <div className='flex  w-full justify-center mt-10 pt-3 space-x-14 '>\r\n              <div>\r\n                <div className='mb-3'>\r\n                  <label\r\n                    htmlFor='title'\r\n                    className='block text-sm font-medium leading-6 text-gray-900'\r\n                  >\r\n                    Title\r\n                  </label>\r\n                  <Field\r\n                    type='text'\r\n                    id='title'\r\n                    name='title'\r\n                    className='pl-2 block w-80 rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 focus:ring-2 focus:ring-inset focus:ring-indigo-700 focus-visible:outline-none focus-visible:ring-blue-600 sm:text-sm sm:leading-6'\r\n                  />\r\n                  <ErrorMessage\r\n                    name='title'\r\n                    component='div'\r\n                    className='text-red-500 text-sm'\r\n                  />\r\n                </div>\r\n\r\n                <div className='mb-3'>\r\n                  <label\r\n                    htmlFor='duration'\r\n                    className='block text-sm font-medium leading-6 text-gray-900'\r\n                  >\r\n                    Duration (in weeks)\r\n                  </label>\r\n                  <Field\r\n                    type='number'\r\n                    id='duration'\r\n                    name='duration'\r\n                    className='pl-2 block w-80 rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 focus:ring-2 focus:ring-inset focus:ring-indigo-700 focus-visible:outline-none focus-visible:ring-blue-600 sm:text-sm sm:leading-6'\r\n                  />\r\n                  <ErrorMessage\r\n                    name='duration'\r\n                    component='div'\r\n                    className='text-red-500 text-sm'\r\n                  />\r\n                </div>\r\n\r\n                <div className='mb-3'>\r\n                  <label\r\n                    htmlFor='category'\r\n                    className='block text-sm font-medium leading-6 text-gray-900'\r\n                  >\r\n                    Category\r\n                  </label>\r\n                  <Field\r\n                    as='select'\r\n                    id='category'\r\n                    name='category'\r\n                    className='pl-2 block w-80 rounded-md border-0 py-2.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 focus:ring-2 focus:ring-inset focus:ring-indigo-700 focus-visible:outline-none focus-visible:ring-blue-600 sm:text-sm sm:leading-6'\r\n                  >\r\n                    {categories?.map(({ _id, name },index) => (\r\n                      <option selected={index===0} key={_id}>{name}</option>\r\n                    ))}  \r\n                  </Field>\r\n                  <ErrorMessage\r\n                    name='category'\r\n                    component='div'\r\n                    className='text-red-500 text-sm'\r\n                  />\r\n                </div>\r\n\r\n                <div className='mb-3'>\r\n                  <label\r\n                    htmlFor='level'\r\n                    className='block text-sm font-medium leading-6 text-gray-900'\r\n                  >\r\n                    Level\r\n                  </label>\r\n                  <Field\r\n                    as='select'\r\n                    id='level'\r\n                    name='level'\r\n                    className='pl-2 block w-80 rounded-md border-0 py-2.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 focus:ring-2 focus:ring-inset focus:ring-indigo-700 focus-visible:outline-none focus-visible:ring-blue-600 sm:text-sm sm:leading-6'\r\n                  >\r\n                    <option value='easy' selected>Easy</option>\r\n                    <option value='medium'>Medium</option>\r\n                    <option value='hard'>Hard</option>\r\n                  </Field>\r\n                  <ErrorMessage\r\n                    name='level'\r\n                    component='div'\r\n                    className='text-red-500 text-sm'\r\n                  />\r\n                </div>\r\n                <div className='mb-3'>\r\n                  <label\r\n                    htmlFor='tags'\r\n                    className='block text-sm font-medium leading-6 text-gray-900'\r\n                  >\r\n                    Tags\r\n                  </label>\r\n                  <Field\r\n                    type='text'\r\n                    id='tags'\r\n                    name='tags'\r\n                    className='pl-2 block w-80 rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 focus:ring-2 focus:ring-inset focus:ring-indigo-700 focus-visible:outline-none focus-visible:ring-blue-600 sm:text-sm sm:leading-6'\r\n                  />\r\n                  <ErrorMessage\r\n                    name='tags'\r\n                    component='div'\r\n                    className='text-red-500 text-sm'\r\n                  />\r\n                </div>\r\n\r\n                <div className='mb-3'>\r\n                  <div className='mb-5 mt-2 pl-2 pt-5 '>\r\n                    <Switch\r\n                      id='auto-update'\r\n                      onClick={handlePaid}\r\n                      label='Paid'\r\n                    />\r\n                  </div>\r\n\r\n                  {paid && (\r\n                    <div className=''>\r\n                      <label\r\n                        htmlFor='price'\r\n                        className='block text-sm font-medium leading-6 text-gray-900'\r\n                      >\r\n                        Price\r\n                      </label>\r\n                      <Field\r\n                        type='number'\r\n                        id='price'\r\n                        name='price'\r\n                        className='pl-2 block w-80 rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 focus:ring-2 focus:ring-inset focus:ring-indigo-700 focus-visible:outline-none focus-visible:ring-blue-600 sm:text-sm sm:leading-6'\r\n                      />\r\n                      <ErrorMessage\r\n                        name='price'\r\n                        component='div'\r\n                        className='text-red-500 text-sm'\r\n                      />\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n              <div>\r\n                <div className='mb-2'>\r\n                  <label\r\n                    htmlFor='about'\r\n                    className='block text-sm font-medium leading-6 text-gray-900'\r\n                  >\r\n                    About\r\n                  </label>\r\n                  <Field\r\n                    as='textarea'\r\n                    id='about'\r\n                    name='about'\r\n                    rows={4}\r\n                    className='pl-2 block w-80 rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 focus:ring-2 focus:ring-inset focus:ring-indigo-700 focus-visible:outline-none focus-visible:ring-blue-600 sm:text-sm sm:leading-6'\r\n                  />\r\n                  <ErrorMessage\r\n                    name='about'\r\n                    component='div'\r\n                    className='text-red-500 text-sm'\r\n                  />\r\n                </div>\r\n                <div className='mb-2'>\r\n                  <label\r\n                    htmlFor='description'\r\n                    className='block text-sm font-medium leading-6 text-gray-900'\r\n                  >\r\n                    Description\r\n                  </label>\r\n                  <Field\r\n                    as='textarea'\r\n                    id='description'\r\n                    name='description'\r\n                    rows={4}\r\n                    className='pl-2 block w-80 rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 focus:ring-2 focus:ring-inset focus:ring-indigo-700 focus-visible:outline-none focus-visible:ring-blue-600 sm:text-sm sm:leading-6'\r\n                  />\r\n                  <ErrorMessage\r\n                    name='description'\r\n                    component='div'\r\n                    className='text-red-500 text-sm'\r\n                  />\r\n                </div>\r\n                <div className='mb-2'>\r\n                  <label\r\n                    htmlFor='syllabus'\r\n                    className='block text-sm font-medium leading-6 text-gray-900'\r\n                  >\r\n                    Syllabus\r\n                  </label>\r\n                  <Field\r\n                    as='textarea'\r\n                    id='syllabus'\r\n                    name='syllabus'\r\n                    rows={4}\r\n                    className='pl-2 block w-80 rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 focus:ring-2 focus:ring-inset focus:ring-indigo-700 focus-visible:outline-none focus-visible:ring-blue-600 sm:text-sm sm:leading-6'\r\n                  />\r\n                  <ErrorMessage\r\n                    name='syllabus'\r\n                    component='div'\r\n                    className='text-red-500 text-sm'\r\n                  />\r\n                </div>\r\n                <div className='mb-2'>\r\n                  <label\r\n                    htmlFor='syllabus'\r\n                    className='block text-sm font-medium leading-6 text-gray-900'\r\n                  >\r\n                    Requirements\r\n                  </label>\r\n                  <Field\r\n                    as='textarea'\r\n                    id='requirements'\r\n                    name='requirements'\r\n                    rows={4}\r\n                    className='pl-2 block w-80 rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 focus:ring-2 focus:ring-inset focus:ring-indigo-700 focus-visible:outline-none focus-visible:ring-blue-600 sm:text-sm sm:leading-6'\r\n                  />\r\n                  <ErrorMessage\r\n                    name='requirements'\r\n                    component='div'\r\n                    className='text-red-500 text-sm'\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className='flex w-full justify-center mt-14 pt-3 space-x-14'>\r\n              <div>\r\n                <div className='mb-2'>\r\n                  <label\r\n                    htmlFor='guidelines'\r\n                    className='block text-sm font-medium leading-6 text-gray-900'\r\n                  >\r\n                    Course guidelines\r\n                  </label>\r\n                  <input\r\n                    type='file'\r\n                    id='guidelines'\r\n                    name='guidelines'\r\n                    accept='application/pdf'\r\n                    onChange={(event) => {\r\n                      const file = event.target.files?.[0] || null;\r\n                      setGuidelines(file);\r\n                    }}\r\n                    required\r\n                    className='pl-2 block w-80 rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 focus:ring-2 focus:ring-inset focus:ring-indigo-700 focus-visible:outline-none focus-visible:ring-blue-600 sm:text-sm sm:leading-6'\r\n                  />\r\n                  <ErrorMessage\r\n                    name='guidelines'\r\n                    component='div'\r\n                    className='text-red-500 text-sm'\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div>\r\n                <div className='mb-2'>\r\n                  <label\r\n                    htmlFor='thumbnail'\r\n                    className='block text-sm font-medium leading-6 text-gray-900'\r\n                  >\r\n                    Thumbnail\r\n                  </label>\r\n                  <input\r\n                    type='file'\r\n                    id='thumbnail'\r\n                    name='thumbnail'  \r\n                    accept='image/*'\r\n                    required\r\n                    onChange={(event) => {\r\n                      const file = event.target.files?.[0] || null;\r\n                      setThumbnail(file);\r\n                    }}\r\n                    className='pl-2 block w-80 rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 focus:ring-2 focus:ring-inset focus:ring-indigo-700 focus-visible:outline-none focus-visible:ring-blue-600 sm:text-sm sm:leading-6'\r\n                  />\r\n                  <ErrorMessage\r\n                    name='thumbnail'\r\n                    component='div'\r\n                    className='text-red-500 text-sm'\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className='flex justify-center  mt-8'>\r\n              <button\r\n                type='submit'\r\n                className='bg-blue-500 mt-5 text-white px-3 py-2 rounded-md'\r\n              >\r\n                Submit\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </Form>\r\n      </Formik>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CombinedForm;\r\n","import * as Yup from \"yup\";\r\nexport const AddCourseValidationSchema = Yup.object().shape({\r\n    title: Yup.string().required(\"Title is required\"),\r\n    duration: Yup.number()\r\n      .required(\"Duration is required\")\r\n      .positive(\"Duration must be a positive number\"),\r\n    \r\n    category: Yup.string().required(\"Category is required\"),\r\n    level:Yup.string().required(\"Level is required\"),\r\n    tags:Yup.string().required('Tags are required'),\r\n    about:Yup.string().required(\"About is required\"),\r\n    description: Yup.string().min(10,\"Description is too short\").required(\"Description is required\"),\r\n    syllabus:Yup.string().required(\"Syllabus is required\"),\r\n    requirements: Yup.string().required(\"requirements is required\"),\r\n    // price: Yup.number().when(\"paid\", {\r\n    //   is: true,\r\n    //   then: Yup.number().required(\"Price is required\") as any,\r\n    //   otherwise: Yup.number() as any,\r\n    // })\r\n    // thumbnail: Yup.mixed().required(\"Thumbnail is required\"),\r\n    // guidelines: Yup.mixed<CustomFile>().test(\r\n    //   \"fileFormat\",\r\n    //   \"Invalid file format. Only PDF files are allowed.\",\r\n    //   (value) => {\r\n    //     if (!value) return true; // If no file is selected, consider it valid\r\n  \r\n    //     const supportedFormats = [\"application/pdf\"];\r\n    //     return supportedFormats.includes(value.type);\r\n    //   }\r\n    // ),\r\n  });\r\n\r\n  interface CustomFile {\r\n    type: string;\r\n    size: number;\r\n    name: string;\r\n  }\r\n    \r\n export const QuizValidationSchema = Yup.object().shape({\r\n    questions: Yup.array().of(\r\n      Yup.object().shape({\r\n        question: Yup.string().required(\"Question is required\"),\r\n        options: Yup.array()\r\n          .of(\r\n            Yup.object().shape({\r\n              option: Yup.string().required(\"Option is required\"),\r\n              isCorrect: Yup.boolean().required(\"Specify if the option is correct\"),\r\n            })\r\n          )\r\n          .required(\"At least one option is required\"),\r\n      })\r\n    ),\r\n  });"],"names":["initialValues","title","duration","category","level","tags","about","description","syllabus","requirements","price","_useState","useState","_useState2","_slicedToArray","paid","setPaid","_useState3","_useState4","thumbnail","setThumbnail","_useState5","_useState6","guidelines","setGuidelines","_useState7","_useState8","categories","setCategories","handleFormSubmit","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","values","_ref","resetForm","formData","response","wrap","_context","prev","next","FormData","append","Object","keys","forEach","key","addCourse","sent","toast","success","data","message","position","POSITION","BOTTOM_RIGHT","t0","error","stop","_x","_x2","apply","arguments","fetchCategory","_ref3","_callee2","_context2","getAllCategories","useEffect","_jsxs","className","children","_jsx","Formik","validationSchema","AddCourseValidationSchema","onSubmit","Form","htmlFor","Field","type","id","name","ErrorMessage","component","as","map","_ref4","index","_id","selected","value","Switch","onClick","label","rows","accept","onChange","event","_event$target$files","file","target","files","required","_event$target$files2","Yup","shape","positive","min","questions","of","question","options","option","isCorrect"],"sourceRoot":""}