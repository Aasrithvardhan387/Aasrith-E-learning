{"version":3,"file":"static/js/758.ab1eee5b.chunk.js","mappings":"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","sources":["../node_modules/@videojs/xhr/lib/http-handler.js","../node_modules/@videojs/xhr/lib/index.js","../node_modules/@xmldom/xmldom/lib/conventions.js","../node_modules/@xmldom/xmldom/lib/dom-parser.js","../node_modules/@xmldom/xmldom/lib/dom.js","../node_modules/@xmldom/xmldom/lib/entities.js","../node_modules/@xmldom/xmldom/lib/index.js","../node_modules/@xmldom/xmldom/lib/sax.js","../node_modules/global/document.js","../node_modules/global/window.js","../node_modules/is-function/index.js","../node_modules/keycode/index.js","../node_modules/mux.js/lib/tools/parse-sidx.js","../node_modules/mux.js/lib/utils/clock.js","../node_modules/mux.js/lib/utils/numbers.js","../node_modules/react-spinners/esm/BeatLoader.js","../node_modules/react-spinners/esm/SyncLoader.js","../node_modules/react-spinners/esm/helpers/animation.js","../node_modules/react-spinners/esm/helpers/unitConverter.js","../node_modules/safe-json-parse/tuple.js","../node_modules/url-toolkit/src/url-toolkit.js","../node_modules/video.js/node_modules/@videojs/vhs-utils/es/resolve-url.js","../node_modules/@videojs/vhs-utils/es/stream.js","../node_modules/@videojs/vhs-utils/es/decode-b64-to-uint8-array.js","../node_modules/m3u8-parser/dist/m3u8-parser.es.js","../node_modules/video.js/node_modules/@videojs/vhs-utils/es/mp4-helpers.js","../node_modules/video.js/node_modules/@videojs/vhs-utils/es/codecs.js","../node_modules/video.js/node_modules/@videojs/vhs-utils/es/media-types.js","../node_modules/video.js/node_modules/@videojs/vhs-utils/es/byte-helpers.js","../node_modules/@videojs/vhs-utils/es/resolve-url.js","../node_modules/mpd-parser/dist/mpd-parser.es.js","../node_modules/@videojs/vhs-utils/es/media-groups.js","../node_modules/video.js/node_modules/@videojs/vhs-utils/es/id3-helpers.js","../node_modules/video.js/node_modules/@videojs/vhs-utils/es/opus-helpers.js","../node_modules/video.js/node_modules/@videojs/vhs-utils/es/ebml-helpers.js","../node_modules/video.js/node_modules/@videojs/vhs-utils/es/nal-helpers.js","../node_modules/video.js/node_modules/@videojs/vhs-utils/es/containers.js","../node_modules/video.js/dist/video.es.js","../node_modules/videojs-vtt.js/lib/browser-index.js","../node_modules/videojs-vtt.js/lib/vtt.js","../node_modules/videojs-vtt.js/lib/vttcue.js","../node_modules/videojs-vtt.js/lib/vttregion.js","../node_modules/@babel/runtime/helpers/extends.js","../node_modules/@heroicons/react/24/solid/esm/XMarkIcon.js"],"sourcesContent":["\"use strict\";\n\nvar window = require('global/window');\n\nvar httpResponseHandler = function httpResponseHandler(callback, decodeResponseBody) {\n  if (decodeResponseBody === void 0) {\n    decodeResponseBody = false;\n  }\n\n  return function (err, response, responseBody) {\n    // if the XHR failed, return that error\n    if (err) {\n      callback(err);\n      return;\n    } // if the HTTP status code is 4xx or 5xx, the request also failed\n\n\n    if (response.statusCode >= 400 && response.statusCode <= 599) {\n      var cause = responseBody;\n\n      if (decodeResponseBody) {\n        if (window.TextDecoder) {\n          var charset = getCharset(response.headers && response.headers['content-type']);\n\n          try {\n            cause = new TextDecoder(charset).decode(responseBody);\n          } catch (e) {}\n        } else {\n          cause = String.fromCharCode.apply(null, new Uint8Array(responseBody));\n        }\n      }\n\n      callback({\n        cause: cause\n      });\n      return;\n    } // otherwise, request succeeded\n\n\n    callback(null, responseBody);\n  };\n};\n\nfunction getCharset(contentTypeHeader) {\n  if (contentTypeHeader === void 0) {\n    contentTypeHeader = '';\n  }\n\n  return contentTypeHeader.toLowerCase().split(';').reduce(function (charset, contentType) {\n    var _contentType$split = contentType.split('='),\n        type = _contentType$split[0],\n        value = _contentType$split[1];\n\n    if (type.trim() === 'charset') {\n      return value.trim();\n    }\n\n    return charset;\n  }, 'utf-8');\n}\n\nmodule.exports = httpResponseHandler;","\"use strict\";\n\nvar window = require(\"global/window\");\n\nvar _extends = require(\"@babel/runtime/helpers/extends\");\n\nvar isFunction = require('is-function');\n\ncreateXHR.httpHandler = require('./http-handler.js');\n/**\n * @license\n * slighly modified parse-headers 2.0.2 <https://github.com/kesla/parse-headers/>\n * Copyright (c) 2014 David Björklund\n * Available under the MIT license\n * <https://github.com/kesla/parse-headers/blob/master/LICENCE>\n */\n\nvar parseHeaders = function parseHeaders(headers) {\n  var result = {};\n\n  if (!headers) {\n    return result;\n  }\n\n  headers.trim().split('\\n').forEach(function (row) {\n    var index = row.indexOf(':');\n    var key = row.slice(0, index).trim().toLowerCase();\n    var value = row.slice(index + 1).trim();\n\n    if (typeof result[key] === 'undefined') {\n      result[key] = value;\n    } else if (Array.isArray(result[key])) {\n      result[key].push(value);\n    } else {\n      result[key] = [result[key], value];\n    }\n  });\n  return result;\n};\n\nmodule.exports = createXHR; // Allow use of default import syntax in TypeScript\n\nmodule.exports.default = createXHR;\ncreateXHR.XMLHttpRequest = window.XMLHttpRequest || noop;\ncreateXHR.XDomainRequest = \"withCredentials\" in new createXHR.XMLHttpRequest() ? createXHR.XMLHttpRequest : window.XDomainRequest;\nforEachArray([\"get\", \"put\", \"post\", \"patch\", \"head\", \"delete\"], function (method) {\n  createXHR[method === \"delete\" ? \"del\" : method] = function (uri, options, callback) {\n    options = initParams(uri, options, callback);\n    options.method = method.toUpperCase();\n    return _createXHR(options);\n  };\n});\n\nfunction forEachArray(array, iterator) {\n  for (var i = 0; i < array.length; i++) {\n    iterator(array[i]);\n  }\n}\n\nfunction isEmpty(obj) {\n  for (var i in obj) {\n    if (obj.hasOwnProperty(i)) return false;\n  }\n\n  return true;\n}\n\nfunction initParams(uri, options, callback) {\n  var params = uri;\n\n  if (isFunction(options)) {\n    callback = options;\n\n    if (typeof uri === \"string\") {\n      params = {\n        uri: uri\n      };\n    }\n  } else {\n    params = _extends({}, options, {\n      uri: uri\n    });\n  }\n\n  params.callback = callback;\n  return params;\n}\n\nfunction createXHR(uri, options, callback) {\n  options = initParams(uri, options, callback);\n  return _createXHR(options);\n}\n\nfunction _createXHR(options) {\n  if (typeof options.callback === \"undefined\") {\n    throw new Error(\"callback argument missing\");\n  }\n\n  var called = false;\n\n  var callback = function cbOnce(err, response, body) {\n    if (!called) {\n      called = true;\n      options.callback(err, response, body);\n    }\n  };\n\n  function readystatechange() {\n    if (xhr.readyState === 4) {\n      setTimeout(loadFunc, 0);\n    }\n  }\n\n  function getBody() {\n    // Chrome with requestType=blob throws errors arround when even testing access to responseText\n    var body = undefined;\n\n    if (xhr.response) {\n      body = xhr.response;\n    } else {\n      body = xhr.responseText || getXml(xhr);\n    }\n\n    if (isJson) {\n      try {\n        body = JSON.parse(body);\n      } catch (e) {}\n    }\n\n    return body;\n  }\n\n  function errorFunc(evt) {\n    clearTimeout(timeoutTimer);\n\n    if (!(evt instanceof Error)) {\n      evt = new Error(\"\" + (evt || \"Unknown XMLHttpRequest Error\"));\n    }\n\n    evt.statusCode = 0;\n    return callback(evt, failureResponse);\n  } // will load the data & process the response in a special response object\n\n\n  function loadFunc() {\n    if (aborted) return;\n    var status;\n    clearTimeout(timeoutTimer);\n\n    if (options.useXDR && xhr.status === undefined) {\n      //IE8 CORS GET successful response doesn't have a status field, but body is fine\n      status = 200;\n    } else {\n      status = xhr.status === 1223 ? 204 : xhr.status;\n    }\n\n    var response = failureResponse;\n    var err = null;\n\n    if (status !== 0) {\n      response = {\n        body: getBody(),\n        statusCode: status,\n        method: method,\n        headers: {},\n        url: uri,\n        rawRequest: xhr\n      };\n\n      if (xhr.getAllResponseHeaders) {\n        //remember xhr can in fact be XDR for CORS in IE\n        response.headers = parseHeaders(xhr.getAllResponseHeaders());\n      }\n    } else {\n      err = new Error(\"Internal XMLHttpRequest Error\");\n    }\n\n    return callback(err, response, response.body);\n  }\n\n  var xhr = options.xhr || null;\n\n  if (!xhr) {\n    if (options.cors || options.useXDR) {\n      xhr = new createXHR.XDomainRequest();\n    } else {\n      xhr = new createXHR.XMLHttpRequest();\n    }\n  }\n\n  var key;\n  var aborted;\n  var uri = xhr.url = options.uri || options.url;\n  var method = xhr.method = options.method || \"GET\";\n  var body = options.body || options.data;\n  var headers = xhr.headers = options.headers || {};\n  var sync = !!options.sync;\n  var isJson = false;\n  var timeoutTimer;\n  var failureResponse = {\n    body: undefined,\n    headers: {},\n    statusCode: 0,\n    method: method,\n    url: uri,\n    rawRequest: xhr\n  };\n\n  if (\"json\" in options && options.json !== false) {\n    isJson = true;\n    headers[\"accept\"] || headers[\"Accept\"] || (headers[\"Accept\"] = \"application/json\"); //Don't override existing accept header declared by user\n\n    if (method !== \"GET\" && method !== \"HEAD\") {\n      headers[\"content-type\"] || headers[\"Content-Type\"] || (headers[\"Content-Type\"] = \"application/json\"); //Don't override existing accept header declared by user\n\n      body = JSON.stringify(options.json === true ? body : options.json);\n    }\n  }\n\n  xhr.onreadystatechange = readystatechange;\n  xhr.onload = loadFunc;\n  xhr.onerror = errorFunc; // IE9 must have onprogress be set to a unique function.\n\n  xhr.onprogress = function () {// IE must die\n  };\n\n  xhr.onabort = function () {\n    aborted = true;\n  };\n\n  xhr.ontimeout = errorFunc;\n  xhr.open(method, uri, !sync, options.username, options.password); //has to be after open\n\n  if (!sync) {\n    xhr.withCredentials = !!options.withCredentials;\n  } // Cannot set timeout with sync request\n  // not setting timeout on the xhr object, because of old webkits etc. not handling that correctly\n  // both npm's request and jquery 1.x use this kind of timeout, so this is being consistent\n\n\n  if (!sync && options.timeout > 0) {\n    timeoutTimer = setTimeout(function () {\n      if (aborted) return;\n      aborted = true; //IE9 may still call readystatechange\n\n      xhr.abort(\"timeout\");\n      var e = new Error(\"XMLHttpRequest timeout\");\n      e.code = \"ETIMEDOUT\";\n      errorFunc(e);\n    }, options.timeout);\n  }\n\n  if (xhr.setRequestHeader) {\n    for (key in headers) {\n      if (headers.hasOwnProperty(key)) {\n        xhr.setRequestHeader(key, headers[key]);\n      }\n    }\n  } else if (options.headers && !isEmpty(options.headers)) {\n    throw new Error(\"Headers cannot be set on an XDomainRequest object\");\n  }\n\n  if (\"responseType\" in options) {\n    xhr.responseType = options.responseType;\n  }\n\n  if (\"beforeSend\" in options && typeof options.beforeSend === \"function\") {\n    options.beforeSend(xhr);\n  } // Microsoft Edge browser sends \"undefined\" when send is called with undefined value.\n  // XMLHttpRequest spec says to pass null as body to indicate no body\n  // See https://github.com/naugtur/xhr/issues/100.\n\n\n  xhr.send(body || null);\n  return xhr;\n}\n\nfunction getXml(xhr) {\n  // xhr.responseXML will throw Exception \"InvalidStateError\" or \"DOMException\"\n  // See https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/responseXML.\n  try {\n    if (xhr.responseType === \"document\") {\n      return xhr.responseXML;\n    }\n\n    var firefoxBugTakenEffect = xhr.responseXML && xhr.responseXML.documentElement.nodeName === \"parsererror\";\n\n    if (xhr.responseType === \"\" && !firefoxBugTakenEffect) {\n      return xhr.responseXML;\n    }\n  } catch (e) {}\n\n  return null;\n}\n\nfunction noop() {}","'use strict'\n\n/**\n * Ponyfill for `Array.prototype.find` which is only available in ES6 runtimes.\n *\n * Works with anything that has a `length` property and index access properties, including NodeList.\n *\n * @template {unknown} T\n * @param {Array<T> | ({length:number, [number]: T})} list\n * @param {function (item: T, index: number, list:Array<T> | ({length:number, [number]: T})):boolean} predicate\n * @param {Partial<Pick<ArrayConstructor['prototype'], 'find'>>?} ac `Array.prototype` by default,\n * \t\t\t\tallows injecting a custom implementation in tests\n * @returns {T | undefined}\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find\n * @see https://tc39.es/ecma262/multipage/indexed-collections.html#sec-array.prototype.find\n */\nfunction find(list, predicate, ac) {\n\tif (ac === undefined) {\n\t\tac = Array.prototype;\n\t}\n\tif (list && typeof ac.find === 'function') {\n\t\treturn ac.find.call(list, predicate);\n\t}\n\tfor (var i = 0; i < list.length; i++) {\n\t\tif (Object.prototype.hasOwnProperty.call(list, i)) {\n\t\t\tvar item = list[i];\n\t\t\tif (predicate.call(undefined, item, i, list)) {\n\t\t\t\treturn item;\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * \"Shallow freezes\" an object to render it immutable.\n * Uses `Object.freeze` if available,\n * otherwise the immutability is only in the type.\n *\n * Is used to create \"enum like\" objects.\n *\n * @template T\n * @param {T} object the object to freeze\n * @param {Pick<ObjectConstructor, 'freeze'> = Object} oc `Object` by default,\n * \t\t\t\tallows to inject custom object constructor for tests\n * @returns {Readonly<T>}\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/freeze\n */\nfunction freeze(object, oc) {\n\tif (oc === undefined) {\n\t\toc = Object\n\t}\n\treturn oc && typeof oc.freeze === 'function' ? oc.freeze(object) : object\n}\n\n/**\n * Since we can not rely on `Object.assign` we provide a simplified version\n * that is sufficient for our needs.\n *\n * @param {Object} target\n * @param {Object | null | undefined} source\n *\n * @returns {Object} target\n * @throws TypeError if target is not an object\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n * @see https://tc39.es/ecma262/multipage/fundamental-objects.html#sec-object.assign\n */\nfunction assign(target, source) {\n\tif (target === null || typeof target !== 'object') {\n\t\tthrow new TypeError('target is not an object')\n\t}\n\tfor (var key in source) {\n\t\tif (Object.prototype.hasOwnProperty.call(source, key)) {\n\t\t\ttarget[key] = source[key]\n\t\t}\n\t}\n\treturn target\n}\n\n/**\n * All mime types that are allowed as input to `DOMParser.parseFromString`\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMParser/parseFromString#Argument02 MDN\n * @see https://html.spec.whatwg.org/multipage/dynamic-markup-insertion.html#domparsersupportedtype WHATWG HTML Spec\n * @see DOMParser.prototype.parseFromString\n */\nvar MIME_TYPE = freeze({\n\t/**\n\t * `text/html`, the only mime type that triggers treating an XML document as HTML.\n\t *\n\t * @see DOMParser.SupportedType.isHTML\n\t * @see https://www.iana.org/assignments/media-types/text/html IANA MimeType registration\n\t * @see https://en.wikipedia.org/wiki/HTML Wikipedia\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMParser/parseFromString MDN\n\t * @see https://html.spec.whatwg.org/multipage/dynamic-markup-insertion.html#dom-domparser-parsefromstring WHATWG HTML Spec\n\t */\n\tHTML: 'text/html',\n\n\t/**\n\t * Helper method to check a mime type if it indicates an HTML document\n\t *\n\t * @param {string} [value]\n\t * @returns {boolean}\n\t *\n\t * @see https://www.iana.org/assignments/media-types/text/html IANA MimeType registration\n\t * @see https://en.wikipedia.org/wiki/HTML Wikipedia\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMParser/parseFromString MDN\n\t * @see https://html.spec.whatwg.org/multipage/dynamic-markup-insertion.html#dom-domparser-parsefromstring \t */\n\tisHTML: function (value) {\n\t\treturn value === MIME_TYPE.HTML\n\t},\n\n\t/**\n\t * `application/xml`, the standard mime type for XML documents.\n\t *\n\t * @see https://www.iana.org/assignments/media-types/application/xml IANA MimeType registration\n\t * @see https://tools.ietf.org/html/rfc7303#section-9.1 RFC 7303\n\t * @see https://en.wikipedia.org/wiki/XML_and_MIME Wikipedia\n\t */\n\tXML_APPLICATION: 'application/xml',\n\n\t/**\n\t * `text/html`, an alias for `application/xml`.\n\t *\n\t * @see https://tools.ietf.org/html/rfc7303#section-9.2 RFC 7303\n\t * @see https://www.iana.org/assignments/media-types/text/xml IANA MimeType registration\n\t * @see https://en.wikipedia.org/wiki/XML_and_MIME Wikipedia\n\t */\n\tXML_TEXT: 'text/xml',\n\n\t/**\n\t * `application/xhtml+xml`, indicates an XML document that has the default HTML namespace,\n\t * but is parsed as an XML document.\n\t *\n\t * @see https://www.iana.org/assignments/media-types/application/xhtml+xml IANA MimeType registration\n\t * @see https://dom.spec.whatwg.org/#dom-domimplementation-createdocument WHATWG DOM Spec\n\t * @see https://en.wikipedia.org/wiki/XHTML Wikipedia\n\t */\n\tXML_XHTML_APPLICATION: 'application/xhtml+xml',\n\n\t/**\n\t * `image/svg+xml`,\n\t *\n\t * @see https://www.iana.org/assignments/media-types/image/svg+xml IANA MimeType registration\n\t * @see https://www.w3.org/TR/SVG11/ W3C SVG 1.1\n\t * @see https://en.wikipedia.org/wiki/Scalable_Vector_Graphics Wikipedia\n\t */\n\tXML_SVG_IMAGE: 'image/svg+xml',\n})\n\n/**\n * Namespaces that are used in this code base.\n *\n * @see http://www.w3.org/TR/REC-xml-names\n */\nvar NAMESPACE = freeze({\n\t/**\n\t * The XHTML namespace.\n\t *\n\t * @see http://www.w3.org/1999/xhtml\n\t */\n\tHTML: 'http://www.w3.org/1999/xhtml',\n\n\t/**\n\t * Checks if `uri` equals `NAMESPACE.HTML`.\n\t *\n\t * @param {string} [uri]\n\t *\n\t * @see NAMESPACE.HTML\n\t */\n\tisHTML: function (uri) {\n\t\treturn uri === NAMESPACE.HTML\n\t},\n\n\t/**\n\t * The SVG namespace.\n\t *\n\t * @see http://www.w3.org/2000/svg\n\t */\n\tSVG: 'http://www.w3.org/2000/svg',\n\n\t/**\n\t * The `xml:` namespace.\n\t *\n\t * @see http://www.w3.org/XML/1998/namespace\n\t */\n\tXML: 'http://www.w3.org/XML/1998/namespace',\n\n\t/**\n\t * The `xmlns:` namespace\n\t *\n\t * @see https://www.w3.org/2000/xmlns/\n\t */\n\tXMLNS: 'http://www.w3.org/2000/xmlns/',\n})\n\nexports.assign = assign;\nexports.find = find;\nexports.freeze = freeze;\nexports.MIME_TYPE = MIME_TYPE;\nexports.NAMESPACE = NAMESPACE;\n","var conventions = require(\"./conventions\");\nvar dom = require('./dom')\nvar entities = require('./entities');\nvar sax = require('./sax');\n\nvar DOMImplementation = dom.DOMImplementation;\n\nvar NAMESPACE = conventions.NAMESPACE;\n\nvar ParseError = sax.ParseError;\nvar XMLReader = sax.XMLReader;\n\n/**\n * Normalizes line ending according to https://www.w3.org/TR/xml11/#sec-line-ends:\n *\n * > XML parsed entities are often stored in computer files which,\n * > for editing convenience, are organized into lines.\n * > These lines are typically separated by some combination\n * > of the characters CARRIAGE RETURN (#xD) and LINE FEED (#xA).\n * >\n * > To simplify the tasks of applications, the XML processor must behave\n * > as if it normalized all line breaks in external parsed entities (including the document entity)\n * > on input, before parsing, by translating all of the following to a single #xA character:\n * >\n * > 1. the two-character sequence #xD #xA\n * > 2. the two-character sequence #xD #x85\n * > 3. the single character #x85\n * > 4. the single character #x2028\n * > 5. any #xD character that is not immediately followed by #xA or #x85.\n *\n * @param {string} input\n * @returns {string}\n */\nfunction normalizeLineEndings(input) {\n\treturn input\n\t\t.replace(/\\r[\\n\\u0085]/g, '\\n')\n\t\t.replace(/[\\r\\u0085\\u2028]/g, '\\n')\n}\n\n/**\n * @typedef Locator\n * @property {number} [columnNumber]\n * @property {number} [lineNumber]\n */\n\n/**\n * @typedef DOMParserOptions\n * @property {DOMHandler} [domBuilder]\n * @property {Function} [errorHandler]\n * @property {(string) => string} [normalizeLineEndings] used to replace line endings before parsing\n * \t\t\t\t\t\tdefaults to `normalizeLineEndings`\n * @property {Locator} [locator]\n * @property {Record<string, string>} [xmlns]\n *\n * @see normalizeLineEndings\n */\n\n/**\n * The DOMParser interface provides the ability to parse XML or HTML source code\n * from a string into a DOM `Document`.\n *\n * _xmldom is different from the spec in that it allows an `options` parameter,\n * to override the default behavior._\n *\n * @param {DOMParserOptions} [options]\n * @constructor\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMParser\n * @see https://html.spec.whatwg.org/multipage/dynamic-markup-insertion.html#dom-parsing-and-serialization\n */\nfunction DOMParser(options){\n\tthis.options = options ||{locator:{}};\n}\n\nDOMParser.prototype.parseFromString = function(source,mimeType){\n\tvar options = this.options;\n\tvar sax =  new XMLReader();\n\tvar domBuilder = options.domBuilder || new DOMHandler();//contentHandler and LexicalHandler\n\tvar errorHandler = options.errorHandler;\n\tvar locator = options.locator;\n\tvar defaultNSMap = options.xmlns||{};\n\tvar isHTML = /\\/x?html?$/.test(mimeType);//mimeType.toLowerCase().indexOf('html') > -1;\n  \tvar entityMap = isHTML ? entities.HTML_ENTITIES : entities.XML_ENTITIES;\n\tif(locator){\n\t\tdomBuilder.setDocumentLocator(locator)\n\t}\n\n\tsax.errorHandler = buildErrorHandler(errorHandler,domBuilder,locator);\n\tsax.domBuilder = options.domBuilder || domBuilder;\n\tif(isHTML){\n\t\tdefaultNSMap[''] = NAMESPACE.HTML;\n\t}\n\tdefaultNSMap.xml = defaultNSMap.xml || NAMESPACE.XML;\n\tvar normalize = options.normalizeLineEndings || normalizeLineEndings;\n\tif (source && typeof source === 'string') {\n\t\tsax.parse(\n\t\t\tnormalize(source),\n\t\t\tdefaultNSMap,\n\t\t\tentityMap\n\t\t)\n\t} else {\n\t\tsax.errorHandler.error('invalid doc source')\n\t}\n\treturn domBuilder.doc;\n}\nfunction buildErrorHandler(errorImpl,domBuilder,locator){\n\tif(!errorImpl){\n\t\tif(domBuilder instanceof DOMHandler){\n\t\t\treturn domBuilder;\n\t\t}\n\t\terrorImpl = domBuilder ;\n\t}\n\tvar errorHandler = {}\n\tvar isCallback = errorImpl instanceof Function;\n\tlocator = locator||{}\n\tfunction build(key){\n\t\tvar fn = errorImpl[key];\n\t\tif(!fn && isCallback){\n\t\t\tfn = errorImpl.length == 2?function(msg){errorImpl(key,msg)}:errorImpl;\n\t\t}\n\t\terrorHandler[key] = fn && function(msg){\n\t\t\tfn('[xmldom '+key+']\\t'+msg+_locator(locator));\n\t\t}||function(){};\n\t}\n\tbuild('warning');\n\tbuild('error');\n\tbuild('fatalError');\n\treturn errorHandler;\n}\n\n//console.log('#\\n\\n\\n\\n\\n\\n\\n####')\n/**\n * +ContentHandler+ErrorHandler\n * +LexicalHandler+EntityResolver2\n * -DeclHandler-DTDHandler\n *\n * DefaultHandler:EntityResolver, DTDHandler, ContentHandler, ErrorHandler\n * DefaultHandler2:DefaultHandler,LexicalHandler, DeclHandler, EntityResolver2\n * @link http://www.saxproject.org/apidoc/org/xml/sax/helpers/DefaultHandler.html\n */\nfunction DOMHandler() {\n    this.cdata = false;\n}\nfunction position(locator,node){\n\tnode.lineNumber = locator.lineNumber;\n\tnode.columnNumber = locator.columnNumber;\n}\n/**\n * @see org.xml.sax.ContentHandler#startDocument\n * @link http://www.saxproject.org/apidoc/org/xml/sax/ContentHandler.html\n */\nDOMHandler.prototype = {\n\tstartDocument : function() {\n    \tthis.doc = new DOMImplementation().createDocument(null, null, null);\n    \tif (this.locator) {\n        \tthis.doc.documentURI = this.locator.systemId;\n    \t}\n\t},\n\tstartElement:function(namespaceURI, localName, qName, attrs) {\n\t\tvar doc = this.doc;\n\t    var el = doc.createElementNS(namespaceURI, qName||localName);\n\t    var len = attrs.length;\n\t    appendElement(this, el);\n\t    this.currentElement = el;\n\n\t\tthis.locator && position(this.locator,el)\n\t    for (var i = 0 ; i < len; i++) {\n\t        var namespaceURI = attrs.getURI(i);\n\t        var value = attrs.getValue(i);\n\t        var qName = attrs.getQName(i);\n\t\t\tvar attr = doc.createAttributeNS(namespaceURI, qName);\n\t\t\tthis.locator &&position(attrs.getLocator(i),attr);\n\t\t\tattr.value = attr.nodeValue = value;\n\t\t\tel.setAttributeNode(attr)\n\t    }\n\t},\n\tendElement:function(namespaceURI, localName, qName) {\n\t\tvar current = this.currentElement\n\t\tvar tagName = current.tagName;\n\t\tthis.currentElement = current.parentNode;\n\t},\n\tstartPrefixMapping:function(prefix, uri) {\n\t},\n\tendPrefixMapping:function(prefix) {\n\t},\n\tprocessingInstruction:function(target, data) {\n\t    var ins = this.doc.createProcessingInstruction(target, data);\n\t    this.locator && position(this.locator,ins)\n\t    appendElement(this, ins);\n\t},\n\tignorableWhitespace:function(ch, start, length) {\n\t},\n\tcharacters:function(chars, start, length) {\n\t\tchars = _toString.apply(this,arguments)\n\t\t//console.log(chars)\n\t\tif(chars){\n\t\t\tif (this.cdata) {\n\t\t\t\tvar charNode = this.doc.createCDATASection(chars);\n\t\t\t} else {\n\t\t\t\tvar charNode = this.doc.createTextNode(chars);\n\t\t\t}\n\t\t\tif(this.currentElement){\n\t\t\t\tthis.currentElement.appendChild(charNode);\n\t\t\t}else if(/^\\s*$/.test(chars)){\n\t\t\t\tthis.doc.appendChild(charNode);\n\t\t\t\t//process xml\n\t\t\t}\n\t\t\tthis.locator && position(this.locator,charNode)\n\t\t}\n\t},\n\tskippedEntity:function(name) {\n\t},\n\tendDocument:function() {\n\t\tthis.doc.normalize();\n\t},\n\tsetDocumentLocator:function (locator) {\n\t    if(this.locator = locator){// && !('lineNumber' in locator)){\n\t    \tlocator.lineNumber = 0;\n\t    }\n\t},\n\t//LexicalHandler\n\tcomment:function(chars, start, length) {\n\t\tchars = _toString.apply(this,arguments)\n\t    var comm = this.doc.createComment(chars);\n\t    this.locator && position(this.locator,comm)\n\t    appendElement(this, comm);\n\t},\n\n\tstartCDATA:function() {\n\t    //used in characters() methods\n\t    this.cdata = true;\n\t},\n\tendCDATA:function() {\n\t    this.cdata = false;\n\t},\n\n\tstartDTD:function(name, publicId, systemId) {\n\t\tvar impl = this.doc.implementation;\n\t    if (impl && impl.createDocumentType) {\n\t        var dt = impl.createDocumentType(name, publicId, systemId);\n\t        this.locator && position(this.locator,dt)\n\t        appendElement(this, dt);\n\t\t\t\t\tthis.doc.doctype = dt;\n\t    }\n\t},\n\t/**\n\t * @see org.xml.sax.ErrorHandler\n\t * @link http://www.saxproject.org/apidoc/org/xml/sax/ErrorHandler.html\n\t */\n\twarning:function(error) {\n\t\tconsole.warn('[xmldom warning]\\t'+error,_locator(this.locator));\n\t},\n\terror:function(error) {\n\t\tconsole.error('[xmldom error]\\t'+error,_locator(this.locator));\n\t},\n\tfatalError:function(error) {\n\t\tthrow new ParseError(error, this.locator);\n\t}\n}\nfunction _locator(l){\n\tif(l){\n\t\treturn '\\n@'+(l.systemId ||'')+'#[line:'+l.lineNumber+',col:'+l.columnNumber+']'\n\t}\n}\nfunction _toString(chars,start,length){\n\tif(typeof chars == 'string'){\n\t\treturn chars.substr(start,length)\n\t}else{//java sax connect width xmldom on rhino(what about: \"? && !(chars instanceof String)\")\n\t\tif(chars.length >= start+length || start){\n\t\t\treturn new java.lang.String(chars,start,length)+'';\n\t\t}\n\t\treturn chars;\n\t}\n}\n\n/*\n * @link http://www.saxproject.org/apidoc/org/xml/sax/ext/LexicalHandler.html\n * used method of org.xml.sax.ext.LexicalHandler:\n *  #comment(chars, start, length)\n *  #startCDATA()\n *  #endCDATA()\n *  #startDTD(name, publicId, systemId)\n *\n *\n * IGNORED method of org.xml.sax.ext.LexicalHandler:\n *  #endDTD()\n *  #startEntity(name)\n *  #endEntity(name)\n *\n *\n * @link http://www.saxproject.org/apidoc/org/xml/sax/ext/DeclHandler.html\n * IGNORED method of org.xml.sax.ext.DeclHandler\n * \t#attributeDecl(eName, aName, type, mode, value)\n *  #elementDecl(name, model)\n *  #externalEntityDecl(name, publicId, systemId)\n *  #internalEntityDecl(name, value)\n * @link http://www.saxproject.org/apidoc/org/xml/sax/ext/EntityResolver2.html\n * IGNORED method of org.xml.sax.EntityResolver2\n *  #resolveEntity(String name,String publicId,String baseURI,String systemId)\n *  #resolveEntity(publicId, systemId)\n *  #getExternalSubset(name, baseURI)\n * @link http://www.saxproject.org/apidoc/org/xml/sax/DTDHandler.html\n * IGNORED method of org.xml.sax.DTDHandler\n *  #notationDecl(name, publicId, systemId) {};\n *  #unparsedEntityDecl(name, publicId, systemId, notationName) {};\n */\n\"endDTD,startEntity,endEntity,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,resolveEntity,getExternalSubset,notationDecl,unparsedEntityDecl\".replace(/\\w+/g,function(key){\n\tDOMHandler.prototype[key] = function(){return null}\n})\n\n/* Private static helpers treated below as private instance methods, so don't need to add these to the public API; we might use a Relator to also get rid of non-standard public properties */\nfunction appendElement (hander,node) {\n    if (!hander.currentElement) {\n        hander.doc.appendChild(node);\n    } else {\n        hander.currentElement.appendChild(node);\n    }\n}//appendChild and setAttributeNS are preformance key\n\nexports.__DOMHandler = DOMHandler;\nexports.normalizeLineEndings = normalizeLineEndings;\nexports.DOMParser = DOMParser;\n","var conventions = require(\"./conventions\");\n\nvar find = conventions.find;\nvar NAMESPACE = conventions.NAMESPACE;\n\n/**\n * A prerequisite for `[].filter`, to drop elements that are empty\n * @param {string} input\n * @returns {boolean}\n */\nfunction notEmptyString (input) {\n\treturn input !== ''\n}\n/**\n * @see https://infra.spec.whatwg.org/#split-on-ascii-whitespace\n * @see https://infra.spec.whatwg.org/#ascii-whitespace\n *\n * @param {string} input\n * @returns {string[]} (can be empty)\n */\nfunction splitOnASCIIWhitespace(input) {\n\t// U+0009 TAB, U+000A LF, U+000C FF, U+000D CR, U+0020 SPACE\n\treturn input ? input.split(/[\\t\\n\\f\\r ]+/).filter(notEmptyString) : []\n}\n\n/**\n * Adds element as a key to current if it is not already present.\n *\n * @param {Record<string, boolean | undefined>} current\n * @param {string} element\n * @returns {Record<string, boolean | undefined>}\n */\nfunction orderedSetReducer (current, element) {\n\tif (!current.hasOwnProperty(element)) {\n\t\tcurrent[element] = true;\n\t}\n\treturn current;\n}\n\n/**\n * @see https://infra.spec.whatwg.org/#ordered-set\n * @param {string} input\n * @returns {string[]}\n */\nfunction toOrderedSet(input) {\n\tif (!input) return [];\n\tvar list = splitOnASCIIWhitespace(input);\n\treturn Object.keys(list.reduce(orderedSetReducer, {}))\n}\n\n/**\n * Uses `list.indexOf` to implement something like `Array.prototype.includes`,\n * which we can not rely on being available.\n *\n * @param {any[]} list\n * @returns {function(any): boolean}\n */\nfunction arrayIncludes (list) {\n\treturn function(element) {\n\t\treturn list && list.indexOf(element) !== -1;\n\t}\n}\n\nfunction copy(src,dest){\n\tfor(var p in src){\n\t\tif (Object.prototype.hasOwnProperty.call(src, p)) {\n\t\t\tdest[p] = src[p];\n\t\t}\n\t}\n}\n\n/**\n^\\w+\\.prototype\\.([_\\w]+)\\s*=\\s*((?:.*\\{\\s*?[\\r\\n][\\s\\S]*?^})|\\S.*?(?=[;\\r\\n]));?\n^\\w+\\.prototype\\.([_\\w]+)\\s*=\\s*(\\S.*?(?=[;\\r\\n]));?\n */\nfunction _extends(Class,Super){\n\tvar pt = Class.prototype;\n\tif(!(pt instanceof Super)){\n\t\tfunction t(){};\n\t\tt.prototype = Super.prototype;\n\t\tt = new t();\n\t\tcopy(pt,t);\n\t\tClass.prototype = pt = t;\n\t}\n\tif(pt.constructor != Class){\n\t\tif(typeof Class != 'function'){\n\t\t\tconsole.error(\"unknown Class:\"+Class)\n\t\t}\n\t\tpt.constructor = Class\n\t}\n}\n\n// Node Types\nvar NodeType = {}\nvar ELEMENT_NODE                = NodeType.ELEMENT_NODE                = 1;\nvar ATTRIBUTE_NODE              = NodeType.ATTRIBUTE_NODE              = 2;\nvar TEXT_NODE                   = NodeType.TEXT_NODE                   = 3;\nvar CDATA_SECTION_NODE          = NodeType.CDATA_SECTION_NODE          = 4;\nvar ENTITY_REFERENCE_NODE       = NodeType.ENTITY_REFERENCE_NODE       = 5;\nvar ENTITY_NODE                 = NodeType.ENTITY_NODE                 = 6;\nvar PROCESSING_INSTRUCTION_NODE = NodeType.PROCESSING_INSTRUCTION_NODE = 7;\nvar COMMENT_NODE                = NodeType.COMMENT_NODE                = 8;\nvar DOCUMENT_NODE               = NodeType.DOCUMENT_NODE               = 9;\nvar DOCUMENT_TYPE_NODE          = NodeType.DOCUMENT_TYPE_NODE          = 10;\nvar DOCUMENT_FRAGMENT_NODE      = NodeType.DOCUMENT_FRAGMENT_NODE      = 11;\nvar NOTATION_NODE               = NodeType.NOTATION_NODE               = 12;\n\n// ExceptionCode\nvar ExceptionCode = {}\nvar ExceptionMessage = {};\nvar INDEX_SIZE_ERR              = ExceptionCode.INDEX_SIZE_ERR              = ((ExceptionMessage[1]=\"Index size error\"),1);\nvar DOMSTRING_SIZE_ERR          = ExceptionCode.DOMSTRING_SIZE_ERR          = ((ExceptionMessage[2]=\"DOMString size error\"),2);\nvar HIERARCHY_REQUEST_ERR       = ExceptionCode.HIERARCHY_REQUEST_ERR       = ((ExceptionMessage[3]=\"Hierarchy request error\"),3);\nvar WRONG_DOCUMENT_ERR          = ExceptionCode.WRONG_DOCUMENT_ERR          = ((ExceptionMessage[4]=\"Wrong document\"),4);\nvar INVALID_CHARACTER_ERR       = ExceptionCode.INVALID_CHARACTER_ERR       = ((ExceptionMessage[5]=\"Invalid character\"),5);\nvar NO_DATA_ALLOWED_ERR         = ExceptionCode.NO_DATA_ALLOWED_ERR         = ((ExceptionMessage[6]=\"No data allowed\"),6);\nvar NO_MODIFICATION_ALLOWED_ERR = ExceptionCode.NO_MODIFICATION_ALLOWED_ERR = ((ExceptionMessage[7]=\"No modification allowed\"),7);\nvar NOT_FOUND_ERR               = ExceptionCode.NOT_FOUND_ERR               = ((ExceptionMessage[8]=\"Not found\"),8);\nvar NOT_SUPPORTED_ERR           = ExceptionCode.NOT_SUPPORTED_ERR           = ((ExceptionMessage[9]=\"Not supported\"),9);\nvar INUSE_ATTRIBUTE_ERR         = ExceptionCode.INUSE_ATTRIBUTE_ERR         = ((ExceptionMessage[10]=\"Attribute in use\"),10);\n//level2\nvar INVALID_STATE_ERR        \t= ExceptionCode.INVALID_STATE_ERR        \t= ((ExceptionMessage[11]=\"Invalid state\"),11);\nvar SYNTAX_ERR               \t= ExceptionCode.SYNTAX_ERR               \t= ((ExceptionMessage[12]=\"Syntax error\"),12);\nvar INVALID_MODIFICATION_ERR \t= ExceptionCode.INVALID_MODIFICATION_ERR \t= ((ExceptionMessage[13]=\"Invalid modification\"),13);\nvar NAMESPACE_ERR            \t= ExceptionCode.NAMESPACE_ERR           \t= ((ExceptionMessage[14]=\"Invalid namespace\"),14);\nvar INVALID_ACCESS_ERR       \t= ExceptionCode.INVALID_ACCESS_ERR      \t= ((ExceptionMessage[15]=\"Invalid access\"),15);\n\n/**\n * DOM Level 2\n * Object DOMException\n * @see http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html\n * @see http://www.w3.org/TR/REC-DOM-Level-1/ecma-script-language-binding.html\n */\nfunction DOMException(code, message) {\n\tif(message instanceof Error){\n\t\tvar error = message;\n\t}else{\n\t\terror = this;\n\t\tError.call(this, ExceptionMessage[code]);\n\t\tthis.message = ExceptionMessage[code];\n\t\tif(Error.captureStackTrace) Error.captureStackTrace(this, DOMException);\n\t}\n\terror.code = code;\n\tif(message) this.message = this.message + \": \" + message;\n\treturn error;\n};\nDOMException.prototype = Error.prototype;\ncopy(ExceptionCode,DOMException)\n\n/**\n * @see http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/core.html#ID-536297177\n * The NodeList interface provides the abstraction of an ordered collection of nodes, without defining or constraining how this collection is implemented. NodeList objects in the DOM are live.\n * The items in the NodeList are accessible via an integral index, starting from 0.\n */\nfunction NodeList() {\n};\nNodeList.prototype = {\n\t/**\n\t * The number of nodes in the list. The range of valid child node indices is 0 to length-1 inclusive.\n\t * @standard level1\n\t */\n\tlength:0,\n\t/**\n\t * Returns the indexth item in the collection. If index is greater than or equal to the number of nodes in the list, this returns null.\n\t * @standard level1\n\t * @param index  unsigned long\n\t *   Index into the collection.\n\t * @return Node\n\t * \tThe node at the indexth position in the NodeList, or null if that is not a valid index.\n\t */\n\titem: function(index) {\n\t\treturn index >= 0 && index < this.length ? this[index] : null;\n\t},\n\ttoString:function(isHTML,nodeFilter){\n\t\tfor(var buf = [], i = 0;i<this.length;i++){\n\t\t\tserializeToString(this[i],buf,isHTML,nodeFilter);\n\t\t}\n\t\treturn buf.join('');\n\t},\n\t/**\n\t * @private\n\t * @param {function (Node):boolean} predicate\n\t * @returns {Node[]}\n\t */\n\tfilter: function (predicate) {\n\t\treturn Array.prototype.filter.call(this, predicate);\n\t},\n\t/**\n\t * @private\n\t * @param {Node} item\n\t * @returns {number}\n\t */\n\tindexOf: function (item) {\n\t\treturn Array.prototype.indexOf.call(this, item);\n\t},\n};\n\nfunction LiveNodeList(node,refresh){\n\tthis._node = node;\n\tthis._refresh = refresh\n\t_updateLiveList(this);\n}\nfunction _updateLiveList(list){\n\tvar inc = list._node._inc || list._node.ownerDocument._inc;\n\tif (list._inc !== inc) {\n\t\tvar ls = list._refresh(list._node);\n\t\t__set__(list,'length',ls.length);\n\t\tif (!list.$$length || ls.length < list.$$length) {\n\t\t\tfor (var i = ls.length; i in list; i++) {\n\t\t\t\tif (Object.prototype.hasOwnProperty.call(list, i)) {\n\t\t\t\t\tdelete list[i];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcopy(ls,list);\n\t\tlist._inc = inc;\n\t}\n}\nLiveNodeList.prototype.item = function(i){\n\t_updateLiveList(this);\n\treturn this[i] || null;\n}\n\n_extends(LiveNodeList,NodeList);\n\n/**\n * Objects implementing the NamedNodeMap interface are used\n * to represent collections of nodes that can be accessed by name.\n * Note that NamedNodeMap does not inherit from NodeList;\n * NamedNodeMaps are not maintained in any particular order.\n * Objects contained in an object implementing NamedNodeMap may also be accessed by an ordinal index,\n * but this is simply to allow convenient enumeration of the contents of a NamedNodeMap,\n * and does not imply that the DOM specifies an order to these Nodes.\n * NamedNodeMap objects in the DOM are live.\n * used for attributes or DocumentType entities\n */\nfunction NamedNodeMap() {\n};\n\nfunction _findNodeIndex(list,node){\n\tvar i = list.length;\n\twhile(i--){\n\t\tif(list[i] === node){return i}\n\t}\n}\n\nfunction _addNamedNode(el,list,newAttr,oldAttr){\n\tif(oldAttr){\n\t\tlist[_findNodeIndex(list,oldAttr)] = newAttr;\n\t}else{\n\t\tlist[list.length++] = newAttr;\n\t}\n\tif(el){\n\t\tnewAttr.ownerElement = el;\n\t\tvar doc = el.ownerDocument;\n\t\tif(doc){\n\t\t\toldAttr && _onRemoveAttribute(doc,el,oldAttr);\n\t\t\t_onAddAttribute(doc,el,newAttr);\n\t\t}\n\t}\n}\nfunction _removeNamedNode(el,list,attr){\n\t//console.log('remove attr:'+attr)\n\tvar i = _findNodeIndex(list,attr);\n\tif(i>=0){\n\t\tvar lastIndex = list.length-1\n\t\twhile(i<lastIndex){\n\t\t\tlist[i] = list[++i]\n\t\t}\n\t\tlist.length = lastIndex;\n\t\tif(el){\n\t\t\tvar doc = el.ownerDocument;\n\t\t\tif(doc){\n\t\t\t\t_onRemoveAttribute(doc,el,attr);\n\t\t\t\tattr.ownerElement = null;\n\t\t\t}\n\t\t}\n\t}else{\n\t\tthrow new DOMException(NOT_FOUND_ERR,new Error(el.tagName+'@'+attr))\n\t}\n}\nNamedNodeMap.prototype = {\n\tlength:0,\n\titem:NodeList.prototype.item,\n\tgetNamedItem: function(key) {\n//\t\tif(key.indexOf(':')>0 || key == 'xmlns'){\n//\t\t\treturn null;\n//\t\t}\n\t\t//console.log()\n\t\tvar i = this.length;\n\t\twhile(i--){\n\t\t\tvar attr = this[i];\n\t\t\t//console.log(attr.nodeName,key)\n\t\t\tif(attr.nodeName == key){\n\t\t\t\treturn attr;\n\t\t\t}\n\t\t}\n\t},\n\tsetNamedItem: function(attr) {\n\t\tvar el = attr.ownerElement;\n\t\tif(el && el!=this._ownerElement){\n\t\t\tthrow new DOMException(INUSE_ATTRIBUTE_ERR);\n\t\t}\n\t\tvar oldAttr = this.getNamedItem(attr.nodeName);\n\t\t_addNamedNode(this._ownerElement,this,attr,oldAttr);\n\t\treturn oldAttr;\n\t},\n\t/* returns Node */\n\tsetNamedItemNS: function(attr) {// raises: WRONG_DOCUMENT_ERR,NO_MODIFICATION_ALLOWED_ERR,INUSE_ATTRIBUTE_ERR\n\t\tvar el = attr.ownerElement, oldAttr;\n\t\tif(el && el!=this._ownerElement){\n\t\t\tthrow new DOMException(INUSE_ATTRIBUTE_ERR);\n\t\t}\n\t\toldAttr = this.getNamedItemNS(attr.namespaceURI,attr.localName);\n\t\t_addNamedNode(this._ownerElement,this,attr,oldAttr);\n\t\treturn oldAttr;\n\t},\n\n\t/* returns Node */\n\tremoveNamedItem: function(key) {\n\t\tvar attr = this.getNamedItem(key);\n\t\t_removeNamedNode(this._ownerElement,this,attr);\n\t\treturn attr;\n\n\n\t},// raises: NOT_FOUND_ERR,NO_MODIFICATION_ALLOWED_ERR\n\n\t//for level2\n\tremoveNamedItemNS:function(namespaceURI,localName){\n\t\tvar attr = this.getNamedItemNS(namespaceURI,localName);\n\t\t_removeNamedNode(this._ownerElement,this,attr);\n\t\treturn attr;\n\t},\n\tgetNamedItemNS: function(namespaceURI, localName) {\n\t\tvar i = this.length;\n\t\twhile(i--){\n\t\t\tvar node = this[i];\n\t\t\tif(node.localName == localName && node.namespaceURI == namespaceURI){\n\t\t\t\treturn node;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n};\n\n/**\n * The DOMImplementation interface represents an object providing methods\n * which are not dependent on any particular document.\n * Such an object is returned by the `Document.implementation` property.\n *\n * __The individual methods describe the differences compared to the specs.__\n *\n * @constructor\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation MDN\n * @see https://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html#ID-102161490 DOM Level 1 Core (Initial)\n * @see https://www.w3.org/TR/DOM-Level-2-Core/core.html#ID-102161490 DOM Level 2 Core\n * @see https://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-102161490 DOM Level 3 Core\n * @see https://dom.spec.whatwg.org/#domimplementation DOM Living Standard\n */\nfunction DOMImplementation() {\n}\n\nDOMImplementation.prototype = {\n\t/**\n\t * The DOMImplementation.hasFeature() method returns a Boolean flag indicating if a given feature is supported.\n\t * The different implementations fairly diverged in what kind of features were reported.\n\t * The latest version of the spec settled to force this method to always return true, where the functionality was accurate and in use.\n\t *\n\t * @deprecated It is deprecated and modern browsers return true in all cases.\n\t *\n\t * @param {string} feature\n\t * @param {string} [version]\n\t * @returns {boolean} always true\n\t *\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation/hasFeature MDN\n\t * @see https://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html#ID-5CED94D7 DOM Level 1 Core\n\t * @see https://dom.spec.whatwg.org/#dom-domimplementation-hasfeature DOM Living Standard\n\t */\n\thasFeature: function(feature, version) {\n\t\t\treturn true;\n\t},\n\t/**\n\t * Creates an XML Document object of the specified type with its document element.\n\t *\n\t * __It behaves slightly different from the description in the living standard__:\n\t * - There is no interface/class `XMLDocument`, it returns a `Document` instance.\n\t * - `contentType`, `encoding`, `mode`, `origin`, `url` fields are currently not declared.\n\t * - this implementation is not validating names or qualified names\n\t *   (when parsing XML strings, the SAX parser takes care of that)\n\t *\n\t * @param {string|null} namespaceURI\n\t * @param {string} qualifiedName\n\t * @param {DocumentType=null} doctype\n\t * @returns {Document}\n\t *\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation/createDocument MDN\n\t * @see https://www.w3.org/TR/DOM-Level-2-Core/core.html#Level-2-Core-DOM-createDocument DOM Level 2 Core (initial)\n\t * @see https://dom.spec.whatwg.org/#dom-domimplementation-createdocument  DOM Level 2 Core\n\t *\n\t * @see https://dom.spec.whatwg.org/#validate-and-extract DOM: Validate and extract\n\t * @see https://www.w3.org/TR/xml/#NT-NameStartChar XML Spec: Names\n\t * @see https://www.w3.org/TR/xml-names/#ns-qualnames XML Namespaces: Qualified names\n\t */\n\tcreateDocument: function(namespaceURI,  qualifiedName, doctype){\n\t\tvar doc = new Document();\n\t\tdoc.implementation = this;\n\t\tdoc.childNodes = new NodeList();\n\t\tdoc.doctype = doctype || null;\n\t\tif (doctype){\n\t\t\tdoc.appendChild(doctype);\n\t\t}\n\t\tif (qualifiedName){\n\t\t\tvar root = doc.createElementNS(namespaceURI, qualifiedName);\n\t\t\tdoc.appendChild(root);\n\t\t}\n\t\treturn doc;\n\t},\n\t/**\n\t * Returns a doctype, with the given `qualifiedName`, `publicId`, and `systemId`.\n\t *\n\t * __This behavior is slightly different from the in the specs__:\n\t * - this implementation is not validating names or qualified names\n\t *   (when parsing XML strings, the SAX parser takes care of that)\n\t *\n\t * @param {string} qualifiedName\n\t * @param {string} [publicId]\n\t * @param {string} [systemId]\n\t * @returns {DocumentType} which can either be used with `DOMImplementation.createDocument` upon document creation\n\t * \t\t\t\t  or can be put into the document via methods like `Node.insertBefore()` or `Node.replaceChild()`\n\t *\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation/createDocumentType MDN\n\t * @see https://www.w3.org/TR/DOM-Level-2-Core/core.html#Level-2-Core-DOM-createDocType DOM Level 2 Core\n\t * @see https://dom.spec.whatwg.org/#dom-domimplementation-createdocumenttype DOM Living Standard\n\t *\n\t * @see https://dom.spec.whatwg.org/#validate-and-extract DOM: Validate and extract\n\t * @see https://www.w3.org/TR/xml/#NT-NameStartChar XML Spec: Names\n\t * @see https://www.w3.org/TR/xml-names/#ns-qualnames XML Namespaces: Qualified names\n\t */\n\tcreateDocumentType: function(qualifiedName, publicId, systemId){\n\t\tvar node = new DocumentType();\n\t\tnode.name = qualifiedName;\n\t\tnode.nodeName = qualifiedName;\n\t\tnode.publicId = publicId || '';\n\t\tnode.systemId = systemId || '';\n\n\t\treturn node;\n\t}\n};\n\n\n/**\n * @see http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/core.html#ID-1950641247\n */\n\nfunction Node() {\n};\n\nNode.prototype = {\n\tfirstChild : null,\n\tlastChild : null,\n\tpreviousSibling : null,\n\tnextSibling : null,\n\tattributes : null,\n\tparentNode : null,\n\tchildNodes : null,\n\townerDocument : null,\n\tnodeValue : null,\n\tnamespaceURI : null,\n\tprefix : null,\n\tlocalName : null,\n\t// Modified in DOM Level 2:\n\tinsertBefore:function(newChild, refChild){//raises\n\t\treturn _insertBefore(this,newChild,refChild);\n\t},\n\treplaceChild:function(newChild, oldChild){//raises\n\t\t_insertBefore(this, newChild,oldChild, assertPreReplacementValidityInDocument);\n\t\tif(oldChild){\n\t\t\tthis.removeChild(oldChild);\n\t\t}\n\t},\n\tremoveChild:function(oldChild){\n\t\treturn _removeChild(this,oldChild);\n\t},\n\tappendChild:function(newChild){\n\t\treturn this.insertBefore(newChild,null);\n\t},\n\thasChildNodes:function(){\n\t\treturn this.firstChild != null;\n\t},\n\tcloneNode:function(deep){\n\t\treturn cloneNode(this.ownerDocument||this,this,deep);\n\t},\n\t// Modified in DOM Level 2:\n\tnormalize:function(){\n\t\tvar child = this.firstChild;\n\t\twhile(child){\n\t\t\tvar next = child.nextSibling;\n\t\t\tif(next && next.nodeType == TEXT_NODE && child.nodeType == TEXT_NODE){\n\t\t\t\tthis.removeChild(next);\n\t\t\t\tchild.appendData(next.data);\n\t\t\t}else{\n\t\t\t\tchild.normalize();\n\t\t\t\tchild = next;\n\t\t\t}\n\t\t}\n\t},\n  \t// Introduced in DOM Level 2:\n\tisSupported:function(feature, version){\n\t\treturn this.ownerDocument.implementation.hasFeature(feature,version);\n\t},\n    // Introduced in DOM Level 2:\n    hasAttributes:function(){\n    \treturn this.attributes.length>0;\n    },\n\t/**\n\t * Look up the prefix associated to the given namespace URI, starting from this node.\n\t * **The default namespace declarations are ignored by this method.**\n\t * See Namespace Prefix Lookup for details on the algorithm used by this method.\n\t *\n\t * _Note: The implementation seems to be incomplete when compared to the algorithm described in the specs._\n\t *\n\t * @param {string | null} namespaceURI\n\t * @returns {string | null}\n\t * @see https://www.w3.org/TR/DOM-Level-3-Core/core.html#Node3-lookupNamespacePrefix\n\t * @see https://www.w3.org/TR/DOM-Level-3-Core/namespaces-algorithms.html#lookupNamespacePrefixAlgo\n\t * @see https://dom.spec.whatwg.org/#dom-node-lookupprefix\n\t * @see https://github.com/xmldom/xmldom/issues/322\n\t */\n    lookupPrefix:function(namespaceURI){\n    \tvar el = this;\n    \twhile(el){\n    \t\tvar map = el._nsMap;\n    \t\t//console.dir(map)\n    \t\tif(map){\n    \t\t\tfor(var n in map){\n\t\t\t\t\t\tif (Object.prototype.hasOwnProperty.call(map, n) && map[n] === namespaceURI) {\n\t\t\t\t\t\t\treturn n;\n\t\t\t\t\t\t}\n    \t\t\t}\n    \t\t}\n    \t\tel = el.nodeType == ATTRIBUTE_NODE?el.ownerDocument : el.parentNode;\n    \t}\n    \treturn null;\n    },\n    // Introduced in DOM Level 3:\n    lookupNamespaceURI:function(prefix){\n    \tvar el = this;\n    \twhile(el){\n    \t\tvar map = el._nsMap;\n    \t\t//console.dir(map)\n    \t\tif(map){\n    \t\t\tif(Object.prototype.hasOwnProperty.call(map, prefix)){\n    \t\t\t\treturn map[prefix] ;\n    \t\t\t}\n    \t\t}\n    \t\tel = el.nodeType == ATTRIBUTE_NODE?el.ownerDocument : el.parentNode;\n    \t}\n    \treturn null;\n    },\n    // Introduced in DOM Level 3:\n    isDefaultNamespace:function(namespaceURI){\n    \tvar prefix = this.lookupPrefix(namespaceURI);\n    \treturn prefix == null;\n    }\n};\n\n\nfunction _xmlEncoder(c){\n\treturn c == '<' && '&lt;' ||\n         c == '>' && '&gt;' ||\n         c == '&' && '&amp;' ||\n         c == '\"' && '&quot;' ||\n         '&#'+c.charCodeAt()+';'\n}\n\n\ncopy(NodeType,Node);\ncopy(NodeType,Node.prototype);\n\n/**\n * @param callback return true for continue,false for break\n * @return boolean true: break visit;\n */\nfunction _visitNode(node,callback){\n\tif(callback(node)){\n\t\treturn true;\n\t}\n\tif(node = node.firstChild){\n\t\tdo{\n\t\t\tif(_visitNode(node,callback)){return true}\n        }while(node=node.nextSibling)\n    }\n}\n\n\n\nfunction Document(){\n\tthis.ownerDocument = this;\n}\n\nfunction _onAddAttribute(doc,el,newAttr){\n\tdoc && doc._inc++;\n\tvar ns = newAttr.namespaceURI ;\n\tif(ns === NAMESPACE.XMLNS){\n\t\t//update namespace\n\t\tel._nsMap[newAttr.prefix?newAttr.localName:''] = newAttr.value\n\t}\n}\n\nfunction _onRemoveAttribute(doc,el,newAttr,remove){\n\tdoc && doc._inc++;\n\tvar ns = newAttr.namespaceURI ;\n\tif(ns === NAMESPACE.XMLNS){\n\t\t//update namespace\n\t\tdelete el._nsMap[newAttr.prefix?newAttr.localName:'']\n\t}\n}\n\n/**\n * Updates `el.childNodes`, updating the indexed items and it's `length`.\n * Passing `newChild` means it will be appended.\n * Otherwise it's assumed that an item has been removed,\n * and `el.firstNode` and it's `.nextSibling` are used\n * to walk the current list of child nodes.\n *\n * @param {Document} doc\n * @param {Node} el\n * @param {Node} [newChild]\n * @private\n */\nfunction _onUpdateChild (doc, el, newChild) {\n\tif(doc && doc._inc){\n\t\tdoc._inc++;\n\t\t//update childNodes\n\t\tvar cs = el.childNodes;\n\t\tif (newChild) {\n\t\t\tcs[cs.length++] = newChild;\n\t\t} else {\n\t\t\tvar child = el.firstChild;\n\t\t\tvar i = 0;\n\t\t\twhile (child) {\n\t\t\t\tcs[i++] = child;\n\t\t\t\tchild = child.nextSibling;\n\t\t\t}\n\t\t\tcs.length = i;\n\t\t\tdelete cs[cs.length];\n\t\t}\n\t}\n}\n\n/**\n * Removes the connections between `parentNode` and `child`\n * and any existing `child.previousSibling` or `child.nextSibling`.\n *\n * @see https://github.com/xmldom/xmldom/issues/135\n * @see https://github.com/xmldom/xmldom/issues/145\n *\n * @param {Node} parentNode\n * @param {Node} child\n * @returns {Node} the child that was removed.\n * @private\n */\nfunction _removeChild (parentNode, child) {\n\tvar previous = child.previousSibling;\n\tvar next = child.nextSibling;\n\tif (previous) {\n\t\tprevious.nextSibling = next;\n\t} else {\n\t\tparentNode.firstChild = next;\n\t}\n\tif (next) {\n\t\tnext.previousSibling = previous;\n\t} else {\n\t\tparentNode.lastChild = previous;\n\t}\n\tchild.parentNode = null;\n\tchild.previousSibling = null;\n\tchild.nextSibling = null;\n\t_onUpdateChild(parentNode.ownerDocument, parentNode);\n\treturn child;\n}\n\n/**\n * Returns `true` if `node` can be a parent for insertion.\n * @param {Node} node\n * @returns {boolean}\n */\nfunction hasValidParentNodeType(node) {\n\treturn (\n\t\tnode &&\n\t\t(node.nodeType === Node.DOCUMENT_NODE || node.nodeType === Node.DOCUMENT_FRAGMENT_NODE || node.nodeType === Node.ELEMENT_NODE)\n\t);\n}\n\n/**\n * Returns `true` if `node` can be inserted according to it's `nodeType`.\n * @param {Node} node\n * @returns {boolean}\n */\nfunction hasInsertableNodeType(node) {\n\treturn (\n\t\tnode &&\n\t\t(isElementNode(node) ||\n\t\t\tisTextNode(node) ||\n\t\t\tisDocTypeNode(node) ||\n\t\t\tnode.nodeType === Node.DOCUMENT_FRAGMENT_NODE ||\n\t\t\tnode.nodeType === Node.COMMENT_NODE ||\n\t\t\tnode.nodeType === Node.PROCESSING_INSTRUCTION_NODE)\n\t);\n}\n\n/**\n * Returns true if `node` is a DOCTYPE node\n * @param {Node} node\n * @returns {boolean}\n */\nfunction isDocTypeNode(node) {\n\treturn node && node.nodeType === Node.DOCUMENT_TYPE_NODE;\n}\n\n/**\n * Returns true if the node is an element\n * @param {Node} node\n * @returns {boolean}\n */\nfunction isElementNode(node) {\n\treturn node && node.nodeType === Node.ELEMENT_NODE;\n}\n/**\n * Returns true if `node` is a text node\n * @param {Node} node\n * @returns {boolean}\n */\nfunction isTextNode(node) {\n\treturn node && node.nodeType === Node.TEXT_NODE;\n}\n\n/**\n * Check if en element node can be inserted before `child`, or at the end if child is falsy,\n * according to the presence and position of a doctype node on the same level.\n *\n * @param {Document} doc The document node\n * @param {Node} child the node that would become the nextSibling if the element would be inserted\n * @returns {boolean} `true` if an element can be inserted before child\n * @private\n * https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n */\nfunction isElementInsertionPossible(doc, child) {\n\tvar parentChildNodes = doc.childNodes || [];\n\tif (find(parentChildNodes, isElementNode) || isDocTypeNode(child)) {\n\t\treturn false;\n\t}\n\tvar docTypeNode = find(parentChildNodes, isDocTypeNode);\n\treturn !(child && docTypeNode && parentChildNodes.indexOf(docTypeNode) > parentChildNodes.indexOf(child));\n}\n\n/**\n * Check if en element node can be inserted before `child`, or at the end if child is falsy,\n * according to the presence and position of a doctype node on the same level.\n *\n * @param {Node} doc The document node\n * @param {Node} child the node that would become the nextSibling if the element would be inserted\n * @returns {boolean} `true` if an element can be inserted before child\n * @private\n * https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n */\nfunction isElementReplacementPossible(doc, child) {\n\tvar parentChildNodes = doc.childNodes || [];\n\n\tfunction hasElementChildThatIsNotChild(node) {\n\t\treturn isElementNode(node) && node !== child;\n\t}\n\n\tif (find(parentChildNodes, hasElementChildThatIsNotChild)) {\n\t\treturn false;\n\t}\n\tvar docTypeNode = find(parentChildNodes, isDocTypeNode);\n\treturn !(child && docTypeNode && parentChildNodes.indexOf(docTypeNode) > parentChildNodes.indexOf(child));\n}\n\n/**\n * @private\n * Steps 1-5 of the checks before inserting and before replacing a child are the same.\n *\n * @param {Node} parent the parent node to insert `node` into\n * @param {Node} node the node to insert\n * @param {Node=} child the node that should become the `nextSibling` of `node`\n * @returns {Node}\n * @throws DOMException for several node combinations that would create a DOM that is not well-formed.\n * @throws DOMException if `child` is provided but is not a child of `parent`.\n * @see https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n * @see https://dom.spec.whatwg.org/#concept-node-replace\n */\nfunction assertPreInsertionValidity1to5(parent, node, child) {\n\t// 1. If `parent` is not a Document, DocumentFragment, or Element node, then throw a \"HierarchyRequestError\" DOMException.\n\tif (!hasValidParentNodeType(parent)) {\n\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Unexpected parent node type ' + parent.nodeType);\n\t}\n\t// 2. If `node` is a host-including inclusive ancestor of `parent`, then throw a \"HierarchyRequestError\" DOMException.\n\t// not implemented!\n\t// 3. If `child` is non-null and its parent is not `parent`, then throw a \"NotFoundError\" DOMException.\n\tif (child && child.parentNode !== parent) {\n\t\tthrow new DOMException(NOT_FOUND_ERR, 'child not in parent');\n\t}\n\tif (\n\t\t// 4. If `node` is not a DocumentFragment, DocumentType, Element, or CharacterData node, then throw a \"HierarchyRequestError\" DOMException.\n\t\t!hasInsertableNodeType(node) ||\n\t\t// 5. If either `node` is a Text node and `parent` is a document,\n\t\t// the sax parser currently adds top level text nodes, this will be fixed in 0.9.0\n\t\t// || (node.nodeType === Node.TEXT_NODE && parent.nodeType === Node.DOCUMENT_NODE)\n\t\t// or `node` is a doctype and `parent` is not a document, then throw a \"HierarchyRequestError\" DOMException.\n\t\t(isDocTypeNode(node) && parent.nodeType !== Node.DOCUMENT_NODE)\n\t) {\n\t\tthrow new DOMException(\n\t\t\tHIERARCHY_REQUEST_ERR,\n\t\t\t'Unexpected node type ' + node.nodeType + ' for parent node type ' + parent.nodeType\n\t\t);\n\t}\n}\n\n/**\n * @private\n * Step 6 of the checks before inserting and before replacing a child are different.\n *\n * @param {Document} parent the parent node to insert `node` into\n * @param {Node} node the node to insert\n * @param {Node | undefined} child the node that should become the `nextSibling` of `node`\n * @returns {Node}\n * @throws DOMException for several node combinations that would create a DOM that is not well-formed.\n * @throws DOMException if `child` is provided but is not a child of `parent`.\n * @see https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n * @see https://dom.spec.whatwg.org/#concept-node-replace\n */\nfunction assertPreInsertionValidityInDocument(parent, node, child) {\n\tvar parentChildNodes = parent.childNodes || [];\n\tvar nodeChildNodes = node.childNodes || [];\n\n\t// DocumentFragment\n\tif (node.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n\t\tvar nodeChildElements = nodeChildNodes.filter(isElementNode);\n\t\t// If node has more than one element child or has a Text node child.\n\t\tif (nodeChildElements.length > 1 || find(nodeChildNodes, isTextNode)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'More than one element or text in fragment');\n\t\t}\n\t\t// Otherwise, if `node` has one element child and either `parent` has an element child,\n\t\t// `child` is a doctype, or `child` is non-null and a doctype is following `child`.\n\t\tif (nodeChildElements.length === 1 && !isElementInsertionPossible(parent, child)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Element in fragment can not be inserted before doctype');\n\t\t}\n\t}\n\t// Element\n\tif (isElementNode(node)) {\n\t\t// `parent` has an element child, `child` is a doctype,\n\t\t// or `child` is non-null and a doctype is following `child`.\n\t\tif (!isElementInsertionPossible(parent, child)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Only one element can be added and only after doctype');\n\t\t}\n\t}\n\t// DocumentType\n\tif (isDocTypeNode(node)) {\n\t\t// `parent` has a doctype child,\n\t\tif (find(parentChildNodes, isDocTypeNode)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Only one doctype is allowed');\n\t\t}\n\t\tvar parentElementChild = find(parentChildNodes, isElementNode);\n\t\t// `child` is non-null and an element is preceding `child`,\n\t\tif (child && parentChildNodes.indexOf(parentElementChild) < parentChildNodes.indexOf(child)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Doctype can only be inserted before an element');\n\t\t}\n\t\t// or `child` is null and `parent` has an element child.\n\t\tif (!child && parentElementChild) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Doctype can not be appended since element is present');\n\t\t}\n\t}\n}\n\n/**\n * @private\n * Step 6 of the checks before inserting and before replacing a child are different.\n *\n * @param {Document} parent the parent node to insert `node` into\n * @param {Node} node the node to insert\n * @param {Node | undefined} child the node that should become the `nextSibling` of `node`\n * @returns {Node}\n * @throws DOMException for several node combinations that would create a DOM that is not well-formed.\n * @throws DOMException if `child` is provided but is not a child of `parent`.\n * @see https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n * @see https://dom.spec.whatwg.org/#concept-node-replace\n */\nfunction assertPreReplacementValidityInDocument(parent, node, child) {\n\tvar parentChildNodes = parent.childNodes || [];\n\tvar nodeChildNodes = node.childNodes || [];\n\n\t// DocumentFragment\n\tif (node.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n\t\tvar nodeChildElements = nodeChildNodes.filter(isElementNode);\n\t\t// If `node` has more than one element child or has a Text node child.\n\t\tif (nodeChildElements.length > 1 || find(nodeChildNodes, isTextNode)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'More than one element or text in fragment');\n\t\t}\n\t\t// Otherwise, if `node` has one element child and either `parent` has an element child that is not `child` or a doctype is following `child`.\n\t\tif (nodeChildElements.length === 1 && !isElementReplacementPossible(parent, child)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Element in fragment can not be inserted before doctype');\n\t\t}\n\t}\n\t// Element\n\tif (isElementNode(node)) {\n\t\t// `parent` has an element child that is not `child` or a doctype is following `child`.\n\t\tif (!isElementReplacementPossible(parent, child)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Only one element can be added and only after doctype');\n\t\t}\n\t}\n\t// DocumentType\n\tif (isDocTypeNode(node)) {\n\t\tfunction hasDoctypeChildThatIsNotChild(node) {\n\t\t\treturn isDocTypeNode(node) && node !== child;\n\t\t}\n\n\t\t// `parent` has a doctype child that is not `child`,\n\t\tif (find(parentChildNodes, hasDoctypeChildThatIsNotChild)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Only one doctype is allowed');\n\t\t}\n\t\tvar parentElementChild = find(parentChildNodes, isElementNode);\n\t\t// or an element is preceding `child`.\n\t\tif (child && parentChildNodes.indexOf(parentElementChild) < parentChildNodes.indexOf(child)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Doctype can only be inserted before an element');\n\t\t}\n\t}\n}\n\n/**\n * @private\n * @param {Node} parent the parent node to insert `node` into\n * @param {Node} node the node to insert\n * @param {Node=} child the node that should become the `nextSibling` of `node`\n * @returns {Node}\n * @throws DOMException for several node combinations that would create a DOM that is not well-formed.\n * @throws DOMException if `child` is provided but is not a child of `parent`.\n * @see https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n */\nfunction _insertBefore(parent, node, child, _inDocumentAssertion) {\n\t// To ensure pre-insertion validity of a node into a parent before a child, run these steps:\n\tassertPreInsertionValidity1to5(parent, node, child);\n\n\t// If parent is a document, and any of the statements below, switched on the interface node implements,\n\t// are true, then throw a \"HierarchyRequestError\" DOMException.\n\tif (parent.nodeType === Node.DOCUMENT_NODE) {\n\t\t(_inDocumentAssertion || assertPreInsertionValidityInDocument)(parent, node, child);\n\t}\n\n\tvar cp = node.parentNode;\n\tif(cp){\n\t\tcp.removeChild(node);//remove and update\n\t}\n\tif(node.nodeType === DOCUMENT_FRAGMENT_NODE){\n\t\tvar newFirst = node.firstChild;\n\t\tif (newFirst == null) {\n\t\t\treturn node;\n\t\t}\n\t\tvar newLast = node.lastChild;\n\t}else{\n\t\tnewFirst = newLast = node;\n\t}\n\tvar pre = child ? child.previousSibling : parent.lastChild;\n\n\tnewFirst.previousSibling = pre;\n\tnewLast.nextSibling = child;\n\n\n\tif(pre){\n\t\tpre.nextSibling = newFirst;\n\t}else{\n\t\tparent.firstChild = newFirst;\n\t}\n\tif(child == null){\n\t\tparent.lastChild = newLast;\n\t}else{\n\t\tchild.previousSibling = newLast;\n\t}\n\tdo{\n\t\tnewFirst.parentNode = parent;\n\t}while(newFirst !== newLast && (newFirst= newFirst.nextSibling))\n\t_onUpdateChild(parent.ownerDocument||parent, parent);\n\t//console.log(parent.lastChild.nextSibling == null)\n\tif (node.nodeType == DOCUMENT_FRAGMENT_NODE) {\n\t\tnode.firstChild = node.lastChild = null;\n\t}\n\treturn node;\n}\n\n/**\n * Appends `newChild` to `parentNode`.\n * If `newChild` is already connected to a `parentNode` it is first removed from it.\n *\n * @see https://github.com/xmldom/xmldom/issues/135\n * @see https://github.com/xmldom/xmldom/issues/145\n * @param {Node} parentNode\n * @param {Node} newChild\n * @returns {Node}\n * @private\n */\nfunction _appendSingleChild (parentNode, newChild) {\n\tif (newChild.parentNode) {\n\t\tnewChild.parentNode.removeChild(newChild);\n\t}\n\tnewChild.parentNode = parentNode;\n\tnewChild.previousSibling = parentNode.lastChild;\n\tnewChild.nextSibling = null;\n\tif (newChild.previousSibling) {\n\t\tnewChild.previousSibling.nextSibling = newChild;\n\t} else {\n\t\tparentNode.firstChild = newChild;\n\t}\n\tparentNode.lastChild = newChild;\n\t_onUpdateChild(parentNode.ownerDocument, parentNode, newChild);\n\treturn newChild;\n}\n\nDocument.prototype = {\n\t//implementation : null,\n\tnodeName :  '#document',\n\tnodeType :  DOCUMENT_NODE,\n\t/**\n\t * The DocumentType node of the document.\n\t *\n\t * @readonly\n\t * @type DocumentType\n\t */\n\tdoctype :  null,\n\tdocumentElement :  null,\n\t_inc : 1,\n\n\tinsertBefore :  function(newChild, refChild){//raises\n\t\tif(newChild.nodeType == DOCUMENT_FRAGMENT_NODE){\n\t\t\tvar child = newChild.firstChild;\n\t\t\twhile(child){\n\t\t\t\tvar next = child.nextSibling;\n\t\t\t\tthis.insertBefore(child,refChild);\n\t\t\t\tchild = next;\n\t\t\t}\n\t\t\treturn newChild;\n\t\t}\n\t\t_insertBefore(this, newChild, refChild);\n\t\tnewChild.ownerDocument = this;\n\t\tif (this.documentElement === null && newChild.nodeType === ELEMENT_NODE) {\n\t\t\tthis.documentElement = newChild;\n\t\t}\n\n\t\treturn newChild;\n\t},\n\tremoveChild :  function(oldChild){\n\t\tif(this.documentElement == oldChild){\n\t\t\tthis.documentElement = null;\n\t\t}\n\t\treturn _removeChild(this,oldChild);\n\t},\n\treplaceChild: function (newChild, oldChild) {\n\t\t//raises\n\t\t_insertBefore(this, newChild, oldChild, assertPreReplacementValidityInDocument);\n\t\tnewChild.ownerDocument = this;\n\t\tif (oldChild) {\n\t\t\tthis.removeChild(oldChild);\n\t\t}\n\t\tif (isElementNode(newChild)) {\n\t\t\tthis.documentElement = newChild;\n\t\t}\n\t},\n\t// Introduced in DOM Level 2:\n\timportNode : function(importedNode,deep){\n\t\treturn importNode(this,importedNode,deep);\n\t},\n\t// Introduced in DOM Level 2:\n\tgetElementById :\tfunction(id){\n\t\tvar rtv = null;\n\t\t_visitNode(this.documentElement,function(node){\n\t\t\tif(node.nodeType == ELEMENT_NODE){\n\t\t\t\tif(node.getAttribute('id') == id){\n\t\t\t\t\trtv = node;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t\treturn rtv;\n\t},\n\n\t/**\n\t * The `getElementsByClassName` method of `Document` interface returns an array-like object\n\t * of all child elements which have **all** of the given class name(s).\n\t *\n\t * Returns an empty list if `classeNames` is an empty string or only contains HTML white space characters.\n\t *\n\t *\n\t * Warning: This is a live LiveNodeList.\n\t * Changes in the DOM will reflect in the array as the changes occur.\n\t * If an element selected by this array no longer qualifies for the selector,\n\t * it will automatically be removed. Be aware of this for iteration purposes.\n\t *\n\t * @param {string} classNames is a string representing the class name(s) to match; multiple class names are separated by (ASCII-)whitespace\n\t *\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/Document/getElementsByClassName\n\t * @see https://dom.spec.whatwg.org/#concept-getelementsbyclassname\n\t */\n\tgetElementsByClassName: function(classNames) {\n\t\tvar classNamesSet = toOrderedSet(classNames)\n\t\treturn new LiveNodeList(this, function(base) {\n\t\t\tvar ls = [];\n\t\t\tif (classNamesSet.length > 0) {\n\t\t\t\t_visitNode(base.documentElement, function(node) {\n\t\t\t\t\tif(node !== base && node.nodeType === ELEMENT_NODE) {\n\t\t\t\t\t\tvar nodeClassNames = node.getAttribute('class')\n\t\t\t\t\t\t// can be null if the attribute does not exist\n\t\t\t\t\t\tif (nodeClassNames) {\n\t\t\t\t\t\t\t// before splitting and iterating just compare them for the most common case\n\t\t\t\t\t\t\tvar matches = classNames === nodeClassNames;\n\t\t\t\t\t\t\tif (!matches) {\n\t\t\t\t\t\t\t\tvar nodeClassNamesSet = toOrderedSet(nodeClassNames)\n\t\t\t\t\t\t\t\tmatches = classNamesSet.every(arrayIncludes(nodeClassNamesSet))\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(matches) {\n\t\t\t\t\t\t\t\tls.push(node);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn ls;\n\t\t});\n\t},\n\n\t//document factory method:\n\tcreateElement :\tfunction(tagName){\n\t\tvar node = new Element();\n\t\tnode.ownerDocument = this;\n\t\tnode.nodeName = tagName;\n\t\tnode.tagName = tagName;\n\t\tnode.localName = tagName;\n\t\tnode.childNodes = new NodeList();\n\t\tvar attrs\t= node.attributes = new NamedNodeMap();\n\t\tattrs._ownerElement = node;\n\t\treturn node;\n\t},\n\tcreateDocumentFragment :\tfunction(){\n\t\tvar node = new DocumentFragment();\n\t\tnode.ownerDocument = this;\n\t\tnode.childNodes = new NodeList();\n\t\treturn node;\n\t},\n\tcreateTextNode :\tfunction(data){\n\t\tvar node = new Text();\n\t\tnode.ownerDocument = this;\n\t\tnode.appendData(data)\n\t\treturn node;\n\t},\n\tcreateComment :\tfunction(data){\n\t\tvar node = new Comment();\n\t\tnode.ownerDocument = this;\n\t\tnode.appendData(data)\n\t\treturn node;\n\t},\n\tcreateCDATASection :\tfunction(data){\n\t\tvar node = new CDATASection();\n\t\tnode.ownerDocument = this;\n\t\tnode.appendData(data)\n\t\treturn node;\n\t},\n\tcreateProcessingInstruction :\tfunction(target,data){\n\t\tvar node = new ProcessingInstruction();\n\t\tnode.ownerDocument = this;\n\t\tnode.tagName = node.nodeName = node.target = target;\n\t\tnode.nodeValue = node.data = data;\n\t\treturn node;\n\t},\n\tcreateAttribute :\tfunction(name){\n\t\tvar node = new Attr();\n\t\tnode.ownerDocument\t= this;\n\t\tnode.name = name;\n\t\tnode.nodeName\t= name;\n\t\tnode.localName = name;\n\t\tnode.specified = true;\n\t\treturn node;\n\t},\n\tcreateEntityReference :\tfunction(name){\n\t\tvar node = new EntityReference();\n\t\tnode.ownerDocument\t= this;\n\t\tnode.nodeName\t= name;\n\t\treturn node;\n\t},\n\t// Introduced in DOM Level 2:\n\tcreateElementNS :\tfunction(namespaceURI,qualifiedName){\n\t\tvar node = new Element();\n\t\tvar pl = qualifiedName.split(':');\n\t\tvar attrs\t= node.attributes = new NamedNodeMap();\n\t\tnode.childNodes = new NodeList();\n\t\tnode.ownerDocument = this;\n\t\tnode.nodeName = qualifiedName;\n\t\tnode.tagName = qualifiedName;\n\t\tnode.namespaceURI = namespaceURI;\n\t\tif(pl.length == 2){\n\t\t\tnode.prefix = pl[0];\n\t\t\tnode.localName = pl[1];\n\t\t}else{\n\t\t\t//el.prefix = null;\n\t\t\tnode.localName = qualifiedName;\n\t\t}\n\t\tattrs._ownerElement = node;\n\t\treturn node;\n\t},\n\t// Introduced in DOM Level 2:\n\tcreateAttributeNS :\tfunction(namespaceURI,qualifiedName){\n\t\tvar node = new Attr();\n\t\tvar pl = qualifiedName.split(':');\n\t\tnode.ownerDocument = this;\n\t\tnode.nodeName = qualifiedName;\n\t\tnode.name = qualifiedName;\n\t\tnode.namespaceURI = namespaceURI;\n\t\tnode.specified = true;\n\t\tif(pl.length == 2){\n\t\t\tnode.prefix = pl[0];\n\t\t\tnode.localName = pl[1];\n\t\t}else{\n\t\t\t//el.prefix = null;\n\t\t\tnode.localName = qualifiedName;\n\t\t}\n\t\treturn node;\n\t}\n};\n_extends(Document,Node);\n\n\nfunction Element() {\n\tthis._nsMap = {};\n};\nElement.prototype = {\n\tnodeType : ELEMENT_NODE,\n\thasAttribute : function(name){\n\t\treturn this.getAttributeNode(name)!=null;\n\t},\n\tgetAttribute : function(name){\n\t\tvar attr = this.getAttributeNode(name);\n\t\treturn attr && attr.value || '';\n\t},\n\tgetAttributeNode : function(name){\n\t\treturn this.attributes.getNamedItem(name);\n\t},\n\tsetAttribute : function(name, value){\n\t\tvar attr = this.ownerDocument.createAttribute(name);\n\t\tattr.value = attr.nodeValue = \"\" + value;\n\t\tthis.setAttributeNode(attr)\n\t},\n\tremoveAttribute : function(name){\n\t\tvar attr = this.getAttributeNode(name)\n\t\tattr && this.removeAttributeNode(attr);\n\t},\n\n\t//four real opeartion method\n\tappendChild:function(newChild){\n\t\tif(newChild.nodeType === DOCUMENT_FRAGMENT_NODE){\n\t\t\treturn this.insertBefore(newChild,null);\n\t\t}else{\n\t\t\treturn _appendSingleChild(this,newChild);\n\t\t}\n\t},\n\tsetAttributeNode : function(newAttr){\n\t\treturn this.attributes.setNamedItem(newAttr);\n\t},\n\tsetAttributeNodeNS : function(newAttr){\n\t\treturn this.attributes.setNamedItemNS(newAttr);\n\t},\n\tremoveAttributeNode : function(oldAttr){\n\t\t//console.log(this == oldAttr.ownerElement)\n\t\treturn this.attributes.removeNamedItem(oldAttr.nodeName);\n\t},\n\t//get real attribute name,and remove it by removeAttributeNode\n\tremoveAttributeNS : function(namespaceURI, localName){\n\t\tvar old = this.getAttributeNodeNS(namespaceURI, localName);\n\t\told && this.removeAttributeNode(old);\n\t},\n\n\thasAttributeNS : function(namespaceURI, localName){\n\t\treturn this.getAttributeNodeNS(namespaceURI, localName)!=null;\n\t},\n\tgetAttributeNS : function(namespaceURI, localName){\n\t\tvar attr = this.getAttributeNodeNS(namespaceURI, localName);\n\t\treturn attr && attr.value || '';\n\t},\n\tsetAttributeNS : function(namespaceURI, qualifiedName, value){\n\t\tvar attr = this.ownerDocument.createAttributeNS(namespaceURI, qualifiedName);\n\t\tattr.value = attr.nodeValue = \"\" + value;\n\t\tthis.setAttributeNode(attr)\n\t},\n\tgetAttributeNodeNS : function(namespaceURI, localName){\n\t\treturn this.attributes.getNamedItemNS(namespaceURI, localName);\n\t},\n\n\tgetElementsByTagName : function(tagName){\n\t\treturn new LiveNodeList(this,function(base){\n\t\t\tvar ls = [];\n\t\t\t_visitNode(base,function(node){\n\t\t\t\tif(node !== base && node.nodeType == ELEMENT_NODE && (tagName === '*' || node.tagName == tagName)){\n\t\t\t\t\tls.push(node);\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn ls;\n\t\t});\n\t},\n\tgetElementsByTagNameNS : function(namespaceURI, localName){\n\t\treturn new LiveNodeList(this,function(base){\n\t\t\tvar ls = [];\n\t\t\t_visitNode(base,function(node){\n\t\t\t\tif(node !== base && node.nodeType === ELEMENT_NODE && (namespaceURI === '*' || node.namespaceURI === namespaceURI) && (localName === '*' || node.localName == localName)){\n\t\t\t\t\tls.push(node);\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn ls;\n\n\t\t});\n\t}\n};\nDocument.prototype.getElementsByTagName = Element.prototype.getElementsByTagName;\nDocument.prototype.getElementsByTagNameNS = Element.prototype.getElementsByTagNameNS;\n\n\n_extends(Element,Node);\nfunction Attr() {\n};\nAttr.prototype.nodeType = ATTRIBUTE_NODE;\n_extends(Attr,Node);\n\n\nfunction CharacterData() {\n};\nCharacterData.prototype = {\n\tdata : '',\n\tsubstringData : function(offset, count) {\n\t\treturn this.data.substring(offset, offset+count);\n\t},\n\tappendData: function(text) {\n\t\ttext = this.data+text;\n\t\tthis.nodeValue = this.data = text;\n\t\tthis.length = text.length;\n\t},\n\tinsertData: function(offset,text) {\n\t\tthis.replaceData(offset,0,text);\n\n\t},\n\tappendChild:function(newChild){\n\t\tthrow new Error(ExceptionMessage[HIERARCHY_REQUEST_ERR])\n\t},\n\tdeleteData: function(offset, count) {\n\t\tthis.replaceData(offset,count,\"\");\n\t},\n\treplaceData: function(offset, count, text) {\n\t\tvar start = this.data.substring(0,offset);\n\t\tvar end = this.data.substring(offset+count);\n\t\ttext = start + text + end;\n\t\tthis.nodeValue = this.data = text;\n\t\tthis.length = text.length;\n\t}\n}\n_extends(CharacterData,Node);\nfunction Text() {\n};\nText.prototype = {\n\tnodeName : \"#text\",\n\tnodeType : TEXT_NODE,\n\tsplitText : function(offset) {\n\t\tvar text = this.data;\n\t\tvar newText = text.substring(offset);\n\t\ttext = text.substring(0, offset);\n\t\tthis.data = this.nodeValue = text;\n\t\tthis.length = text.length;\n\t\tvar newNode = this.ownerDocument.createTextNode(newText);\n\t\tif(this.parentNode){\n\t\t\tthis.parentNode.insertBefore(newNode, this.nextSibling);\n\t\t}\n\t\treturn newNode;\n\t}\n}\n_extends(Text,CharacterData);\nfunction Comment() {\n};\nComment.prototype = {\n\tnodeName : \"#comment\",\n\tnodeType : COMMENT_NODE\n}\n_extends(Comment,CharacterData);\n\nfunction CDATASection() {\n};\nCDATASection.prototype = {\n\tnodeName : \"#cdata-section\",\n\tnodeType : CDATA_SECTION_NODE\n}\n_extends(CDATASection,CharacterData);\n\n\nfunction DocumentType() {\n};\nDocumentType.prototype.nodeType = DOCUMENT_TYPE_NODE;\n_extends(DocumentType,Node);\n\nfunction Notation() {\n};\nNotation.prototype.nodeType = NOTATION_NODE;\n_extends(Notation,Node);\n\nfunction Entity() {\n};\nEntity.prototype.nodeType = ENTITY_NODE;\n_extends(Entity,Node);\n\nfunction EntityReference() {\n};\nEntityReference.prototype.nodeType = ENTITY_REFERENCE_NODE;\n_extends(EntityReference,Node);\n\nfunction DocumentFragment() {\n};\nDocumentFragment.prototype.nodeName =\t\"#document-fragment\";\nDocumentFragment.prototype.nodeType =\tDOCUMENT_FRAGMENT_NODE;\n_extends(DocumentFragment,Node);\n\n\nfunction ProcessingInstruction() {\n}\nProcessingInstruction.prototype.nodeType = PROCESSING_INSTRUCTION_NODE;\n_extends(ProcessingInstruction,Node);\nfunction XMLSerializer(){}\nXMLSerializer.prototype.serializeToString = function(node,isHtml,nodeFilter){\n\treturn nodeSerializeToString.call(node,isHtml,nodeFilter);\n}\nNode.prototype.toString = nodeSerializeToString;\nfunction nodeSerializeToString(isHtml,nodeFilter){\n\tvar buf = [];\n\tvar refNode = this.nodeType == 9 && this.documentElement || this;\n\tvar prefix = refNode.prefix;\n\tvar uri = refNode.namespaceURI;\n\n\tif(uri && prefix == null){\n\t\t//console.log(prefix)\n\t\tvar prefix = refNode.lookupPrefix(uri);\n\t\tif(prefix == null){\n\t\t\t//isHTML = true;\n\t\t\tvar visibleNamespaces=[\n\t\t\t{namespace:uri,prefix:null}\n\t\t\t//{namespace:uri,prefix:''}\n\t\t\t]\n\t\t}\n\t}\n\tserializeToString(this,buf,isHtml,nodeFilter,visibleNamespaces);\n\t//console.log('###',this.nodeType,uri,prefix,buf.join(''))\n\treturn buf.join('');\n}\n\nfunction needNamespaceDefine(node, isHTML, visibleNamespaces) {\n\tvar prefix = node.prefix || '';\n\tvar uri = node.namespaceURI;\n\t// According to [Namespaces in XML 1.0](https://www.w3.org/TR/REC-xml-names/#ns-using) ,\n\t// and more specifically https://www.w3.org/TR/REC-xml-names/#nsc-NoPrefixUndecl :\n\t// > In a namespace declaration for a prefix [...], the attribute value MUST NOT be empty.\n\t// in a similar manner [Namespaces in XML 1.1](https://www.w3.org/TR/xml-names11/#ns-using)\n\t// and more specifically https://www.w3.org/TR/xml-names11/#nsc-NSDeclared :\n\t// > [...] Furthermore, the attribute value [...] must not be an empty string.\n\t// so serializing empty namespace value like xmlns:ds=\"\" would produce an invalid XML document.\n\tif (!uri) {\n\t\treturn false;\n\t}\n\tif (prefix === \"xml\" && uri === NAMESPACE.XML || uri === NAMESPACE.XMLNS) {\n\t\treturn false;\n\t}\n\n\tvar i = visibleNamespaces.length\n\twhile (i--) {\n\t\tvar ns = visibleNamespaces[i];\n\t\t// get namespace prefix\n\t\tif (ns.prefix === prefix) {\n\t\t\treturn ns.namespace !== uri;\n\t\t}\n\t}\n\treturn true;\n}\n/**\n * Well-formed constraint: No < in Attribute Values\n * > The replacement text of any entity referred to directly or indirectly\n * > in an attribute value must not contain a <.\n * @see https://www.w3.org/TR/xml11/#CleanAttrVals\n * @see https://www.w3.org/TR/xml11/#NT-AttValue\n *\n * Literal whitespace other than space that appear in attribute values\n * are serialized as their entity references, so they will be preserved.\n * (In contrast to whitespace literals in the input which are normalized to spaces)\n * @see https://www.w3.org/TR/xml11/#AVNormalize\n * @see https://w3c.github.io/DOM-Parsing/#serializing-an-element-s-attributes\n */\nfunction addSerializedAttribute(buf, qualifiedName, value) {\n\tbuf.push(' ', qualifiedName, '=\"', value.replace(/[<>&\"\\t\\n\\r]/g, _xmlEncoder), '\"')\n}\n\nfunction serializeToString(node,buf,isHTML,nodeFilter,visibleNamespaces){\n\tif (!visibleNamespaces) {\n\t\tvisibleNamespaces = [];\n\t}\n\n\tif(nodeFilter){\n\t\tnode = nodeFilter(node);\n\t\tif(node){\n\t\t\tif(typeof node == 'string'){\n\t\t\t\tbuf.push(node);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}else{\n\t\t\treturn;\n\t\t}\n\t\t//buf.sort.apply(attrs, attributeSorter);\n\t}\n\n\tswitch(node.nodeType){\n\tcase ELEMENT_NODE:\n\t\tvar attrs = node.attributes;\n\t\tvar len = attrs.length;\n\t\tvar child = node.firstChild;\n\t\tvar nodeName = node.tagName;\n\n\t\tisHTML = NAMESPACE.isHTML(node.namespaceURI) || isHTML\n\n\t\tvar prefixedNodeName = nodeName\n\t\tif (!isHTML && !node.prefix && node.namespaceURI) {\n\t\t\tvar defaultNS\n\t\t\t// lookup current default ns from `xmlns` attribute\n\t\t\tfor (var ai = 0; ai < attrs.length; ai++) {\n\t\t\t\tif (attrs.item(ai).name === 'xmlns') {\n\t\t\t\t\tdefaultNS = attrs.item(ai).value\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!defaultNS) {\n\t\t\t\t// lookup current default ns in visibleNamespaces\n\t\t\t\tfor (var nsi = visibleNamespaces.length - 1; nsi >= 0; nsi--) {\n\t\t\t\t\tvar namespace = visibleNamespaces[nsi]\n\t\t\t\t\tif (namespace.prefix === '' && namespace.namespace === node.namespaceURI) {\n\t\t\t\t\t\tdefaultNS = namespace.namespace\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (defaultNS !== node.namespaceURI) {\n\t\t\t\tfor (var nsi = visibleNamespaces.length - 1; nsi >= 0; nsi--) {\n\t\t\t\t\tvar namespace = visibleNamespaces[nsi]\n\t\t\t\t\tif (namespace.namespace === node.namespaceURI) {\n\t\t\t\t\t\tif (namespace.prefix) {\n\t\t\t\t\t\t\tprefixedNodeName = namespace.prefix + ':' + nodeName\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tbuf.push('<', prefixedNodeName);\n\n\t\tfor(var i=0;i<len;i++){\n\t\t\t// add namespaces for attributes\n\t\t\tvar attr = attrs.item(i);\n\t\t\tif (attr.prefix == 'xmlns') {\n\t\t\t\tvisibleNamespaces.push({ prefix: attr.localName, namespace: attr.value });\n\t\t\t}else if(attr.nodeName == 'xmlns'){\n\t\t\t\tvisibleNamespaces.push({ prefix: '', namespace: attr.value });\n\t\t\t}\n\t\t}\n\n\t\tfor(var i=0;i<len;i++){\n\t\t\tvar attr = attrs.item(i);\n\t\t\tif (needNamespaceDefine(attr,isHTML, visibleNamespaces)) {\n\t\t\t\tvar prefix = attr.prefix||'';\n\t\t\t\tvar uri = attr.namespaceURI;\n\t\t\t\taddSerializedAttribute(buf, prefix ? 'xmlns:' + prefix : \"xmlns\", uri);\n\t\t\t\tvisibleNamespaces.push({ prefix: prefix, namespace:uri });\n\t\t\t}\n\t\t\tserializeToString(attr,buf,isHTML,nodeFilter,visibleNamespaces);\n\t\t}\n\n\t\t// add namespace for current node\n\t\tif (nodeName === prefixedNodeName && needNamespaceDefine(node, isHTML, visibleNamespaces)) {\n\t\t\tvar prefix = node.prefix||'';\n\t\t\tvar uri = node.namespaceURI;\n\t\t\taddSerializedAttribute(buf, prefix ? 'xmlns:' + prefix : \"xmlns\", uri);\n\t\t\tvisibleNamespaces.push({ prefix: prefix, namespace:uri });\n\t\t}\n\n\t\tif(child || isHTML && !/^(?:meta|link|img|br|hr|input)$/i.test(nodeName)){\n\t\t\tbuf.push('>');\n\t\t\t//if is cdata child node\n\t\t\tif(isHTML && /^script$/i.test(nodeName)){\n\t\t\t\twhile(child){\n\t\t\t\t\tif(child.data){\n\t\t\t\t\t\tbuf.push(child.data);\n\t\t\t\t\t}else{\n\t\t\t\t\t\tserializeToString(child, buf, isHTML, nodeFilter, visibleNamespaces.slice());\n\t\t\t\t\t}\n\t\t\t\t\tchild = child.nextSibling;\n\t\t\t\t}\n\t\t\t}else\n\t\t\t{\n\t\t\t\twhile(child){\n\t\t\t\t\tserializeToString(child, buf, isHTML, nodeFilter, visibleNamespaces.slice());\n\t\t\t\t\tchild = child.nextSibling;\n\t\t\t\t}\n\t\t\t}\n\t\t\tbuf.push('</',prefixedNodeName,'>');\n\t\t}else{\n\t\t\tbuf.push('/>');\n\t\t}\n\t\t// remove added visible namespaces\n\t\t//visibleNamespaces.length = startVisibleNamespaces;\n\t\treturn;\n\tcase DOCUMENT_NODE:\n\tcase DOCUMENT_FRAGMENT_NODE:\n\t\tvar child = node.firstChild;\n\t\twhile(child){\n\t\t\tserializeToString(child, buf, isHTML, nodeFilter, visibleNamespaces.slice());\n\t\t\tchild = child.nextSibling;\n\t\t}\n\t\treturn;\n\tcase ATTRIBUTE_NODE:\n\t\treturn addSerializedAttribute(buf, node.name, node.value);\n\tcase TEXT_NODE:\n\t\t/**\n\t\t * The ampersand character (&) and the left angle bracket (<) must not appear in their literal form,\n\t\t * except when used as markup delimiters, or within a comment, a processing instruction, or a CDATA section.\n\t\t * If they are needed elsewhere, they must be escaped using either numeric character references or the strings\n\t\t * `&amp;` and `&lt;` respectively.\n\t\t * The right angle bracket (>) may be represented using the string \" &gt; \", and must, for compatibility,\n\t\t * be escaped using either `&gt;` or a character reference when it appears in the string `]]>` in content,\n\t\t * when that string is not marking the end of a CDATA section.\n\t\t *\n\t\t * In the content of elements, character data is any string of characters\n\t\t * which does not contain the start-delimiter of any markup\n\t\t * and does not include the CDATA-section-close delimiter, `]]>`.\n\t\t *\n\t\t * @see https://www.w3.org/TR/xml/#NT-CharData\n\t\t * @see https://w3c.github.io/DOM-Parsing/#xml-serializing-a-text-node\n\t\t */\n\t\treturn buf.push(node.data\n\t\t\t.replace(/[<&>]/g,_xmlEncoder)\n\t\t);\n\tcase CDATA_SECTION_NODE:\n\t\treturn buf.push( '<![CDATA[',node.data,']]>');\n\tcase COMMENT_NODE:\n\t\treturn buf.push( \"<!--\",node.data,\"-->\");\n\tcase DOCUMENT_TYPE_NODE:\n\t\tvar pubid = node.publicId;\n\t\tvar sysid = node.systemId;\n\t\tbuf.push('<!DOCTYPE ',node.name);\n\t\tif(pubid){\n\t\t\tbuf.push(' PUBLIC ', pubid);\n\t\t\tif (sysid && sysid!='.') {\n\t\t\t\tbuf.push(' ', sysid);\n\t\t\t}\n\t\t\tbuf.push('>');\n\t\t}else if(sysid && sysid!='.'){\n\t\t\tbuf.push(' SYSTEM ', sysid, '>');\n\t\t}else{\n\t\t\tvar sub = node.internalSubset;\n\t\t\tif(sub){\n\t\t\t\tbuf.push(\" [\",sub,\"]\");\n\t\t\t}\n\t\t\tbuf.push(\">\");\n\t\t}\n\t\treturn;\n\tcase PROCESSING_INSTRUCTION_NODE:\n\t\treturn buf.push( \"<?\",node.target,\" \",node.data,\"?>\");\n\tcase ENTITY_REFERENCE_NODE:\n\t\treturn buf.push( '&',node.nodeName,';');\n\t//case ENTITY_NODE:\n\t//case NOTATION_NODE:\n\tdefault:\n\t\tbuf.push('??',node.nodeName);\n\t}\n}\nfunction importNode(doc,node,deep){\n\tvar node2;\n\tswitch (node.nodeType) {\n\tcase ELEMENT_NODE:\n\t\tnode2 = node.cloneNode(false);\n\t\tnode2.ownerDocument = doc;\n\t\t//var attrs = node2.attributes;\n\t\t//var len = attrs.length;\n\t\t//for(var i=0;i<len;i++){\n\t\t\t//node2.setAttributeNodeNS(importNode(doc,attrs.item(i),deep));\n\t\t//}\n\tcase DOCUMENT_FRAGMENT_NODE:\n\t\tbreak;\n\tcase ATTRIBUTE_NODE:\n\t\tdeep = true;\n\t\tbreak;\n\t//case ENTITY_REFERENCE_NODE:\n\t//case PROCESSING_INSTRUCTION_NODE:\n\t////case TEXT_NODE:\n\t//case CDATA_SECTION_NODE:\n\t//case COMMENT_NODE:\n\t//\tdeep = false;\n\t//\tbreak;\n\t//case DOCUMENT_NODE:\n\t//case DOCUMENT_TYPE_NODE:\n\t//cannot be imported.\n\t//case ENTITY_NODE:\n\t//case NOTATION_NODE：\n\t//can not hit in level3\n\t//default:throw e;\n\t}\n\tif(!node2){\n\t\tnode2 = node.cloneNode(false);//false\n\t}\n\tnode2.ownerDocument = doc;\n\tnode2.parentNode = null;\n\tif(deep){\n\t\tvar child = node.firstChild;\n\t\twhile(child){\n\t\t\tnode2.appendChild(importNode(doc,child,deep));\n\t\t\tchild = child.nextSibling;\n\t\t}\n\t}\n\treturn node2;\n}\n//\n//var _relationMap = {firstChild:1,lastChild:1,previousSibling:1,nextSibling:1,\n//\t\t\t\t\tattributes:1,childNodes:1,parentNode:1,documentElement:1,doctype,};\nfunction cloneNode(doc,node,deep){\n\tvar node2 = new node.constructor();\n\tfor (var n in node) {\n\t\tif (Object.prototype.hasOwnProperty.call(node, n)) {\n\t\t\tvar v = node[n];\n\t\t\tif (typeof v != \"object\") {\n\t\t\t\tif (v != node2[n]) {\n\t\t\t\t\tnode2[n] = v;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tif(node.childNodes){\n\t\tnode2.childNodes = new NodeList();\n\t}\n\tnode2.ownerDocument = doc;\n\tswitch (node2.nodeType) {\n\tcase ELEMENT_NODE:\n\t\tvar attrs\t= node.attributes;\n\t\tvar attrs2\t= node2.attributes = new NamedNodeMap();\n\t\tvar len = attrs.length\n\t\tattrs2._ownerElement = node2;\n\t\tfor(var i=0;i<len;i++){\n\t\t\tnode2.setAttributeNode(cloneNode(doc,attrs.item(i),true));\n\t\t}\n\t\tbreak;;\n\tcase ATTRIBUTE_NODE:\n\t\tdeep = true;\n\t}\n\tif(deep){\n\t\tvar child = node.firstChild;\n\t\twhile(child){\n\t\t\tnode2.appendChild(cloneNode(doc,child,deep));\n\t\t\tchild = child.nextSibling;\n\t\t}\n\t}\n\treturn node2;\n}\n\nfunction __set__(object,key,value){\n\tobject[key] = value\n}\n//do dynamic\ntry{\n\tif(Object.defineProperty){\n\t\tObject.defineProperty(LiveNodeList.prototype,'length',{\n\t\t\tget:function(){\n\t\t\t\t_updateLiveList(this);\n\t\t\t\treturn this.$$length;\n\t\t\t}\n\t\t});\n\n\t\tObject.defineProperty(Node.prototype,'textContent',{\n\t\t\tget:function(){\n\t\t\t\treturn getTextContent(this);\n\t\t\t},\n\n\t\t\tset:function(data){\n\t\t\t\tswitch(this.nodeType){\n\t\t\t\tcase ELEMENT_NODE:\n\t\t\t\tcase DOCUMENT_FRAGMENT_NODE:\n\t\t\t\t\twhile(this.firstChild){\n\t\t\t\t\t\tthis.removeChild(this.firstChild);\n\t\t\t\t\t}\n\t\t\t\t\tif(data || String(data)){\n\t\t\t\t\t\tthis.appendChild(this.ownerDocument.createTextNode(data));\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tthis.data = data;\n\t\t\t\t\tthis.value = data;\n\t\t\t\t\tthis.nodeValue = data;\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n\t\tfunction getTextContent(node){\n\t\t\tswitch(node.nodeType){\n\t\t\tcase ELEMENT_NODE:\n\t\t\tcase DOCUMENT_FRAGMENT_NODE:\n\t\t\t\tvar buf = [];\n\t\t\t\tnode = node.firstChild;\n\t\t\t\twhile(node){\n\t\t\t\t\tif(node.nodeType!==7 && node.nodeType !==8){\n\t\t\t\t\t\tbuf.push(getTextContent(node));\n\t\t\t\t\t}\n\t\t\t\t\tnode = node.nextSibling;\n\t\t\t\t}\n\t\t\t\treturn buf.join('');\n\t\t\tdefault:\n\t\t\t\treturn node.nodeValue;\n\t\t\t}\n\t\t}\n\n\t\t__set__ = function(object,key,value){\n\t\t\t//console.log(value)\n\t\t\tobject['$$'+key] = value\n\t\t}\n\t}\n}catch(e){//ie8\n}\n\n//if(typeof require == 'function'){\n\texports.DocumentType = DocumentType;\n\texports.DOMException = DOMException;\n\texports.DOMImplementation = DOMImplementation;\n\texports.Element = Element;\n\texports.Node = Node;\n\texports.NodeList = NodeList;\n\texports.XMLSerializer = XMLSerializer;\n//}\n","'use strict';\n\nvar freeze = require('./conventions').freeze;\n\n/**\n * The entities that are predefined in every XML document.\n *\n * @see https://www.w3.org/TR/2006/REC-xml11-20060816/#sec-predefined-ent W3C XML 1.1\n * @see https://www.w3.org/TR/2008/REC-xml-20081126/#sec-predefined-ent W3C XML 1.0\n * @see https://en.wikipedia.org/wiki/List_of_XML_and_HTML_character_entity_references#Predefined_entities_in_XML Wikipedia\n */\nexports.XML_ENTITIES = freeze({\n\tamp: '&',\n\tapos: \"'\",\n\tgt: '>',\n\tlt: '<',\n\tquot: '\"',\n});\n\n/**\n * A map of all entities that are detected in an HTML document.\n * They contain all entries from `XML_ENTITIES`.\n *\n * @see XML_ENTITIES\n * @see DOMParser.parseFromString\n * @see DOMImplementation.prototype.createHTMLDocument\n * @see https://html.spec.whatwg.org/#named-character-references WHATWG HTML(5) Spec\n * @see https://html.spec.whatwg.org/entities.json JSON\n * @see https://www.w3.org/TR/xml-entity-names/ W3C XML Entity Names\n * @see https://www.w3.org/TR/html4/sgml/entities.html W3C HTML4/SGML\n * @see https://en.wikipedia.org/wiki/List_of_XML_and_HTML_character_entity_references#Character_entity_references_in_HTML Wikipedia (HTML)\n * @see https://en.wikipedia.org/wiki/List_of_XML_and_HTML_character_entity_references#Entities_representing_special_characters_in_XHTML Wikpedia (XHTML)\n */\nexports.HTML_ENTITIES = freeze({\n\tAacute: '\\u00C1',\n\taacute: '\\u00E1',\n\tAbreve: '\\u0102',\n\tabreve: '\\u0103',\n\tac: '\\u223E',\n\tacd: '\\u223F',\n\tacE: '\\u223E\\u0333',\n\tAcirc: '\\u00C2',\n\tacirc: '\\u00E2',\n\tacute: '\\u00B4',\n\tAcy: '\\u0410',\n\tacy: '\\u0430',\n\tAElig: '\\u00C6',\n\taelig: '\\u00E6',\n\taf: '\\u2061',\n\tAfr: '\\uD835\\uDD04',\n\tafr: '\\uD835\\uDD1E',\n\tAgrave: '\\u00C0',\n\tagrave: '\\u00E0',\n\talefsym: '\\u2135',\n\taleph: '\\u2135',\n\tAlpha: '\\u0391',\n\talpha: '\\u03B1',\n\tAmacr: '\\u0100',\n\tamacr: '\\u0101',\n\tamalg: '\\u2A3F',\n\tAMP: '\\u0026',\n\tamp: '\\u0026',\n\tAnd: '\\u2A53',\n\tand: '\\u2227',\n\tandand: '\\u2A55',\n\tandd: '\\u2A5C',\n\tandslope: '\\u2A58',\n\tandv: '\\u2A5A',\n\tang: '\\u2220',\n\tange: '\\u29A4',\n\tangle: '\\u2220',\n\tangmsd: '\\u2221',\n\tangmsdaa: '\\u29A8',\n\tangmsdab: '\\u29A9',\n\tangmsdac: '\\u29AA',\n\tangmsdad: '\\u29AB',\n\tangmsdae: '\\u29AC',\n\tangmsdaf: '\\u29AD',\n\tangmsdag: '\\u29AE',\n\tangmsdah: '\\u29AF',\n\tangrt: '\\u221F',\n\tangrtvb: '\\u22BE',\n\tangrtvbd: '\\u299D',\n\tangsph: '\\u2222',\n\tangst: '\\u00C5',\n\tangzarr: '\\u237C',\n\tAogon: '\\u0104',\n\taogon: '\\u0105',\n\tAopf: '\\uD835\\uDD38',\n\taopf: '\\uD835\\uDD52',\n\tap: '\\u2248',\n\tapacir: '\\u2A6F',\n\tapE: '\\u2A70',\n\tape: '\\u224A',\n\tapid: '\\u224B',\n\tapos: '\\u0027',\n\tApplyFunction: '\\u2061',\n\tapprox: '\\u2248',\n\tapproxeq: '\\u224A',\n\tAring: '\\u00C5',\n\taring: '\\u00E5',\n\tAscr: '\\uD835\\uDC9C',\n\tascr: '\\uD835\\uDCB6',\n\tAssign: '\\u2254',\n\tast: '\\u002A',\n\tasymp: '\\u2248',\n\tasympeq: '\\u224D',\n\tAtilde: '\\u00C3',\n\tatilde: '\\u00E3',\n\tAuml: '\\u00C4',\n\tauml: '\\u00E4',\n\tawconint: '\\u2233',\n\tawint: '\\u2A11',\n\tbackcong: '\\u224C',\n\tbackepsilon: '\\u03F6',\n\tbackprime: '\\u2035',\n\tbacksim: '\\u223D',\n\tbacksimeq: '\\u22CD',\n\tBackslash: '\\u2216',\n\tBarv: '\\u2AE7',\n\tbarvee: '\\u22BD',\n\tBarwed: '\\u2306',\n\tbarwed: '\\u2305',\n\tbarwedge: '\\u2305',\n\tbbrk: '\\u23B5',\n\tbbrktbrk: '\\u23B6',\n\tbcong: '\\u224C',\n\tBcy: '\\u0411',\n\tbcy: '\\u0431',\n\tbdquo: '\\u201E',\n\tbecaus: '\\u2235',\n\tBecause: '\\u2235',\n\tbecause: '\\u2235',\n\tbemptyv: '\\u29B0',\n\tbepsi: '\\u03F6',\n\tbernou: '\\u212C',\n\tBernoullis: '\\u212C',\n\tBeta: '\\u0392',\n\tbeta: '\\u03B2',\n\tbeth: '\\u2136',\n\tbetween: '\\u226C',\n\tBfr: '\\uD835\\uDD05',\n\tbfr: '\\uD835\\uDD1F',\n\tbigcap: '\\u22C2',\n\tbigcirc: '\\u25EF',\n\tbigcup: '\\u22C3',\n\tbigodot: '\\u2A00',\n\tbigoplus: '\\u2A01',\n\tbigotimes: '\\u2A02',\n\tbigsqcup: '\\u2A06',\n\tbigstar: '\\u2605',\n\tbigtriangledown: '\\u25BD',\n\tbigtriangleup: '\\u25B3',\n\tbiguplus: '\\u2A04',\n\tbigvee: '\\u22C1',\n\tbigwedge: '\\u22C0',\n\tbkarow: '\\u290D',\n\tblacklozenge: '\\u29EB',\n\tblacksquare: '\\u25AA',\n\tblacktriangle: '\\u25B4',\n\tblacktriangledown: '\\u25BE',\n\tblacktriangleleft: '\\u25C2',\n\tblacktriangleright: '\\u25B8',\n\tblank: '\\u2423',\n\tblk12: '\\u2592',\n\tblk14: '\\u2591',\n\tblk34: '\\u2593',\n\tblock: '\\u2588',\n\tbne: '\\u003D\\u20E5',\n\tbnequiv: '\\u2261\\u20E5',\n\tbNot: '\\u2AED',\n\tbnot: '\\u2310',\n\tBopf: '\\uD835\\uDD39',\n\tbopf: '\\uD835\\uDD53',\n\tbot: '\\u22A5',\n\tbottom: '\\u22A5',\n\tbowtie: '\\u22C8',\n\tboxbox: '\\u29C9',\n\tboxDL: '\\u2557',\n\tboxDl: '\\u2556',\n\tboxdL: '\\u2555',\n\tboxdl: '\\u2510',\n\tboxDR: '\\u2554',\n\tboxDr: '\\u2553',\n\tboxdR: '\\u2552',\n\tboxdr: '\\u250C',\n\tboxH: '\\u2550',\n\tboxh: '\\u2500',\n\tboxHD: '\\u2566',\n\tboxHd: '\\u2564',\n\tboxhD: '\\u2565',\n\tboxhd: '\\u252C',\n\tboxHU: '\\u2569',\n\tboxHu: '\\u2567',\n\tboxhU: '\\u2568',\n\tboxhu: '\\u2534',\n\tboxminus: '\\u229F',\n\tboxplus: '\\u229E',\n\tboxtimes: '\\u22A0',\n\tboxUL: '\\u255D',\n\tboxUl: '\\u255C',\n\tboxuL: '\\u255B',\n\tboxul: '\\u2518',\n\tboxUR: '\\u255A',\n\tboxUr: '\\u2559',\n\tboxuR: '\\u2558',\n\tboxur: '\\u2514',\n\tboxV: '\\u2551',\n\tboxv: '\\u2502',\n\tboxVH: '\\u256C',\n\tboxVh: '\\u256B',\n\tboxvH: '\\u256A',\n\tboxvh: '\\u253C',\n\tboxVL: '\\u2563',\n\tboxVl: '\\u2562',\n\tboxvL: '\\u2561',\n\tboxvl: '\\u2524',\n\tboxVR: '\\u2560',\n\tboxVr: '\\u255F',\n\tboxvR: '\\u255E',\n\tboxvr: '\\u251C',\n\tbprime: '\\u2035',\n\tBreve: '\\u02D8',\n\tbreve: '\\u02D8',\n\tbrvbar: '\\u00A6',\n\tBscr: '\\u212C',\n\tbscr: '\\uD835\\uDCB7',\n\tbsemi: '\\u204F',\n\tbsim: '\\u223D',\n\tbsime: '\\u22CD',\n\tbsol: '\\u005C',\n\tbsolb: '\\u29C5',\n\tbsolhsub: '\\u27C8',\n\tbull: '\\u2022',\n\tbullet: '\\u2022',\n\tbump: '\\u224E',\n\tbumpE: '\\u2AAE',\n\tbumpe: '\\u224F',\n\tBumpeq: '\\u224E',\n\tbumpeq: '\\u224F',\n\tCacute: '\\u0106',\n\tcacute: '\\u0107',\n\tCap: '\\u22D2',\n\tcap: '\\u2229',\n\tcapand: '\\u2A44',\n\tcapbrcup: '\\u2A49',\n\tcapcap: '\\u2A4B',\n\tcapcup: '\\u2A47',\n\tcapdot: '\\u2A40',\n\tCapitalDifferentialD: '\\u2145',\n\tcaps: '\\u2229\\uFE00',\n\tcaret: '\\u2041',\n\tcaron: '\\u02C7',\n\tCayleys: '\\u212D',\n\tccaps: '\\u2A4D',\n\tCcaron: '\\u010C',\n\tccaron: '\\u010D',\n\tCcedil: '\\u00C7',\n\tccedil: '\\u00E7',\n\tCcirc: '\\u0108',\n\tccirc: '\\u0109',\n\tCconint: '\\u2230',\n\tccups: '\\u2A4C',\n\tccupssm: '\\u2A50',\n\tCdot: '\\u010A',\n\tcdot: '\\u010B',\n\tcedil: '\\u00B8',\n\tCedilla: '\\u00B8',\n\tcemptyv: '\\u29B2',\n\tcent: '\\u00A2',\n\tCenterDot: '\\u00B7',\n\tcenterdot: '\\u00B7',\n\tCfr: '\\u212D',\n\tcfr: '\\uD835\\uDD20',\n\tCHcy: '\\u0427',\n\tchcy: '\\u0447',\n\tcheck: '\\u2713',\n\tcheckmark: '\\u2713',\n\tChi: '\\u03A7',\n\tchi: '\\u03C7',\n\tcir: '\\u25CB',\n\tcirc: '\\u02C6',\n\tcirceq: '\\u2257',\n\tcirclearrowleft: '\\u21BA',\n\tcirclearrowright: '\\u21BB',\n\tcircledast: '\\u229B',\n\tcircledcirc: '\\u229A',\n\tcircleddash: '\\u229D',\n\tCircleDot: '\\u2299',\n\tcircledR: '\\u00AE',\n\tcircledS: '\\u24C8',\n\tCircleMinus: '\\u2296',\n\tCirclePlus: '\\u2295',\n\tCircleTimes: '\\u2297',\n\tcirE: '\\u29C3',\n\tcire: '\\u2257',\n\tcirfnint: '\\u2A10',\n\tcirmid: '\\u2AEF',\n\tcirscir: '\\u29C2',\n\tClockwiseContourIntegral: '\\u2232',\n\tCloseCurlyDoubleQuote: '\\u201D',\n\tCloseCurlyQuote: '\\u2019',\n\tclubs: '\\u2663',\n\tclubsuit: '\\u2663',\n\tColon: '\\u2237',\n\tcolon: '\\u003A',\n\tColone: '\\u2A74',\n\tcolone: '\\u2254',\n\tcoloneq: '\\u2254',\n\tcomma: '\\u002C',\n\tcommat: '\\u0040',\n\tcomp: '\\u2201',\n\tcompfn: '\\u2218',\n\tcomplement: '\\u2201',\n\tcomplexes: '\\u2102',\n\tcong: '\\u2245',\n\tcongdot: '\\u2A6D',\n\tCongruent: '\\u2261',\n\tConint: '\\u222F',\n\tconint: '\\u222E',\n\tContourIntegral: '\\u222E',\n\tCopf: '\\u2102',\n\tcopf: '\\uD835\\uDD54',\n\tcoprod: '\\u2210',\n\tCoproduct: '\\u2210',\n\tCOPY: '\\u00A9',\n\tcopy: '\\u00A9',\n\tcopysr: '\\u2117',\n\tCounterClockwiseContourIntegral: '\\u2233',\n\tcrarr: '\\u21B5',\n\tCross: '\\u2A2F',\n\tcross: '\\u2717',\n\tCscr: '\\uD835\\uDC9E',\n\tcscr: '\\uD835\\uDCB8',\n\tcsub: '\\u2ACF',\n\tcsube: '\\u2AD1',\n\tcsup: '\\u2AD0',\n\tcsupe: '\\u2AD2',\n\tctdot: '\\u22EF',\n\tcudarrl: '\\u2938',\n\tcudarrr: '\\u2935',\n\tcuepr: '\\u22DE',\n\tcuesc: '\\u22DF',\n\tcularr: '\\u21B6',\n\tcularrp: '\\u293D',\n\tCup: '\\u22D3',\n\tcup: '\\u222A',\n\tcupbrcap: '\\u2A48',\n\tCupCap: '\\u224D',\n\tcupcap: '\\u2A46',\n\tcupcup: '\\u2A4A',\n\tcupdot: '\\u228D',\n\tcupor: '\\u2A45',\n\tcups: '\\u222A\\uFE00',\n\tcurarr: '\\u21B7',\n\tcurarrm: '\\u293C',\n\tcurlyeqprec: '\\u22DE',\n\tcurlyeqsucc: '\\u22DF',\n\tcurlyvee: '\\u22CE',\n\tcurlywedge: '\\u22CF',\n\tcurren: '\\u00A4',\n\tcurvearrowleft: '\\u21B6',\n\tcurvearrowright: '\\u21B7',\n\tcuvee: '\\u22CE',\n\tcuwed: '\\u22CF',\n\tcwconint: '\\u2232',\n\tcwint: '\\u2231',\n\tcylcty: '\\u232D',\n\tDagger: '\\u2021',\n\tdagger: '\\u2020',\n\tdaleth: '\\u2138',\n\tDarr: '\\u21A1',\n\tdArr: '\\u21D3',\n\tdarr: '\\u2193',\n\tdash: '\\u2010',\n\tDashv: '\\u2AE4',\n\tdashv: '\\u22A3',\n\tdbkarow: '\\u290F',\n\tdblac: '\\u02DD',\n\tDcaron: '\\u010E',\n\tdcaron: '\\u010F',\n\tDcy: '\\u0414',\n\tdcy: '\\u0434',\n\tDD: '\\u2145',\n\tdd: '\\u2146',\n\tddagger: '\\u2021',\n\tddarr: '\\u21CA',\n\tDDotrahd: '\\u2911',\n\tddotseq: '\\u2A77',\n\tdeg: '\\u00B0',\n\tDel: '\\u2207',\n\tDelta: '\\u0394',\n\tdelta: '\\u03B4',\n\tdemptyv: '\\u29B1',\n\tdfisht: '\\u297F',\n\tDfr: '\\uD835\\uDD07',\n\tdfr: '\\uD835\\uDD21',\n\tdHar: '\\u2965',\n\tdharl: '\\u21C3',\n\tdharr: '\\u21C2',\n\tDiacriticalAcute: '\\u00B4',\n\tDiacriticalDot: '\\u02D9',\n\tDiacriticalDoubleAcute: '\\u02DD',\n\tDiacriticalGrave: '\\u0060',\n\tDiacriticalTilde: '\\u02DC',\n\tdiam: '\\u22C4',\n\tDiamond: '\\u22C4',\n\tdiamond: '\\u22C4',\n\tdiamondsuit: '\\u2666',\n\tdiams: '\\u2666',\n\tdie: '\\u00A8',\n\tDifferentialD: '\\u2146',\n\tdigamma: '\\u03DD',\n\tdisin: '\\u22F2',\n\tdiv: '\\u00F7',\n\tdivide: '\\u00F7',\n\tdivideontimes: '\\u22C7',\n\tdivonx: '\\u22C7',\n\tDJcy: '\\u0402',\n\tdjcy: '\\u0452',\n\tdlcorn: '\\u231E',\n\tdlcrop: '\\u230D',\n\tdollar: '\\u0024',\n\tDopf: '\\uD835\\uDD3B',\n\tdopf: '\\uD835\\uDD55',\n\tDot: '\\u00A8',\n\tdot: '\\u02D9',\n\tDotDot: '\\u20DC',\n\tdoteq: '\\u2250',\n\tdoteqdot: '\\u2251',\n\tDotEqual: '\\u2250',\n\tdotminus: '\\u2238',\n\tdotplus: '\\u2214',\n\tdotsquare: '\\u22A1',\n\tdoublebarwedge: '\\u2306',\n\tDoubleContourIntegral: '\\u222F',\n\tDoubleDot: '\\u00A8',\n\tDoubleDownArrow: '\\u21D3',\n\tDoubleLeftArrow: '\\u21D0',\n\tDoubleLeftRightArrow: '\\u21D4',\n\tDoubleLeftTee: '\\u2AE4',\n\tDoubleLongLeftArrow: '\\u27F8',\n\tDoubleLongLeftRightArrow: '\\u27FA',\n\tDoubleLongRightArrow: '\\u27F9',\n\tDoubleRightArrow: '\\u21D2',\n\tDoubleRightTee: '\\u22A8',\n\tDoubleUpArrow: '\\u21D1',\n\tDoubleUpDownArrow: '\\u21D5',\n\tDoubleVerticalBar: '\\u2225',\n\tDownArrow: '\\u2193',\n\tDownarrow: '\\u21D3',\n\tdownarrow: '\\u2193',\n\tDownArrowBar: '\\u2913',\n\tDownArrowUpArrow: '\\u21F5',\n\tDownBreve: '\\u0311',\n\tdowndownarrows: '\\u21CA',\n\tdownharpoonleft: '\\u21C3',\n\tdownharpoonright: '\\u21C2',\n\tDownLeftRightVector: '\\u2950',\n\tDownLeftTeeVector: '\\u295E',\n\tDownLeftVector: '\\u21BD',\n\tDownLeftVectorBar: '\\u2956',\n\tDownRightTeeVector: '\\u295F',\n\tDownRightVector: '\\u21C1',\n\tDownRightVectorBar: '\\u2957',\n\tDownTee: '\\u22A4',\n\tDownTeeArrow: '\\u21A7',\n\tdrbkarow: '\\u2910',\n\tdrcorn: '\\u231F',\n\tdrcrop: '\\u230C',\n\tDscr: '\\uD835\\uDC9F',\n\tdscr: '\\uD835\\uDCB9',\n\tDScy: '\\u0405',\n\tdscy: '\\u0455',\n\tdsol: '\\u29F6',\n\tDstrok: '\\u0110',\n\tdstrok: '\\u0111',\n\tdtdot: '\\u22F1',\n\tdtri: '\\u25BF',\n\tdtrif: '\\u25BE',\n\tduarr: '\\u21F5',\n\tduhar: '\\u296F',\n\tdwangle: '\\u29A6',\n\tDZcy: '\\u040F',\n\tdzcy: '\\u045F',\n\tdzigrarr: '\\u27FF',\n\tEacute: '\\u00C9',\n\teacute: '\\u00E9',\n\teaster: '\\u2A6E',\n\tEcaron: '\\u011A',\n\tecaron: '\\u011B',\n\tecir: '\\u2256',\n\tEcirc: '\\u00CA',\n\tecirc: '\\u00EA',\n\tecolon: '\\u2255',\n\tEcy: '\\u042D',\n\tecy: '\\u044D',\n\teDDot: '\\u2A77',\n\tEdot: '\\u0116',\n\teDot: '\\u2251',\n\tedot: '\\u0117',\n\tee: '\\u2147',\n\tefDot: '\\u2252',\n\tEfr: '\\uD835\\uDD08',\n\tefr: '\\uD835\\uDD22',\n\teg: '\\u2A9A',\n\tEgrave: '\\u00C8',\n\tegrave: '\\u00E8',\n\tegs: '\\u2A96',\n\tegsdot: '\\u2A98',\n\tel: '\\u2A99',\n\tElement: '\\u2208',\n\telinters: '\\u23E7',\n\tell: '\\u2113',\n\tels: '\\u2A95',\n\telsdot: '\\u2A97',\n\tEmacr: '\\u0112',\n\temacr: '\\u0113',\n\tempty: '\\u2205',\n\temptyset: '\\u2205',\n\tEmptySmallSquare: '\\u25FB',\n\temptyv: '\\u2205',\n\tEmptyVerySmallSquare: '\\u25AB',\n\temsp: '\\u2003',\n\temsp13: '\\u2004',\n\temsp14: '\\u2005',\n\tENG: '\\u014A',\n\teng: '\\u014B',\n\tensp: '\\u2002',\n\tEogon: '\\u0118',\n\teogon: '\\u0119',\n\tEopf: '\\uD835\\uDD3C',\n\teopf: '\\uD835\\uDD56',\n\tepar: '\\u22D5',\n\teparsl: '\\u29E3',\n\teplus: '\\u2A71',\n\tepsi: '\\u03B5',\n\tEpsilon: '\\u0395',\n\tepsilon: '\\u03B5',\n\tepsiv: '\\u03F5',\n\teqcirc: '\\u2256',\n\teqcolon: '\\u2255',\n\teqsim: '\\u2242',\n\teqslantgtr: '\\u2A96',\n\teqslantless: '\\u2A95',\n\tEqual: '\\u2A75',\n\tequals: '\\u003D',\n\tEqualTilde: '\\u2242',\n\tequest: '\\u225F',\n\tEquilibrium: '\\u21CC',\n\tequiv: '\\u2261',\n\tequivDD: '\\u2A78',\n\teqvparsl: '\\u29E5',\n\terarr: '\\u2971',\n\terDot: '\\u2253',\n\tEscr: '\\u2130',\n\tescr: '\\u212F',\n\tesdot: '\\u2250',\n\tEsim: '\\u2A73',\n\tesim: '\\u2242',\n\tEta: '\\u0397',\n\teta: '\\u03B7',\n\tETH: '\\u00D0',\n\teth: '\\u00F0',\n\tEuml: '\\u00CB',\n\teuml: '\\u00EB',\n\teuro: '\\u20AC',\n\texcl: '\\u0021',\n\texist: '\\u2203',\n\tExists: '\\u2203',\n\texpectation: '\\u2130',\n\tExponentialE: '\\u2147',\n\texponentiale: '\\u2147',\n\tfallingdotseq: '\\u2252',\n\tFcy: '\\u0424',\n\tfcy: '\\u0444',\n\tfemale: '\\u2640',\n\tffilig: '\\uFB03',\n\tfflig: '\\uFB00',\n\tffllig: '\\uFB04',\n\tFfr: '\\uD835\\uDD09',\n\tffr: '\\uD835\\uDD23',\n\tfilig: '\\uFB01',\n\tFilledSmallSquare: '\\u25FC',\n\tFilledVerySmallSquare: '\\u25AA',\n\tfjlig: '\\u0066\\u006A',\n\tflat: '\\u266D',\n\tfllig: '\\uFB02',\n\tfltns: '\\u25B1',\n\tfnof: '\\u0192',\n\tFopf: '\\uD835\\uDD3D',\n\tfopf: '\\uD835\\uDD57',\n\tForAll: '\\u2200',\n\tforall: '\\u2200',\n\tfork: '\\u22D4',\n\tforkv: '\\u2AD9',\n\tFouriertrf: '\\u2131',\n\tfpartint: '\\u2A0D',\n\tfrac12: '\\u00BD',\n\tfrac13: '\\u2153',\n\tfrac14: '\\u00BC',\n\tfrac15: '\\u2155',\n\tfrac16: '\\u2159',\n\tfrac18: '\\u215B',\n\tfrac23: '\\u2154',\n\tfrac25: '\\u2156',\n\tfrac34: '\\u00BE',\n\tfrac35: '\\u2157',\n\tfrac38: '\\u215C',\n\tfrac45: '\\u2158',\n\tfrac56: '\\u215A',\n\tfrac58: '\\u215D',\n\tfrac78: '\\u215E',\n\tfrasl: '\\u2044',\n\tfrown: '\\u2322',\n\tFscr: '\\u2131',\n\tfscr: '\\uD835\\uDCBB',\n\tgacute: '\\u01F5',\n\tGamma: '\\u0393',\n\tgamma: '\\u03B3',\n\tGammad: '\\u03DC',\n\tgammad: '\\u03DD',\n\tgap: '\\u2A86',\n\tGbreve: '\\u011E',\n\tgbreve: '\\u011F',\n\tGcedil: '\\u0122',\n\tGcirc: '\\u011C',\n\tgcirc: '\\u011D',\n\tGcy: '\\u0413',\n\tgcy: '\\u0433',\n\tGdot: '\\u0120',\n\tgdot: '\\u0121',\n\tgE: '\\u2267',\n\tge: '\\u2265',\n\tgEl: '\\u2A8C',\n\tgel: '\\u22DB',\n\tgeq: '\\u2265',\n\tgeqq: '\\u2267',\n\tgeqslant: '\\u2A7E',\n\tges: '\\u2A7E',\n\tgescc: '\\u2AA9',\n\tgesdot: '\\u2A80',\n\tgesdoto: '\\u2A82',\n\tgesdotol: '\\u2A84',\n\tgesl: '\\u22DB\\uFE00',\n\tgesles: '\\u2A94',\n\tGfr: '\\uD835\\uDD0A',\n\tgfr: '\\uD835\\uDD24',\n\tGg: '\\u22D9',\n\tgg: '\\u226B',\n\tggg: '\\u22D9',\n\tgimel: '\\u2137',\n\tGJcy: '\\u0403',\n\tgjcy: '\\u0453',\n\tgl: '\\u2277',\n\tgla: '\\u2AA5',\n\tglE: '\\u2A92',\n\tglj: '\\u2AA4',\n\tgnap: '\\u2A8A',\n\tgnapprox: '\\u2A8A',\n\tgnE: '\\u2269',\n\tgne: '\\u2A88',\n\tgneq: '\\u2A88',\n\tgneqq: '\\u2269',\n\tgnsim: '\\u22E7',\n\tGopf: '\\uD835\\uDD3E',\n\tgopf: '\\uD835\\uDD58',\n\tgrave: '\\u0060',\n\tGreaterEqual: '\\u2265',\n\tGreaterEqualLess: '\\u22DB',\n\tGreaterFullEqual: '\\u2267',\n\tGreaterGreater: '\\u2AA2',\n\tGreaterLess: '\\u2277',\n\tGreaterSlantEqual: '\\u2A7E',\n\tGreaterTilde: '\\u2273',\n\tGscr: '\\uD835\\uDCA2',\n\tgscr: '\\u210A',\n\tgsim: '\\u2273',\n\tgsime: '\\u2A8E',\n\tgsiml: '\\u2A90',\n\tGt: '\\u226B',\n\tGT: '\\u003E',\n\tgt: '\\u003E',\n\tgtcc: '\\u2AA7',\n\tgtcir: '\\u2A7A',\n\tgtdot: '\\u22D7',\n\tgtlPar: '\\u2995',\n\tgtquest: '\\u2A7C',\n\tgtrapprox: '\\u2A86',\n\tgtrarr: '\\u2978',\n\tgtrdot: '\\u22D7',\n\tgtreqless: '\\u22DB',\n\tgtreqqless: '\\u2A8C',\n\tgtrless: '\\u2277',\n\tgtrsim: '\\u2273',\n\tgvertneqq: '\\u2269\\uFE00',\n\tgvnE: '\\u2269\\uFE00',\n\tHacek: '\\u02C7',\n\thairsp: '\\u200A',\n\thalf: '\\u00BD',\n\thamilt: '\\u210B',\n\tHARDcy: '\\u042A',\n\thardcy: '\\u044A',\n\thArr: '\\u21D4',\n\tharr: '\\u2194',\n\tharrcir: '\\u2948',\n\tharrw: '\\u21AD',\n\tHat: '\\u005E',\n\thbar: '\\u210F',\n\tHcirc: '\\u0124',\n\thcirc: '\\u0125',\n\thearts: '\\u2665',\n\theartsuit: '\\u2665',\n\thellip: '\\u2026',\n\thercon: '\\u22B9',\n\tHfr: '\\u210C',\n\thfr: '\\uD835\\uDD25',\n\tHilbertSpace: '\\u210B',\n\thksearow: '\\u2925',\n\thkswarow: '\\u2926',\n\thoarr: '\\u21FF',\n\thomtht: '\\u223B',\n\thookleftarrow: '\\u21A9',\n\thookrightarrow: '\\u21AA',\n\tHopf: '\\u210D',\n\thopf: '\\uD835\\uDD59',\n\thorbar: '\\u2015',\n\tHorizontalLine: '\\u2500',\n\tHscr: '\\u210B',\n\thscr: '\\uD835\\uDCBD',\n\thslash: '\\u210F',\n\tHstrok: '\\u0126',\n\thstrok: '\\u0127',\n\tHumpDownHump: '\\u224E',\n\tHumpEqual: '\\u224F',\n\thybull: '\\u2043',\n\thyphen: '\\u2010',\n\tIacute: '\\u00CD',\n\tiacute: '\\u00ED',\n\tic: '\\u2063',\n\tIcirc: '\\u00CE',\n\ticirc: '\\u00EE',\n\tIcy: '\\u0418',\n\ticy: '\\u0438',\n\tIdot: '\\u0130',\n\tIEcy: '\\u0415',\n\tiecy: '\\u0435',\n\tiexcl: '\\u00A1',\n\tiff: '\\u21D4',\n\tIfr: '\\u2111',\n\tifr: '\\uD835\\uDD26',\n\tIgrave: '\\u00CC',\n\tigrave: '\\u00EC',\n\tii: '\\u2148',\n\tiiiint: '\\u2A0C',\n\tiiint: '\\u222D',\n\tiinfin: '\\u29DC',\n\tiiota: '\\u2129',\n\tIJlig: '\\u0132',\n\tijlig: '\\u0133',\n\tIm: '\\u2111',\n\tImacr: '\\u012A',\n\timacr: '\\u012B',\n\timage: '\\u2111',\n\tImaginaryI: '\\u2148',\n\timagline: '\\u2110',\n\timagpart: '\\u2111',\n\timath: '\\u0131',\n\timof: '\\u22B7',\n\timped: '\\u01B5',\n\tImplies: '\\u21D2',\n\tin: '\\u2208',\n\tincare: '\\u2105',\n\tinfin: '\\u221E',\n\tinfintie: '\\u29DD',\n\tinodot: '\\u0131',\n\tInt: '\\u222C',\n\tint: '\\u222B',\n\tintcal: '\\u22BA',\n\tintegers: '\\u2124',\n\tIntegral: '\\u222B',\n\tintercal: '\\u22BA',\n\tIntersection: '\\u22C2',\n\tintlarhk: '\\u2A17',\n\tintprod: '\\u2A3C',\n\tInvisibleComma: '\\u2063',\n\tInvisibleTimes: '\\u2062',\n\tIOcy: '\\u0401',\n\tiocy: '\\u0451',\n\tIogon: '\\u012E',\n\tiogon: '\\u012F',\n\tIopf: '\\uD835\\uDD40',\n\tiopf: '\\uD835\\uDD5A',\n\tIota: '\\u0399',\n\tiota: '\\u03B9',\n\tiprod: '\\u2A3C',\n\tiquest: '\\u00BF',\n\tIscr: '\\u2110',\n\tiscr: '\\uD835\\uDCBE',\n\tisin: '\\u2208',\n\tisindot: '\\u22F5',\n\tisinE: '\\u22F9',\n\tisins: '\\u22F4',\n\tisinsv: '\\u22F3',\n\tisinv: '\\u2208',\n\tit: '\\u2062',\n\tItilde: '\\u0128',\n\titilde: '\\u0129',\n\tIukcy: '\\u0406',\n\tiukcy: '\\u0456',\n\tIuml: '\\u00CF',\n\tiuml: '\\u00EF',\n\tJcirc: '\\u0134',\n\tjcirc: '\\u0135',\n\tJcy: '\\u0419',\n\tjcy: '\\u0439',\n\tJfr: '\\uD835\\uDD0D',\n\tjfr: '\\uD835\\uDD27',\n\tjmath: '\\u0237',\n\tJopf: '\\uD835\\uDD41',\n\tjopf: '\\uD835\\uDD5B',\n\tJscr: '\\uD835\\uDCA5',\n\tjscr: '\\uD835\\uDCBF',\n\tJsercy: '\\u0408',\n\tjsercy: '\\u0458',\n\tJukcy: '\\u0404',\n\tjukcy: '\\u0454',\n\tKappa: '\\u039A',\n\tkappa: '\\u03BA',\n\tkappav: '\\u03F0',\n\tKcedil: '\\u0136',\n\tkcedil: '\\u0137',\n\tKcy: '\\u041A',\n\tkcy: '\\u043A',\n\tKfr: '\\uD835\\uDD0E',\n\tkfr: '\\uD835\\uDD28',\n\tkgreen: '\\u0138',\n\tKHcy: '\\u0425',\n\tkhcy: '\\u0445',\n\tKJcy: '\\u040C',\n\tkjcy: '\\u045C',\n\tKopf: '\\uD835\\uDD42',\n\tkopf: '\\uD835\\uDD5C',\n\tKscr: '\\uD835\\uDCA6',\n\tkscr: '\\uD835\\uDCC0',\n\tlAarr: '\\u21DA',\n\tLacute: '\\u0139',\n\tlacute: '\\u013A',\n\tlaemptyv: '\\u29B4',\n\tlagran: '\\u2112',\n\tLambda: '\\u039B',\n\tlambda: '\\u03BB',\n\tLang: '\\u27EA',\n\tlang: '\\u27E8',\n\tlangd: '\\u2991',\n\tlangle: '\\u27E8',\n\tlap: '\\u2A85',\n\tLaplacetrf: '\\u2112',\n\tlaquo: '\\u00AB',\n\tLarr: '\\u219E',\n\tlArr: '\\u21D0',\n\tlarr: '\\u2190',\n\tlarrb: '\\u21E4',\n\tlarrbfs: '\\u291F',\n\tlarrfs: '\\u291D',\n\tlarrhk: '\\u21A9',\n\tlarrlp: '\\u21AB',\n\tlarrpl: '\\u2939',\n\tlarrsim: '\\u2973',\n\tlarrtl: '\\u21A2',\n\tlat: '\\u2AAB',\n\tlAtail: '\\u291B',\n\tlatail: '\\u2919',\n\tlate: '\\u2AAD',\n\tlates: '\\u2AAD\\uFE00',\n\tlBarr: '\\u290E',\n\tlbarr: '\\u290C',\n\tlbbrk: '\\u2772',\n\tlbrace: '\\u007B',\n\tlbrack: '\\u005B',\n\tlbrke: '\\u298B',\n\tlbrksld: '\\u298F',\n\tlbrkslu: '\\u298D',\n\tLcaron: '\\u013D',\n\tlcaron: '\\u013E',\n\tLcedil: '\\u013B',\n\tlcedil: '\\u013C',\n\tlceil: '\\u2308',\n\tlcub: '\\u007B',\n\tLcy: '\\u041B',\n\tlcy: '\\u043B',\n\tldca: '\\u2936',\n\tldquo: '\\u201C',\n\tldquor: '\\u201E',\n\tldrdhar: '\\u2967',\n\tldrushar: '\\u294B',\n\tldsh: '\\u21B2',\n\tlE: '\\u2266',\n\tle: '\\u2264',\n\tLeftAngleBracket: '\\u27E8',\n\tLeftArrow: '\\u2190',\n\tLeftarrow: '\\u21D0',\n\tleftarrow: '\\u2190',\n\tLeftArrowBar: '\\u21E4',\n\tLeftArrowRightArrow: '\\u21C6',\n\tleftarrowtail: '\\u21A2',\n\tLeftCeiling: '\\u2308',\n\tLeftDoubleBracket: '\\u27E6',\n\tLeftDownTeeVector: '\\u2961',\n\tLeftDownVector: '\\u21C3',\n\tLeftDownVectorBar: '\\u2959',\n\tLeftFloor: '\\u230A',\n\tleftharpoondown: '\\u21BD',\n\tleftharpoonup: '\\u21BC',\n\tleftleftarrows: '\\u21C7',\n\tLeftRightArrow: '\\u2194',\n\tLeftrightarrow: '\\u21D4',\n\tleftrightarrow: '\\u2194',\n\tleftrightarrows: '\\u21C6',\n\tleftrightharpoons: '\\u21CB',\n\tleftrightsquigarrow: '\\u21AD',\n\tLeftRightVector: '\\u294E',\n\tLeftTee: '\\u22A3',\n\tLeftTeeArrow: '\\u21A4',\n\tLeftTeeVector: '\\u295A',\n\tleftthreetimes: '\\u22CB',\n\tLeftTriangle: '\\u22B2',\n\tLeftTriangleBar: '\\u29CF',\n\tLeftTriangleEqual: '\\u22B4',\n\tLeftUpDownVector: '\\u2951',\n\tLeftUpTeeVector: '\\u2960',\n\tLeftUpVector: '\\u21BF',\n\tLeftUpVectorBar: '\\u2958',\n\tLeftVector: '\\u21BC',\n\tLeftVectorBar: '\\u2952',\n\tlEg: '\\u2A8B',\n\tleg: '\\u22DA',\n\tleq: '\\u2264',\n\tleqq: '\\u2266',\n\tleqslant: '\\u2A7D',\n\tles: '\\u2A7D',\n\tlescc: '\\u2AA8',\n\tlesdot: '\\u2A7F',\n\tlesdoto: '\\u2A81',\n\tlesdotor: '\\u2A83',\n\tlesg: '\\u22DA\\uFE00',\n\tlesges: '\\u2A93',\n\tlessapprox: '\\u2A85',\n\tlessdot: '\\u22D6',\n\tlesseqgtr: '\\u22DA',\n\tlesseqqgtr: '\\u2A8B',\n\tLessEqualGreater: '\\u22DA',\n\tLessFullEqual: '\\u2266',\n\tLessGreater: '\\u2276',\n\tlessgtr: '\\u2276',\n\tLessLess: '\\u2AA1',\n\tlesssim: '\\u2272',\n\tLessSlantEqual: '\\u2A7D',\n\tLessTilde: '\\u2272',\n\tlfisht: '\\u297C',\n\tlfloor: '\\u230A',\n\tLfr: '\\uD835\\uDD0F',\n\tlfr: '\\uD835\\uDD29',\n\tlg: '\\u2276',\n\tlgE: '\\u2A91',\n\tlHar: '\\u2962',\n\tlhard: '\\u21BD',\n\tlharu: '\\u21BC',\n\tlharul: '\\u296A',\n\tlhblk: '\\u2584',\n\tLJcy: '\\u0409',\n\tljcy: '\\u0459',\n\tLl: '\\u22D8',\n\tll: '\\u226A',\n\tllarr: '\\u21C7',\n\tllcorner: '\\u231E',\n\tLleftarrow: '\\u21DA',\n\tllhard: '\\u296B',\n\tlltri: '\\u25FA',\n\tLmidot: '\\u013F',\n\tlmidot: '\\u0140',\n\tlmoust: '\\u23B0',\n\tlmoustache: '\\u23B0',\n\tlnap: '\\u2A89',\n\tlnapprox: '\\u2A89',\n\tlnE: '\\u2268',\n\tlne: '\\u2A87',\n\tlneq: '\\u2A87',\n\tlneqq: '\\u2268',\n\tlnsim: '\\u22E6',\n\tloang: '\\u27EC',\n\tloarr: '\\u21FD',\n\tlobrk: '\\u27E6',\n\tLongLeftArrow: '\\u27F5',\n\tLongleftarrow: '\\u27F8',\n\tlongleftarrow: '\\u27F5',\n\tLongLeftRightArrow: '\\u27F7',\n\tLongleftrightarrow: '\\u27FA',\n\tlongleftrightarrow: '\\u27F7',\n\tlongmapsto: '\\u27FC',\n\tLongRightArrow: '\\u27F6',\n\tLongrightarrow: '\\u27F9',\n\tlongrightarrow: '\\u27F6',\n\tlooparrowleft: '\\u21AB',\n\tlooparrowright: '\\u21AC',\n\tlopar: '\\u2985',\n\tLopf: '\\uD835\\uDD43',\n\tlopf: '\\uD835\\uDD5D',\n\tloplus: '\\u2A2D',\n\tlotimes: '\\u2A34',\n\tlowast: '\\u2217',\n\tlowbar: '\\u005F',\n\tLowerLeftArrow: '\\u2199',\n\tLowerRightArrow: '\\u2198',\n\tloz: '\\u25CA',\n\tlozenge: '\\u25CA',\n\tlozf: '\\u29EB',\n\tlpar: '\\u0028',\n\tlparlt: '\\u2993',\n\tlrarr: '\\u21C6',\n\tlrcorner: '\\u231F',\n\tlrhar: '\\u21CB',\n\tlrhard: '\\u296D',\n\tlrm: '\\u200E',\n\tlrtri: '\\u22BF',\n\tlsaquo: '\\u2039',\n\tLscr: '\\u2112',\n\tlscr: '\\uD835\\uDCC1',\n\tLsh: '\\u21B0',\n\tlsh: '\\u21B0',\n\tlsim: '\\u2272',\n\tlsime: '\\u2A8D',\n\tlsimg: '\\u2A8F',\n\tlsqb: '\\u005B',\n\tlsquo: '\\u2018',\n\tlsquor: '\\u201A',\n\tLstrok: '\\u0141',\n\tlstrok: '\\u0142',\n\tLt: '\\u226A',\n\tLT: '\\u003C',\n\tlt: '\\u003C',\n\tltcc: '\\u2AA6',\n\tltcir: '\\u2A79',\n\tltdot: '\\u22D6',\n\tlthree: '\\u22CB',\n\tltimes: '\\u22C9',\n\tltlarr: '\\u2976',\n\tltquest: '\\u2A7B',\n\tltri: '\\u25C3',\n\tltrie: '\\u22B4',\n\tltrif: '\\u25C2',\n\tltrPar: '\\u2996',\n\tlurdshar: '\\u294A',\n\tluruhar: '\\u2966',\n\tlvertneqq: '\\u2268\\uFE00',\n\tlvnE: '\\u2268\\uFE00',\n\tmacr: '\\u00AF',\n\tmale: '\\u2642',\n\tmalt: '\\u2720',\n\tmaltese: '\\u2720',\n\tMap: '\\u2905',\n\tmap: '\\u21A6',\n\tmapsto: '\\u21A6',\n\tmapstodown: '\\u21A7',\n\tmapstoleft: '\\u21A4',\n\tmapstoup: '\\u21A5',\n\tmarker: '\\u25AE',\n\tmcomma: '\\u2A29',\n\tMcy: '\\u041C',\n\tmcy: '\\u043C',\n\tmdash: '\\u2014',\n\tmDDot: '\\u223A',\n\tmeasuredangle: '\\u2221',\n\tMediumSpace: '\\u205F',\n\tMellintrf: '\\u2133',\n\tMfr: '\\uD835\\uDD10',\n\tmfr: '\\uD835\\uDD2A',\n\tmho: '\\u2127',\n\tmicro: '\\u00B5',\n\tmid: '\\u2223',\n\tmidast: '\\u002A',\n\tmidcir: '\\u2AF0',\n\tmiddot: '\\u00B7',\n\tminus: '\\u2212',\n\tminusb: '\\u229F',\n\tminusd: '\\u2238',\n\tminusdu: '\\u2A2A',\n\tMinusPlus: '\\u2213',\n\tmlcp: '\\u2ADB',\n\tmldr: '\\u2026',\n\tmnplus: '\\u2213',\n\tmodels: '\\u22A7',\n\tMopf: '\\uD835\\uDD44',\n\tmopf: '\\uD835\\uDD5E',\n\tmp: '\\u2213',\n\tMscr: '\\u2133',\n\tmscr: '\\uD835\\uDCC2',\n\tmstpos: '\\u223E',\n\tMu: '\\u039C',\n\tmu: '\\u03BC',\n\tmultimap: '\\u22B8',\n\tmumap: '\\u22B8',\n\tnabla: '\\u2207',\n\tNacute: '\\u0143',\n\tnacute: '\\u0144',\n\tnang: '\\u2220\\u20D2',\n\tnap: '\\u2249',\n\tnapE: '\\u2A70\\u0338',\n\tnapid: '\\u224B\\u0338',\n\tnapos: '\\u0149',\n\tnapprox: '\\u2249',\n\tnatur: '\\u266E',\n\tnatural: '\\u266E',\n\tnaturals: '\\u2115',\n\tnbsp: '\\u00A0',\n\tnbump: '\\u224E\\u0338',\n\tnbumpe: '\\u224F\\u0338',\n\tncap: '\\u2A43',\n\tNcaron: '\\u0147',\n\tncaron: '\\u0148',\n\tNcedil: '\\u0145',\n\tncedil: '\\u0146',\n\tncong: '\\u2247',\n\tncongdot: '\\u2A6D\\u0338',\n\tncup: '\\u2A42',\n\tNcy: '\\u041D',\n\tncy: '\\u043D',\n\tndash: '\\u2013',\n\tne: '\\u2260',\n\tnearhk: '\\u2924',\n\tneArr: '\\u21D7',\n\tnearr: '\\u2197',\n\tnearrow: '\\u2197',\n\tnedot: '\\u2250\\u0338',\n\tNegativeMediumSpace: '\\u200B',\n\tNegativeThickSpace: '\\u200B',\n\tNegativeThinSpace: '\\u200B',\n\tNegativeVeryThinSpace: '\\u200B',\n\tnequiv: '\\u2262',\n\tnesear: '\\u2928',\n\tnesim: '\\u2242\\u0338',\n\tNestedGreaterGreater: '\\u226B',\n\tNestedLessLess: '\\u226A',\n\tNewLine: '\\u000A',\n\tnexist: '\\u2204',\n\tnexists: '\\u2204',\n\tNfr: '\\uD835\\uDD11',\n\tnfr: '\\uD835\\uDD2B',\n\tngE: '\\u2267\\u0338',\n\tnge: '\\u2271',\n\tngeq: '\\u2271',\n\tngeqq: '\\u2267\\u0338',\n\tngeqslant: '\\u2A7E\\u0338',\n\tnges: '\\u2A7E\\u0338',\n\tnGg: '\\u22D9\\u0338',\n\tngsim: '\\u2275',\n\tnGt: '\\u226B\\u20D2',\n\tngt: '\\u226F',\n\tngtr: '\\u226F',\n\tnGtv: '\\u226B\\u0338',\n\tnhArr: '\\u21CE',\n\tnharr: '\\u21AE',\n\tnhpar: '\\u2AF2',\n\tni: '\\u220B',\n\tnis: '\\u22FC',\n\tnisd: '\\u22FA',\n\tniv: '\\u220B',\n\tNJcy: '\\u040A',\n\tnjcy: '\\u045A',\n\tnlArr: '\\u21CD',\n\tnlarr: '\\u219A',\n\tnldr: '\\u2025',\n\tnlE: '\\u2266\\u0338',\n\tnle: '\\u2270',\n\tnLeftarrow: '\\u21CD',\n\tnleftarrow: '\\u219A',\n\tnLeftrightarrow: '\\u21CE',\n\tnleftrightarrow: '\\u21AE',\n\tnleq: '\\u2270',\n\tnleqq: '\\u2266\\u0338',\n\tnleqslant: '\\u2A7D\\u0338',\n\tnles: '\\u2A7D\\u0338',\n\tnless: '\\u226E',\n\tnLl: '\\u22D8\\u0338',\n\tnlsim: '\\u2274',\n\tnLt: '\\u226A\\u20D2',\n\tnlt: '\\u226E',\n\tnltri: '\\u22EA',\n\tnltrie: '\\u22EC',\n\tnLtv: '\\u226A\\u0338',\n\tnmid: '\\u2224',\n\tNoBreak: '\\u2060',\n\tNonBreakingSpace: '\\u00A0',\n\tNopf: '\\u2115',\n\tnopf: '\\uD835\\uDD5F',\n\tNot: '\\u2AEC',\n\tnot: '\\u00AC',\n\tNotCongruent: '\\u2262',\n\tNotCupCap: '\\u226D',\n\tNotDoubleVerticalBar: '\\u2226',\n\tNotElement: '\\u2209',\n\tNotEqual: '\\u2260',\n\tNotEqualTilde: '\\u2242\\u0338',\n\tNotExists: '\\u2204',\n\tNotGreater: '\\u226F',\n\tNotGreaterEqual: '\\u2271',\n\tNotGreaterFullEqual: '\\u2267\\u0338',\n\tNotGreaterGreater: '\\u226B\\u0338',\n\tNotGreaterLess: '\\u2279',\n\tNotGreaterSlantEqual: '\\u2A7E\\u0338',\n\tNotGreaterTilde: '\\u2275',\n\tNotHumpDownHump: '\\u224E\\u0338',\n\tNotHumpEqual: '\\u224F\\u0338',\n\tnotin: '\\u2209',\n\tnotindot: '\\u22F5\\u0338',\n\tnotinE: '\\u22F9\\u0338',\n\tnotinva: '\\u2209',\n\tnotinvb: '\\u22F7',\n\tnotinvc: '\\u22F6',\n\tNotLeftTriangle: '\\u22EA',\n\tNotLeftTriangleBar: '\\u29CF\\u0338',\n\tNotLeftTriangleEqual: '\\u22EC',\n\tNotLess: '\\u226E',\n\tNotLessEqual: '\\u2270',\n\tNotLessGreater: '\\u2278',\n\tNotLessLess: '\\u226A\\u0338',\n\tNotLessSlantEqual: '\\u2A7D\\u0338',\n\tNotLessTilde: '\\u2274',\n\tNotNestedGreaterGreater: '\\u2AA2\\u0338',\n\tNotNestedLessLess: '\\u2AA1\\u0338',\n\tnotni: '\\u220C',\n\tnotniva: '\\u220C',\n\tnotnivb: '\\u22FE',\n\tnotnivc: '\\u22FD',\n\tNotPrecedes: '\\u2280',\n\tNotPrecedesEqual: '\\u2AAF\\u0338',\n\tNotPrecedesSlantEqual: '\\u22E0',\n\tNotReverseElement: '\\u220C',\n\tNotRightTriangle: '\\u22EB',\n\tNotRightTriangleBar: '\\u29D0\\u0338',\n\tNotRightTriangleEqual: '\\u22ED',\n\tNotSquareSubset: '\\u228F\\u0338',\n\tNotSquareSubsetEqual: '\\u22E2',\n\tNotSquareSuperset: '\\u2290\\u0338',\n\tNotSquareSupersetEqual: '\\u22E3',\n\tNotSubset: '\\u2282\\u20D2',\n\tNotSubsetEqual: '\\u2288',\n\tNotSucceeds: '\\u2281',\n\tNotSucceedsEqual: '\\u2AB0\\u0338',\n\tNotSucceedsSlantEqual: '\\u22E1',\n\tNotSucceedsTilde: '\\u227F\\u0338',\n\tNotSuperset: '\\u2283\\u20D2',\n\tNotSupersetEqual: '\\u2289',\n\tNotTilde: '\\u2241',\n\tNotTildeEqual: '\\u2244',\n\tNotTildeFullEqual: '\\u2247',\n\tNotTildeTilde: '\\u2249',\n\tNotVerticalBar: '\\u2224',\n\tnpar: '\\u2226',\n\tnparallel: '\\u2226',\n\tnparsl: '\\u2AFD\\u20E5',\n\tnpart: '\\u2202\\u0338',\n\tnpolint: '\\u2A14',\n\tnpr: '\\u2280',\n\tnprcue: '\\u22E0',\n\tnpre: '\\u2AAF\\u0338',\n\tnprec: '\\u2280',\n\tnpreceq: '\\u2AAF\\u0338',\n\tnrArr: '\\u21CF',\n\tnrarr: '\\u219B',\n\tnrarrc: '\\u2933\\u0338',\n\tnrarrw: '\\u219D\\u0338',\n\tnRightarrow: '\\u21CF',\n\tnrightarrow: '\\u219B',\n\tnrtri: '\\u22EB',\n\tnrtrie: '\\u22ED',\n\tnsc: '\\u2281',\n\tnsccue: '\\u22E1',\n\tnsce: '\\u2AB0\\u0338',\n\tNscr: '\\uD835\\uDCA9',\n\tnscr: '\\uD835\\uDCC3',\n\tnshortmid: '\\u2224',\n\tnshortparallel: '\\u2226',\n\tnsim: '\\u2241',\n\tnsime: '\\u2244',\n\tnsimeq: '\\u2244',\n\tnsmid: '\\u2224',\n\tnspar: '\\u2226',\n\tnsqsube: '\\u22E2',\n\tnsqsupe: '\\u22E3',\n\tnsub: '\\u2284',\n\tnsubE: '\\u2AC5\\u0338',\n\tnsube: '\\u2288',\n\tnsubset: '\\u2282\\u20D2',\n\tnsubseteq: '\\u2288',\n\tnsubseteqq: '\\u2AC5\\u0338',\n\tnsucc: '\\u2281',\n\tnsucceq: '\\u2AB0\\u0338',\n\tnsup: '\\u2285',\n\tnsupE: '\\u2AC6\\u0338',\n\tnsupe: '\\u2289',\n\tnsupset: '\\u2283\\u20D2',\n\tnsupseteq: '\\u2289',\n\tnsupseteqq: '\\u2AC6\\u0338',\n\tntgl: '\\u2279',\n\tNtilde: '\\u00D1',\n\tntilde: '\\u00F1',\n\tntlg: '\\u2278',\n\tntriangleleft: '\\u22EA',\n\tntrianglelefteq: '\\u22EC',\n\tntriangleright: '\\u22EB',\n\tntrianglerighteq: '\\u22ED',\n\tNu: '\\u039D',\n\tnu: '\\u03BD',\n\tnum: '\\u0023',\n\tnumero: '\\u2116',\n\tnumsp: '\\u2007',\n\tnvap: '\\u224D\\u20D2',\n\tnVDash: '\\u22AF',\n\tnVdash: '\\u22AE',\n\tnvDash: '\\u22AD',\n\tnvdash: '\\u22AC',\n\tnvge: '\\u2265\\u20D2',\n\tnvgt: '\\u003E\\u20D2',\n\tnvHarr: '\\u2904',\n\tnvinfin: '\\u29DE',\n\tnvlArr: '\\u2902',\n\tnvle: '\\u2264\\u20D2',\n\tnvlt: '\\u003C\\u20D2',\n\tnvltrie: '\\u22B4\\u20D2',\n\tnvrArr: '\\u2903',\n\tnvrtrie: '\\u22B5\\u20D2',\n\tnvsim: '\\u223C\\u20D2',\n\tnwarhk: '\\u2923',\n\tnwArr: '\\u21D6',\n\tnwarr: '\\u2196',\n\tnwarrow: '\\u2196',\n\tnwnear: '\\u2927',\n\tOacute: '\\u00D3',\n\toacute: '\\u00F3',\n\toast: '\\u229B',\n\tocir: '\\u229A',\n\tOcirc: '\\u00D4',\n\tocirc: '\\u00F4',\n\tOcy: '\\u041E',\n\tocy: '\\u043E',\n\todash: '\\u229D',\n\tOdblac: '\\u0150',\n\todblac: '\\u0151',\n\todiv: '\\u2A38',\n\todot: '\\u2299',\n\todsold: '\\u29BC',\n\tOElig: '\\u0152',\n\toelig: '\\u0153',\n\tofcir: '\\u29BF',\n\tOfr: '\\uD835\\uDD12',\n\tofr: '\\uD835\\uDD2C',\n\togon: '\\u02DB',\n\tOgrave: '\\u00D2',\n\tograve: '\\u00F2',\n\togt: '\\u29C1',\n\tohbar: '\\u29B5',\n\tohm: '\\u03A9',\n\toint: '\\u222E',\n\tolarr: '\\u21BA',\n\tolcir: '\\u29BE',\n\tolcross: '\\u29BB',\n\toline: '\\u203E',\n\tolt: '\\u29C0',\n\tOmacr: '\\u014C',\n\tomacr: '\\u014D',\n\tOmega: '\\u03A9',\n\tomega: '\\u03C9',\n\tOmicron: '\\u039F',\n\tomicron: '\\u03BF',\n\tomid: '\\u29B6',\n\tominus: '\\u2296',\n\tOopf: '\\uD835\\uDD46',\n\toopf: '\\uD835\\uDD60',\n\topar: '\\u29B7',\n\tOpenCurlyDoubleQuote: '\\u201C',\n\tOpenCurlyQuote: '\\u2018',\n\toperp: '\\u29B9',\n\toplus: '\\u2295',\n\tOr: '\\u2A54',\n\tor: '\\u2228',\n\torarr: '\\u21BB',\n\tord: '\\u2A5D',\n\torder: '\\u2134',\n\torderof: '\\u2134',\n\tordf: '\\u00AA',\n\tordm: '\\u00BA',\n\torigof: '\\u22B6',\n\toror: '\\u2A56',\n\torslope: '\\u2A57',\n\torv: '\\u2A5B',\n\toS: '\\u24C8',\n\tOscr: '\\uD835\\uDCAA',\n\toscr: '\\u2134',\n\tOslash: '\\u00D8',\n\toslash: '\\u00F8',\n\tosol: '\\u2298',\n\tOtilde: '\\u00D5',\n\totilde: '\\u00F5',\n\tOtimes: '\\u2A37',\n\totimes: '\\u2297',\n\totimesas: '\\u2A36',\n\tOuml: '\\u00D6',\n\touml: '\\u00F6',\n\tovbar: '\\u233D',\n\tOverBar: '\\u203E',\n\tOverBrace: '\\u23DE',\n\tOverBracket: '\\u23B4',\n\tOverParenthesis: '\\u23DC',\n\tpar: '\\u2225',\n\tpara: '\\u00B6',\n\tparallel: '\\u2225',\n\tparsim: '\\u2AF3',\n\tparsl: '\\u2AFD',\n\tpart: '\\u2202',\n\tPartialD: '\\u2202',\n\tPcy: '\\u041F',\n\tpcy: '\\u043F',\n\tpercnt: '\\u0025',\n\tperiod: '\\u002E',\n\tpermil: '\\u2030',\n\tperp: '\\u22A5',\n\tpertenk: '\\u2031',\n\tPfr: '\\uD835\\uDD13',\n\tpfr: '\\uD835\\uDD2D',\n\tPhi: '\\u03A6',\n\tphi: '\\u03C6',\n\tphiv: '\\u03D5',\n\tphmmat: '\\u2133',\n\tphone: '\\u260E',\n\tPi: '\\u03A0',\n\tpi: '\\u03C0',\n\tpitchfork: '\\u22D4',\n\tpiv: '\\u03D6',\n\tplanck: '\\u210F',\n\tplanckh: '\\u210E',\n\tplankv: '\\u210F',\n\tplus: '\\u002B',\n\tplusacir: '\\u2A23',\n\tplusb: '\\u229E',\n\tpluscir: '\\u2A22',\n\tplusdo: '\\u2214',\n\tplusdu: '\\u2A25',\n\tpluse: '\\u2A72',\n\tPlusMinus: '\\u00B1',\n\tplusmn: '\\u00B1',\n\tplussim: '\\u2A26',\n\tplustwo: '\\u2A27',\n\tpm: '\\u00B1',\n\tPoincareplane: '\\u210C',\n\tpointint: '\\u2A15',\n\tPopf: '\\u2119',\n\tpopf: '\\uD835\\uDD61',\n\tpound: '\\u00A3',\n\tPr: '\\u2ABB',\n\tpr: '\\u227A',\n\tprap: '\\u2AB7',\n\tprcue: '\\u227C',\n\tprE: '\\u2AB3',\n\tpre: '\\u2AAF',\n\tprec: '\\u227A',\n\tprecapprox: '\\u2AB7',\n\tpreccurlyeq: '\\u227C',\n\tPrecedes: '\\u227A',\n\tPrecedesEqual: '\\u2AAF',\n\tPrecedesSlantEqual: '\\u227C',\n\tPrecedesTilde: '\\u227E',\n\tpreceq: '\\u2AAF',\n\tprecnapprox: '\\u2AB9',\n\tprecneqq: '\\u2AB5',\n\tprecnsim: '\\u22E8',\n\tprecsim: '\\u227E',\n\tPrime: '\\u2033',\n\tprime: '\\u2032',\n\tprimes: '\\u2119',\n\tprnap: '\\u2AB9',\n\tprnE: '\\u2AB5',\n\tprnsim: '\\u22E8',\n\tprod: '\\u220F',\n\tProduct: '\\u220F',\n\tprofalar: '\\u232E',\n\tprofline: '\\u2312',\n\tprofsurf: '\\u2313',\n\tprop: '\\u221D',\n\tProportion: '\\u2237',\n\tProportional: '\\u221D',\n\tpropto: '\\u221D',\n\tprsim: '\\u227E',\n\tprurel: '\\u22B0',\n\tPscr: '\\uD835\\uDCAB',\n\tpscr: '\\uD835\\uDCC5',\n\tPsi: '\\u03A8',\n\tpsi: '\\u03C8',\n\tpuncsp: '\\u2008',\n\tQfr: '\\uD835\\uDD14',\n\tqfr: '\\uD835\\uDD2E',\n\tqint: '\\u2A0C',\n\tQopf: '\\u211A',\n\tqopf: '\\uD835\\uDD62',\n\tqprime: '\\u2057',\n\tQscr: '\\uD835\\uDCAC',\n\tqscr: '\\uD835\\uDCC6',\n\tquaternions: '\\u210D',\n\tquatint: '\\u2A16',\n\tquest: '\\u003F',\n\tquesteq: '\\u225F',\n\tQUOT: '\\u0022',\n\tquot: '\\u0022',\n\trAarr: '\\u21DB',\n\trace: '\\u223D\\u0331',\n\tRacute: '\\u0154',\n\tracute: '\\u0155',\n\tradic: '\\u221A',\n\traemptyv: '\\u29B3',\n\tRang: '\\u27EB',\n\trang: '\\u27E9',\n\trangd: '\\u2992',\n\trange: '\\u29A5',\n\trangle: '\\u27E9',\n\traquo: '\\u00BB',\n\tRarr: '\\u21A0',\n\trArr: '\\u21D2',\n\trarr: '\\u2192',\n\trarrap: '\\u2975',\n\trarrb: '\\u21E5',\n\trarrbfs: '\\u2920',\n\trarrc: '\\u2933',\n\trarrfs: '\\u291E',\n\trarrhk: '\\u21AA',\n\trarrlp: '\\u21AC',\n\trarrpl: '\\u2945',\n\trarrsim: '\\u2974',\n\tRarrtl: '\\u2916',\n\trarrtl: '\\u21A3',\n\trarrw: '\\u219D',\n\trAtail: '\\u291C',\n\tratail: '\\u291A',\n\tratio: '\\u2236',\n\trationals: '\\u211A',\n\tRBarr: '\\u2910',\n\trBarr: '\\u290F',\n\trbarr: '\\u290D',\n\trbbrk: '\\u2773',\n\trbrace: '\\u007D',\n\trbrack: '\\u005D',\n\trbrke: '\\u298C',\n\trbrksld: '\\u298E',\n\trbrkslu: '\\u2990',\n\tRcaron: '\\u0158',\n\trcaron: '\\u0159',\n\tRcedil: '\\u0156',\n\trcedil: '\\u0157',\n\trceil: '\\u2309',\n\trcub: '\\u007D',\n\tRcy: '\\u0420',\n\trcy: '\\u0440',\n\trdca: '\\u2937',\n\trdldhar: '\\u2969',\n\trdquo: '\\u201D',\n\trdquor: '\\u201D',\n\trdsh: '\\u21B3',\n\tRe: '\\u211C',\n\treal: '\\u211C',\n\trealine: '\\u211B',\n\trealpart: '\\u211C',\n\treals: '\\u211D',\n\trect: '\\u25AD',\n\tREG: '\\u00AE',\n\treg: '\\u00AE',\n\tReverseElement: '\\u220B',\n\tReverseEquilibrium: '\\u21CB',\n\tReverseUpEquilibrium: '\\u296F',\n\trfisht: '\\u297D',\n\trfloor: '\\u230B',\n\tRfr: '\\u211C',\n\trfr: '\\uD835\\uDD2F',\n\trHar: '\\u2964',\n\trhard: '\\u21C1',\n\trharu: '\\u21C0',\n\trharul: '\\u296C',\n\tRho: '\\u03A1',\n\trho: '\\u03C1',\n\trhov: '\\u03F1',\n\tRightAngleBracket: '\\u27E9',\n\tRightArrow: '\\u2192',\n\tRightarrow: '\\u21D2',\n\trightarrow: '\\u2192',\n\tRightArrowBar: '\\u21E5',\n\tRightArrowLeftArrow: '\\u21C4',\n\trightarrowtail: '\\u21A3',\n\tRightCeiling: '\\u2309',\n\tRightDoubleBracket: '\\u27E7',\n\tRightDownTeeVector: '\\u295D',\n\tRightDownVector: '\\u21C2',\n\tRightDownVectorBar: '\\u2955',\n\tRightFloor: '\\u230B',\n\trightharpoondown: '\\u21C1',\n\trightharpoonup: '\\u21C0',\n\trightleftarrows: '\\u21C4',\n\trightleftharpoons: '\\u21CC',\n\trightrightarrows: '\\u21C9',\n\trightsquigarrow: '\\u219D',\n\tRightTee: '\\u22A2',\n\tRightTeeArrow: '\\u21A6',\n\tRightTeeVector: '\\u295B',\n\trightthreetimes: '\\u22CC',\n\tRightTriangle: '\\u22B3',\n\tRightTriangleBar: '\\u29D0',\n\tRightTriangleEqual: '\\u22B5',\n\tRightUpDownVector: '\\u294F',\n\tRightUpTeeVector: '\\u295C',\n\tRightUpVector: '\\u21BE',\n\tRightUpVectorBar: '\\u2954',\n\tRightVector: '\\u21C0',\n\tRightVectorBar: '\\u2953',\n\tring: '\\u02DA',\n\trisingdotseq: '\\u2253',\n\trlarr: '\\u21C4',\n\trlhar: '\\u21CC',\n\trlm: '\\u200F',\n\trmoust: '\\u23B1',\n\trmoustache: '\\u23B1',\n\trnmid: '\\u2AEE',\n\troang: '\\u27ED',\n\troarr: '\\u21FE',\n\trobrk: '\\u27E7',\n\tropar: '\\u2986',\n\tRopf: '\\u211D',\n\tropf: '\\uD835\\uDD63',\n\troplus: '\\u2A2E',\n\trotimes: '\\u2A35',\n\tRoundImplies: '\\u2970',\n\trpar: '\\u0029',\n\trpargt: '\\u2994',\n\trppolint: '\\u2A12',\n\trrarr: '\\u21C9',\n\tRrightarrow: '\\u21DB',\n\trsaquo: '\\u203A',\n\tRscr: '\\u211B',\n\trscr: '\\uD835\\uDCC7',\n\tRsh: '\\u21B1',\n\trsh: '\\u21B1',\n\trsqb: '\\u005D',\n\trsquo: '\\u2019',\n\trsquor: '\\u2019',\n\trthree: '\\u22CC',\n\trtimes: '\\u22CA',\n\trtri: '\\u25B9',\n\trtrie: '\\u22B5',\n\trtrif: '\\u25B8',\n\trtriltri: '\\u29CE',\n\tRuleDelayed: '\\u29F4',\n\truluhar: '\\u2968',\n\trx: '\\u211E',\n\tSacute: '\\u015A',\n\tsacute: '\\u015B',\n\tsbquo: '\\u201A',\n\tSc: '\\u2ABC',\n\tsc: '\\u227B',\n\tscap: '\\u2AB8',\n\tScaron: '\\u0160',\n\tscaron: '\\u0161',\n\tsccue: '\\u227D',\n\tscE: '\\u2AB4',\n\tsce: '\\u2AB0',\n\tScedil: '\\u015E',\n\tscedil: '\\u015F',\n\tScirc: '\\u015C',\n\tscirc: '\\u015D',\n\tscnap: '\\u2ABA',\n\tscnE: '\\u2AB6',\n\tscnsim: '\\u22E9',\n\tscpolint: '\\u2A13',\n\tscsim: '\\u227F',\n\tScy: '\\u0421',\n\tscy: '\\u0441',\n\tsdot: '\\u22C5',\n\tsdotb: '\\u22A1',\n\tsdote: '\\u2A66',\n\tsearhk: '\\u2925',\n\tseArr: '\\u21D8',\n\tsearr: '\\u2198',\n\tsearrow: '\\u2198',\n\tsect: '\\u00A7',\n\tsemi: '\\u003B',\n\tseswar: '\\u2929',\n\tsetminus: '\\u2216',\n\tsetmn: '\\u2216',\n\tsext: '\\u2736',\n\tSfr: '\\uD835\\uDD16',\n\tsfr: '\\uD835\\uDD30',\n\tsfrown: '\\u2322',\n\tsharp: '\\u266F',\n\tSHCHcy: '\\u0429',\n\tshchcy: '\\u0449',\n\tSHcy: '\\u0428',\n\tshcy: '\\u0448',\n\tShortDownArrow: '\\u2193',\n\tShortLeftArrow: '\\u2190',\n\tshortmid: '\\u2223',\n\tshortparallel: '\\u2225',\n\tShortRightArrow: '\\u2192',\n\tShortUpArrow: '\\u2191',\n\tshy: '\\u00AD',\n\tSigma: '\\u03A3',\n\tsigma: '\\u03C3',\n\tsigmaf: '\\u03C2',\n\tsigmav: '\\u03C2',\n\tsim: '\\u223C',\n\tsimdot: '\\u2A6A',\n\tsime: '\\u2243',\n\tsimeq: '\\u2243',\n\tsimg: '\\u2A9E',\n\tsimgE: '\\u2AA0',\n\tsiml: '\\u2A9D',\n\tsimlE: '\\u2A9F',\n\tsimne: '\\u2246',\n\tsimplus: '\\u2A24',\n\tsimrarr: '\\u2972',\n\tslarr: '\\u2190',\n\tSmallCircle: '\\u2218',\n\tsmallsetminus: '\\u2216',\n\tsmashp: '\\u2A33',\n\tsmeparsl: '\\u29E4',\n\tsmid: '\\u2223',\n\tsmile: '\\u2323',\n\tsmt: '\\u2AAA',\n\tsmte: '\\u2AAC',\n\tsmtes: '\\u2AAC\\uFE00',\n\tSOFTcy: '\\u042C',\n\tsoftcy: '\\u044C',\n\tsol: '\\u002F',\n\tsolb: '\\u29C4',\n\tsolbar: '\\u233F',\n\tSopf: '\\uD835\\uDD4A',\n\tsopf: '\\uD835\\uDD64',\n\tspades: '\\u2660',\n\tspadesuit: '\\u2660',\n\tspar: '\\u2225',\n\tsqcap: '\\u2293',\n\tsqcaps: '\\u2293\\uFE00',\n\tsqcup: '\\u2294',\n\tsqcups: '\\u2294\\uFE00',\n\tSqrt: '\\u221A',\n\tsqsub: '\\u228F',\n\tsqsube: '\\u2291',\n\tsqsubset: '\\u228F',\n\tsqsubseteq: '\\u2291',\n\tsqsup: '\\u2290',\n\tsqsupe: '\\u2292',\n\tsqsupset: '\\u2290',\n\tsqsupseteq: '\\u2292',\n\tsqu: '\\u25A1',\n\tSquare: '\\u25A1',\n\tsquare: '\\u25A1',\n\tSquareIntersection: '\\u2293',\n\tSquareSubset: '\\u228F',\n\tSquareSubsetEqual: '\\u2291',\n\tSquareSuperset: '\\u2290',\n\tSquareSupersetEqual: '\\u2292',\n\tSquareUnion: '\\u2294',\n\tsquarf: '\\u25AA',\n\tsquf: '\\u25AA',\n\tsrarr: '\\u2192',\n\tSscr: '\\uD835\\uDCAE',\n\tsscr: '\\uD835\\uDCC8',\n\tssetmn: '\\u2216',\n\tssmile: '\\u2323',\n\tsstarf: '\\u22C6',\n\tStar: '\\u22C6',\n\tstar: '\\u2606',\n\tstarf: '\\u2605',\n\tstraightepsilon: '\\u03F5',\n\tstraightphi: '\\u03D5',\n\tstrns: '\\u00AF',\n\tSub: '\\u22D0',\n\tsub: '\\u2282',\n\tsubdot: '\\u2ABD',\n\tsubE: '\\u2AC5',\n\tsube: '\\u2286',\n\tsubedot: '\\u2AC3',\n\tsubmult: '\\u2AC1',\n\tsubnE: '\\u2ACB',\n\tsubne: '\\u228A',\n\tsubplus: '\\u2ABF',\n\tsubrarr: '\\u2979',\n\tSubset: '\\u22D0',\n\tsubset: '\\u2282',\n\tsubseteq: '\\u2286',\n\tsubseteqq: '\\u2AC5',\n\tSubsetEqual: '\\u2286',\n\tsubsetneq: '\\u228A',\n\tsubsetneqq: '\\u2ACB',\n\tsubsim: '\\u2AC7',\n\tsubsub: '\\u2AD5',\n\tsubsup: '\\u2AD3',\n\tsucc: '\\u227B',\n\tsuccapprox: '\\u2AB8',\n\tsucccurlyeq: '\\u227D',\n\tSucceeds: '\\u227B',\n\tSucceedsEqual: '\\u2AB0',\n\tSucceedsSlantEqual: '\\u227D',\n\tSucceedsTilde: '\\u227F',\n\tsucceq: '\\u2AB0',\n\tsuccnapprox: '\\u2ABA',\n\tsuccneqq: '\\u2AB6',\n\tsuccnsim: '\\u22E9',\n\tsuccsim: '\\u227F',\n\tSuchThat: '\\u220B',\n\tSum: '\\u2211',\n\tsum: '\\u2211',\n\tsung: '\\u266A',\n\tSup: '\\u22D1',\n\tsup: '\\u2283',\n\tsup1: '\\u00B9',\n\tsup2: '\\u00B2',\n\tsup3: '\\u00B3',\n\tsupdot: '\\u2ABE',\n\tsupdsub: '\\u2AD8',\n\tsupE: '\\u2AC6',\n\tsupe: '\\u2287',\n\tsupedot: '\\u2AC4',\n\tSuperset: '\\u2283',\n\tSupersetEqual: '\\u2287',\n\tsuphsol: '\\u27C9',\n\tsuphsub: '\\u2AD7',\n\tsuplarr: '\\u297B',\n\tsupmult: '\\u2AC2',\n\tsupnE: '\\u2ACC',\n\tsupne: '\\u228B',\n\tsupplus: '\\u2AC0',\n\tSupset: '\\u22D1',\n\tsupset: '\\u2283',\n\tsupseteq: '\\u2287',\n\tsupseteqq: '\\u2AC6',\n\tsupsetneq: '\\u228B',\n\tsupsetneqq: '\\u2ACC',\n\tsupsim: '\\u2AC8',\n\tsupsub: '\\u2AD4',\n\tsupsup: '\\u2AD6',\n\tswarhk: '\\u2926',\n\tswArr: '\\u21D9',\n\tswarr: '\\u2199',\n\tswarrow: '\\u2199',\n\tswnwar: '\\u292A',\n\tszlig: '\\u00DF',\n\tTab: '\\u0009',\n\ttarget: '\\u2316',\n\tTau: '\\u03A4',\n\ttau: '\\u03C4',\n\ttbrk: '\\u23B4',\n\tTcaron: '\\u0164',\n\ttcaron: '\\u0165',\n\tTcedil: '\\u0162',\n\ttcedil: '\\u0163',\n\tTcy: '\\u0422',\n\ttcy: '\\u0442',\n\ttdot: '\\u20DB',\n\ttelrec: '\\u2315',\n\tTfr: '\\uD835\\uDD17',\n\ttfr: '\\uD835\\uDD31',\n\tthere4: '\\u2234',\n\tTherefore: '\\u2234',\n\ttherefore: '\\u2234',\n\tTheta: '\\u0398',\n\ttheta: '\\u03B8',\n\tthetasym: '\\u03D1',\n\tthetav: '\\u03D1',\n\tthickapprox: '\\u2248',\n\tthicksim: '\\u223C',\n\tThickSpace: '\\u205F\\u200A',\n\tthinsp: '\\u2009',\n\tThinSpace: '\\u2009',\n\tthkap: '\\u2248',\n\tthksim: '\\u223C',\n\tTHORN: '\\u00DE',\n\tthorn: '\\u00FE',\n\tTilde: '\\u223C',\n\ttilde: '\\u02DC',\n\tTildeEqual: '\\u2243',\n\tTildeFullEqual: '\\u2245',\n\tTildeTilde: '\\u2248',\n\ttimes: '\\u00D7',\n\ttimesb: '\\u22A0',\n\ttimesbar: '\\u2A31',\n\ttimesd: '\\u2A30',\n\ttint: '\\u222D',\n\ttoea: '\\u2928',\n\ttop: '\\u22A4',\n\ttopbot: '\\u2336',\n\ttopcir: '\\u2AF1',\n\tTopf: '\\uD835\\uDD4B',\n\ttopf: '\\uD835\\uDD65',\n\ttopfork: '\\u2ADA',\n\ttosa: '\\u2929',\n\ttprime: '\\u2034',\n\tTRADE: '\\u2122',\n\ttrade: '\\u2122',\n\ttriangle: '\\u25B5',\n\ttriangledown: '\\u25BF',\n\ttriangleleft: '\\u25C3',\n\ttrianglelefteq: '\\u22B4',\n\ttriangleq: '\\u225C',\n\ttriangleright: '\\u25B9',\n\ttrianglerighteq: '\\u22B5',\n\ttridot: '\\u25EC',\n\ttrie: '\\u225C',\n\ttriminus: '\\u2A3A',\n\tTripleDot: '\\u20DB',\n\ttriplus: '\\u2A39',\n\ttrisb: '\\u29CD',\n\ttritime: '\\u2A3B',\n\ttrpezium: '\\u23E2',\n\tTscr: '\\uD835\\uDCAF',\n\ttscr: '\\uD835\\uDCC9',\n\tTScy: '\\u0426',\n\ttscy: '\\u0446',\n\tTSHcy: '\\u040B',\n\ttshcy: '\\u045B',\n\tTstrok: '\\u0166',\n\ttstrok: '\\u0167',\n\ttwixt: '\\u226C',\n\ttwoheadleftarrow: '\\u219E',\n\ttwoheadrightarrow: '\\u21A0',\n\tUacute: '\\u00DA',\n\tuacute: '\\u00FA',\n\tUarr: '\\u219F',\n\tuArr: '\\u21D1',\n\tuarr: '\\u2191',\n\tUarrocir: '\\u2949',\n\tUbrcy: '\\u040E',\n\tubrcy: '\\u045E',\n\tUbreve: '\\u016C',\n\tubreve: '\\u016D',\n\tUcirc: '\\u00DB',\n\tucirc: '\\u00FB',\n\tUcy: '\\u0423',\n\tucy: '\\u0443',\n\tudarr: '\\u21C5',\n\tUdblac: '\\u0170',\n\tudblac: '\\u0171',\n\tudhar: '\\u296E',\n\tufisht: '\\u297E',\n\tUfr: '\\uD835\\uDD18',\n\tufr: '\\uD835\\uDD32',\n\tUgrave: '\\u00D9',\n\tugrave: '\\u00F9',\n\tuHar: '\\u2963',\n\tuharl: '\\u21BF',\n\tuharr: '\\u21BE',\n\tuhblk: '\\u2580',\n\tulcorn: '\\u231C',\n\tulcorner: '\\u231C',\n\tulcrop: '\\u230F',\n\tultri: '\\u25F8',\n\tUmacr: '\\u016A',\n\tumacr: '\\u016B',\n\tuml: '\\u00A8',\n\tUnderBar: '\\u005F',\n\tUnderBrace: '\\u23DF',\n\tUnderBracket: '\\u23B5',\n\tUnderParenthesis: '\\u23DD',\n\tUnion: '\\u22C3',\n\tUnionPlus: '\\u228E',\n\tUogon: '\\u0172',\n\tuogon: '\\u0173',\n\tUopf: '\\uD835\\uDD4C',\n\tuopf: '\\uD835\\uDD66',\n\tUpArrow: '\\u2191',\n\tUparrow: '\\u21D1',\n\tuparrow: '\\u2191',\n\tUpArrowBar: '\\u2912',\n\tUpArrowDownArrow: '\\u21C5',\n\tUpDownArrow: '\\u2195',\n\tUpdownarrow: '\\u21D5',\n\tupdownarrow: '\\u2195',\n\tUpEquilibrium: '\\u296E',\n\tupharpoonleft: '\\u21BF',\n\tupharpoonright: '\\u21BE',\n\tuplus: '\\u228E',\n\tUpperLeftArrow: '\\u2196',\n\tUpperRightArrow: '\\u2197',\n\tUpsi: '\\u03D2',\n\tupsi: '\\u03C5',\n\tupsih: '\\u03D2',\n\tUpsilon: '\\u03A5',\n\tupsilon: '\\u03C5',\n\tUpTee: '\\u22A5',\n\tUpTeeArrow: '\\u21A5',\n\tupuparrows: '\\u21C8',\n\turcorn: '\\u231D',\n\turcorner: '\\u231D',\n\turcrop: '\\u230E',\n\tUring: '\\u016E',\n\turing: '\\u016F',\n\turtri: '\\u25F9',\n\tUscr: '\\uD835\\uDCB0',\n\tuscr: '\\uD835\\uDCCA',\n\tutdot: '\\u22F0',\n\tUtilde: '\\u0168',\n\tutilde: '\\u0169',\n\tutri: '\\u25B5',\n\tutrif: '\\u25B4',\n\tuuarr: '\\u21C8',\n\tUuml: '\\u00DC',\n\tuuml: '\\u00FC',\n\tuwangle: '\\u29A7',\n\tvangrt: '\\u299C',\n\tvarepsilon: '\\u03F5',\n\tvarkappa: '\\u03F0',\n\tvarnothing: '\\u2205',\n\tvarphi: '\\u03D5',\n\tvarpi: '\\u03D6',\n\tvarpropto: '\\u221D',\n\tvArr: '\\u21D5',\n\tvarr: '\\u2195',\n\tvarrho: '\\u03F1',\n\tvarsigma: '\\u03C2',\n\tvarsubsetneq: '\\u228A\\uFE00',\n\tvarsubsetneqq: '\\u2ACB\\uFE00',\n\tvarsupsetneq: '\\u228B\\uFE00',\n\tvarsupsetneqq: '\\u2ACC\\uFE00',\n\tvartheta: '\\u03D1',\n\tvartriangleleft: '\\u22B2',\n\tvartriangleright: '\\u22B3',\n\tVbar: '\\u2AEB',\n\tvBar: '\\u2AE8',\n\tvBarv: '\\u2AE9',\n\tVcy: '\\u0412',\n\tvcy: '\\u0432',\n\tVDash: '\\u22AB',\n\tVdash: '\\u22A9',\n\tvDash: '\\u22A8',\n\tvdash: '\\u22A2',\n\tVdashl: '\\u2AE6',\n\tVee: '\\u22C1',\n\tvee: '\\u2228',\n\tveebar: '\\u22BB',\n\tveeeq: '\\u225A',\n\tvellip: '\\u22EE',\n\tVerbar: '\\u2016',\n\tverbar: '\\u007C',\n\tVert: '\\u2016',\n\tvert: '\\u007C',\n\tVerticalBar: '\\u2223',\n\tVerticalLine: '\\u007C',\n\tVerticalSeparator: '\\u2758',\n\tVerticalTilde: '\\u2240',\n\tVeryThinSpace: '\\u200A',\n\tVfr: '\\uD835\\uDD19',\n\tvfr: '\\uD835\\uDD33',\n\tvltri: '\\u22B2',\n\tvnsub: '\\u2282\\u20D2',\n\tvnsup: '\\u2283\\u20D2',\n\tVopf: '\\uD835\\uDD4D',\n\tvopf: '\\uD835\\uDD67',\n\tvprop: '\\u221D',\n\tvrtri: '\\u22B3',\n\tVscr: '\\uD835\\uDCB1',\n\tvscr: '\\uD835\\uDCCB',\n\tvsubnE: '\\u2ACB\\uFE00',\n\tvsubne: '\\u228A\\uFE00',\n\tvsupnE: '\\u2ACC\\uFE00',\n\tvsupne: '\\u228B\\uFE00',\n\tVvdash: '\\u22AA',\n\tvzigzag: '\\u299A',\n\tWcirc: '\\u0174',\n\twcirc: '\\u0175',\n\twedbar: '\\u2A5F',\n\tWedge: '\\u22C0',\n\twedge: '\\u2227',\n\twedgeq: '\\u2259',\n\tweierp: '\\u2118',\n\tWfr: '\\uD835\\uDD1A',\n\twfr: '\\uD835\\uDD34',\n\tWopf: '\\uD835\\uDD4E',\n\twopf: '\\uD835\\uDD68',\n\twp: '\\u2118',\n\twr: '\\u2240',\n\twreath: '\\u2240',\n\tWscr: '\\uD835\\uDCB2',\n\twscr: '\\uD835\\uDCCC',\n\txcap: '\\u22C2',\n\txcirc: '\\u25EF',\n\txcup: '\\u22C3',\n\txdtri: '\\u25BD',\n\tXfr: '\\uD835\\uDD1B',\n\txfr: '\\uD835\\uDD35',\n\txhArr: '\\u27FA',\n\txharr: '\\u27F7',\n\tXi: '\\u039E',\n\txi: '\\u03BE',\n\txlArr: '\\u27F8',\n\txlarr: '\\u27F5',\n\txmap: '\\u27FC',\n\txnis: '\\u22FB',\n\txodot: '\\u2A00',\n\tXopf: '\\uD835\\uDD4F',\n\txopf: '\\uD835\\uDD69',\n\txoplus: '\\u2A01',\n\txotime: '\\u2A02',\n\txrArr: '\\u27F9',\n\txrarr: '\\u27F6',\n\tXscr: '\\uD835\\uDCB3',\n\txscr: '\\uD835\\uDCCD',\n\txsqcup: '\\u2A06',\n\txuplus: '\\u2A04',\n\txutri: '\\u25B3',\n\txvee: '\\u22C1',\n\txwedge: '\\u22C0',\n\tYacute: '\\u00DD',\n\tyacute: '\\u00FD',\n\tYAcy: '\\u042F',\n\tyacy: '\\u044F',\n\tYcirc: '\\u0176',\n\tycirc: '\\u0177',\n\tYcy: '\\u042B',\n\tycy: '\\u044B',\n\tyen: '\\u00A5',\n\tYfr: '\\uD835\\uDD1C',\n\tyfr: '\\uD835\\uDD36',\n\tYIcy: '\\u0407',\n\tyicy: '\\u0457',\n\tYopf: '\\uD835\\uDD50',\n\tyopf: '\\uD835\\uDD6A',\n\tYscr: '\\uD835\\uDCB4',\n\tyscr: '\\uD835\\uDCCE',\n\tYUcy: '\\u042E',\n\tyucy: '\\u044E',\n\tYuml: '\\u0178',\n\tyuml: '\\u00FF',\n\tZacute: '\\u0179',\n\tzacute: '\\u017A',\n\tZcaron: '\\u017D',\n\tzcaron: '\\u017E',\n\tZcy: '\\u0417',\n\tzcy: '\\u0437',\n\tZdot: '\\u017B',\n\tzdot: '\\u017C',\n\tzeetrf: '\\u2128',\n\tZeroWidthSpace: '\\u200B',\n\tZeta: '\\u0396',\n\tzeta: '\\u03B6',\n\tZfr: '\\u2128',\n\tzfr: '\\uD835\\uDD37',\n\tZHcy: '\\u0416',\n\tzhcy: '\\u0436',\n\tzigrarr: '\\u21DD',\n\tZopf: '\\u2124',\n\tzopf: '\\uD835\\uDD6B',\n\tZscr: '\\uD835\\uDCB5',\n\tzscr: '\\uD835\\uDCCF',\n\tzwj: '\\u200D',\n\tzwnj: '\\u200C',\n});\n\n/**\n * @deprecated use `HTML_ENTITIES` instead\n * @see HTML_ENTITIES\n */\nexports.entityMap = exports.HTML_ENTITIES;\n","var dom = require('./dom')\nexports.DOMImplementation = dom.DOMImplementation\nexports.XMLSerializer = dom.XMLSerializer\nexports.DOMParser = require('./dom-parser').DOMParser\n","var NAMESPACE = require(\"./conventions\").NAMESPACE;\n\n//[4]   \tNameStartChar\t   ::=   \t\":\" | [A-Z] | \"_\" | [a-z] | [#xC0-#xD6] | [#xD8-#xF6] | [#xF8-#x2FF] | [#x370-#x37D] | [#x37F-#x1FFF] | [#x200C-#x200D] | [#x2070-#x218F] | [#x2C00-#x2FEF] | [#x3001-#xD7FF] | [#xF900-#xFDCF] | [#xFDF0-#xFFFD] | [#x10000-#xEFFFF]\n//[4a]   \tNameChar\t   ::=   \tNameStartChar | \"-\" | \".\" | [0-9] | #xB7 | [#x0300-#x036F] | [#x203F-#x2040]\n//[5]   \tName\t   ::=   \tNameStartChar (NameChar)*\nvar nameStartChar = /[A-Z_a-z\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]///\\u10000-\\uEFFFF\nvar nameChar = new RegExp(\"[\\\\-\\\\.0-9\"+nameStartChar.source.slice(1,-1)+\"\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040]\");\nvar tagNamePattern = new RegExp('^'+nameStartChar.source+nameChar.source+'*(?:\\:'+nameStartChar.source+nameChar.source+'*)?$');\n//var tagNamePattern = /^[a-zA-Z_][\\w\\-\\.]*(?:\\:[a-zA-Z_][\\w\\-\\.]*)?$/\n//var handlers = 'resolveEntity,getExternalSubset,characters,endDocument,endElement,endPrefixMapping,ignorableWhitespace,processingInstruction,setDocumentLocator,skippedEntity,startDocument,startElement,startPrefixMapping,notationDecl,unparsedEntityDecl,error,fatalError,warning,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,comment,endCDATA,endDTD,endEntity,startCDATA,startDTD,startEntity'.split(',')\n\n//S_TAG,\tS_ATTR,\tS_EQ,\tS_ATTR_NOQUOT_VALUE\n//S_ATTR_SPACE,\tS_ATTR_END,\tS_TAG_SPACE, S_TAG_CLOSE\nvar S_TAG = 0;//tag name offerring\nvar S_ATTR = 1;//attr name offerring\nvar S_ATTR_SPACE=2;//attr name end and space offer\nvar S_EQ = 3;//=space?\nvar S_ATTR_NOQUOT_VALUE = 4;//attr value(no quot value only)\nvar S_ATTR_END = 5;//attr value end and no space(quot end)\nvar S_TAG_SPACE = 6;//(attr value end || tag end ) && (space offer)\nvar S_TAG_CLOSE = 7;//closed el<el />\n\n/**\n * Creates an error that will not be caught by XMLReader aka the SAX parser.\n *\n * @param {string} message\n * @param {any?} locator Optional, can provide details about the location in the source\n * @constructor\n */\nfunction ParseError(message, locator) {\n\tthis.message = message\n\tthis.locator = locator\n\tif(Error.captureStackTrace) Error.captureStackTrace(this, ParseError);\n}\nParseError.prototype = new Error();\nParseError.prototype.name = ParseError.name\n\nfunction XMLReader(){\n\n}\n\nXMLReader.prototype = {\n\tparse:function(source,defaultNSMap,entityMap){\n\t\tvar domBuilder = this.domBuilder;\n\t\tdomBuilder.startDocument();\n\t\t_copy(defaultNSMap ,defaultNSMap = {})\n\t\tparse(source,defaultNSMap,entityMap,\n\t\t\t\tdomBuilder,this.errorHandler);\n\t\tdomBuilder.endDocument();\n\t}\n}\nfunction parse(source,defaultNSMapCopy,entityMap,domBuilder,errorHandler){\n\tfunction fixedFromCharCode(code) {\n\t\t// String.prototype.fromCharCode does not supports\n\t\t// > 2 bytes unicode chars directly\n\t\tif (code > 0xffff) {\n\t\t\tcode -= 0x10000;\n\t\t\tvar surrogate1 = 0xd800 + (code >> 10)\n\t\t\t\t, surrogate2 = 0xdc00 + (code & 0x3ff);\n\n\t\t\treturn String.fromCharCode(surrogate1, surrogate2);\n\t\t} else {\n\t\t\treturn String.fromCharCode(code);\n\t\t}\n\t}\n\tfunction entityReplacer(a){\n\t\tvar k = a.slice(1,-1);\n\t\tif (Object.hasOwnProperty.call(entityMap, k)) {\n\t\t\treturn entityMap[k];\n\t\t}else if(k.charAt(0) === '#'){\n\t\t\treturn fixedFromCharCode(parseInt(k.substr(1).replace('x','0x')))\n\t\t}else{\n\t\t\terrorHandler.error('entity not found:'+a);\n\t\t\treturn a;\n\t\t}\n\t}\n\tfunction appendText(end){//has some bugs\n\t\tif(end>start){\n\t\t\tvar xt = source.substring(start,end).replace(/&#?\\w+;/g,entityReplacer);\n\t\t\tlocator&&position(start);\n\t\t\tdomBuilder.characters(xt,0,end-start);\n\t\t\tstart = end\n\t\t}\n\t}\n\tfunction position(p,m){\n\t\twhile(p>=lineEnd && (m = linePattern.exec(source))){\n\t\t\tlineStart = m.index;\n\t\t\tlineEnd = lineStart + m[0].length;\n\t\t\tlocator.lineNumber++;\n\t\t\t//console.log('line++:',locator,startPos,endPos)\n\t\t}\n\t\tlocator.columnNumber = p-lineStart+1;\n\t}\n\tvar lineStart = 0;\n\tvar lineEnd = 0;\n\tvar linePattern = /.*(?:\\r\\n?|\\n)|.*$/g\n\tvar locator = domBuilder.locator;\n\n\tvar parseStack = [{currentNSMap:defaultNSMapCopy}]\n\tvar closeMap = {};\n\tvar start = 0;\n\twhile(true){\n\t\ttry{\n\t\t\tvar tagStart = source.indexOf('<',start);\n\t\t\tif(tagStart<0){\n\t\t\t\tif(!source.substr(start).match(/^\\s*$/)){\n\t\t\t\t\tvar doc = domBuilder.doc;\n\t    \t\t\tvar text = doc.createTextNode(source.substr(start));\n\t    \t\t\tdoc.appendChild(text);\n\t    \t\t\tdomBuilder.currentElement = text;\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif(tagStart>start){\n\t\t\t\tappendText(tagStart);\n\t\t\t}\n\t\t\tswitch(source.charAt(tagStart+1)){\n\t\t\tcase '/':\n\t\t\t\tvar end = source.indexOf('>',tagStart+3);\n\t\t\t\tvar tagName = source.substring(tagStart + 2, end).replace(/[ \\t\\n\\r]+$/g, '');\n\t\t\t\tvar config = parseStack.pop();\n\t\t\t\tif(end<0){\n\n\t        \t\ttagName = source.substring(tagStart+2).replace(/[\\s<].*/,'');\n\t        \t\terrorHandler.error(\"end tag name: \"+tagName+' is not complete:'+config.tagName);\n\t        \t\tend = tagStart+1+tagName.length;\n\t        \t}else if(tagName.match(/\\s</)){\n\t        \t\ttagName = tagName.replace(/[\\s<].*/,'');\n\t        \t\terrorHandler.error(\"end tag name: \"+tagName+' maybe not complete');\n\t        \t\tend = tagStart+1+tagName.length;\n\t\t\t\t}\n\t\t\t\tvar localNSMap = config.localNSMap;\n\t\t\t\tvar endMatch = config.tagName == tagName;\n\t\t\t\tvar endIgnoreCaseMach = endMatch || config.tagName&&config.tagName.toLowerCase() == tagName.toLowerCase()\n\t\t        if(endIgnoreCaseMach){\n\t\t        \tdomBuilder.endElement(config.uri,config.localName,tagName);\n\t\t\t\t\tif(localNSMap){\n\t\t\t\t\t\tfor (var prefix in localNSMap) {\n\t\t\t\t\t\t\tif (Object.prototype.hasOwnProperty.call(localNSMap, prefix)) {\n\t\t\t\t\t\t\t\tdomBuilder.endPrefixMapping(prefix);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(!endMatch){\n\t\t            \terrorHandler.fatalError(\"end tag name: \"+tagName+' is not match the current start tagName:'+config.tagName ); // No known test case\n\t\t\t\t\t}\n\t\t        }else{\n\t\t        \tparseStack.push(config)\n\t\t        }\n\n\t\t\t\tend++;\n\t\t\t\tbreak;\n\t\t\t\t// end elment\n\t\t\tcase '?':// <?...?>\n\t\t\t\tlocator&&position(tagStart);\n\t\t\t\tend = parseInstruction(source,tagStart,domBuilder);\n\t\t\t\tbreak;\n\t\t\tcase '!':// <!doctype,<![CDATA,<!--\n\t\t\t\tlocator&&position(tagStart);\n\t\t\t\tend = parseDCC(source,tagStart,domBuilder,errorHandler);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tlocator&&position(tagStart);\n\t\t\t\tvar el = new ElementAttributes();\n\t\t\t\tvar currentNSMap = parseStack[parseStack.length-1].currentNSMap;\n\t\t\t\t//elStartEnd\n\t\t\t\tvar end = parseElementStartPart(source,tagStart,el,currentNSMap,entityReplacer,errorHandler);\n\t\t\t\tvar len = el.length;\n\n\n\t\t\t\tif(!el.closed && fixSelfClosed(source,end,el.tagName,closeMap)){\n\t\t\t\t\tel.closed = true;\n\t\t\t\t\tif(!entityMap.nbsp){\n\t\t\t\t\t\terrorHandler.warning('unclosed xml attribute');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(locator && len){\n\t\t\t\t\tvar locator2 = copyLocator(locator,{});\n\t\t\t\t\t//try{//attribute position fixed\n\t\t\t\t\tfor(var i = 0;i<len;i++){\n\t\t\t\t\t\tvar a = el[i];\n\t\t\t\t\t\tposition(a.offset);\n\t\t\t\t\t\ta.locator = copyLocator(locator,{});\n\t\t\t\t\t}\n\t\t\t\t\tdomBuilder.locator = locator2\n\t\t\t\t\tif(appendElement(el,domBuilder,currentNSMap)){\n\t\t\t\t\t\tparseStack.push(el)\n\t\t\t\t\t}\n\t\t\t\t\tdomBuilder.locator = locator;\n\t\t\t\t}else{\n\t\t\t\t\tif(appendElement(el,domBuilder,currentNSMap)){\n\t\t\t\t\t\tparseStack.push(el)\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (NAMESPACE.isHTML(el.uri) && !el.closed) {\n\t\t\t\t\tend = parseHtmlSpecialContent(source,end,el.tagName,entityReplacer,domBuilder)\n\t\t\t\t} else {\n\t\t\t\t\tend++;\n\t\t\t\t}\n\t\t\t}\n\t\t}catch(e){\n\t\t\tif (e instanceof ParseError) {\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t\terrorHandler.error('element parse error: '+e)\n\t\t\tend = -1;\n\t\t}\n\t\tif(end>start){\n\t\t\tstart = end;\n\t\t}else{\n\t\t\t//TODO: 这里有可能sax回退，有位置错误风险\n\t\t\tappendText(Math.max(tagStart,start)+1);\n\t\t}\n\t}\n}\nfunction copyLocator(f,t){\n\tt.lineNumber = f.lineNumber;\n\tt.columnNumber = f.columnNumber;\n\treturn t;\n}\n\n/**\n * @see #appendElement(source,elStartEnd,el,selfClosed,entityReplacer,domBuilder,parseStack);\n * @return end of the elementStartPart(end of elementEndPart for selfClosed el)\n */\nfunction parseElementStartPart(source,start,el,currentNSMap,entityReplacer,errorHandler){\n\n\t/**\n\t * @param {string} qname\n\t * @param {string} value\n\t * @param {number} startIndex\n\t */\n\tfunction addAttribute(qname, value, startIndex) {\n\t\tif (el.attributeNames.hasOwnProperty(qname)) {\n\t\t\terrorHandler.fatalError('Attribute ' + qname + ' redefined')\n\t\t}\n\t\tel.addValue(\n\t\t\tqname,\n\t\t\t// @see https://www.w3.org/TR/xml/#AVNormalize\n\t\t\t// since the xmldom sax parser does not \"interpret\" DTD the following is not implemented:\n\t\t\t// - recursive replacement of (DTD) entity references\n\t\t\t// - trimming and collapsing multiple spaces into a single one for attributes that are not of type CDATA\n\t\t\tvalue.replace(/[\\t\\n\\r]/g, ' ').replace(/&#?\\w+;/g, entityReplacer),\n\t\t\tstartIndex\n\t\t)\n\t}\n\tvar attrName;\n\tvar value;\n\tvar p = ++start;\n\tvar s = S_TAG;//status\n\twhile(true){\n\t\tvar c = source.charAt(p);\n\t\tswitch(c){\n\t\tcase '=':\n\t\t\tif(s === S_ATTR){//attrName\n\t\t\t\tattrName = source.slice(start,p);\n\t\t\t\ts = S_EQ;\n\t\t\t}else if(s === S_ATTR_SPACE){\n\t\t\t\ts = S_EQ;\n\t\t\t}else{\n\t\t\t\t//fatalError: equal must after attrName or space after attrName\n\t\t\t\tthrow new Error('attribute equal must after attrName'); // No known test case\n\t\t\t}\n\t\t\tbreak;\n\t\tcase '\\'':\n\t\tcase '\"':\n\t\t\tif(s === S_EQ || s === S_ATTR //|| s == S_ATTR_SPACE\n\t\t\t\t){//equal\n\t\t\t\tif(s === S_ATTR){\n\t\t\t\t\terrorHandler.warning('attribute value must after \"=\"')\n\t\t\t\t\tattrName = source.slice(start,p)\n\t\t\t\t}\n\t\t\t\tstart = p+1;\n\t\t\t\tp = source.indexOf(c,start)\n\t\t\t\tif(p>0){\n\t\t\t\t\tvalue = source.slice(start, p);\n\t\t\t\t\taddAttribute(attrName, value, start-1);\n\t\t\t\t\ts = S_ATTR_END;\n\t\t\t\t}else{\n\t\t\t\t\t//fatalError: no end quot match\n\t\t\t\t\tthrow new Error('attribute value no end \\''+c+'\\' match');\n\t\t\t\t}\n\t\t\t}else if(s == S_ATTR_NOQUOT_VALUE){\n\t\t\t\tvalue = source.slice(start, p);\n\t\t\t\taddAttribute(attrName, value, start);\n\t\t\t\terrorHandler.warning('attribute \"'+attrName+'\" missed start quot('+c+')!!');\n\t\t\t\tstart = p+1;\n\t\t\t\ts = S_ATTR_END\n\t\t\t}else{\n\t\t\t\t//fatalError: no equal before\n\t\t\t\tthrow new Error('attribute value must after \"=\"'); // No known test case\n\t\t\t}\n\t\t\tbreak;\n\t\tcase '/':\n\t\t\tswitch(s){\n\t\t\tcase S_TAG:\n\t\t\t\tel.setTagName(source.slice(start,p));\n\t\t\tcase S_ATTR_END:\n\t\t\tcase S_TAG_SPACE:\n\t\t\tcase S_TAG_CLOSE:\n\t\t\t\ts =S_TAG_CLOSE;\n\t\t\t\tel.closed = true;\n\t\t\tcase S_ATTR_NOQUOT_VALUE:\n\t\t\tcase S_ATTR:\n\t\t\t\tbreak;\n\t\t\t\tcase S_ATTR_SPACE:\n\t\t\t\t\tel.closed = true;\n\t\t\t\tbreak;\n\t\t\t//case S_EQ:\n\t\t\tdefault:\n\t\t\t\tthrow new Error(\"attribute invalid close char('/')\") // No known test case\n\t\t\t}\n\t\t\tbreak;\n\t\tcase ''://end document\n\t\t\terrorHandler.error('unexpected end of input');\n\t\t\tif(s == S_TAG){\n\t\t\t\tel.setTagName(source.slice(start,p));\n\t\t\t}\n\t\t\treturn p;\n\t\tcase '>':\n\t\t\tswitch(s){\n\t\t\tcase S_TAG:\n\t\t\t\tel.setTagName(source.slice(start,p));\n\t\t\tcase S_ATTR_END:\n\t\t\tcase S_TAG_SPACE:\n\t\t\tcase S_TAG_CLOSE:\n\t\t\t\tbreak;//normal\n\t\t\tcase S_ATTR_NOQUOT_VALUE://Compatible state\n\t\t\tcase S_ATTR:\n\t\t\t\tvalue = source.slice(start,p);\n\t\t\t\tif(value.slice(-1) === '/'){\n\t\t\t\t\tel.closed  = true;\n\t\t\t\t\tvalue = value.slice(0,-1)\n\t\t\t\t}\n\t\t\tcase S_ATTR_SPACE:\n\t\t\t\tif(s === S_ATTR_SPACE){\n\t\t\t\t\tvalue = attrName;\n\t\t\t\t}\n\t\t\t\tif(s == S_ATTR_NOQUOT_VALUE){\n\t\t\t\t\terrorHandler.warning('attribute \"'+value+'\" missed quot(\")!');\n\t\t\t\t\taddAttribute(attrName, value, start)\n\t\t\t\t}else{\n\t\t\t\t\tif(!NAMESPACE.isHTML(currentNSMap['']) || !value.match(/^(?:disabled|checked|selected)$/i)){\n\t\t\t\t\t\terrorHandler.warning('attribute \"'+value+'\" missed value!! \"'+value+'\" instead!!')\n\t\t\t\t\t}\n\t\t\t\t\taddAttribute(value, value, start)\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase S_EQ:\n\t\t\t\tthrow new Error('attribute value missed!!');\n\t\t\t}\n//\t\t\tconsole.log(tagName,tagNamePattern,tagNamePattern.test(tagName))\n\t\t\treturn p;\n\t\t/*xml space '\\x20' | #x9 | #xD | #xA; */\n\t\tcase '\\u0080':\n\t\t\tc = ' ';\n\t\tdefault:\n\t\t\tif(c<= ' '){//space\n\t\t\t\tswitch(s){\n\t\t\t\tcase S_TAG:\n\t\t\t\t\tel.setTagName(source.slice(start,p));//tagName\n\t\t\t\t\ts = S_TAG_SPACE;\n\t\t\t\t\tbreak;\n\t\t\t\tcase S_ATTR:\n\t\t\t\t\tattrName = source.slice(start,p)\n\t\t\t\t\ts = S_ATTR_SPACE;\n\t\t\t\t\tbreak;\n\t\t\t\tcase S_ATTR_NOQUOT_VALUE:\n\t\t\t\t\tvar value = source.slice(start, p);\n\t\t\t\t\terrorHandler.warning('attribute \"'+value+'\" missed quot(\")!!');\n\t\t\t\t\taddAttribute(attrName, value, start)\n\t\t\t\tcase S_ATTR_END:\n\t\t\t\t\ts = S_TAG_SPACE;\n\t\t\t\t\tbreak;\n\t\t\t\t//case S_TAG_SPACE:\n\t\t\t\t//case S_EQ:\n\t\t\t\t//case S_ATTR_SPACE:\n\t\t\t\t//\tvoid();break;\n\t\t\t\t//case S_TAG_CLOSE:\n\t\t\t\t\t//ignore warning\n\t\t\t\t}\n\t\t\t}else{//not space\n//S_TAG,\tS_ATTR,\tS_EQ,\tS_ATTR_NOQUOT_VALUE\n//S_ATTR_SPACE,\tS_ATTR_END,\tS_TAG_SPACE, S_TAG_CLOSE\n\t\t\t\tswitch(s){\n\t\t\t\t//case S_TAG:void();break;\n\t\t\t\t//case S_ATTR:void();break;\n\t\t\t\t//case S_ATTR_NOQUOT_VALUE:void();break;\n\t\t\t\tcase S_ATTR_SPACE:\n\t\t\t\t\tvar tagName =  el.tagName;\n\t\t\t\t\tif (!NAMESPACE.isHTML(currentNSMap['']) || !attrName.match(/^(?:disabled|checked|selected)$/i)) {\n\t\t\t\t\t\terrorHandler.warning('attribute \"'+attrName+'\" missed value!! \"'+attrName+'\" instead2!!')\n\t\t\t\t\t}\n\t\t\t\t\taddAttribute(attrName, attrName, start);\n\t\t\t\t\tstart = p;\n\t\t\t\t\ts = S_ATTR;\n\t\t\t\t\tbreak;\n\t\t\t\tcase S_ATTR_END:\n\t\t\t\t\terrorHandler.warning('attribute space is required\"'+attrName+'\"!!')\n\t\t\t\tcase S_TAG_SPACE:\n\t\t\t\t\ts = S_ATTR;\n\t\t\t\t\tstart = p;\n\t\t\t\t\tbreak;\n\t\t\t\tcase S_EQ:\n\t\t\t\t\ts = S_ATTR_NOQUOT_VALUE;\n\t\t\t\t\tstart = p;\n\t\t\t\t\tbreak;\n\t\t\t\tcase S_TAG_CLOSE:\n\t\t\t\t\tthrow new Error(\"elements closed character '/' and '>' must be connected to\");\n\t\t\t\t}\n\t\t\t}\n\t\t}//end outer switch\n\t\t//console.log('p++',p)\n\t\tp++;\n\t}\n}\n/**\n * @return true if has new namespace define\n */\nfunction appendElement(el,domBuilder,currentNSMap){\n\tvar tagName = el.tagName;\n\tvar localNSMap = null;\n\t//var currentNSMap = parseStack[parseStack.length-1].currentNSMap;\n\tvar i = el.length;\n\twhile(i--){\n\t\tvar a = el[i];\n\t\tvar qName = a.qName;\n\t\tvar value = a.value;\n\t\tvar nsp = qName.indexOf(':');\n\t\tif(nsp>0){\n\t\t\tvar prefix = a.prefix = qName.slice(0,nsp);\n\t\t\tvar localName = qName.slice(nsp+1);\n\t\t\tvar nsPrefix = prefix === 'xmlns' && localName\n\t\t}else{\n\t\t\tlocalName = qName;\n\t\t\tprefix = null\n\t\t\tnsPrefix = qName === 'xmlns' && ''\n\t\t}\n\t\t//can not set prefix,because prefix !== ''\n\t\ta.localName = localName ;\n\t\t//prefix == null for no ns prefix attribute\n\t\tif(nsPrefix !== false){//hack!!\n\t\t\tif(localNSMap == null){\n\t\t\t\tlocalNSMap = {}\n\t\t\t\t//console.log(currentNSMap,0)\n\t\t\t\t_copy(currentNSMap,currentNSMap={})\n\t\t\t\t//console.log(currentNSMap,1)\n\t\t\t}\n\t\t\tcurrentNSMap[nsPrefix] = localNSMap[nsPrefix] = value;\n\t\t\ta.uri = NAMESPACE.XMLNS\n\t\t\tdomBuilder.startPrefixMapping(nsPrefix, value)\n\t\t}\n\t}\n\tvar i = el.length;\n\twhile(i--){\n\t\ta = el[i];\n\t\tvar prefix = a.prefix;\n\t\tif(prefix){//no prefix attribute has no namespace\n\t\t\tif(prefix === 'xml'){\n\t\t\t\ta.uri = NAMESPACE.XML;\n\t\t\t}if(prefix !== 'xmlns'){\n\t\t\t\ta.uri = currentNSMap[prefix || '']\n\n\t\t\t\t//{console.log('###'+a.qName,domBuilder.locator.systemId+'',currentNSMap,a.uri)}\n\t\t\t}\n\t\t}\n\t}\n\tvar nsp = tagName.indexOf(':');\n\tif(nsp>0){\n\t\tprefix = el.prefix = tagName.slice(0,nsp);\n\t\tlocalName = el.localName = tagName.slice(nsp+1);\n\t}else{\n\t\tprefix = null;//important!!\n\t\tlocalName = el.localName = tagName;\n\t}\n\t//no prefix element has default namespace\n\tvar ns = el.uri = currentNSMap[prefix || ''];\n\tdomBuilder.startElement(ns,localName,tagName,el);\n\t//endPrefixMapping and startPrefixMapping have not any help for dom builder\n\t//localNSMap = null\n\tif(el.closed){\n\t\tdomBuilder.endElement(ns,localName,tagName);\n\t\tif(localNSMap){\n\t\t\tfor (prefix in localNSMap) {\n\t\t\t\tif (Object.prototype.hasOwnProperty.call(localNSMap, prefix)) {\n\t\t\t\t\tdomBuilder.endPrefixMapping(prefix);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}else{\n\t\tel.currentNSMap = currentNSMap;\n\t\tel.localNSMap = localNSMap;\n\t\t//parseStack.push(el);\n\t\treturn true;\n\t}\n}\nfunction parseHtmlSpecialContent(source,elStartEnd,tagName,entityReplacer,domBuilder){\n\tif(/^(?:script|textarea)$/i.test(tagName)){\n\t\tvar elEndStart =  source.indexOf('</'+tagName+'>',elStartEnd);\n\t\tvar text = source.substring(elStartEnd+1,elEndStart);\n\t\tif(/[&<]/.test(text)){\n\t\t\tif(/^script$/i.test(tagName)){\n\t\t\t\t//if(!/\\]\\]>/.test(text)){\n\t\t\t\t\t//lexHandler.startCDATA();\n\t\t\t\t\tdomBuilder.characters(text,0,text.length);\n\t\t\t\t\t//lexHandler.endCDATA();\n\t\t\t\t\treturn elEndStart;\n\t\t\t\t//}\n\t\t\t}//}else{//text area\n\t\t\t\ttext = text.replace(/&#?\\w+;/g,entityReplacer);\n\t\t\t\tdomBuilder.characters(text,0,text.length);\n\t\t\t\treturn elEndStart;\n\t\t\t//}\n\n\t\t}\n\t}\n\treturn elStartEnd+1;\n}\nfunction fixSelfClosed(source,elStartEnd,tagName,closeMap){\n\t//if(tagName in closeMap){\n\tvar pos = closeMap[tagName];\n\tif(pos == null){\n\t\t//console.log(tagName)\n\t\tpos =  source.lastIndexOf('</'+tagName+'>')\n\t\tif(pos<elStartEnd){//忘记闭合\n\t\t\tpos = source.lastIndexOf('</'+tagName)\n\t\t}\n\t\tcloseMap[tagName] =pos\n\t}\n\treturn pos<elStartEnd;\n\t//}\n}\n\nfunction _copy (source, target) {\n\tfor (var n in source) {\n\t\tif (Object.prototype.hasOwnProperty.call(source, n)) {\n\t\t\ttarget[n] = source[n];\n\t\t}\n\t}\n}\n\nfunction parseDCC(source,start,domBuilder,errorHandler){//sure start with '<!'\n\tvar next= source.charAt(start+2)\n\tswitch(next){\n\tcase '-':\n\t\tif(source.charAt(start + 3) === '-'){\n\t\t\tvar end = source.indexOf('-->',start+4);\n\t\t\t//append comment source.substring(4,end)//<!--\n\t\t\tif(end>start){\n\t\t\t\tdomBuilder.comment(source,start+4,end-start-4);\n\t\t\t\treturn end+3;\n\t\t\t}else{\n\t\t\t\terrorHandler.error(\"Unclosed comment\");\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t}else{\n\t\t\t//error\n\t\t\treturn -1;\n\t\t}\n\tdefault:\n\t\tif(source.substr(start+3,6) == 'CDATA['){\n\t\t\tvar end = source.indexOf(']]>',start+9);\n\t\t\tdomBuilder.startCDATA();\n\t\t\tdomBuilder.characters(source,start+9,end-start-9);\n\t\t\tdomBuilder.endCDATA()\n\t\t\treturn end+3;\n\t\t}\n\t\t//<!DOCTYPE\n\t\t//startDTD(java.lang.String name, java.lang.String publicId, java.lang.String systemId)\n\t\tvar matchs = split(source,start);\n\t\tvar len = matchs.length;\n\t\tif(len>1 && /!doctype/i.test(matchs[0][0])){\n\t\t\tvar name = matchs[1][0];\n\t\t\tvar pubid = false;\n\t\t\tvar sysid = false;\n\t\t\tif(len>3){\n\t\t\t\tif(/^public$/i.test(matchs[2][0])){\n\t\t\t\t\tpubid = matchs[3][0];\n\t\t\t\t\tsysid = len>4 && matchs[4][0];\n\t\t\t\t}else if(/^system$/i.test(matchs[2][0])){\n\t\t\t\t\tsysid = matchs[3][0];\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar lastMatch = matchs[len-1]\n\t\t\tdomBuilder.startDTD(name, pubid, sysid);\n\t\t\tdomBuilder.endDTD();\n\n\t\t\treturn lastMatch.index+lastMatch[0].length\n\t\t}\n\t}\n\treturn -1;\n}\n\n\n\nfunction parseInstruction(source,start,domBuilder){\n\tvar end = source.indexOf('?>',start);\n\tif(end){\n\t\tvar match = source.substring(start,end).match(/^<\\?(\\S*)\\s*([\\s\\S]*?)\\s*$/);\n\t\tif(match){\n\t\t\tvar len = match[0].length;\n\t\t\tdomBuilder.processingInstruction(match[1], match[2]) ;\n\t\t\treturn end+2;\n\t\t}else{//error\n\t\t\treturn -1;\n\t\t}\n\t}\n\treturn -1;\n}\n\nfunction ElementAttributes(){\n\tthis.attributeNames = {}\n}\nElementAttributes.prototype = {\n\tsetTagName:function(tagName){\n\t\tif(!tagNamePattern.test(tagName)){\n\t\t\tthrow new Error('invalid tagName:'+tagName)\n\t\t}\n\t\tthis.tagName = tagName\n\t},\n\taddValue:function(qName, value, offset) {\n\t\tif(!tagNamePattern.test(qName)){\n\t\t\tthrow new Error('invalid attribute:'+qName)\n\t\t}\n\t\tthis.attributeNames[qName] = this.length;\n\t\tthis[this.length++] = {qName:qName,value:value,offset:offset}\n\t},\n\tlength:0,\n\tgetLocalName:function(i){return this[i].localName},\n\tgetLocator:function(i){return this[i].locator},\n\tgetQName:function(i){return this[i].qName},\n\tgetURI:function(i){return this[i].uri},\n\tgetValue:function(i){return this[i].value}\n//\t,getIndex:function(uri, localName)){\n//\t\tif(localName){\n//\n//\t\t}else{\n//\t\t\tvar qName = uri\n//\t\t}\n//\t},\n//\tgetValue:function(){return this.getValue(this.getIndex.apply(this,arguments))},\n//\tgetType:function(uri,localName){}\n//\tgetType:function(i){},\n}\n\n\n\nfunction split(source,start){\n\tvar match;\n\tvar buf = [];\n\tvar reg = /'[^']+'|\"[^\"]+\"|[^\\s<>\\/=]+=?|(\\/?\\s*>|<)/g;\n\treg.lastIndex = start;\n\treg.exec(source);//skip <\n\twhile(match = reg.exec(source)){\n\t\tbuf.push(match);\n\t\tif(match[1])return buf;\n\t}\n}\n\nexports.XMLReader = XMLReader;\nexports.ParseError = ParseError;\n","var topLevel = typeof global !== 'undefined' ? global :\n    typeof window !== 'undefined' ? window : {}\nvar minDoc = require('min-document');\n\nvar doccy;\n\nif (typeof document !== 'undefined') {\n    doccy = document;\n} else {\n    doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'];\n\n    if (!doccy) {\n        doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'] = minDoc;\n    }\n}\n\nmodule.exports = doccy;\n","var win;\n\nif (typeof window !== \"undefined\") {\n    win = window;\n} else if (typeof global !== \"undefined\") {\n    win = global;\n} else if (typeof self !== \"undefined\"){\n    win = self;\n} else {\n    win = {};\n}\n\nmodule.exports = win;\n","module.exports = isFunction\n\nvar toString = Object.prototype.toString\n\nfunction isFunction (fn) {\n  if (!fn) {\n    return false\n  }\n  var string = toString.call(fn)\n  return string === '[object Function]' ||\n    (typeof fn === 'function' && string !== '[object RegExp]') ||\n    (typeof window !== 'undefined' &&\n     // IE8 and below\n     (fn === window.setTimeout ||\n      fn === window.alert ||\n      fn === window.confirm ||\n      fn === window.prompt))\n};\n","// Source: http://jsfiddle.net/vWx8V/\n// http://stackoverflow.com/questions/5603195/full-list-of-javascript-keycodes\n\n/**\n * Conenience method returns corresponding value for given keyName or keyCode.\n *\n * @param {Mixed} keyCode {Number} or keyName {String}\n * @return {Mixed}\n * @api public\n */\n\nfunction keyCode(searchInput) {\n  // Keyboard Events\n  if (searchInput && 'object' === typeof searchInput) {\n    var hasKeyCode = searchInput.which || searchInput.keyCode || searchInput.charCode\n    if (hasKeyCode) searchInput = hasKeyCode\n  }\n\n  // Numbers\n  if ('number' === typeof searchInput) return names[searchInput]\n\n  // Everything else (cast to string)\n  var search = String(searchInput)\n\n  // check codes\n  var foundNamedKey = codes[search.toLowerCase()]\n  if (foundNamedKey) return foundNamedKey\n\n  // check aliases\n  var foundNamedKey = aliases[search.toLowerCase()]\n  if (foundNamedKey) return foundNamedKey\n\n  // weird character?\n  if (search.length === 1) return search.charCodeAt(0)\n\n  return undefined\n}\n\n/**\n * Compares a keyboard event with a given keyCode or keyName.\n *\n * @param {Event} event Keyboard event that should be tested\n * @param {Mixed} keyCode {Number} or keyName {String}\n * @return {Boolean}\n * @api public\n */\nkeyCode.isEventKey = function isEventKey(event, nameOrCode) {\n  if (event && 'object' === typeof event) {\n    var keyCode = event.which || event.keyCode || event.charCode\n    if (keyCode === null || keyCode === undefined) { return false; }\n    if (typeof nameOrCode === 'string') {\n      // check codes\n      var foundNamedKey = codes[nameOrCode.toLowerCase()]\n      if (foundNamedKey) { return foundNamedKey === keyCode; }\n    \n      // check aliases\n      var foundNamedKey = aliases[nameOrCode.toLowerCase()]\n      if (foundNamedKey) { return foundNamedKey === keyCode; }\n    } else if (typeof nameOrCode === 'number') {\n      return nameOrCode === keyCode;\n    }\n    return false;\n  }\n}\n\nexports = module.exports = keyCode;\n\n/**\n * Get by name\n *\n *   exports.code['enter'] // => 13\n */\n\nvar codes = exports.code = exports.codes = {\n  'backspace': 8,\n  'tab': 9,\n  'enter': 13,\n  'shift': 16,\n  'ctrl': 17,\n  'alt': 18,\n  'pause/break': 19,\n  'caps lock': 20,\n  'esc': 27,\n  'space': 32,\n  'page up': 33,\n  'page down': 34,\n  'end': 35,\n  'home': 36,\n  'left': 37,\n  'up': 38,\n  'right': 39,\n  'down': 40,\n  'insert': 45,\n  'delete': 46,\n  'command': 91,\n  'left command': 91,\n  'right command': 93,\n  'numpad *': 106,\n  'numpad +': 107,\n  'numpad -': 109,\n  'numpad .': 110,\n  'numpad /': 111,\n  'num lock': 144,\n  'scroll lock': 145,\n  'my computer': 182,\n  'my calculator': 183,\n  ';': 186,\n  '=': 187,\n  ',': 188,\n  '-': 189,\n  '.': 190,\n  '/': 191,\n  '`': 192,\n  '[': 219,\n  '\\\\': 220,\n  ']': 221,\n  \"'\": 222\n}\n\n// Helper aliases\n\nvar aliases = exports.aliases = {\n  'windows': 91,\n  '⇧': 16,\n  '⌥': 18,\n  '⌃': 17,\n  '⌘': 91,\n  'ctl': 17,\n  'control': 17,\n  'option': 18,\n  'pause': 19,\n  'break': 19,\n  'caps': 20,\n  'return': 13,\n  'escape': 27,\n  'spc': 32,\n  'spacebar': 32,\n  'pgup': 33,\n  'pgdn': 34,\n  'ins': 45,\n  'del': 46,\n  'cmd': 91\n}\n\n/*!\n * Programatically add the following\n */\n\n// lower case chars\nfor (i = 97; i < 123; i++) codes[String.fromCharCode(i)] = i - 32\n\n// numbers\nfor (var i = 48; i < 58; i++) codes[i - 48] = i\n\n// function keys\nfor (i = 1; i < 13; i++) codes['f'+i] = i + 111\n\n// numpad keys\nfor (i = 0; i < 10; i++) codes['numpad '+i] = i + 96\n\n/**\n * Get by code\n *\n *   exports.name[13] // => 'Enter'\n */\n\nvar names = exports.names = exports.title = {} // title for backward compat\n\n// Create reverse mapping\nfor (i in codes) names[codes[i]] = i\n\n// Add aliases\nfor (var alias in aliases) {\n  codes[alias] = aliases[alias]\n}\n","var getUint64 = require('../utils/numbers.js').getUint64;\n\nvar parseSidx = function(data) {\n  var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n      result = {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        references: [],\n        referenceId: view.getUint32(4),\n        timescale: view.getUint32(8)\n      },\n    i = 12;\n\n  if (result.version === 0) {\n    result.earliestPresentationTime = view.getUint32(i);\n    result.firstOffset = view.getUint32(i + 4);\n    i += 8;\n  } else {\n    // read 64 bits\n    result.earliestPresentationTime = getUint64(data.subarray(i));\n    result.firstOffset = getUint64(data.subarray(i + 8));\n    i += 16;\n  }\n\n  i += 2; // reserved\n\n  var referenceCount = view.getUint16(i);\n\n  i += 2; // start of references\n\n  for (; referenceCount > 0; i += 12, referenceCount--) {\n    result.references.push({\n      referenceType: (data[i] & 0x80) >>> 7,\n      referencedSize: view.getUint32(i) & 0x7FFFFFFF,\n      subsegmentDuration: view.getUint32(i + 4),\n      startsWithSap: !!(data[i + 8] & 0x80),\n      sapType: (data[i + 8] & 0x70) >>> 4,\n      sapDeltaTime: view.getUint32(i + 8) & 0x0FFFFFFF\n    });\n  }\n\n  return result;\n};\n\n\nmodule.exports = parseSidx;\n","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n */\nvar\n  ONE_SECOND_IN_TS = 90000, // 90kHz clock\n  secondsToVideoTs,\n  secondsToAudioTs,\n  videoTsToSeconds,\n  audioTsToSeconds,\n  audioTsToVideoTs,\n  videoTsToAudioTs,\n  metadataTsToSeconds;\n\nsecondsToVideoTs = function(seconds) {\n  return seconds * ONE_SECOND_IN_TS;\n};\n\nsecondsToAudioTs = function(seconds, sampleRate) {\n  return seconds * sampleRate;\n};\n\nvideoTsToSeconds = function(timestamp) {\n  return timestamp / ONE_SECOND_IN_TS;\n};\n\naudioTsToSeconds = function(timestamp, sampleRate) {\n  return timestamp / sampleRate;\n};\n\naudioTsToVideoTs = function(timestamp, sampleRate) {\n  return secondsToVideoTs(audioTsToSeconds(timestamp, sampleRate));\n};\n\nvideoTsToAudioTs = function(timestamp, sampleRate) {\n  return secondsToAudioTs(videoTsToSeconds(timestamp), sampleRate);\n};\n\n/**\n * Adjust ID3 tag or caption timing information by the timeline pts values\n * (if keepOriginalTimestamps is false) and convert to seconds\n */\nmetadataTsToSeconds = function(timestamp, timelineStartPts, keepOriginalTimestamps) {\n  return videoTsToSeconds(keepOriginalTimestamps ? timestamp : timestamp - timelineStartPts);\n};\n\nmodule.exports = {\n  ONE_SECOND_IN_TS: ONE_SECOND_IN_TS,\n  secondsToVideoTs: secondsToVideoTs,\n  secondsToAudioTs: secondsToAudioTs,\n  videoTsToSeconds: videoTsToSeconds,\n  audioTsToSeconds: audioTsToSeconds,\n  audioTsToVideoTs: audioTsToVideoTs,\n  videoTsToAudioTs: videoTsToAudioTs,\n  metadataTsToSeconds: metadataTsToSeconds\n};\n","var MAX_UINT32 = Math.pow(2, 32);\n\nvar getUint64 = function(uint8) {\n  var dv = new DataView(uint8.buffer, uint8.byteOffset, uint8.byteLength);\n  var value;\n\n  if (dv.getBigUint64) {\n    value = dv.getBigUint64(0);\n\n    if (value < Number.MAX_SAFE_INTEGER) {\n      return Number(value);\n    }\n\n    return value;\n  }\n\n  return (dv.getUint32(0) * MAX_UINT32) + dv.getUint32(4);\n};\n\nmodule.exports = {\n  getUint64: getUint64,\n  MAX_UINT32: MAX_UINT32\n};\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from \"react\";\nimport { cssValue } from \"./helpers/unitConverter\";\nimport { createAnimation } from \"./helpers/animation\";\nvar beat = createAnimation(\"BeatLoader\", \"50% {transform: scale(0.75);opacity: 0.2} 100% {transform: scale(1);opacity: 1}\", \"beat\");\nfunction BeatLoader(_a) {\n    var _b = _a.loading, loading = _b === void 0 ? true : _b, _c = _a.color, color = _c === void 0 ? \"#000000\" : _c, _d = _a.speedMultiplier, speedMultiplier = _d === void 0 ? 1 : _d, _e = _a.cssOverride, cssOverride = _e === void 0 ? {} : _e, _f = _a.size, size = _f === void 0 ? 15 : _f, _g = _a.margin, margin = _g === void 0 ? 2 : _g, additionalprops = __rest(_a, [\"loading\", \"color\", \"speedMultiplier\", \"cssOverride\", \"size\", \"margin\"]);\n    var wrapper = __assign({ display: \"inherit\" }, cssOverride);\n    var style = function (i) {\n        return {\n            display: \"inline-block\",\n            backgroundColor: color,\n            width: cssValue(size),\n            height: cssValue(size),\n            margin: cssValue(margin),\n            borderRadius: \"100%\",\n            animation: \"\".concat(beat, \" \").concat(0.7 / speedMultiplier, \"s \").concat(i % 2 ? \"0s\" : \"\".concat(0.35 / speedMultiplier, \"s\"), \" infinite linear\"),\n            animationFillMode: \"both\",\n        };\n    };\n    if (!loading) {\n        return null;\n    }\n    return (React.createElement(\"span\", __assign({ style: wrapper }, additionalprops),\n        React.createElement(\"span\", { style: style(1) }),\n        React.createElement(\"span\", { style: style(2) }),\n        React.createElement(\"span\", { style: style(3) })));\n}\nexport default BeatLoader;\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from \"react\";\nimport { createAnimation } from \"./helpers/animation\";\nimport { cssValue } from \"./helpers/unitConverter\";\nvar sync = createAnimation(\"SyncLoader\", \"33% {transform: translateY(10px)}\\n  66% {transform: translateY(-10px)}\\n  100% {transform: translateY(0)}\", \"sync\");\nfunction SyncLoader(_a) {\n    var _b = _a.loading, loading = _b === void 0 ? true : _b, _c = _a.color, color = _c === void 0 ? \"#000000\" : _c, _d = _a.speedMultiplier, speedMultiplier = _d === void 0 ? 1 : _d, _e = _a.cssOverride, cssOverride = _e === void 0 ? {} : _e, _f = _a.size, size = _f === void 0 ? 15 : _f, _g = _a.margin, margin = _g === void 0 ? 2 : _g, additionalprops = __rest(_a, [\"loading\", \"color\", \"speedMultiplier\", \"cssOverride\", \"size\", \"margin\"]);\n    var wrapper = __assign({ display: \"inherit\" }, cssOverride);\n    var style = function (i) {\n        return {\n            backgroundColor: color,\n            width: cssValue(size),\n            height: cssValue(size),\n            margin: cssValue(margin),\n            borderRadius: \"100%\",\n            display: \"inline-block\",\n            animation: \"\".concat(sync, \" \").concat(0.6 / speedMultiplier, \"s \").concat(i * 0.07, \"s infinite ease-in-out\"),\n            animationFillMode: \"both\",\n        };\n    };\n    if (!loading) {\n        return null;\n    }\n    return (React.createElement(\"span\", __assign({ style: wrapper }, additionalprops),\n        React.createElement(\"span\", { style: style(1) }),\n        React.createElement(\"span\", { style: style(2) }),\n        React.createElement(\"span\", { style: style(3) })));\n}\nexport default SyncLoader;\n","export var createAnimation = function (loaderName, frames, suffix) {\n    var animationName = \"react-spinners-\".concat(loaderName, \"-\").concat(suffix);\n    if (typeof window == \"undefined\" || !window.document) {\n        return animationName;\n    }\n    var styleEl = document.createElement(\"style\");\n    document.head.appendChild(styleEl);\n    var styleSheet = styleEl.sheet;\n    var keyFrames = \"\\n    @keyframes \".concat(animationName, \" {\\n      \").concat(frames, \"\\n    }\\n  \");\n    if (styleSheet) {\n        styleSheet.insertRule(keyFrames, 0);\n    }\n    return animationName;\n};\n","var cssUnit = {\n    cm: true,\n    mm: true,\n    in: true,\n    px: true,\n    pt: true,\n    pc: true,\n    em: true,\n    ex: true,\n    ch: true,\n    rem: true,\n    vw: true,\n    vh: true,\n    vmin: true,\n    vmax: true,\n    \"%\": true,\n};\n/**\n * If size is a number, append px to the value as default unit.\n * If size is a string, validate against list of valid units.\n * If unit is valid, return size as is.\n * If unit is invalid, console warn issue, replace with px as the unit.\n *\n * @param {(number | string)} size\n * @return {LengthObject} LengthObject\n */\nexport function parseLengthAndUnit(size) {\n    if (typeof size === \"number\") {\n        return {\n            value: size,\n            unit: \"px\",\n        };\n    }\n    var value;\n    var valueString = (size.match(/^[0-9.]*/) || \"\").toString();\n    if (valueString.includes(\".\")) {\n        value = parseFloat(valueString);\n    }\n    else {\n        value = parseInt(valueString, 10);\n    }\n    var unit = (size.match(/[^0-9]*$/) || \"\").toString();\n    if (cssUnit[unit]) {\n        return {\n            value: value,\n            unit: unit,\n        };\n    }\n    console.warn(\"React Spinners: \".concat(size, \" is not a valid css value. Defaulting to \").concat(value, \"px.\"));\n    return {\n        value: value,\n        unit: \"px\",\n    };\n}\n/**\n * Take value as an input and return valid css value\n *\n * @param {(number | string)} value\n * @return {string} valid css value\n */\nexport function cssValue(value) {\n    var lengthWithunit = parseLengthAndUnit(value);\n    return \"\".concat(lengthWithunit.value).concat(lengthWithunit.unit);\n}\n","module.exports = SafeParseTuple\n\nfunction SafeParseTuple(obj, reviver) {\n    var json\n    var error = null\n\n    try {\n        json = JSON.parse(obj, reviver)\n    } catch (err) {\n        error = err\n    }\n\n    return [error, json]\n}\n","// see https://tools.ietf.org/html/rfc1808\n\n(function (root) {\n  var URL_REGEX =\n    /^(?=((?:[a-zA-Z0-9+\\-.]+:)?))\\1(?=((?:\\/\\/[^\\/?#]*)?))\\2(?=((?:(?:[^?#\\/]*\\/)*[^;?#\\/]*)?))\\3((?:;[^?#]*)?)(\\?[^#]*)?(#[^]*)?$/;\n  var FIRST_SEGMENT_REGEX = /^(?=([^\\/?#]*))\\1([^]*)$/;\n  var SLASH_DOT_REGEX = /(?:\\/|^)\\.(?=\\/)/g;\n  var SLASH_DOT_DOT_REGEX = /(?:\\/|^)\\.\\.\\/(?!\\.\\.\\/)[^\\/]*(?=\\/)/g;\n\n  var URLToolkit = {\n    // If opts.alwaysNormalize is true then the path will always be normalized even when it starts with / or //\n    // E.g\n    // With opts.alwaysNormalize = false (default, spec compliant)\n    // http://a.com/b/cd + /e/f/../g => http://a.com/e/f/../g\n    // With opts.alwaysNormalize = true (not spec compliant)\n    // http://a.com/b/cd + /e/f/../g => http://a.com/e/g\n    buildAbsoluteURL: function (baseURL, relativeURL, opts) {\n      opts = opts || {};\n      // remove any remaining space and CRLF\n      baseURL = baseURL.trim();\n      relativeURL = relativeURL.trim();\n      if (!relativeURL) {\n        // 2a) If the embedded URL is entirely empty, it inherits the\n        // entire base URL (i.e., is set equal to the base URL)\n        // and we are done.\n        if (!opts.alwaysNormalize) {\n          return baseURL;\n        }\n        var basePartsForNormalise = URLToolkit.parseURL(baseURL);\n        if (!basePartsForNormalise) {\n          throw new Error('Error trying to parse base URL.');\n        }\n        basePartsForNormalise.path = URLToolkit.normalizePath(\n          basePartsForNormalise.path\n        );\n        return URLToolkit.buildURLFromParts(basePartsForNormalise);\n      }\n      var relativeParts = URLToolkit.parseURL(relativeURL);\n      if (!relativeParts) {\n        throw new Error('Error trying to parse relative URL.');\n      }\n      if (relativeParts.scheme) {\n        // 2b) If the embedded URL starts with a scheme name, it is\n        // interpreted as an absolute URL and we are done.\n        if (!opts.alwaysNormalize) {\n          return relativeURL;\n        }\n        relativeParts.path = URLToolkit.normalizePath(relativeParts.path);\n        return URLToolkit.buildURLFromParts(relativeParts);\n      }\n      var baseParts = URLToolkit.parseURL(baseURL);\n      if (!baseParts) {\n        throw new Error('Error trying to parse base URL.');\n      }\n      if (!baseParts.netLoc && baseParts.path && baseParts.path[0] !== '/') {\n        // If netLoc missing and path doesn't start with '/', assume everthing before the first '/' is the netLoc\n        // This causes 'example.com/a' to be handled as '//example.com/a' instead of '/example.com/a'\n        var pathParts = FIRST_SEGMENT_REGEX.exec(baseParts.path);\n        baseParts.netLoc = pathParts[1];\n        baseParts.path = pathParts[2];\n      }\n      if (baseParts.netLoc && !baseParts.path) {\n        baseParts.path = '/';\n      }\n      var builtParts = {\n        // 2c) Otherwise, the embedded URL inherits the scheme of\n        // the base URL.\n        scheme: baseParts.scheme,\n        netLoc: relativeParts.netLoc,\n        path: null,\n        params: relativeParts.params,\n        query: relativeParts.query,\n        fragment: relativeParts.fragment,\n      };\n      if (!relativeParts.netLoc) {\n        // 3) If the embedded URL's <net_loc> is non-empty, we skip to\n        // Step 7.  Otherwise, the embedded URL inherits the <net_loc>\n        // (if any) of the base URL.\n        builtParts.netLoc = baseParts.netLoc;\n        // 4) If the embedded URL path is preceded by a slash \"/\", the\n        // path is not relative and we skip to Step 7.\n        if (relativeParts.path[0] !== '/') {\n          if (!relativeParts.path) {\n            // 5) If the embedded URL path is empty (and not preceded by a\n            // slash), then the embedded URL inherits the base URL path\n            builtParts.path = baseParts.path;\n            // 5a) if the embedded URL's <params> is non-empty, we skip to\n            // step 7; otherwise, it inherits the <params> of the base\n            // URL (if any) and\n            if (!relativeParts.params) {\n              builtParts.params = baseParts.params;\n              // 5b) if the embedded URL's <query> is non-empty, we skip to\n              // step 7; otherwise, it inherits the <query> of the base\n              // URL (if any) and we skip to step 7.\n              if (!relativeParts.query) {\n                builtParts.query = baseParts.query;\n              }\n            }\n          } else {\n            // 6) The last segment of the base URL's path (anything\n            // following the rightmost slash \"/\", or the entire path if no\n            // slash is present) is removed and the embedded URL's path is\n            // appended in its place.\n            var baseURLPath = baseParts.path;\n            var newPath =\n              baseURLPath.substring(0, baseURLPath.lastIndexOf('/') + 1) +\n              relativeParts.path;\n            builtParts.path = URLToolkit.normalizePath(newPath);\n          }\n        }\n      }\n      if (builtParts.path === null) {\n        builtParts.path = opts.alwaysNormalize\n          ? URLToolkit.normalizePath(relativeParts.path)\n          : relativeParts.path;\n      }\n      return URLToolkit.buildURLFromParts(builtParts);\n    },\n    parseURL: function (url) {\n      var parts = URL_REGEX.exec(url);\n      if (!parts) {\n        return null;\n      }\n      return {\n        scheme: parts[1] || '',\n        netLoc: parts[2] || '',\n        path: parts[3] || '',\n        params: parts[4] || '',\n        query: parts[5] || '',\n        fragment: parts[6] || '',\n      };\n    },\n    normalizePath: function (path) {\n      // The following operations are\n      // then applied, in order, to the new path:\n      // 6a) All occurrences of \"./\", where \".\" is a complete path\n      // segment, are removed.\n      // 6b) If the path ends with \".\" as a complete path segment,\n      // that \".\" is removed.\n      path = path.split('').reverse().join('').replace(SLASH_DOT_REGEX, '');\n      // 6c) All occurrences of \"<segment>/../\", where <segment> is a\n      // complete path segment not equal to \"..\", are removed.\n      // Removal of these path segments is performed iteratively,\n      // removing the leftmost matching pattern on each iteration,\n      // until no matching pattern remains.\n      // 6d) If the path ends with \"<segment>/..\", where <segment> is a\n      // complete path segment not equal to \"..\", that\n      // \"<segment>/..\" is removed.\n      while (\n        path.length !== (path = path.replace(SLASH_DOT_DOT_REGEX, '')).length\n      ) {}\n      return path.split('').reverse().join('');\n    },\n    buildURLFromParts: function (parts) {\n      return (\n        parts.scheme +\n        parts.netLoc +\n        parts.path +\n        parts.params +\n        parts.query +\n        parts.fragment\n      );\n    },\n  };\n\n  if (typeof exports === 'object' && typeof module === 'object')\n    module.exports = URLToolkit;\n  else if (typeof define === 'function' && define.amd)\n    define([], function () {\n      return URLToolkit;\n    });\n  else if (typeof exports === 'object') exports['URLToolkit'] = URLToolkit;\n  else root['URLToolkit'] = URLToolkit;\n})(this);\n","import URLToolkit from 'url-toolkit';\nimport window from 'global/window';\nvar DEFAULT_LOCATION = 'http://example.com';\n\nvar resolveUrl = function resolveUrl(baseUrl, relativeUrl) {\n  // return early if we don't need to resolve\n  if (/^[a-z]+:/i.test(relativeUrl)) {\n    return relativeUrl;\n  } // if baseUrl is a data URI, ignore it and resolve everything relative to window.location\n\n\n  if (/^data:/.test(baseUrl)) {\n    baseUrl = window.location && window.location.href || '';\n  } // IE11 supports URL but not the URL constructor\n  // feature detect the behavior we want\n\n\n  var nativeURL = typeof window.URL === 'function';\n  var protocolLess = /^\\/\\//.test(baseUrl); // remove location if window.location isn't available (i.e. we're in node)\n  // and if baseUrl isn't an absolute url\n\n  var removeLocation = !window.location && !/\\/\\//i.test(baseUrl); // if the base URL is relative then combine with the current location\n\n  if (nativeURL) {\n    baseUrl = new window.URL(baseUrl, window.location || DEFAULT_LOCATION);\n  } else if (!/\\/\\//i.test(baseUrl)) {\n    baseUrl = URLToolkit.buildAbsoluteURL(window.location && window.location.href || '', baseUrl);\n  }\n\n  if (nativeURL) {\n    var newUrl = new URL(relativeUrl, baseUrl); // if we're a protocol-less url, remove the protocol\n    // and if we're location-less, remove the location\n    // otherwise, return the url unmodified\n\n    if (removeLocation) {\n      return newUrl.href.slice(DEFAULT_LOCATION.length);\n    } else if (protocolLess) {\n      return newUrl.href.slice(newUrl.protocol.length);\n    }\n\n    return newUrl.href;\n  }\n\n  return URLToolkit.buildAbsoluteURL(baseUrl, relativeUrl);\n};\n\nexport default resolveUrl;","/**\n * @file stream.js\n */\n\n/**\n * A lightweight readable stream implemention that handles event dispatching.\n *\n * @class Stream\n */\nvar Stream = /*#__PURE__*/function () {\n  function Stream() {\n    this.listeners = {};\n  }\n  /**\n   * Add a listener for a specified event type.\n   *\n   * @param {string} type the event name\n   * @param {Function} listener the callback to be invoked when an event of\n   * the specified type occurs\n   */\n\n\n  var _proto = Stream.prototype;\n\n  _proto.on = function on(type, listener) {\n    if (!this.listeners[type]) {\n      this.listeners[type] = [];\n    }\n\n    this.listeners[type].push(listener);\n  }\n  /**\n   * Remove a listener for a specified event type.\n   *\n   * @param {string} type the event name\n   * @param {Function} listener  a function previously registered for this\n   * type of event through `on`\n   * @return {boolean} if we could turn it off or not\n   */\n  ;\n\n  _proto.off = function off(type, listener) {\n    if (!this.listeners[type]) {\n      return false;\n    }\n\n    var index = this.listeners[type].indexOf(listener); // TODO: which is better?\n    // In Video.js we slice listener functions\n    // on trigger so that it does not mess up the order\n    // while we loop through.\n    //\n    // Here we slice on off so that the loop in trigger\n    // can continue using it's old reference to loop without\n    // messing up the order.\n\n    this.listeners[type] = this.listeners[type].slice(0);\n    this.listeners[type].splice(index, 1);\n    return index > -1;\n  }\n  /**\n   * Trigger an event of the specified type on this stream. Any additional\n   * arguments to this function are passed as parameters to event listeners.\n   *\n   * @param {string} type the event name\n   */\n  ;\n\n  _proto.trigger = function trigger(type) {\n    var callbacks = this.listeners[type];\n\n    if (!callbacks) {\n      return;\n    } // Slicing the arguments on every invocation of this method\n    // can add a significant amount of overhead. Avoid the\n    // intermediate object creation for the common case of a\n    // single callback argument\n\n\n    if (arguments.length === 2) {\n      var length = callbacks.length;\n\n      for (var i = 0; i < length; ++i) {\n        callbacks[i].call(this, arguments[1]);\n      }\n    } else {\n      var args = Array.prototype.slice.call(arguments, 1);\n      var _length = callbacks.length;\n\n      for (var _i = 0; _i < _length; ++_i) {\n        callbacks[_i].apply(this, args);\n      }\n    }\n  }\n  /**\n   * Destroys the stream and cleans up.\n   */\n  ;\n\n  _proto.dispose = function dispose() {\n    this.listeners = {};\n  }\n  /**\n   * Forwards all `data` events on this stream to the destination stream. The\n   * destination stream should provide a method `push` to receive the data\n   * events as they arrive.\n   *\n   * @param {Stream} destination the stream that will receive all `data` events\n   * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n   */\n  ;\n\n  _proto.pipe = function pipe(destination) {\n    this.on('data', function (data) {\n      destination.push(data);\n    });\n  };\n\n  return Stream;\n}();\n\nexport { Stream as default };","import window from 'global/window';\n\nvar atob = function atob(s) {\n  return window.atob ? window.atob(s) : Buffer.from(s, 'base64').toString('binary');\n};\n\nexport default function decodeB64ToUint8Array(b64Text) {\n  var decodedString = atob(b64Text);\n  var array = new Uint8Array(decodedString.length);\n\n  for (var i = 0; i < decodedString.length; i++) {\n    array[i] = decodedString.charCodeAt(i);\n  }\n\n  return array;\n}","/*! @name m3u8-parser @version 6.2.0 @license Apache-2.0 */\nimport Stream from '@videojs/vhs-utils/es/stream.js';\nimport _extends from '@babel/runtime/helpers/extends';\nimport decodeB64ToUint8Array from '@videojs/vhs-utils/es/decode-b64-to-uint8-array.js';\n\n/**\n * @file m3u8/line-stream.js\n */\n/**\n * A stream that buffers string input and generates a `data` event for each\n * line.\n *\n * @class LineStream\n * @extends Stream\n */\n\nclass LineStream extends Stream {\n  constructor() {\n    super();\n    this.buffer = '';\n  }\n  /**\n   * Add new data to be parsed.\n   *\n   * @param {string} data the text to process\n   */\n\n\n  push(data) {\n    let nextNewline;\n    this.buffer += data;\n    nextNewline = this.buffer.indexOf('\\n');\n\n    for (; nextNewline > -1; nextNewline = this.buffer.indexOf('\\n')) {\n      this.trigger('data', this.buffer.substring(0, nextNewline));\n      this.buffer = this.buffer.substring(nextNewline + 1);\n    }\n  }\n\n}\n\nconst TAB = String.fromCharCode(0x09);\n\nconst parseByterange = function (byterangeString) {\n  // optionally match and capture 0+ digits before `@`\n  // optionally match and capture 0+ digits after `@`\n  const match = /([0-9.]*)?@?([0-9.]*)?/.exec(byterangeString || '');\n  const result = {};\n\n  if (match[1]) {\n    result.length = parseInt(match[1], 10);\n  }\n\n  if (match[2]) {\n    result.offset = parseInt(match[2], 10);\n  }\n\n  return result;\n};\n/**\n * \"forgiving\" attribute list psuedo-grammar:\n * attributes -> keyvalue (',' keyvalue)*\n * keyvalue   -> key '=' value\n * key        -> [^=]*\n * value      -> '\"' [^\"]* '\"' | [^,]*\n */\n\n\nconst attributeSeparator = function () {\n  const key = '[^=]*';\n  const value = '\"[^\"]*\"|[^,]*';\n  const keyvalue = '(?:' + key + ')=(?:' + value + ')';\n  return new RegExp('(?:^|,)(' + keyvalue + ')');\n};\n/**\n * Parse attributes from a line given the separator\n *\n * @param {string} attributes the attribute line to parse\n */\n\n\nconst parseAttributes = function (attributes) {\n  const result = {};\n\n  if (!attributes) {\n    return result;\n  } // split the string using attributes as the separator\n\n\n  const attrs = attributes.split(attributeSeparator());\n  let i = attrs.length;\n  let attr;\n\n  while (i--) {\n    // filter out unmatched portions of the string\n    if (attrs[i] === '') {\n      continue;\n    } // split the key and value\n\n\n    attr = /([^=]*)=(.*)/.exec(attrs[i]).slice(1); // trim whitespace and remove optional quotes around the value\n\n    attr[0] = attr[0].replace(/^\\s+|\\s+$/g, '');\n    attr[1] = attr[1].replace(/^\\s+|\\s+$/g, '');\n    attr[1] = attr[1].replace(/^['\"](.*)['\"]$/g, '$1');\n    result[attr[0]] = attr[1];\n  }\n\n  return result;\n};\n/**\n * A line-level M3U8 parser event stream. It expects to receive input one\n * line at a time and performs a context-free parse of its contents. A stream\n * interpretation of a manifest can be useful if the manifest is expected to\n * be too large to fit comfortably into memory or the entirety of the input\n * is not immediately available. Otherwise, it's probably much easier to work\n * with a regular `Parser` object.\n *\n * Produces `data` events with an object that captures the parser's\n * interpretation of the input. That object has a property `tag` that is one\n * of `uri`, `comment`, or `tag`. URIs only have a single additional\n * property, `line`, which captures the entirety of the input without\n * interpretation. Comments similarly have a single additional property\n * `text` which is the input without the leading `#`.\n *\n * Tags always have a property `tagType` which is the lower-cased version of\n * the M3U8 directive without the `#EXT` or `#EXT-X-` prefix. For instance,\n * `#EXT-X-MEDIA-SEQUENCE` becomes `media-sequence` when parsed. Unrecognized\n * tags are given the tag type `unknown` and a single additional property\n * `data` with the remainder of the input.\n *\n * @class ParseStream\n * @extends Stream\n */\n\n\nclass ParseStream extends Stream {\n  constructor() {\n    super();\n    this.customParsers = [];\n    this.tagMappers = [];\n  }\n  /**\n   * Parses an additional line of input.\n   *\n   * @param {string} line a single line of an M3U8 file to parse\n   */\n\n\n  push(line) {\n    let match;\n    let event; // strip whitespace\n\n    line = line.trim();\n\n    if (line.length === 0) {\n      // ignore empty lines\n      return;\n    } // URIs\n\n\n    if (line[0] !== '#') {\n      this.trigger('data', {\n        type: 'uri',\n        uri: line\n      });\n      return;\n    } // map tags\n\n\n    const newLines = this.tagMappers.reduce((acc, mapper) => {\n      const mappedLine = mapper(line); // skip if unchanged\n\n      if (mappedLine === line) {\n        return acc;\n      }\n\n      return acc.concat([mappedLine]);\n    }, [line]);\n    newLines.forEach(newLine => {\n      for (let i = 0; i < this.customParsers.length; i++) {\n        if (this.customParsers[i].call(this, newLine)) {\n          return;\n        }\n      } // Comments\n\n\n      if (newLine.indexOf('#EXT') !== 0) {\n        this.trigger('data', {\n          type: 'comment',\n          text: newLine.slice(1)\n        });\n        return;\n      } // strip off any carriage returns here so the regex matching\n      // doesn't have to account for them.\n\n\n      newLine = newLine.replace('\\r', ''); // Tags\n\n      match = /^#EXTM3U/.exec(newLine);\n\n      if (match) {\n        this.trigger('data', {\n          type: 'tag',\n          tagType: 'm3u'\n        });\n        return;\n      }\n\n      match = /^#EXTINF:([0-9\\.]*)?,?(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'inf'\n        };\n\n        if (match[1]) {\n          event.duration = parseFloat(match[1]);\n        }\n\n        if (match[2]) {\n          event.title = match[2];\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-TARGETDURATION:([0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'targetduration'\n        };\n\n        if (match[1]) {\n          event.duration = parseInt(match[1], 10);\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-VERSION:([0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'version'\n        };\n\n        if (match[1]) {\n          event.version = parseInt(match[1], 10);\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-MEDIA-SEQUENCE:(\\-?[0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'media-sequence'\n        };\n\n        if (match[1]) {\n          event.number = parseInt(match[1], 10);\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-DISCONTINUITY-SEQUENCE:(\\-?[0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'discontinuity-sequence'\n        };\n\n        if (match[1]) {\n          event.number = parseInt(match[1], 10);\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-PLAYLIST-TYPE:(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'playlist-type'\n        };\n\n        if (match[1]) {\n          event.playlistType = match[1];\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-BYTERANGE:(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = _extends(parseByterange(match[1]), {\n          type: 'tag',\n          tagType: 'byterange'\n        });\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-ALLOW-CACHE:(YES|NO)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'allow-cache'\n        };\n\n        if (match[1]) {\n          event.allowed = !/NO/.test(match[1]);\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-MAP:(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'map'\n        };\n\n        if (match[1]) {\n          const attributes = parseAttributes(match[1]);\n\n          if (attributes.URI) {\n            event.uri = attributes.URI;\n          }\n\n          if (attributes.BYTERANGE) {\n            event.byterange = parseByterange(attributes.BYTERANGE);\n          }\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-STREAM-INF:(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'stream-inf'\n        };\n\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]);\n\n          if (event.attributes.RESOLUTION) {\n            const split = event.attributes.RESOLUTION.split('x');\n            const resolution = {};\n\n            if (split[0]) {\n              resolution.width = parseInt(split[0], 10);\n            }\n\n            if (split[1]) {\n              resolution.height = parseInt(split[1], 10);\n            }\n\n            event.attributes.RESOLUTION = resolution;\n          }\n\n          if (event.attributes.BANDWIDTH) {\n            event.attributes.BANDWIDTH = parseInt(event.attributes.BANDWIDTH, 10);\n          }\n\n          if (event.attributes['FRAME-RATE']) {\n            event.attributes['FRAME-RATE'] = parseFloat(event.attributes['FRAME-RATE']);\n          }\n\n          if (event.attributes['PROGRAM-ID']) {\n            event.attributes['PROGRAM-ID'] = parseInt(event.attributes['PROGRAM-ID'], 10);\n          }\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-MEDIA:(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'media'\n        };\n\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]);\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-ENDLIST/.exec(newLine);\n\n      if (match) {\n        this.trigger('data', {\n          type: 'tag',\n          tagType: 'endlist'\n        });\n        return;\n      }\n\n      match = /^#EXT-X-DISCONTINUITY/.exec(newLine);\n\n      if (match) {\n        this.trigger('data', {\n          type: 'tag',\n          tagType: 'discontinuity'\n        });\n        return;\n      }\n\n      match = /^#EXT-X-PROGRAM-DATE-TIME:(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'program-date-time'\n        };\n\n        if (match[1]) {\n          event.dateTimeString = match[1];\n          event.dateTimeObject = new Date(match[1]);\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-KEY:(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'key'\n        };\n\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]); // parse the IV string into a Uint32Array\n\n          if (event.attributes.IV) {\n            if (event.attributes.IV.substring(0, 2).toLowerCase() === '0x') {\n              event.attributes.IV = event.attributes.IV.substring(2);\n            }\n\n            event.attributes.IV = event.attributes.IV.match(/.{8}/g);\n            event.attributes.IV[0] = parseInt(event.attributes.IV[0], 16);\n            event.attributes.IV[1] = parseInt(event.attributes.IV[1], 16);\n            event.attributes.IV[2] = parseInt(event.attributes.IV[2], 16);\n            event.attributes.IV[3] = parseInt(event.attributes.IV[3], 16);\n            event.attributes.IV = new Uint32Array(event.attributes.IV);\n          }\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-START:(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'start'\n        };\n\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]);\n          event.attributes['TIME-OFFSET'] = parseFloat(event.attributes['TIME-OFFSET']);\n          event.attributes.PRECISE = /YES/.test(event.attributes.PRECISE);\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-CUE-OUT-CONT:(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'cue-out-cont'\n        };\n\n        if (match[1]) {\n          event.data = match[1];\n        } else {\n          event.data = '';\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-CUE-OUT:(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'cue-out'\n        };\n\n        if (match[1]) {\n          event.data = match[1];\n        } else {\n          event.data = '';\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-CUE-IN:(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'cue-in'\n        };\n\n        if (match[1]) {\n          event.data = match[1];\n        } else {\n          event.data = '';\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-SKIP:(.*)$/.exec(newLine);\n\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'skip'\n        };\n        event.attributes = parseAttributes(match[1]);\n\n        if (event.attributes.hasOwnProperty('SKIPPED-SEGMENTS')) {\n          event.attributes['SKIPPED-SEGMENTS'] = parseInt(event.attributes['SKIPPED-SEGMENTS'], 10);\n        }\n\n        if (event.attributes.hasOwnProperty('RECENTLY-REMOVED-DATERANGES')) {\n          event.attributes['RECENTLY-REMOVED-DATERANGES'] = event.attributes['RECENTLY-REMOVED-DATERANGES'].split(TAB);\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-PART:(.*)$/.exec(newLine);\n\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'part'\n        };\n        event.attributes = parseAttributes(match[1]);\n        ['DURATION'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = parseFloat(event.attributes[key]);\n          }\n        });\n        ['INDEPENDENT', 'GAP'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = /YES/.test(event.attributes[key]);\n          }\n        });\n\n        if (event.attributes.hasOwnProperty('BYTERANGE')) {\n          event.attributes.byterange = parseByterange(event.attributes.BYTERANGE);\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-SERVER-CONTROL:(.*)$/.exec(newLine);\n\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'server-control'\n        };\n        event.attributes = parseAttributes(match[1]);\n        ['CAN-SKIP-UNTIL', 'PART-HOLD-BACK', 'HOLD-BACK'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = parseFloat(event.attributes[key]);\n          }\n        });\n        ['CAN-SKIP-DATERANGES', 'CAN-BLOCK-RELOAD'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = /YES/.test(event.attributes[key]);\n          }\n        });\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-PART-INF:(.*)$/.exec(newLine);\n\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'part-inf'\n        };\n        event.attributes = parseAttributes(match[1]);\n        ['PART-TARGET'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = parseFloat(event.attributes[key]);\n          }\n        });\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-PRELOAD-HINT:(.*)$/.exec(newLine);\n\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'preload-hint'\n        };\n        event.attributes = parseAttributes(match[1]);\n        ['BYTERANGE-START', 'BYTERANGE-LENGTH'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = parseInt(event.attributes[key], 10);\n            const subkey = key === 'BYTERANGE-LENGTH' ? 'length' : 'offset';\n            event.attributes.byterange = event.attributes.byterange || {};\n            event.attributes.byterange[subkey] = event.attributes[key]; // only keep the parsed byterange object.\n\n            delete event.attributes[key];\n          }\n        });\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-RENDITION-REPORT:(.*)$/.exec(newLine);\n\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'rendition-report'\n        };\n        event.attributes = parseAttributes(match[1]);\n        ['LAST-MSN', 'LAST-PART'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = parseInt(event.attributes[key], 10);\n          }\n        });\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-DATERANGE:(.*)$/.exec(newLine);\n\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'daterange'\n        };\n        event.attributes = parseAttributes(match[1]);\n        ['ID', 'CLASS'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = String(event.attributes[key]);\n          }\n        });\n        ['START-DATE', 'END-DATE'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = new Date(event.attributes[key]);\n          }\n        });\n        ['DURATION', 'PLANNED-DURATION'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = parseFloat(event.attributes[key]);\n          }\n        });\n        ['END-ON-NEXT'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = /YES/i.test(event.attributes[key]);\n          }\n        });\n        ['SCTE35-CMD', ' SCTE35-OUT', 'SCTE35-IN'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = event.attributes[key].toString(16);\n          }\n        });\n        const clientAttributePattern = /^X-([A-Z]+-)+[A-Z]+$/;\n\n        for (const key in event.attributes) {\n          if (!clientAttributePattern.test(key)) {\n            continue;\n          }\n\n          const isHexaDecimal = /[0-9A-Fa-f]{6}/g.test(event.attributes[key]);\n          const isDecimalFloating = /^\\d+(\\.\\d+)?$/.test(event.attributes[key]);\n          event.attributes[key] = isHexaDecimal ? event.attributes[key].toString(16) : isDecimalFloating ? parseFloat(event.attributes[key]) : String(event.attributes[key]);\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-INDEPENDENT-SEGMENTS/.exec(newLine);\n\n      if (match) {\n        this.trigger('data', {\n          type: 'tag',\n          tagType: 'independent-segments'\n        });\n        return;\n      } // unknown tag type\n\n\n      this.trigger('data', {\n        type: 'tag',\n        data: newLine.slice(4)\n      });\n    });\n  }\n  /**\n   * Add a parser for custom headers\n   *\n   * @param {Object}   options              a map of options for the added parser\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {string}   options.customType   the custom type to register to the output\n   * @param {Function} [options.dataParser] function to parse the line into an object\n   * @param {boolean}  [options.segment]    should tag data be attached to the segment object\n   */\n\n\n  addParser({\n    expression,\n    customType,\n    dataParser,\n    segment\n  }) {\n    if (typeof dataParser !== 'function') {\n      dataParser = line => line;\n    }\n\n    this.customParsers.push(line => {\n      const match = expression.exec(line);\n\n      if (match) {\n        this.trigger('data', {\n          type: 'custom',\n          data: dataParser(line),\n          customType,\n          segment\n        });\n        return true;\n      }\n    });\n  }\n  /**\n   * Add a custom header mapper\n   *\n   * @param {Object}   options\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {Function} options.map          function to translate tag into a different tag\n   */\n\n\n  addTagMapper({\n    expression,\n    map\n  }) {\n    const mapFn = line => {\n      if (expression.test(line)) {\n        return map(line);\n      }\n\n      return line;\n    };\n\n    this.tagMappers.push(mapFn);\n  }\n\n}\n\nconst camelCase = str => str.toLowerCase().replace(/-(\\w)/g, a => a[1].toUpperCase());\n\nconst camelCaseKeys = function (attributes) {\n  const result = {};\n  Object.keys(attributes).forEach(function (key) {\n    result[camelCase(key)] = attributes[key];\n  });\n  return result;\n}; // set SERVER-CONTROL hold back based upon targetDuration and partTargetDuration\n// we need this helper because defaults are based upon targetDuration and\n// partTargetDuration being set, but they may not be if SERVER-CONTROL appears before\n// target durations are set.\n\n\nconst setHoldBack = function (manifest) {\n  const {\n    serverControl,\n    targetDuration,\n    partTargetDuration\n  } = manifest;\n\n  if (!serverControl) {\n    return;\n  }\n\n  const tag = '#EXT-X-SERVER-CONTROL';\n  const hb = 'holdBack';\n  const phb = 'partHoldBack';\n  const minTargetDuration = targetDuration && targetDuration * 3;\n  const minPartDuration = partTargetDuration && partTargetDuration * 2;\n\n  if (targetDuration && !serverControl.hasOwnProperty(hb)) {\n    serverControl[hb] = minTargetDuration;\n    this.trigger('info', {\n      message: `${tag} defaulting HOLD-BACK to targetDuration * 3 (${minTargetDuration}).`\n    });\n  }\n\n  if (minTargetDuration && serverControl[hb] < minTargetDuration) {\n    this.trigger('warn', {\n      message: `${tag} clamping HOLD-BACK (${serverControl[hb]}) to targetDuration * 3 (${minTargetDuration})`\n    });\n    serverControl[hb] = minTargetDuration;\n  } // default no part hold back to part target duration * 3\n\n\n  if (partTargetDuration && !serverControl.hasOwnProperty(phb)) {\n    serverControl[phb] = partTargetDuration * 3;\n    this.trigger('info', {\n      message: `${tag} defaulting PART-HOLD-BACK to partTargetDuration * 3 (${serverControl[phb]}).`\n    });\n  } // if part hold back is too small default it to part target duration * 2\n\n\n  if (partTargetDuration && serverControl[phb] < minPartDuration) {\n    this.trigger('warn', {\n      message: `${tag} clamping PART-HOLD-BACK (${serverControl[phb]}) to partTargetDuration * 2 (${minPartDuration}).`\n    });\n    serverControl[phb] = minPartDuration;\n  }\n};\n/**\n * A parser for M3U8 files. The current interpretation of the input is\n * exposed as a property `manifest` on parser objects. It's just two lines to\n * create and parse a manifest once you have the contents available as a string:\n *\n * ```js\n * var parser = new m3u8.Parser();\n * parser.push(xhr.responseText);\n * ```\n *\n * New input can later be applied to update the manifest object by calling\n * `push` again.\n *\n * The parser attempts to create a usable manifest object even if the\n * underlying input is somewhat nonsensical. It emits `info` and `warning`\n * events during the parse if it encounters input that seems invalid or\n * requires some property of the manifest object to be defaulted.\n *\n * @class Parser\n * @extends Stream\n */\n\n\nclass Parser extends Stream {\n  constructor() {\n    super();\n    this.lineStream = new LineStream();\n    this.parseStream = new ParseStream();\n    this.lineStream.pipe(this.parseStream);\n    /* eslint-disable consistent-this */\n\n    const self = this;\n    /* eslint-enable consistent-this */\n\n    const uris = [];\n    let currentUri = {}; // if specified, the active EXT-X-MAP definition\n\n    let currentMap; // if specified, the active decryption key\n\n    let key;\n    let hasParts = false;\n\n    const noop = function () {};\n\n    const defaultMediaGroups = {\n      'AUDIO': {},\n      'VIDEO': {},\n      'CLOSED-CAPTIONS': {},\n      'SUBTITLES': {}\n    }; // This is the Widevine UUID from DASH IF IOP. The same exact string is\n    // used in MPDs with Widevine encrypted streams.\n\n    const widevineUuid = 'urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed'; // group segments into numbered timelines delineated by discontinuities\n\n    let currentTimeline = 0; // the manifest is empty until the parse stream begins delivering data\n\n    this.manifest = {\n      allowCache: true,\n      discontinuityStarts: [],\n      segments: []\n    }; // keep track of the last seen segment's byte range end, as segments are not required\n    // to provide the offset, in which case it defaults to the next byte after the\n    // previous segment\n\n    let lastByterangeEnd = 0; // keep track of the last seen part's byte range end.\n\n    let lastPartByterangeEnd = 0;\n    const daterangeTags = {};\n    this.on('end', () => {\n      // only add preloadSegment if we don't yet have a uri for it.\n      // and we actually have parts/preloadHints\n      if (currentUri.uri || !currentUri.parts && !currentUri.preloadHints) {\n        return;\n      }\n\n      if (!currentUri.map && currentMap) {\n        currentUri.map = currentMap;\n      }\n\n      if (!currentUri.key && key) {\n        currentUri.key = key;\n      }\n\n      if (!currentUri.timeline && typeof currentTimeline === 'number') {\n        currentUri.timeline = currentTimeline;\n      }\n\n      this.manifest.preloadSegment = currentUri;\n    }); // update the manifest with the m3u8 entry from the parse stream\n\n    this.parseStream.on('data', function (entry) {\n      let mediaGroup;\n      let rendition;\n      ({\n        tag() {\n          // switch based on the tag type\n          (({\n            version() {\n              if (entry.version) {\n                this.manifest.version = entry.version;\n              }\n            },\n\n            'allow-cache'() {\n              this.manifest.allowCache = entry.allowed;\n\n              if (!('allowed' in entry)) {\n                this.trigger('info', {\n                  message: 'defaulting allowCache to YES'\n                });\n                this.manifest.allowCache = true;\n              }\n            },\n\n            byterange() {\n              const byterange = {};\n\n              if ('length' in entry) {\n                currentUri.byterange = byterange;\n                byterange.length = entry.length;\n\n                if (!('offset' in entry)) {\n                  /*\n                   * From the latest spec (as of this writing):\n                   * https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-4.3.2.2\n                   *\n                   * Same text since EXT-X-BYTERANGE's introduction in draft 7:\n                   * https://tools.ietf.org/html/draft-pantos-http-live-streaming-07#section-3.3.1)\n                   *\n                   * \"If o [offset] is not present, the sub-range begins at the next byte\n                   * following the sub-range of the previous media segment.\"\n                   */\n                  entry.offset = lastByterangeEnd;\n                }\n              }\n\n              if ('offset' in entry) {\n                currentUri.byterange = byterange;\n                byterange.offset = entry.offset;\n              }\n\n              lastByterangeEnd = byterange.offset + byterange.length;\n            },\n\n            endlist() {\n              this.manifest.endList = true;\n            },\n\n            inf() {\n              if (!('mediaSequence' in this.manifest)) {\n                this.manifest.mediaSequence = 0;\n                this.trigger('info', {\n                  message: 'defaulting media sequence to zero'\n                });\n              }\n\n              if (!('discontinuitySequence' in this.manifest)) {\n                this.manifest.discontinuitySequence = 0;\n                this.trigger('info', {\n                  message: 'defaulting discontinuity sequence to zero'\n                });\n              }\n\n              if (entry.duration > 0) {\n                currentUri.duration = entry.duration;\n              }\n\n              if (entry.duration === 0) {\n                currentUri.duration = 0.01;\n                this.trigger('info', {\n                  message: 'updating zero segment duration to a small value'\n                });\n              }\n\n              this.manifest.segments = uris;\n            },\n\n            key() {\n              if (!entry.attributes) {\n                this.trigger('warn', {\n                  message: 'ignoring key declaration without attribute list'\n                });\n                return;\n              } // clear the active encryption key\n\n\n              if (entry.attributes.METHOD === 'NONE') {\n                key = null;\n                return;\n              }\n\n              if (!entry.attributes.URI) {\n                this.trigger('warn', {\n                  message: 'ignoring key declaration without URI'\n                });\n                return;\n              }\n\n              if (entry.attributes.KEYFORMAT === 'com.apple.streamingkeydelivery') {\n                this.manifest.contentProtection = this.manifest.contentProtection || {}; // TODO: add full support for this.\n\n                this.manifest.contentProtection['com.apple.fps.1_0'] = {\n                  attributes: entry.attributes\n                };\n                return;\n              }\n\n              if (entry.attributes.KEYFORMAT === 'com.microsoft.playready') {\n                this.manifest.contentProtection = this.manifest.contentProtection || {}; // TODO: add full support for this.\n\n                this.manifest.contentProtection['com.microsoft.playready'] = {\n                  uri: entry.attributes.URI\n                };\n                return;\n              } // check if the content is encrypted for Widevine\n              // Widevine/HLS spec: https://storage.googleapis.com/wvdocs/Widevine_DRM_HLS.pdf\n\n\n              if (entry.attributes.KEYFORMAT === widevineUuid) {\n                const VALID_METHODS = ['SAMPLE-AES', 'SAMPLE-AES-CTR', 'SAMPLE-AES-CENC'];\n\n                if (VALID_METHODS.indexOf(entry.attributes.METHOD) === -1) {\n                  this.trigger('warn', {\n                    message: 'invalid key method provided for Widevine'\n                  });\n                  return;\n                }\n\n                if (entry.attributes.METHOD === 'SAMPLE-AES-CENC') {\n                  this.trigger('warn', {\n                    message: 'SAMPLE-AES-CENC is deprecated, please use SAMPLE-AES-CTR instead'\n                  });\n                }\n\n                if (entry.attributes.URI.substring(0, 23) !== 'data:text/plain;base64,') {\n                  this.trigger('warn', {\n                    message: 'invalid key URI provided for Widevine'\n                  });\n                  return;\n                }\n\n                if (!(entry.attributes.KEYID && entry.attributes.KEYID.substring(0, 2) === '0x')) {\n                  this.trigger('warn', {\n                    message: 'invalid key ID provided for Widevine'\n                  });\n                  return;\n                } // if Widevine key attributes are valid, store them as `contentProtection`\n                // on the manifest to emulate Widevine tag structure in a DASH mpd\n\n\n                this.manifest.contentProtection = this.manifest.contentProtection || {};\n                this.manifest.contentProtection['com.widevine.alpha'] = {\n                  attributes: {\n                    schemeIdUri: entry.attributes.KEYFORMAT,\n                    // remove '0x' from the key id string\n                    keyId: entry.attributes.KEYID.substring(2)\n                  },\n                  // decode the base64-encoded PSSH box\n                  pssh: decodeB64ToUint8Array(entry.attributes.URI.split(',')[1])\n                };\n                return;\n              }\n\n              if (!entry.attributes.METHOD) {\n                this.trigger('warn', {\n                  message: 'defaulting key method to AES-128'\n                });\n              } // setup an encryption key for upcoming segments\n\n\n              key = {\n                method: entry.attributes.METHOD || 'AES-128',\n                uri: entry.attributes.URI\n              };\n\n              if (typeof entry.attributes.IV !== 'undefined') {\n                key.iv = entry.attributes.IV;\n              }\n            },\n\n            'media-sequence'() {\n              if (!isFinite(entry.number)) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid media sequence: ' + entry.number\n                });\n                return;\n              }\n\n              this.manifest.mediaSequence = entry.number;\n            },\n\n            'discontinuity-sequence'() {\n              if (!isFinite(entry.number)) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid discontinuity sequence: ' + entry.number\n                });\n                return;\n              }\n\n              this.manifest.discontinuitySequence = entry.number;\n              currentTimeline = entry.number;\n            },\n\n            'playlist-type'() {\n              if (!/VOD|EVENT/.test(entry.playlistType)) {\n                this.trigger('warn', {\n                  message: 'ignoring unknown playlist type: ' + entry.playlist\n                });\n                return;\n              }\n\n              this.manifest.playlistType = entry.playlistType;\n            },\n\n            map() {\n              currentMap = {};\n\n              if (entry.uri) {\n                currentMap.uri = entry.uri;\n              }\n\n              if (entry.byterange) {\n                currentMap.byterange = entry.byterange;\n              }\n\n              if (key) {\n                currentMap.key = key;\n              }\n            },\n\n            'stream-inf'() {\n              this.manifest.playlists = uris;\n              this.manifest.mediaGroups = this.manifest.mediaGroups || defaultMediaGroups;\n\n              if (!entry.attributes) {\n                this.trigger('warn', {\n                  message: 'ignoring empty stream-inf attributes'\n                });\n                return;\n              }\n\n              if (!currentUri.attributes) {\n                currentUri.attributes = {};\n              }\n\n              _extends(currentUri.attributes, entry.attributes);\n            },\n\n            media() {\n              this.manifest.mediaGroups = this.manifest.mediaGroups || defaultMediaGroups;\n\n              if (!(entry.attributes && entry.attributes.TYPE && entry.attributes['GROUP-ID'] && entry.attributes.NAME)) {\n                this.trigger('warn', {\n                  message: 'ignoring incomplete or missing media group'\n                });\n                return;\n              } // find the media group, creating defaults as necessary\n\n\n              const mediaGroupType = this.manifest.mediaGroups[entry.attributes.TYPE];\n              mediaGroupType[entry.attributes['GROUP-ID']] = mediaGroupType[entry.attributes['GROUP-ID']] || {};\n              mediaGroup = mediaGroupType[entry.attributes['GROUP-ID']]; // collect the rendition metadata\n\n              rendition = {\n                default: /yes/i.test(entry.attributes.DEFAULT)\n              };\n\n              if (rendition.default) {\n                rendition.autoselect = true;\n              } else {\n                rendition.autoselect = /yes/i.test(entry.attributes.AUTOSELECT);\n              }\n\n              if (entry.attributes.LANGUAGE) {\n                rendition.language = entry.attributes.LANGUAGE;\n              }\n\n              if (entry.attributes.URI) {\n                rendition.uri = entry.attributes.URI;\n              }\n\n              if (entry.attributes['INSTREAM-ID']) {\n                rendition.instreamId = entry.attributes['INSTREAM-ID'];\n              }\n\n              if (entry.attributes.CHARACTERISTICS) {\n                rendition.characteristics = entry.attributes.CHARACTERISTICS;\n              }\n\n              if (entry.attributes.FORCED) {\n                rendition.forced = /yes/i.test(entry.attributes.FORCED);\n              } // insert the new rendition\n\n\n              mediaGroup[entry.attributes.NAME] = rendition;\n            },\n\n            discontinuity() {\n              currentTimeline += 1;\n              currentUri.discontinuity = true;\n              this.manifest.discontinuityStarts.push(uris.length);\n            },\n\n            'program-date-time'() {\n              if (typeof this.manifest.dateTimeString === 'undefined') {\n                // PROGRAM-DATE-TIME is a media-segment tag, but for backwards\n                // compatibility, we add the first occurence of the PROGRAM-DATE-TIME tag\n                // to the manifest object\n                // TODO: Consider removing this in future major version\n                this.manifest.dateTimeString = entry.dateTimeString;\n                this.manifest.dateTimeObject = entry.dateTimeObject;\n              }\n\n              currentUri.dateTimeString = entry.dateTimeString;\n              currentUri.dateTimeObject = entry.dateTimeObject;\n            },\n\n            targetduration() {\n              if (!isFinite(entry.duration) || entry.duration < 0) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid target duration: ' + entry.duration\n                });\n                return;\n              }\n\n              this.manifest.targetDuration = entry.duration;\n              setHoldBack.call(this, this.manifest);\n            },\n\n            start() {\n              if (!entry.attributes || isNaN(entry.attributes['TIME-OFFSET'])) {\n                this.trigger('warn', {\n                  message: 'ignoring start declaration without appropriate attribute list'\n                });\n                return;\n              }\n\n              this.manifest.start = {\n                timeOffset: entry.attributes['TIME-OFFSET'],\n                precise: entry.attributes.PRECISE\n              };\n            },\n\n            'cue-out'() {\n              currentUri.cueOut = entry.data;\n            },\n\n            'cue-out-cont'() {\n              currentUri.cueOutCont = entry.data;\n            },\n\n            'cue-in'() {\n              currentUri.cueIn = entry.data;\n            },\n\n            'skip'() {\n              this.manifest.skip = camelCaseKeys(entry.attributes);\n              this.warnOnMissingAttributes_('#EXT-X-SKIP', entry.attributes, ['SKIPPED-SEGMENTS']);\n            },\n\n            'part'() {\n              hasParts = true; // parts are always specifed before a segment\n\n              const segmentIndex = this.manifest.segments.length;\n              const part = camelCaseKeys(entry.attributes);\n              currentUri.parts = currentUri.parts || [];\n              currentUri.parts.push(part);\n\n              if (part.byterange) {\n                if (!part.byterange.hasOwnProperty('offset')) {\n                  part.byterange.offset = lastPartByterangeEnd;\n                }\n\n                lastPartByterangeEnd = part.byterange.offset + part.byterange.length;\n              }\n\n              const partIndex = currentUri.parts.length - 1;\n              this.warnOnMissingAttributes_(`#EXT-X-PART #${partIndex} for segment #${segmentIndex}`, entry.attributes, ['URI', 'DURATION']);\n\n              if (this.manifest.renditionReports) {\n                this.manifest.renditionReports.forEach((r, i) => {\n                  if (!r.hasOwnProperty('lastPart')) {\n                    this.trigger('warn', {\n                      message: `#EXT-X-RENDITION-REPORT #${i} lacks required attribute(s): LAST-PART`\n                    });\n                  }\n                });\n              }\n            },\n\n            'server-control'() {\n              const attrs = this.manifest.serverControl = camelCaseKeys(entry.attributes);\n\n              if (!attrs.hasOwnProperty('canBlockReload')) {\n                attrs.canBlockReload = false;\n                this.trigger('info', {\n                  message: '#EXT-X-SERVER-CONTROL defaulting CAN-BLOCK-RELOAD to false'\n                });\n              }\n\n              setHoldBack.call(this, this.manifest);\n\n              if (attrs.canSkipDateranges && !attrs.hasOwnProperty('canSkipUntil')) {\n                this.trigger('warn', {\n                  message: '#EXT-X-SERVER-CONTROL lacks required attribute CAN-SKIP-UNTIL which is required when CAN-SKIP-DATERANGES is set'\n                });\n              }\n            },\n\n            'preload-hint'() {\n              // parts are always specifed before a segment\n              const segmentIndex = this.manifest.segments.length;\n              const hint = camelCaseKeys(entry.attributes);\n              const isPart = hint.type && hint.type === 'PART';\n              currentUri.preloadHints = currentUri.preloadHints || [];\n              currentUri.preloadHints.push(hint);\n\n              if (hint.byterange) {\n                if (!hint.byterange.hasOwnProperty('offset')) {\n                  // use last part byterange end or zero if not a part.\n                  hint.byterange.offset = isPart ? lastPartByterangeEnd : 0;\n\n                  if (isPart) {\n                    lastPartByterangeEnd = hint.byterange.offset + hint.byterange.length;\n                  }\n                }\n              }\n\n              const index = currentUri.preloadHints.length - 1;\n              this.warnOnMissingAttributes_(`#EXT-X-PRELOAD-HINT #${index} for segment #${segmentIndex}`, entry.attributes, ['TYPE', 'URI']);\n\n              if (!hint.type) {\n                return;\n              } // search through all preload hints except for the current one for\n              // a duplicate type.\n\n\n              for (let i = 0; i < currentUri.preloadHints.length - 1; i++) {\n                const otherHint = currentUri.preloadHints[i];\n\n                if (!otherHint.type) {\n                  continue;\n                }\n\n                if (otherHint.type === hint.type) {\n                  this.trigger('warn', {\n                    message: `#EXT-X-PRELOAD-HINT #${index} for segment #${segmentIndex} has the same TYPE ${hint.type} as preload hint #${i}`\n                  });\n                }\n              }\n            },\n\n            'rendition-report'() {\n              const report = camelCaseKeys(entry.attributes);\n              this.manifest.renditionReports = this.manifest.renditionReports || [];\n              this.manifest.renditionReports.push(report);\n              const index = this.manifest.renditionReports.length - 1;\n              const required = ['LAST-MSN', 'URI'];\n\n              if (hasParts) {\n                required.push('LAST-PART');\n              }\n\n              this.warnOnMissingAttributes_(`#EXT-X-RENDITION-REPORT #${index}`, entry.attributes, required);\n            },\n\n            'part-inf'() {\n              this.manifest.partInf = camelCaseKeys(entry.attributes);\n              this.warnOnMissingAttributes_('#EXT-X-PART-INF', entry.attributes, ['PART-TARGET']);\n\n              if (this.manifest.partInf.partTarget) {\n                this.manifest.partTargetDuration = this.manifest.partInf.partTarget;\n              }\n\n              setHoldBack.call(this, this.manifest);\n            },\n\n            'daterange'() {\n              this.manifest.daterange = this.manifest.daterange || [];\n              this.manifest.daterange.push(camelCaseKeys(entry.attributes));\n              const index = this.manifest.daterange.length - 1;\n              this.warnOnMissingAttributes_(`#EXT-X-DATERANGE #${index}`, entry.attributes, ['ID', 'START-DATE']);\n              const daterange = this.manifest.daterange[index];\n\n              if (daterange.endDate && daterange.startDate && new Date(daterange.endDate) < new Date(daterange.startDate)) {\n                this.trigger('warn', {\n                  message: 'EXT-X-DATERANGE END-DATE must be equal to or later than the value of the START-DATE'\n                });\n              }\n\n              if (daterange.duration && daterange.duration < 0) {\n                this.trigger('warn', {\n                  message: 'EXT-X-DATERANGE DURATION must not be negative'\n                });\n              }\n\n              if (daterange.plannedDuration && daterange.plannedDuration < 0) {\n                this.trigger('warn', {\n                  message: 'EXT-X-DATERANGE PLANNED-DURATION must not be negative'\n                });\n              }\n\n              const endOnNextYes = !!daterange.endOnNext;\n\n              if (endOnNextYes && !daterange.class) {\n                this.trigger('warn', {\n                  message: 'EXT-X-DATERANGE with an END-ON-NEXT=YES attribute must have a CLASS attribute'\n                });\n              }\n\n              if (endOnNextYes && (daterange.duration || daterange.endDate)) {\n                this.trigger('warn', {\n                  message: 'EXT-X-DATERANGE with an END-ON-NEXT=YES attribute must not contain DURATION or END-DATE attributes'\n                });\n              }\n\n              if (daterange.duration && daterange.endDate) {\n                const startDate = daterange.startDate;\n                const newDateInSeconds = startDate.setSeconds(startDate.getSeconds() + daterange.duration);\n                this.manifest.daterange[index].endDate = new Date(newDateInSeconds);\n              }\n\n              if (daterange && !this.manifest.dateTimeString) {\n                this.trigger('warn', {\n                  message: 'A playlist with EXT-X-DATERANGE tag must contain atleast one EXT-X-PROGRAM-DATE-TIME tag'\n                });\n              }\n\n              if (!daterangeTags[daterange.id]) {\n                daterangeTags[daterange.id] = daterange;\n              } else {\n                for (const attribute in daterangeTags[daterange.id]) {\n                  if (daterangeTags[daterange.id][attribute] !== daterange[attribute]) {\n                    this.trigger('warn', {\n                      message: 'EXT-X-DATERANGE tags with the same ID in a playlist must have the same attributes and same attribute values'\n                    });\n                    break;\n                  }\n                }\n              }\n            },\n\n            'independent-segments'() {\n              this.manifest.independentSegments = true;\n            }\n\n          })[entry.tagType] || noop).call(self);\n        },\n\n        uri() {\n          currentUri.uri = entry.uri;\n          uris.push(currentUri); // if no explicit duration was declared, use the target duration\n\n          if (this.manifest.targetDuration && !('duration' in currentUri)) {\n            this.trigger('warn', {\n              message: 'defaulting segment duration to the target duration'\n            });\n            currentUri.duration = this.manifest.targetDuration;\n          } // annotate with encryption information, if necessary\n\n\n          if (key) {\n            currentUri.key = key;\n          }\n\n          currentUri.timeline = currentTimeline; // annotate with initialization segment information, if necessary\n\n          if (currentMap) {\n            currentUri.map = currentMap;\n          } // reset the last byterange end as it needs to be 0 between parts\n\n\n          lastPartByterangeEnd = 0; // prepare for the next URI\n\n          currentUri = {};\n        },\n\n        comment() {// comments are not important for playback\n        },\n\n        custom() {\n          // if this is segment-level data attach the output to the segment\n          if (entry.segment) {\n            currentUri.custom = currentUri.custom || {};\n            currentUri.custom[entry.customType] = entry.data; // if this is manifest-level data attach to the top level manifest object\n          } else {\n            this.manifest.custom = this.manifest.custom || {};\n            this.manifest.custom[entry.customType] = entry.data;\n          }\n        }\n\n      })[entry.type].call(self);\n    });\n  }\n\n  warnOnMissingAttributes_(identifier, attributes, required) {\n    const missing = [];\n    required.forEach(function (key) {\n      if (!attributes.hasOwnProperty(key)) {\n        missing.push(key);\n      }\n    });\n\n    if (missing.length) {\n      this.trigger('warn', {\n        message: `${identifier} lacks required attribute(s): ${missing.join(', ')}`\n      });\n    }\n  }\n  /**\n   * Parse the input string and update the manifest object.\n   *\n   * @param {string} chunk a potentially incomplete portion of the manifest\n   */\n\n\n  push(chunk) {\n    this.lineStream.push(chunk);\n  }\n  /**\n   * Flush any remaining input. This can be handy if the last line of an M3U8\n   * manifest did not contain a trailing newline but the file has been\n   * completely received.\n   */\n\n\n  end() {\n    // flush any buffered input\n    this.lineStream.push('\\n');\n    this.trigger('end');\n  }\n  /**\n   * Add an additional parser for non-standard tags\n   *\n   * @param {Object}   options              a map of options for the added parser\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {string}   options.type         the type to register to the output\n   * @param {Function} [options.dataParser] function to parse the line into an object\n   * @param {boolean}  [options.segment]    should tag data be attached to the segment object\n   */\n\n\n  addParser(options) {\n    this.parseStream.addParser(options);\n  }\n  /**\n   * Add a custom header mapper\n   *\n   * @param {Object}   options\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {Function} options.map          function to translate tag into a different tag\n   */\n\n\n  addTagMapper(options) {\n    this.parseStream.addTagMapper(options);\n  }\n\n}\n\nexport { LineStream, ParseStream, Parser };\n","import { stringToBytes, toUint8, bytesMatch, bytesToString, toHexString, padStart, bytesToNumber } from './byte-helpers.js';\nimport { getAvcCodec, getHvcCodec, getAv1Codec } from './codec-helpers.js';\nimport { parseOpusHead } from './opus-helpers.js';\n\nvar normalizePath = function normalizePath(path) {\n  if (typeof path === 'string') {\n    return stringToBytes(path);\n  }\n\n  if (typeof path === 'number') {\n    return path;\n  }\n\n  return path;\n};\n\nvar normalizePaths = function normalizePaths(paths) {\n  if (!Array.isArray(paths)) {\n    return [normalizePath(paths)];\n  }\n\n  return paths.map(function (p) {\n    return normalizePath(p);\n  });\n};\n\nvar DESCRIPTORS;\nexport var parseDescriptors = function parseDescriptors(bytes) {\n  bytes = toUint8(bytes);\n  var results = [];\n  var i = 0;\n\n  while (bytes.length > i) {\n    var tag = bytes[i];\n    var size = 0;\n    var headerSize = 0; // tag\n\n    headerSize++;\n    var byte = bytes[headerSize]; // first byte\n\n    headerSize++;\n\n    while (byte & 0x80) {\n      size = (byte & 0x7F) << 7;\n      byte = bytes[headerSize];\n      headerSize++;\n    }\n\n    size += byte & 0x7F;\n\n    for (var z = 0; z < DESCRIPTORS.length; z++) {\n      var _DESCRIPTORS$z = DESCRIPTORS[z],\n          id = _DESCRIPTORS$z.id,\n          parser = _DESCRIPTORS$z.parser;\n\n      if (tag === id) {\n        results.push(parser(bytes.subarray(headerSize, headerSize + size)));\n        break;\n      }\n    }\n\n    i += size + headerSize;\n  }\n\n  return results;\n};\nDESCRIPTORS = [{\n  id: 0x03,\n  parser: function parser(bytes) {\n    var desc = {\n      tag: 0x03,\n      id: bytes[0] << 8 | bytes[1],\n      flags: bytes[2],\n      size: 3,\n      dependsOnEsId: 0,\n      ocrEsId: 0,\n      descriptors: [],\n      url: ''\n    }; // depends on es id\n\n    if (desc.flags & 0x80) {\n      desc.dependsOnEsId = bytes[desc.size] << 8 | bytes[desc.size + 1];\n      desc.size += 2;\n    } // url\n\n\n    if (desc.flags & 0x40) {\n      var len = bytes[desc.size];\n      desc.url = bytesToString(bytes.subarray(desc.size + 1, desc.size + 1 + len));\n      desc.size += len;\n    } // ocr es id\n\n\n    if (desc.flags & 0x20) {\n      desc.ocrEsId = bytes[desc.size] << 8 | bytes[desc.size + 1];\n      desc.size += 2;\n    }\n\n    desc.descriptors = parseDescriptors(bytes.subarray(desc.size)) || [];\n    return desc;\n  }\n}, {\n  id: 0x04,\n  parser: function parser(bytes) {\n    // DecoderConfigDescriptor\n    var desc = {\n      tag: 0x04,\n      oti: bytes[0],\n      streamType: bytes[1],\n      bufferSize: bytes[2] << 16 | bytes[3] << 8 | bytes[4],\n      maxBitrate: bytes[5] << 24 | bytes[6] << 16 | bytes[7] << 8 | bytes[8],\n      avgBitrate: bytes[9] << 24 | bytes[10] << 16 | bytes[11] << 8 | bytes[12],\n      descriptors: parseDescriptors(bytes.subarray(13))\n    };\n    return desc;\n  }\n}, {\n  id: 0x05,\n  parser: function parser(bytes) {\n    // DecoderSpecificInfo\n    return {\n      tag: 0x05,\n      bytes: bytes\n    };\n  }\n}, {\n  id: 0x06,\n  parser: function parser(bytes) {\n    // SLConfigDescriptor\n    return {\n      tag: 0x06,\n      bytes: bytes\n    };\n  }\n}];\n/**\n * find any number of boxes by name given a path to it in an iso bmff\n * such as mp4.\n *\n * @param {TypedArray} bytes\n *        bytes for the iso bmff to search for boxes in\n *\n * @param {Uint8Array[]|string[]|string|Uint8Array} name\n *        An array of paths or a single path representing the name\n *        of boxes to search through in bytes. Paths may be\n *        uint8 (character codes) or strings.\n *\n * @param {boolean} [complete=false]\n *        Should we search only for complete boxes on the final path.\n *        This is very useful when you do not want to get back partial boxes\n *        in the case of streaming files.\n *\n * @return {Uint8Array[]}\n *         An array of the end paths that we found.\n */\n\nexport var findBox = function findBox(bytes, paths, complete) {\n  if (complete === void 0) {\n    complete = false;\n  }\n\n  paths = normalizePaths(paths);\n  bytes = toUint8(bytes);\n  var results = [];\n\n  if (!paths.length) {\n    // short-circuit the search for empty paths\n    return results;\n  }\n\n  var i = 0;\n\n  while (i < bytes.length) {\n    var size = (bytes[i] << 24 | bytes[i + 1] << 16 | bytes[i + 2] << 8 | bytes[i + 3]) >>> 0;\n    var type = bytes.subarray(i + 4, i + 8); // invalid box format.\n\n    if (size === 0) {\n      break;\n    }\n\n    var end = i + size;\n\n    if (end > bytes.length) {\n      // this box is bigger than the number of bytes we have\n      // and complete is set, we cannot find any more boxes.\n      if (complete) {\n        break;\n      }\n\n      end = bytes.length;\n    }\n\n    var data = bytes.subarray(i + 8, end);\n\n    if (bytesMatch(type, paths[0])) {\n      if (paths.length === 1) {\n        // this is the end of the path and we've found the box we were\n        // looking for\n        results.push(data);\n      } else {\n        // recursively search for the next box along the path\n        results.push.apply(results, findBox(data, paths.slice(1), complete));\n      }\n    }\n\n    i = end;\n  } // we've finished searching all of bytes\n\n\n  return results;\n};\n/**\n * Search for a single matching box by name in an iso bmff format like\n * mp4. This function is useful for finding codec boxes which\n * can be placed arbitrarily in sample descriptions depending\n * on the version of the file or file type.\n *\n * @param {TypedArray} bytes\n *        bytes for the iso bmff to search for boxes in\n *\n * @param {string|Uint8Array} name\n *        The name of the box to find.\n *\n * @return {Uint8Array[]}\n *         a subarray of bytes representing the name boxed we found.\n */\n\nexport var findNamedBox = function findNamedBox(bytes, name) {\n  name = normalizePath(name);\n\n  if (!name.length) {\n    // short-circuit the search for empty paths\n    return bytes.subarray(bytes.length);\n  }\n\n  var i = 0;\n\n  while (i < bytes.length) {\n    if (bytesMatch(bytes.subarray(i, i + name.length), name)) {\n      var size = (bytes[i - 4] << 24 | bytes[i - 3] << 16 | bytes[i - 2] << 8 | bytes[i - 1]) >>> 0;\n      var end = size > 1 ? i + size : bytes.byteLength;\n      return bytes.subarray(i + 4, end);\n    }\n\n    i++;\n  } // we've finished searching all of bytes\n\n\n  return bytes.subarray(bytes.length);\n};\n\nvar parseSamples = function parseSamples(data, entrySize, parseEntry) {\n  if (entrySize === void 0) {\n    entrySize = 4;\n  }\n\n  if (parseEntry === void 0) {\n    parseEntry = function parseEntry(d) {\n      return bytesToNumber(d);\n    };\n  }\n\n  var entries = [];\n\n  if (!data || !data.length) {\n    return entries;\n  }\n\n  var entryCount = bytesToNumber(data.subarray(4, 8));\n\n  for (var i = 8; entryCount; i += entrySize, entryCount--) {\n    entries.push(parseEntry(data.subarray(i, i + entrySize)));\n  }\n\n  return entries;\n};\n\nexport var buildFrameTable = function buildFrameTable(stbl, timescale) {\n  var keySamples = parseSamples(findBox(stbl, ['stss'])[0]);\n  var chunkOffsets = parseSamples(findBox(stbl, ['stco'])[0]);\n  var timeToSamples = parseSamples(findBox(stbl, ['stts'])[0], 8, function (entry) {\n    return {\n      sampleCount: bytesToNumber(entry.subarray(0, 4)),\n      sampleDelta: bytesToNumber(entry.subarray(4, 8))\n    };\n  });\n  var samplesToChunks = parseSamples(findBox(stbl, ['stsc'])[0], 12, function (entry) {\n    return {\n      firstChunk: bytesToNumber(entry.subarray(0, 4)),\n      samplesPerChunk: bytesToNumber(entry.subarray(4, 8)),\n      sampleDescriptionIndex: bytesToNumber(entry.subarray(8, 12))\n    };\n  });\n  var stsz = findBox(stbl, ['stsz'])[0]; // stsz starts with a 4 byte sampleSize which we don't need\n\n  var sampleSizes = parseSamples(stsz && stsz.length && stsz.subarray(4) || null);\n  var frames = [];\n\n  for (var chunkIndex = 0; chunkIndex < chunkOffsets.length; chunkIndex++) {\n    var samplesInChunk = void 0;\n\n    for (var i = 0; i < samplesToChunks.length; i++) {\n      var sampleToChunk = samplesToChunks[i];\n      var isThisOne = chunkIndex + 1 >= sampleToChunk.firstChunk && (i + 1 >= samplesToChunks.length || chunkIndex + 1 < samplesToChunks[i + 1].firstChunk);\n\n      if (isThisOne) {\n        samplesInChunk = sampleToChunk.samplesPerChunk;\n        break;\n      }\n    }\n\n    var chunkOffset = chunkOffsets[chunkIndex];\n\n    for (var _i = 0; _i < samplesInChunk; _i++) {\n      var frameEnd = sampleSizes[frames.length]; // if we don't have key samples every frame is a keyframe\n\n      var keyframe = !keySamples.length;\n\n      if (keySamples.length && keySamples.indexOf(frames.length + 1) !== -1) {\n        keyframe = true;\n      }\n\n      var frame = {\n        keyframe: keyframe,\n        start: chunkOffset,\n        end: chunkOffset + frameEnd\n      };\n\n      for (var k = 0; k < timeToSamples.length; k++) {\n        var _timeToSamples$k = timeToSamples[k],\n            sampleCount = _timeToSamples$k.sampleCount,\n            sampleDelta = _timeToSamples$k.sampleDelta;\n\n        if (frames.length <= sampleCount) {\n          // ms to ns\n          var lastTimestamp = frames.length ? frames[frames.length - 1].timestamp : 0;\n          frame.timestamp = lastTimestamp + sampleDelta / timescale * 1000;\n          frame.duration = sampleDelta;\n          break;\n        }\n      }\n\n      frames.push(frame);\n      chunkOffset += frameEnd;\n    }\n  }\n\n  return frames;\n};\nexport var addSampleDescription = function addSampleDescription(track, bytes) {\n  var codec = bytesToString(bytes.subarray(0, 4));\n\n  if (track.type === 'video') {\n    track.info = track.info || {};\n    track.info.width = bytes[28] << 8 | bytes[29];\n    track.info.height = bytes[30] << 8 | bytes[31];\n  } else if (track.type === 'audio') {\n    track.info = track.info || {};\n    track.info.channels = bytes[20] << 8 | bytes[21];\n    track.info.bitDepth = bytes[22] << 8 | bytes[23];\n    track.info.sampleRate = bytes[28] << 8 | bytes[29];\n  }\n\n  if (codec === 'avc1') {\n    var avcC = findNamedBox(bytes, 'avcC'); // AVCDecoderConfigurationRecord\n\n    codec += \".\" + getAvcCodec(avcC);\n    track.info.avcC = avcC; // TODO: do we need to parse all this?\n\n    /* {\n      configurationVersion: avcC[0],\n      profile: avcC[1],\n      profileCompatibility: avcC[2],\n      level: avcC[3],\n      lengthSizeMinusOne: avcC[4] & 0x3\n    };\n     let spsNalUnitCount = avcC[5] & 0x1F;\n    const spsNalUnits = track.info.avc.spsNalUnits = [];\n     // past spsNalUnitCount\n    let offset = 6;\n     while (spsNalUnitCount--) {\n      const nalLen = avcC[offset] << 8 | avcC[offset + 1];\n       spsNalUnits.push(avcC.subarray(offset + 2, offset + 2 + nalLen));\n       offset += nalLen + 2;\n    }\n    let ppsNalUnitCount = avcC[offset];\n    const ppsNalUnits = track.info.avc.ppsNalUnits = [];\n     // past ppsNalUnitCount\n    offset += 1;\n     while (ppsNalUnitCount--) {\n      const nalLen = avcC[offset] << 8 | avcC[offset + 1];\n       ppsNalUnits.push(avcC.subarray(offset + 2, offset + 2 + nalLen));\n       offset += nalLen + 2;\n    }*/\n    // HEVCDecoderConfigurationRecord\n  } else if (codec === 'hvc1' || codec === 'hev1') {\n    codec += \".\" + getHvcCodec(findNamedBox(bytes, 'hvcC'));\n  } else if (codec === 'mp4a' || codec === 'mp4v') {\n    var esds = findNamedBox(bytes, 'esds');\n    var esDescriptor = parseDescriptors(esds.subarray(4))[0];\n    var decoderConfig = esDescriptor && esDescriptor.descriptors.filter(function (_ref) {\n      var tag = _ref.tag;\n      return tag === 0x04;\n    })[0];\n\n    if (decoderConfig) {\n      // most codecs do not have a further '.'\n      // such as 0xa5 for ac-3 and 0xa6 for e-ac-3\n      codec += '.' + toHexString(decoderConfig.oti);\n\n      if (decoderConfig.oti === 0x40) {\n        codec += '.' + (decoderConfig.descriptors[0].bytes[0] >> 3).toString();\n      } else if (decoderConfig.oti === 0x20) {\n        codec += '.' + decoderConfig.descriptors[0].bytes[4].toString();\n      } else if (decoderConfig.oti === 0xdd) {\n        codec = 'vorbis';\n      }\n    } else if (track.type === 'audio') {\n      codec += '.40.2';\n    } else {\n      codec += '.20.9';\n    }\n  } else if (codec === 'av01') {\n    // AV1DecoderConfigurationRecord\n    codec += \".\" + getAv1Codec(findNamedBox(bytes, 'av1C'));\n  } else if (codec === 'vp09') {\n    // VPCodecConfigurationRecord\n    var vpcC = findNamedBox(bytes, 'vpcC'); // https://www.webmproject.org/vp9/mp4/\n\n    var profile = vpcC[0];\n    var level = vpcC[1];\n    var bitDepth = vpcC[2] >> 4;\n    var chromaSubsampling = (vpcC[2] & 0x0F) >> 1;\n    var videoFullRangeFlag = (vpcC[2] & 0x0F) >> 3;\n    var colourPrimaries = vpcC[3];\n    var transferCharacteristics = vpcC[4];\n    var matrixCoefficients = vpcC[5];\n    codec += \".\" + padStart(profile, 2, '0');\n    codec += \".\" + padStart(level, 2, '0');\n    codec += \".\" + padStart(bitDepth, 2, '0');\n    codec += \".\" + padStart(chromaSubsampling, 2, '0');\n    codec += \".\" + padStart(colourPrimaries, 2, '0');\n    codec += \".\" + padStart(transferCharacteristics, 2, '0');\n    codec += \".\" + padStart(matrixCoefficients, 2, '0');\n    codec += \".\" + padStart(videoFullRangeFlag, 2, '0');\n  } else if (codec === 'theo') {\n    codec = 'theora';\n  } else if (codec === 'spex') {\n    codec = 'speex';\n  } else if (codec === '.mp3') {\n    codec = 'mp4a.40.34';\n  } else if (codec === 'msVo') {\n    codec = 'vorbis';\n  } else if (codec === 'Opus') {\n    codec = 'opus';\n    var dOps = findNamedBox(bytes, 'dOps');\n    track.info.opus = parseOpusHead(dOps); // TODO: should this go into the webm code??\n    // Firefox requires a codecDelay for opus playback\n    // see https://bugzilla.mozilla.org/show_bug.cgi?id=1276238\n\n    track.info.codecDelay = 6500000;\n  } else {\n    codec = codec.toLowerCase();\n  }\n  /* eslint-enable */\n  // flac, ac-3, ec-3, opus\n\n\n  track.codec = codec;\n};\nexport var parseTracks = function parseTracks(bytes, frameTable) {\n  if (frameTable === void 0) {\n    frameTable = true;\n  }\n\n  bytes = toUint8(bytes);\n  var traks = findBox(bytes, ['moov', 'trak'], true);\n  var tracks = [];\n  traks.forEach(function (trak) {\n    var track = {\n      bytes: trak\n    };\n    var mdia = findBox(trak, ['mdia'])[0];\n    var hdlr = findBox(mdia, ['hdlr'])[0];\n    var trakType = bytesToString(hdlr.subarray(8, 12));\n\n    if (trakType === 'soun') {\n      track.type = 'audio';\n    } else if (trakType === 'vide') {\n      track.type = 'video';\n    } else {\n      track.type = trakType;\n    }\n\n    var tkhd = findBox(trak, ['tkhd'])[0];\n\n    if (tkhd) {\n      var view = new DataView(tkhd.buffer, tkhd.byteOffset, tkhd.byteLength);\n      var tkhdVersion = view.getUint8(0);\n      track.number = tkhdVersion === 0 ? view.getUint32(12) : view.getUint32(20);\n    }\n\n    var mdhd = findBox(mdia, ['mdhd'])[0];\n\n    if (mdhd) {\n      // mdhd is a FullBox, meaning it will have its own version as the first byte\n      var version = mdhd[0];\n      var index = version === 0 ? 12 : 20;\n      track.timescale = (mdhd[index] << 24 | mdhd[index + 1] << 16 | mdhd[index + 2] << 8 | mdhd[index + 3]) >>> 0;\n    }\n\n    var stbl = findBox(mdia, ['minf', 'stbl'])[0];\n    var stsd = findBox(stbl, ['stsd'])[0];\n    var descriptionCount = bytesToNumber(stsd.subarray(4, 8));\n    var offset = 8; // add codec and codec info\n\n    while (descriptionCount--) {\n      var len = bytesToNumber(stsd.subarray(offset, offset + 4));\n      var sampleDescriptor = stsd.subarray(offset + 4, offset + 4 + len);\n      addSampleDescription(track, sampleDescriptor);\n      offset += 4 + len;\n    }\n\n    if (frameTable) {\n      track.frameTable = buildFrameTable(stbl, track.timescale);\n    } // codec has no sub parameters\n\n\n    tracks.push(track);\n  });\n  return tracks;\n};\nexport var parseMediaInfo = function parseMediaInfo(bytes) {\n  var mvhd = findBox(bytes, ['moov', 'mvhd'], true)[0];\n\n  if (!mvhd || !mvhd.length) {\n    return;\n  }\n\n  var info = {}; // ms to ns\n  // mvhd v1 has 8 byte duration and other fields too\n\n  if (mvhd[0] === 1) {\n    info.timestampScale = bytesToNumber(mvhd.subarray(20, 24));\n    info.duration = bytesToNumber(mvhd.subarray(24, 32));\n  } else {\n    info.timestampScale = bytesToNumber(mvhd.subarray(12, 16));\n    info.duration = bytesToNumber(mvhd.subarray(16, 20));\n  }\n\n  info.bytes = mvhd;\n  return info;\n};","import window from 'global/window';\nvar regexs = {\n  // to determine mime types\n  mp4: /^(av0?1|avc0?[1234]|vp0?9|flac|opus|mp3|mp4a|mp4v|stpp.ttml.im1t)/,\n  webm: /^(vp0?[89]|av0?1|opus|vorbis)/,\n  ogg: /^(vp0?[89]|theora|flac|opus|vorbis)/,\n  // to determine if a codec is audio or video\n  video: /^(av0?1|avc0?[1234]|vp0?[89]|hvc1|hev1|theora|mp4v)/,\n  audio: /^(mp4a|flac|vorbis|opus|ac-[34]|ec-3|alac|mp3|speex|aac)/,\n  text: /^(stpp.ttml.im1t)/,\n  // mux.js support regex\n  muxerVideo: /^(avc0?1)/,\n  muxerAudio: /^(mp4a)/,\n  // match nothing as muxer does not support text right now.\n  // there cannot never be a character before the start of a string\n  // so this matches nothing.\n  muxerText: /a^/\n};\nvar mediaTypes = ['video', 'audio', 'text'];\nvar upperMediaTypes = ['Video', 'Audio', 'Text'];\n/**\n * Replace the old apple-style `avc1.<dd>.<dd>` codec string with the standard\n * `avc1.<hhhhhh>`\n *\n * @param {string} codec\n *        Codec string to translate\n * @return {string}\n *         The translated codec string\n */\n\nexport var translateLegacyCodec = function translateLegacyCodec(codec) {\n  if (!codec) {\n    return codec;\n  }\n\n  return codec.replace(/avc1\\.(\\d+)\\.(\\d+)/i, function (orig, profile, avcLevel) {\n    var profileHex = ('00' + Number(profile).toString(16)).slice(-2);\n    var avcLevelHex = ('00' + Number(avcLevel).toString(16)).slice(-2);\n    return 'avc1.' + profileHex + '00' + avcLevelHex;\n  });\n};\n/**\n * Replace the old apple-style `avc1.<dd>.<dd>` codec strings with the standard\n * `avc1.<hhhhhh>`\n *\n * @param {string[]} codecs\n *        An array of codec strings to translate\n * @return {string[]}\n *         The translated array of codec strings\n */\n\nexport var translateLegacyCodecs = function translateLegacyCodecs(codecs) {\n  return codecs.map(translateLegacyCodec);\n};\n/**\n * Replace codecs in the codec string with the old apple-style `avc1.<dd>.<dd>` to the\n * standard `avc1.<hhhhhh>`.\n *\n * @param {string} codecString\n *        The codec string\n * @return {string}\n *         The codec string with old apple-style codecs replaced\n *\n * @private\n */\n\nexport var mapLegacyAvcCodecs = function mapLegacyAvcCodecs(codecString) {\n  return codecString.replace(/avc1\\.(\\d+)\\.(\\d+)/i, function (match) {\n    return translateLegacyCodecs([match])[0];\n  });\n};\n/**\n * @typedef {Object} ParsedCodecInfo\n * @property {number} codecCount\n *           Number of codecs parsed\n * @property {string} [videoCodec]\n *           Parsed video codec (if found)\n * @property {string} [videoObjectTypeIndicator]\n *           Video object type indicator (if found)\n * @property {string|null} audioProfile\n *           Audio profile\n */\n\n/**\n * Parses a codec string to retrieve the number of codecs specified, the video codec and\n * object type indicator, and the audio profile.\n *\n * @param {string} [codecString]\n *        The codec string to parse\n * @return {ParsedCodecInfo}\n *         Parsed codec info\n */\n\nexport var parseCodecs = function parseCodecs(codecString) {\n  if (codecString === void 0) {\n    codecString = '';\n  }\n\n  var codecs = codecString.split(',');\n  var result = [];\n  codecs.forEach(function (codec) {\n    codec = codec.trim();\n    var codecType;\n    mediaTypes.forEach(function (name) {\n      var match = regexs[name].exec(codec.toLowerCase());\n\n      if (!match || match.length <= 1) {\n        return;\n      }\n\n      codecType = name; // maintain codec case\n\n      var type = codec.substring(0, match[1].length);\n      var details = codec.replace(type, '');\n      result.push({\n        type: type,\n        details: details,\n        mediaType: name\n      });\n    });\n\n    if (!codecType) {\n      result.push({\n        type: codec,\n        details: '',\n        mediaType: 'unknown'\n      });\n    }\n  });\n  return result;\n};\n/**\n * Returns a ParsedCodecInfo object for the default alternate audio playlist if there is\n * a default alternate audio playlist for the provided audio group.\n *\n * @param {Object} master\n *        The master playlist\n * @param {string} audioGroupId\n *        ID of the audio group for which to find the default codec info\n * @return {ParsedCodecInfo}\n *         Parsed codec info\n */\n\nexport var codecsFromDefault = function codecsFromDefault(master, audioGroupId) {\n  if (!master.mediaGroups.AUDIO || !audioGroupId) {\n    return null;\n  }\n\n  var audioGroup = master.mediaGroups.AUDIO[audioGroupId];\n\n  if (!audioGroup) {\n    return null;\n  }\n\n  for (var name in audioGroup) {\n    var audioType = audioGroup[name];\n\n    if (audioType.default && audioType.playlists) {\n      // codec should be the same for all playlists within the audio type\n      return parseCodecs(audioType.playlists[0].attributes.CODECS);\n    }\n  }\n\n  return null;\n};\nexport var isVideoCodec = function isVideoCodec(codec) {\n  if (codec === void 0) {\n    codec = '';\n  }\n\n  return regexs.video.test(codec.trim().toLowerCase());\n};\nexport var isAudioCodec = function isAudioCodec(codec) {\n  if (codec === void 0) {\n    codec = '';\n  }\n\n  return regexs.audio.test(codec.trim().toLowerCase());\n};\nexport var isTextCodec = function isTextCodec(codec) {\n  if (codec === void 0) {\n    codec = '';\n  }\n\n  return regexs.text.test(codec.trim().toLowerCase());\n};\nexport var getMimeForCodec = function getMimeForCodec(codecString) {\n  if (!codecString || typeof codecString !== 'string') {\n    return;\n  }\n\n  var codecs = codecString.toLowerCase().split(',').map(function (c) {\n    return translateLegacyCodec(c.trim());\n  }); // default to video type\n\n  var type = 'video'; // only change to audio type if the only codec we have is\n  // audio\n\n  if (codecs.length === 1 && isAudioCodec(codecs[0])) {\n    type = 'audio';\n  } else if (codecs.length === 1 && isTextCodec(codecs[0])) {\n    // text uses application/<container> for now\n    type = 'application';\n  } // default the container to mp4\n\n\n  var container = 'mp4'; // every codec must be able to go into the container\n  // for that container to be the correct one\n\n  if (codecs.every(function (c) {\n    return regexs.mp4.test(c);\n  })) {\n    container = 'mp4';\n  } else if (codecs.every(function (c) {\n    return regexs.webm.test(c);\n  })) {\n    container = 'webm';\n  } else if (codecs.every(function (c) {\n    return regexs.ogg.test(c);\n  })) {\n    container = 'ogg';\n  }\n\n  return type + \"/\" + container + \";codecs=\\\"\" + codecString + \"\\\"\";\n};\nexport var browserSupportsCodec = function browserSupportsCodec(codecString) {\n  if (codecString === void 0) {\n    codecString = '';\n  }\n\n  return window.MediaSource && window.MediaSource.isTypeSupported && window.MediaSource.isTypeSupported(getMimeForCodec(codecString)) || false;\n};\nexport var muxerSupportsCodec = function muxerSupportsCodec(codecString) {\n  if (codecString === void 0) {\n    codecString = '';\n  }\n\n  return codecString.toLowerCase().split(',').every(function (codec) {\n    codec = codec.trim(); // any match is supported.\n\n    for (var i = 0; i < upperMediaTypes.length; i++) {\n      var type = upperMediaTypes[i];\n\n      if (regexs[\"muxer\" + type].test(codec)) {\n        return true;\n      }\n    }\n\n    return false;\n  });\n};\nexport var DEFAULT_AUDIO_CODEC = 'mp4a.40.2';\nexport var DEFAULT_VIDEO_CODEC = 'avc1.4d400d';","var MPEGURL_REGEX = /^(audio|video|application)\\/(x-|vnd\\.apple\\.)?mpegurl/i;\nvar DASH_REGEX = /^application\\/dash\\+xml/i;\n/**\n * Returns a string that describes the type of source based on a video source object's\n * media type.\n *\n * @see {@link https://dev.w3.org/html5/pf-summary/video.html#dom-source-type|Source Type}\n *\n * @param {string} type\n *        Video source object media type\n * @return {('hls'|'dash'|'vhs-json'|null)}\n *         VHS source type string\n */\n\nexport var simpleTypeFromSourceType = function simpleTypeFromSourceType(type) {\n  if (MPEGURL_REGEX.test(type)) {\n    return 'hls';\n  }\n\n  if (DASH_REGEX.test(type)) {\n    return 'dash';\n  } // Denotes the special case of a manifest object passed to http-streaming instead of a\n  // source URL.\n  //\n  // See https://en.wikipedia.org/wiki/Media_type for details on specifying media types.\n  //\n  // In this case, vnd stands for vendor, video.js for the organization, VHS for this\n  // project, and the +json suffix identifies the structure of the media type.\n\n\n  if (type === 'application/vnd.videojs.vhs+json') {\n    return 'vhs-json';\n  }\n\n  return null;\n};","import window from 'global/window'; // const log2 = Math.log2 ? Math.log2 : (x) => (Math.log(x) / Math.log(2));\n\nvar repeat = function repeat(str, len) {\n  var acc = '';\n\n  while (len--) {\n    acc += str;\n  }\n\n  return acc;\n}; // count the number of bits it would take to represent a number\n// we used to do this with log2 but BigInt does not support builtin math\n// Math.ceil(log2(x));\n\n\nexport var countBits = function countBits(x) {\n  return x.toString(2).length;\n}; // count the number of whole bytes it would take to represent a number\n\nexport var countBytes = function countBytes(x) {\n  return Math.ceil(countBits(x) / 8);\n};\nexport var padStart = function padStart(b, len, str) {\n  if (str === void 0) {\n    str = ' ';\n  }\n\n  return (repeat(str, len) + b.toString()).slice(-len);\n};\nexport var isArrayBufferView = function isArrayBufferView(obj) {\n  if (ArrayBuffer.isView === 'function') {\n    return ArrayBuffer.isView(obj);\n  }\n\n  return obj && obj.buffer instanceof ArrayBuffer;\n};\nexport var isTypedArray = function isTypedArray(obj) {\n  return isArrayBufferView(obj);\n};\nexport var toUint8 = function toUint8(bytes) {\n  if (bytes instanceof Uint8Array) {\n    return bytes;\n  }\n\n  if (!Array.isArray(bytes) && !isTypedArray(bytes) && !(bytes instanceof ArrayBuffer)) {\n    // any non-number or NaN leads to empty uint8array\n    // eslint-disable-next-line\n    if (typeof bytes !== 'number' || typeof bytes === 'number' && bytes !== bytes) {\n      bytes = 0;\n    } else {\n      bytes = [bytes];\n    }\n  }\n\n  return new Uint8Array(bytes && bytes.buffer || bytes, bytes && bytes.byteOffset || 0, bytes && bytes.byteLength || 0);\n};\nexport var toHexString = function toHexString(bytes) {\n  bytes = toUint8(bytes);\n  var str = '';\n\n  for (var i = 0; i < bytes.length; i++) {\n    str += padStart(bytes[i].toString(16), 2, '0');\n  }\n\n  return str;\n};\nexport var toBinaryString = function toBinaryString(bytes) {\n  bytes = toUint8(bytes);\n  var str = '';\n\n  for (var i = 0; i < bytes.length; i++) {\n    str += padStart(bytes[i].toString(2), 8, '0');\n  }\n\n  return str;\n};\nvar BigInt = window.BigInt || Number;\nvar BYTE_TABLE = [BigInt('0x1'), BigInt('0x100'), BigInt('0x10000'), BigInt('0x1000000'), BigInt('0x100000000'), BigInt('0x10000000000'), BigInt('0x1000000000000'), BigInt('0x100000000000000'), BigInt('0x10000000000000000')];\nexport var ENDIANNESS = function () {\n  var a = new Uint16Array([0xFFCC]);\n  var b = new Uint8Array(a.buffer, a.byteOffset, a.byteLength);\n\n  if (b[0] === 0xFF) {\n    return 'big';\n  }\n\n  if (b[0] === 0xCC) {\n    return 'little';\n  }\n\n  return 'unknown';\n}();\nexport var IS_BIG_ENDIAN = ENDIANNESS === 'big';\nexport var IS_LITTLE_ENDIAN = ENDIANNESS === 'little';\nexport var bytesToNumber = function bytesToNumber(bytes, _temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n      _ref$signed = _ref.signed,\n      signed = _ref$signed === void 0 ? false : _ref$signed,\n      _ref$le = _ref.le,\n      le = _ref$le === void 0 ? false : _ref$le;\n\n  bytes = toUint8(bytes);\n  var fn = le ? 'reduce' : 'reduceRight';\n  var obj = bytes[fn] ? bytes[fn] : Array.prototype[fn];\n  var number = obj.call(bytes, function (total, byte, i) {\n    var exponent = le ? i : Math.abs(i + 1 - bytes.length);\n    return total + BigInt(byte) * BYTE_TABLE[exponent];\n  }, BigInt(0));\n\n  if (signed) {\n    var max = BYTE_TABLE[bytes.length] / BigInt(2) - BigInt(1);\n    number = BigInt(number);\n\n    if (number > max) {\n      number -= max;\n      number -= max;\n      number -= BigInt(2);\n    }\n  }\n\n  return Number(number);\n};\nexport var numberToBytes = function numberToBytes(number, _temp2) {\n  var _ref2 = _temp2 === void 0 ? {} : _temp2,\n      _ref2$le = _ref2.le,\n      le = _ref2$le === void 0 ? false : _ref2$le;\n\n  // eslint-disable-next-line\n  if (typeof number !== 'bigint' && typeof number !== 'number' || typeof number === 'number' && number !== number) {\n    number = 0;\n  }\n\n  number = BigInt(number);\n  var byteCount = countBytes(number);\n  var bytes = new Uint8Array(new ArrayBuffer(byteCount));\n\n  for (var i = 0; i < byteCount; i++) {\n    var byteIndex = le ? i : Math.abs(i + 1 - bytes.length);\n    bytes[byteIndex] = Number(number / BYTE_TABLE[i] & BigInt(0xFF));\n\n    if (number < 0) {\n      bytes[byteIndex] = Math.abs(~bytes[byteIndex]);\n      bytes[byteIndex] -= i === 0 ? 1 : 2;\n    }\n  }\n\n  return bytes;\n};\nexport var bytesToString = function bytesToString(bytes) {\n  if (!bytes) {\n    return '';\n  } // TODO: should toUint8 handle cases where we only have 8 bytes\n  // but report more since this is a Uint16+ Array?\n\n\n  bytes = Array.prototype.slice.call(bytes);\n  var string = String.fromCharCode.apply(null, toUint8(bytes));\n\n  try {\n    return decodeURIComponent(escape(string));\n  } catch (e) {// if decodeURIComponent/escape fails, we are dealing with partial\n    // or full non string data. Just return the potentially garbled string.\n  }\n\n  return string;\n};\nexport var stringToBytes = function stringToBytes(string, stringIsBytes) {\n  if (typeof string !== 'string' && string && typeof string.toString === 'function') {\n    string = string.toString();\n  }\n\n  if (typeof string !== 'string') {\n    return new Uint8Array();\n  } // If the string already is bytes, we don't have to do this\n  // otherwise we do this so that we split multi length characters\n  // into individual bytes\n\n\n  if (!stringIsBytes) {\n    string = unescape(encodeURIComponent(string));\n  }\n\n  var view = new Uint8Array(string.length);\n\n  for (var i = 0; i < string.length; i++) {\n    view[i] = string.charCodeAt(i);\n  }\n\n  return view;\n};\nexport var concatTypedArrays = function concatTypedArrays() {\n  for (var _len = arguments.length, buffers = new Array(_len), _key = 0; _key < _len; _key++) {\n    buffers[_key] = arguments[_key];\n  }\n\n  buffers = buffers.filter(function (b) {\n    return b && (b.byteLength || b.length) && typeof b !== 'string';\n  });\n\n  if (buffers.length <= 1) {\n    // for 0 length we will return empty uint8\n    // for 1 length we return the first uint8\n    return toUint8(buffers[0]);\n  }\n\n  var totalLen = buffers.reduce(function (total, buf, i) {\n    return total + (buf.byteLength || buf.length);\n  }, 0);\n  var tempBuffer = new Uint8Array(totalLen);\n  var offset = 0;\n  buffers.forEach(function (buf) {\n    buf = toUint8(buf);\n    tempBuffer.set(buf, offset);\n    offset += buf.byteLength;\n  });\n  return tempBuffer;\n};\n/**\n * Check if the bytes \"b\" are contained within bytes \"a\".\n *\n * @param {Uint8Array|Array} a\n *        Bytes to check in\n *\n * @param {Uint8Array|Array} b\n *        Bytes to check for\n *\n * @param {Object} options\n *        options\n *\n * @param {Array|Uint8Array} [offset=0]\n *        offset to use when looking at bytes in a\n *\n * @param {Array|Uint8Array} [mask=[]]\n *        mask to use on bytes before comparison.\n *\n * @return {boolean}\n *         If all bytes in b are inside of a, taking into account\n *         bit masks.\n */\n\nexport var bytesMatch = function bytesMatch(a, b, _temp3) {\n  var _ref3 = _temp3 === void 0 ? {} : _temp3,\n      _ref3$offset = _ref3.offset,\n      offset = _ref3$offset === void 0 ? 0 : _ref3$offset,\n      _ref3$mask = _ref3.mask,\n      mask = _ref3$mask === void 0 ? [] : _ref3$mask;\n\n  a = toUint8(a);\n  b = toUint8(b); // ie 11 does not support uint8 every\n\n  var fn = b.every ? b.every : Array.prototype.every;\n  return b.length && a.length - offset >= b.length && // ie 11 doesn't support every on uin8\n  fn.call(b, function (bByte, i) {\n    var aByte = mask[i] ? mask[i] & a[offset + i] : a[offset + i];\n    return bByte === aByte;\n  });\n};\nexport var sliceBytes = function sliceBytes(src, start, end) {\n  if (Uint8Array.prototype.slice) {\n    return Uint8Array.prototype.slice.call(src, start, end);\n  }\n\n  return new Uint8Array(Array.prototype.slice.call(src, start, end));\n};\nexport var reverseBytes = function reverseBytes(src) {\n  if (src.reverse) {\n    return src.reverse();\n  }\n\n  return Array.prototype.reverse.call(src);\n};","import URLToolkit from 'url-toolkit';\nimport window from 'global/window';\nvar DEFAULT_LOCATION = 'http://example.com';\n\nvar resolveUrl = function resolveUrl(baseUrl, relativeUrl) {\n  // return early if we don't need to resolve\n  if (/^[a-z]+:/i.test(relativeUrl)) {\n    return relativeUrl;\n  } // if baseUrl is a data URI, ignore it and resolve everything relative to window.location\n\n\n  if (/^data:/.test(baseUrl)) {\n    baseUrl = window.location && window.location.href || '';\n  } // IE11 supports URL but not the URL constructor\n  // feature detect the behavior we want\n\n\n  var nativeURL = typeof window.URL === 'function';\n  var protocolLess = /^\\/\\//.test(baseUrl); // remove location if window.location isn't available (i.e. we're in node)\n  // and if baseUrl isn't an absolute url\n\n  var removeLocation = !window.location && !/\\/\\//i.test(baseUrl); // if the base URL is relative then combine with the current location\n\n  if (nativeURL) {\n    baseUrl = new window.URL(baseUrl, window.location || DEFAULT_LOCATION);\n  } else if (!/\\/\\//i.test(baseUrl)) {\n    baseUrl = URLToolkit.buildAbsoluteURL(window.location && window.location.href || '', baseUrl);\n  }\n\n  if (nativeURL) {\n    var newUrl = new URL(relativeUrl, baseUrl); // if we're a protocol-less url, remove the protocol\n    // and if we're location-less, remove the location\n    // otherwise, return the url unmodified\n\n    if (removeLocation) {\n      return newUrl.href.slice(DEFAULT_LOCATION.length);\n    } else if (protocolLess) {\n      return newUrl.href.slice(newUrl.protocol.length);\n    }\n\n    return newUrl.href;\n  }\n\n  return URLToolkit.buildAbsoluteURL(baseUrl, relativeUrl);\n};\n\nexport default resolveUrl;","/*! @name mpd-parser @version 1.1.1 @license Apache-2.0 */\nimport resolveUrl from '@videojs/vhs-utils/es/resolve-url';\nimport window from 'global/window';\nimport { forEachMediaGroup } from '@videojs/vhs-utils/es/media-groups';\nimport decodeB64ToUint8Array from '@videojs/vhs-utils/es/decode-b64-to-uint8-array';\nimport { DOMParser } from '@xmldom/xmldom';\n\nvar version = \"1.1.1\";\n\nconst isObject = obj => {\n  return !!obj && typeof obj === 'object';\n};\n\nconst merge = (...objects) => {\n  return objects.reduce((result, source) => {\n    if (typeof source !== 'object') {\n      return result;\n    }\n\n    Object.keys(source).forEach(key => {\n      if (Array.isArray(result[key]) && Array.isArray(source[key])) {\n        result[key] = result[key].concat(source[key]);\n      } else if (isObject(result[key]) && isObject(source[key])) {\n        result[key] = merge(result[key], source[key]);\n      } else {\n        result[key] = source[key];\n      }\n    });\n    return result;\n  }, {});\n};\nconst values = o => Object.keys(o).map(k => o[k]);\n\nconst range = (start, end) => {\n  const result = [];\n\n  for (let i = start; i < end; i++) {\n    result.push(i);\n  }\n\n  return result;\n};\nconst flatten = lists => lists.reduce((x, y) => x.concat(y), []);\nconst from = list => {\n  if (!list.length) {\n    return [];\n  }\n\n  const result = [];\n\n  for (let i = 0; i < list.length; i++) {\n    result.push(list[i]);\n  }\n\n  return result;\n};\nconst findIndexes = (l, key) => l.reduce((a, e, i) => {\n  if (e[key]) {\n    a.push(i);\n  }\n\n  return a;\n}, []);\n/**\n * Returns a union of the included lists provided each element can be identified by a key.\n *\n * @param {Array} list - list of lists to get the union of\n * @param {Function} keyFunction - the function to use as a key for each element\n *\n * @return {Array} the union of the arrays\n */\n\nconst union = (lists, keyFunction) => {\n  return values(lists.reduce((acc, list) => {\n    list.forEach(el => {\n      acc[keyFunction(el)] = el;\n    });\n    return acc;\n  }, {}));\n};\n\nvar errors = {\n  INVALID_NUMBER_OF_PERIOD: 'INVALID_NUMBER_OF_PERIOD',\n  DASH_EMPTY_MANIFEST: 'DASH_EMPTY_MANIFEST',\n  DASH_INVALID_XML: 'DASH_INVALID_XML',\n  NO_BASE_URL: 'NO_BASE_URL',\n  MISSING_SEGMENT_INFORMATION: 'MISSING_SEGMENT_INFORMATION',\n  SEGMENT_TIME_UNSPECIFIED: 'SEGMENT_TIME_UNSPECIFIED',\n  UNSUPPORTED_UTC_TIMING_SCHEME: 'UNSUPPORTED_UTC_TIMING_SCHEME'\n};\n\n/**\n * @typedef {Object} SingleUri\n * @property {string} uri - relative location of segment\n * @property {string} resolvedUri - resolved location of segment\n * @property {Object} byterange - Object containing information on how to make byte range\n *   requests following byte-range-spec per RFC2616.\n * @property {String} byterange.length - length of range request\n * @property {String} byterange.offset - byte offset of range request\n *\n * @see https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35.1\n */\n\n/**\n * Converts a URLType node (5.3.9.2.3 Table 13) to a segment object\n * that conforms to how m3u8-parser is structured\n *\n * @see https://github.com/videojs/m3u8-parser\n *\n * @param {string} baseUrl - baseUrl provided by <BaseUrl> nodes\n * @param {string} source - source url for segment\n * @param {string} range - optional range used for range calls,\n *   follows  RFC 2616, Clause 14.35.1\n * @return {SingleUri} full segment information transformed into a format similar\n *   to m3u8-parser\n */\n\nconst urlTypeToSegment = ({\n  baseUrl = '',\n  source = '',\n  range = '',\n  indexRange = ''\n}) => {\n  const segment = {\n    uri: source,\n    resolvedUri: resolveUrl(baseUrl || '', source)\n  };\n\n  if (range || indexRange) {\n    const rangeStr = range ? range : indexRange;\n    const ranges = rangeStr.split('-'); // default to parsing this as a BigInt if possible\n\n    let startRange = window.BigInt ? window.BigInt(ranges[0]) : parseInt(ranges[0], 10);\n    let endRange = window.BigInt ? window.BigInt(ranges[1]) : parseInt(ranges[1], 10); // convert back to a number if less than MAX_SAFE_INTEGER\n\n    if (startRange < Number.MAX_SAFE_INTEGER && typeof startRange === 'bigint') {\n      startRange = Number(startRange);\n    }\n\n    if (endRange < Number.MAX_SAFE_INTEGER && typeof endRange === 'bigint') {\n      endRange = Number(endRange);\n    }\n\n    let length;\n\n    if (typeof endRange === 'bigint' || typeof startRange === 'bigint') {\n      length = window.BigInt(endRange) - window.BigInt(startRange) + window.BigInt(1);\n    } else {\n      length = endRange - startRange + 1;\n    }\n\n    if (typeof length === 'bigint' && length < Number.MAX_SAFE_INTEGER) {\n      length = Number(length);\n    } // byterange should be inclusive according to\n    // RFC 2616, Clause 14.35.1\n\n\n    segment.byterange = {\n      length,\n      offset: startRange\n    };\n  }\n\n  return segment;\n};\nconst byteRangeToString = byterange => {\n  // `endRange` is one less than `offset + length` because the HTTP range\n  // header uses inclusive ranges\n  let endRange;\n\n  if (typeof byterange.offset === 'bigint' || typeof byterange.length === 'bigint') {\n    endRange = window.BigInt(byterange.offset) + window.BigInt(byterange.length) - window.BigInt(1);\n  } else {\n    endRange = byterange.offset + byterange.length - 1;\n  }\n\n  return `${byterange.offset}-${endRange}`;\n};\n\n/**\n * parse the end number attribue that can be a string\n * number, or undefined.\n *\n * @param {string|number|undefined} endNumber\n *        The end number attribute.\n *\n * @return {number|null}\n *          The result of parsing the end number.\n */\n\nconst parseEndNumber = endNumber => {\n  if (endNumber && typeof endNumber !== 'number') {\n    endNumber = parseInt(endNumber, 10);\n  }\n\n  if (isNaN(endNumber)) {\n    return null;\n  }\n\n  return endNumber;\n};\n/**\n * Functions for calculating the range of available segments in static and dynamic\n * manifests.\n */\n\n\nconst segmentRange = {\n  /**\n   * Returns the entire range of available segments for a static MPD\n   *\n   * @param {Object} attributes\n   *        Inheritied MPD attributes\n   * @return {{ start: number, end: number }}\n   *         The start and end numbers for available segments\n   */\n  static(attributes) {\n    const {\n      duration,\n      timescale = 1,\n      sourceDuration,\n      periodDuration\n    } = attributes;\n    const endNumber = parseEndNumber(attributes.endNumber);\n    const segmentDuration = duration / timescale;\n\n    if (typeof endNumber === 'number') {\n      return {\n        start: 0,\n        end: endNumber\n      };\n    }\n\n    if (typeof periodDuration === 'number') {\n      return {\n        start: 0,\n        end: periodDuration / segmentDuration\n      };\n    }\n\n    return {\n      start: 0,\n      end: sourceDuration / segmentDuration\n    };\n  },\n\n  /**\n   * Returns the current live window range of available segments for a dynamic MPD\n   *\n   * @param {Object} attributes\n   *        Inheritied MPD attributes\n   * @return {{ start: number, end: number }}\n   *         The start and end numbers for available segments\n   */\n  dynamic(attributes) {\n    const {\n      NOW,\n      clientOffset,\n      availabilityStartTime,\n      timescale = 1,\n      duration,\n      periodStart = 0,\n      minimumUpdatePeriod = 0,\n      timeShiftBufferDepth = Infinity\n    } = attributes;\n    const endNumber = parseEndNumber(attributes.endNumber); // clientOffset is passed in at the top level of mpd-parser and is an offset calculated\n    // after retrieving UTC server time.\n\n    const now = (NOW + clientOffset) / 1000; // WC stands for Wall Clock.\n    // Convert the period start time to EPOCH.\n\n    const periodStartWC = availabilityStartTime + periodStart; // Period end in EPOCH is manifest's retrieval time + time until next update.\n\n    const periodEndWC = now + minimumUpdatePeriod;\n    const periodDuration = periodEndWC - periodStartWC;\n    const segmentCount = Math.ceil(periodDuration * timescale / duration);\n    const availableStart = Math.floor((now - periodStartWC - timeShiftBufferDepth) * timescale / duration);\n    const availableEnd = Math.floor((now - periodStartWC) * timescale / duration);\n    return {\n      start: Math.max(0, availableStart),\n      end: typeof endNumber === 'number' ? endNumber : Math.min(segmentCount, availableEnd)\n    };\n  }\n\n};\n/**\n * Maps a range of numbers to objects with information needed to build the corresponding\n * segment list\n *\n * @name toSegmentsCallback\n * @function\n * @param {number} number\n *        Number of the segment\n * @param {number} index\n *        Index of the number in the range list\n * @return {{ number: Number, duration: Number, timeline: Number, time: Number }}\n *         Object with segment timing and duration info\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping a range of numbers to\n * information needed to build the segment list.\n *\n * @param {Object} attributes\n *        Inherited MPD attributes\n * @return {toSegmentsCallback}\n *         Callback map function\n */\n\nconst toSegments = attributes => number => {\n  const {\n    duration,\n    timescale = 1,\n    periodStart,\n    startNumber = 1\n  } = attributes;\n  return {\n    number: startNumber + number,\n    duration: duration / timescale,\n    timeline: periodStart,\n    time: number * duration\n  };\n};\n/**\n * Returns a list of objects containing segment timing and duration info used for\n * building the list of segments. This uses the @duration attribute specified\n * in the MPD manifest to derive the range of segments.\n *\n * @param {Object} attributes\n *        Inherited MPD attributes\n * @return {{number: number, duration: number, time: number, timeline: number}[]}\n *         List of Objects with segment timing and duration info\n */\n\nconst parseByDuration = attributes => {\n  const {\n    type,\n    duration,\n    timescale = 1,\n    periodDuration,\n    sourceDuration\n  } = attributes;\n  const {\n    start,\n    end\n  } = segmentRange[type](attributes);\n  const segments = range(start, end).map(toSegments(attributes));\n\n  if (type === 'static') {\n    const index = segments.length - 1; // section is either a period or the full source\n\n    const sectionDuration = typeof periodDuration === 'number' ? periodDuration : sourceDuration; // final segment may be less than full segment duration\n\n    segments[index].duration = sectionDuration - duration / timescale * index;\n  }\n\n  return segments;\n};\n\n/**\n * Translates SegmentBase into a set of segments.\n * (DASH SPEC Section 5.3.9.3.2) contains a set of <SegmentURL> nodes.  Each\n * node should be translated into segment.\n *\n * @param {Object} attributes\n *   Object containing all inherited attributes from parent elements with attribute\n *   names as keys\n * @return {Object.<Array>} list of segments\n */\n\nconst segmentsFromBase = attributes => {\n  const {\n    baseUrl,\n    initialization = {},\n    sourceDuration,\n    indexRange = '',\n    periodStart,\n    presentationTime,\n    number = 0,\n    duration\n  } = attributes; // base url is required for SegmentBase to work, per spec (Section 5.3.9.2.1)\n\n  if (!baseUrl) {\n    throw new Error(errors.NO_BASE_URL);\n  }\n\n  const initSegment = urlTypeToSegment({\n    baseUrl,\n    source: initialization.sourceURL,\n    range: initialization.range\n  });\n  const segment = urlTypeToSegment({\n    baseUrl,\n    source: baseUrl,\n    indexRange\n  });\n  segment.map = initSegment; // If there is a duration, use it, otherwise use the given duration of the source\n  // (since SegmentBase is only for one total segment)\n\n  if (duration) {\n    const segmentTimeInfo = parseByDuration(attributes);\n\n    if (segmentTimeInfo.length) {\n      segment.duration = segmentTimeInfo[0].duration;\n      segment.timeline = segmentTimeInfo[0].timeline;\n    }\n  } else if (sourceDuration) {\n    segment.duration = sourceDuration;\n    segment.timeline = periodStart;\n  } // If presentation time is provided, these segments are being generated by SIDX\n  // references, and should use the time provided. For the general case of SegmentBase,\n  // there should only be one segment in the period, so its presentation time is the same\n  // as its period start.\n\n\n  segment.presentationTime = presentationTime || periodStart;\n  segment.number = number;\n  return [segment];\n};\n/**\n * Given a playlist, a sidx box, and a baseUrl, update the segment list of the playlist\n * according to the sidx information given.\n *\n * playlist.sidx has metadadata about the sidx where-as the sidx param\n * is the parsed sidx box itself.\n *\n * @param {Object} playlist the playlist to update the sidx information for\n * @param {Object} sidx the parsed sidx box\n * @return {Object} the playlist object with the updated sidx information\n */\n\nconst addSidxSegmentsToPlaylist$1 = (playlist, sidx, baseUrl) => {\n  // Retain init segment information\n  const initSegment = playlist.sidx.map ? playlist.sidx.map : null; // Retain source duration from initial main manifest parsing\n\n  const sourceDuration = playlist.sidx.duration; // Retain source timeline\n\n  const timeline = playlist.timeline || 0;\n  const sidxByteRange = playlist.sidx.byterange;\n  const sidxEnd = sidxByteRange.offset + sidxByteRange.length; // Retain timescale of the parsed sidx\n\n  const timescale = sidx.timescale; // referenceType 1 refers to other sidx boxes\n\n  const mediaReferences = sidx.references.filter(r => r.referenceType !== 1);\n  const segments = [];\n  const type = playlist.endList ? 'static' : 'dynamic';\n  const periodStart = playlist.sidx.timeline;\n  let presentationTime = periodStart;\n  let number = playlist.mediaSequence || 0; // firstOffset is the offset from the end of the sidx box\n\n  let startIndex; // eslint-disable-next-line\n\n  if (typeof sidx.firstOffset === 'bigint') {\n    startIndex = window.BigInt(sidxEnd) + sidx.firstOffset;\n  } else {\n    startIndex = sidxEnd + sidx.firstOffset;\n  }\n\n  for (let i = 0; i < mediaReferences.length; i++) {\n    const reference = sidx.references[i]; // size of the referenced (sub)segment\n\n    const size = reference.referencedSize; // duration of the referenced (sub)segment, in  the  timescale\n    // this will be converted to seconds when generating segments\n\n    const duration = reference.subsegmentDuration; // should be an inclusive range\n\n    let endIndex; // eslint-disable-next-line\n\n    if (typeof startIndex === 'bigint') {\n      endIndex = startIndex + window.BigInt(size) - window.BigInt(1);\n    } else {\n      endIndex = startIndex + size - 1;\n    }\n\n    const indexRange = `${startIndex}-${endIndex}`;\n    const attributes = {\n      baseUrl,\n      timescale,\n      timeline,\n      periodStart,\n      presentationTime,\n      number,\n      duration,\n      sourceDuration,\n      indexRange,\n      type\n    };\n    const segment = segmentsFromBase(attributes)[0];\n\n    if (initSegment) {\n      segment.map = initSegment;\n    }\n\n    segments.push(segment);\n\n    if (typeof startIndex === 'bigint') {\n      startIndex += window.BigInt(size);\n    } else {\n      startIndex += size;\n    }\n\n    presentationTime += duration / timescale;\n    number++;\n  }\n\n  playlist.segments = segments;\n  return playlist;\n};\n\nconst SUPPORTED_MEDIA_TYPES = ['AUDIO', 'SUBTITLES']; // allow one 60fps frame as leniency (arbitrarily chosen)\n\nconst TIME_FUDGE = 1 / 60;\n/**\n * Given a list of timelineStarts, combines, dedupes, and sorts them.\n *\n * @param {TimelineStart[]} timelineStarts - list of timeline starts\n *\n * @return {TimelineStart[]} the combined and deduped timeline starts\n */\n\nconst getUniqueTimelineStarts = timelineStarts => {\n  return union(timelineStarts, ({\n    timeline\n  }) => timeline).sort((a, b) => a.timeline > b.timeline ? 1 : -1);\n};\n/**\n * Finds the playlist with the matching NAME attribute.\n *\n * @param {Array} playlists - playlists to search through\n * @param {string} name - the NAME attribute to search for\n *\n * @return {Object|null} the matching playlist object, or null\n */\n\nconst findPlaylistWithName = (playlists, name) => {\n  for (let i = 0; i < playlists.length; i++) {\n    if (playlists[i].attributes.NAME === name) {\n      return playlists[i];\n    }\n  }\n\n  return null;\n};\n/**\n * Gets a flattened array of media group playlists.\n *\n * @param {Object} manifest - the main manifest object\n *\n * @return {Array} the media group playlists\n */\n\nconst getMediaGroupPlaylists = manifest => {\n  let mediaGroupPlaylists = [];\n  forEachMediaGroup(manifest, SUPPORTED_MEDIA_TYPES, (properties, type, group, label) => {\n    mediaGroupPlaylists = mediaGroupPlaylists.concat(properties.playlists || []);\n  });\n  return mediaGroupPlaylists;\n};\n/**\n * Updates the playlist's media sequence numbers.\n *\n * @param {Object} config - options object\n * @param {Object} config.playlist - the playlist to update\n * @param {number} config.mediaSequence - the mediaSequence number to start with\n */\n\nconst updateMediaSequenceForPlaylist = ({\n  playlist,\n  mediaSequence\n}) => {\n  playlist.mediaSequence = mediaSequence;\n  playlist.segments.forEach((segment, index) => {\n    segment.number = playlist.mediaSequence + index;\n  });\n};\n/**\n * Updates the media and discontinuity sequence numbers of newPlaylists given oldPlaylists\n * and a complete list of timeline starts.\n *\n * If no matching playlist is found, only the discontinuity sequence number of the playlist\n * will be updated.\n *\n * Since early available timelines are not supported, at least one segment must be present.\n *\n * @param {Object} config - options object\n * @param {Object[]} oldPlaylists - the old playlists to use as a reference\n * @param {Object[]} newPlaylists - the new playlists to update\n * @param {Object} timelineStarts - all timelineStarts seen in the stream to this point\n */\n\nconst updateSequenceNumbers = ({\n  oldPlaylists,\n  newPlaylists,\n  timelineStarts\n}) => {\n  newPlaylists.forEach(playlist => {\n    playlist.discontinuitySequence = timelineStarts.findIndex(function ({\n      timeline\n    }) {\n      return timeline === playlist.timeline;\n    }); // Playlists NAMEs come from DASH Representation IDs, which are mandatory\n    // (see ISO_23009-1-2012 5.3.5.2).\n    //\n    // If the same Representation existed in a prior Period, it will retain the same NAME.\n\n    const oldPlaylist = findPlaylistWithName(oldPlaylists, playlist.attributes.NAME);\n\n    if (!oldPlaylist) {\n      // Since this is a new playlist, the media sequence values can start from 0 without\n      // consequence.\n      return;\n    } // TODO better support for live SIDX\n    //\n    // As of this writing, mpd-parser does not support multiperiod SIDX (in live or VOD).\n    // This is evident by a playlist only having a single SIDX reference. In a multiperiod\n    // playlist there would need to be multiple SIDX references. In addition, live SIDX is\n    // not supported when the SIDX properties change on refreshes.\n    //\n    // In the future, if support needs to be added, the merging logic here can be called\n    // after SIDX references are resolved. For now, exit early to prevent exceptions being\n    // thrown due to undefined references.\n\n\n    if (playlist.sidx) {\n      return;\n    } // Since we don't yet support early available timelines, we don't need to support\n    // playlists with no segments.\n\n\n    const firstNewSegment = playlist.segments[0];\n    const oldMatchingSegmentIndex = oldPlaylist.segments.findIndex(function (oldSegment) {\n      return Math.abs(oldSegment.presentationTime - firstNewSegment.presentationTime) < TIME_FUDGE;\n    }); // No matching segment from the old playlist means the entire playlist was refreshed.\n    // In this case the media sequence should account for this update, and the new segments\n    // should be marked as discontinuous from the prior content, since the last prior\n    // timeline was removed.\n\n    if (oldMatchingSegmentIndex === -1) {\n      updateMediaSequenceForPlaylist({\n        playlist,\n        mediaSequence: oldPlaylist.mediaSequence + oldPlaylist.segments.length\n      });\n      playlist.segments[0].discontinuity = true;\n      playlist.discontinuityStarts.unshift(0); // No matching segment does not necessarily mean there's missing content.\n      //\n      // If the new playlist's timeline is the same as the last seen segment's timeline,\n      // then a discontinuity can be added to identify that there's potentially missing\n      // content. If there's no missing content, the discontinuity should still be rather\n      // harmless. It's possible that if segment durations are accurate enough, that the\n      // existence of a gap can be determined using the presentation times and durations,\n      // but if the segment timing info is off, it may introduce more problems than simply\n      // adding the discontinuity.\n      //\n      // If the new playlist's timeline is different from the last seen segment's timeline,\n      // then a discontinuity can be added to identify that this is the first seen segment\n      // of a new timeline. However, the logic at the start of this function that\n      // determined the disconinuity sequence by timeline index is now off by one (the\n      // discontinuity of the newest timeline hasn't yet fallen off the manifest...since\n      // we added it), so the disconinuity sequence must be decremented.\n      //\n      // A period may also have a duration of zero, so the case of no segments is handled\n      // here even though we don't yet support early available periods.\n\n      if (!oldPlaylist.segments.length && playlist.timeline > oldPlaylist.timeline || oldPlaylist.segments.length && playlist.timeline > oldPlaylist.segments[oldPlaylist.segments.length - 1].timeline) {\n        playlist.discontinuitySequence--;\n      }\n\n      return;\n    } // If the first segment matched with a prior segment on a discontinuity (it's matching\n    // on the first segment of a period), then the discontinuitySequence shouldn't be the\n    // timeline's matching one, but instead should be the one prior, and the first segment\n    // of the new manifest should be marked with a discontinuity.\n    //\n    // The reason for this special case is that discontinuity sequence shows how many\n    // discontinuities have fallen off of the playlist, and discontinuities are marked on\n    // the first segment of a new \"timeline.\" Because of this, while DASH will retain that\n    // Period while the \"timeline\" exists, HLS keeps track of it via the discontinuity\n    // sequence, and that first segment is an indicator, but can be removed before that\n    // timeline is gone.\n\n\n    const oldMatchingSegment = oldPlaylist.segments[oldMatchingSegmentIndex];\n\n    if (oldMatchingSegment.discontinuity && !firstNewSegment.discontinuity) {\n      firstNewSegment.discontinuity = true;\n      playlist.discontinuityStarts.unshift(0);\n      playlist.discontinuitySequence--;\n    }\n\n    updateMediaSequenceForPlaylist({\n      playlist,\n      mediaSequence: oldPlaylist.segments[oldMatchingSegmentIndex].number\n    });\n  });\n};\n/**\n * Given an old parsed manifest object and a new parsed manifest object, updates the\n * sequence and timing values within the new manifest to ensure that it lines up with the\n * old.\n *\n * @param {Array} oldManifest - the old main manifest object\n * @param {Array} newManifest - the new main manifest object\n *\n * @return {Object} the updated new manifest object\n */\n\nconst positionManifestOnTimeline = ({\n  oldManifest,\n  newManifest\n}) => {\n  // Starting from v4.1.2 of the IOP, section 4.4.3.3 states:\n  //\n  // \"MPD@availabilityStartTime and Period@start shall not be changed over MPD updates.\"\n  //\n  // This was added from https://github.com/Dash-Industry-Forum/DASH-IF-IOP/issues/160\n  //\n  // Because of this change, and the difficulty of supporting periods with changing start\n  // times, periods with changing start times are not supported. This makes the logic much\n  // simpler, since periods with the same start time can be considerred the same period\n  // across refreshes.\n  //\n  // To give an example as to the difficulty of handling periods where the start time may\n  // change, if a single period manifest is refreshed with another manifest with a single\n  // period, and both the start and end times are increased, then the only way to determine\n  // if it's a new period or an old one that has changed is to look through the segments of\n  // each playlist and determine the presentation time bounds to find a match. In addition,\n  // if the period start changed to exceed the old period end, then there would be no\n  // match, and it would not be possible to determine whether the refreshed period is a new\n  // one or the old one.\n  const oldPlaylists = oldManifest.playlists.concat(getMediaGroupPlaylists(oldManifest));\n  const newPlaylists = newManifest.playlists.concat(getMediaGroupPlaylists(newManifest)); // Save all seen timelineStarts to the new manifest. Although this potentially means that\n  // there's a \"memory leak\" in that it will never stop growing, in reality, only a couple\n  // of properties are saved for each seen Period. Even long running live streams won't\n  // generate too many Periods, unless the stream is watched for decades. In the future,\n  // this can be optimized by mapping to discontinuity sequence numbers for each timeline,\n  // but it may not become an issue, and the additional info can be useful for debugging.\n\n  newManifest.timelineStarts = getUniqueTimelineStarts([oldManifest.timelineStarts, newManifest.timelineStarts]);\n  updateSequenceNumbers({\n    oldPlaylists,\n    newPlaylists,\n    timelineStarts: newManifest.timelineStarts\n  });\n  return newManifest;\n};\n\nconst generateSidxKey = sidx => sidx && sidx.uri + '-' + byteRangeToString(sidx.byterange);\n\nconst mergeDiscontiguousPlaylists = playlists => {\n  const mergedPlaylists = values(playlists.reduce((acc, playlist) => {\n    // assuming playlist IDs are the same across periods\n    // TODO: handle multiperiod where representation sets are not the same\n    // across periods\n    const name = playlist.attributes.id + (playlist.attributes.lang || '');\n\n    if (!acc[name]) {\n      // First Period\n      acc[name] = playlist;\n      acc[name].attributes.timelineStarts = [];\n    } else {\n      // Subsequent Periods\n      if (playlist.segments) {\n        // first segment of subsequent periods signal a discontinuity\n        if (playlist.segments[0]) {\n          playlist.segments[0].discontinuity = true;\n        }\n\n        acc[name].segments.push(...playlist.segments);\n      } // bubble up contentProtection, this assumes all DRM content\n      // has the same contentProtection\n\n\n      if (playlist.attributes.contentProtection) {\n        acc[name].attributes.contentProtection = playlist.attributes.contentProtection;\n      }\n    }\n\n    acc[name].attributes.timelineStarts.push({\n      // Although they represent the same number, it's important to have both to make it\n      // compatible with HLS potentially having a similar attribute.\n      start: playlist.attributes.periodStart,\n      timeline: playlist.attributes.periodStart\n    });\n    return acc;\n  }, {}));\n  return mergedPlaylists.map(playlist => {\n    playlist.discontinuityStarts = findIndexes(playlist.segments || [], 'discontinuity');\n    return playlist;\n  });\n};\n\nconst addSidxSegmentsToPlaylist = (playlist, sidxMapping) => {\n  const sidxKey = generateSidxKey(playlist.sidx);\n  const sidxMatch = sidxKey && sidxMapping[sidxKey] && sidxMapping[sidxKey].sidx;\n\n  if (sidxMatch) {\n    addSidxSegmentsToPlaylist$1(playlist, sidxMatch, playlist.sidx.resolvedUri);\n  }\n\n  return playlist;\n};\nconst addSidxSegmentsToPlaylists = (playlists, sidxMapping = {}) => {\n  if (!Object.keys(sidxMapping).length) {\n    return playlists;\n  }\n\n  for (const i in playlists) {\n    playlists[i] = addSidxSegmentsToPlaylist(playlists[i], sidxMapping);\n  }\n\n  return playlists;\n};\nconst formatAudioPlaylist = ({\n  attributes,\n  segments,\n  sidx,\n  mediaSequence,\n  discontinuitySequence,\n  discontinuityStarts\n}, isAudioOnly) => {\n  const playlist = {\n    attributes: {\n      NAME: attributes.id,\n      BANDWIDTH: attributes.bandwidth,\n      CODECS: attributes.codecs,\n      ['PROGRAM-ID']: 1\n    },\n    uri: '',\n    endList: attributes.type === 'static',\n    timeline: attributes.periodStart,\n    resolvedUri: '',\n    targetDuration: attributes.duration,\n    discontinuitySequence,\n    discontinuityStarts,\n    timelineStarts: attributes.timelineStarts,\n    mediaSequence,\n    segments\n  };\n\n  if (attributes.contentProtection) {\n    playlist.contentProtection = attributes.contentProtection;\n  }\n\n  if (sidx) {\n    playlist.sidx = sidx;\n  }\n\n  if (isAudioOnly) {\n    playlist.attributes.AUDIO = 'audio';\n    playlist.attributes.SUBTITLES = 'subs';\n  }\n\n  return playlist;\n};\nconst formatVttPlaylist = ({\n  attributes,\n  segments,\n  mediaSequence,\n  discontinuityStarts,\n  discontinuitySequence\n}) => {\n  if (typeof segments === 'undefined') {\n    // vtt tracks may use single file in BaseURL\n    segments = [{\n      uri: attributes.baseUrl,\n      timeline: attributes.periodStart,\n      resolvedUri: attributes.baseUrl || '',\n      duration: attributes.sourceDuration,\n      number: 0\n    }]; // targetDuration should be the same duration as the only segment\n\n    attributes.duration = attributes.sourceDuration;\n  }\n\n  const m3u8Attributes = {\n    NAME: attributes.id,\n    BANDWIDTH: attributes.bandwidth,\n    ['PROGRAM-ID']: 1\n  };\n\n  if (attributes.codecs) {\n    m3u8Attributes.CODECS = attributes.codecs;\n  }\n\n  return {\n    attributes: m3u8Attributes,\n    uri: '',\n    endList: attributes.type === 'static',\n    timeline: attributes.periodStart,\n    resolvedUri: attributes.baseUrl || '',\n    targetDuration: attributes.duration,\n    timelineStarts: attributes.timelineStarts,\n    discontinuityStarts,\n    discontinuitySequence,\n    mediaSequence,\n    segments\n  };\n};\nconst organizeAudioPlaylists = (playlists, sidxMapping = {}, isAudioOnly = false) => {\n  let mainPlaylist;\n  const formattedPlaylists = playlists.reduce((a, playlist) => {\n    const role = playlist.attributes.role && playlist.attributes.role.value || '';\n    const language = playlist.attributes.lang || '';\n    let label = playlist.attributes.label || 'main';\n\n    if (language && !playlist.attributes.label) {\n      const roleLabel = role ? ` (${role})` : '';\n      label = `${playlist.attributes.lang}${roleLabel}`;\n    }\n\n    if (!a[label]) {\n      a[label] = {\n        language,\n        autoselect: true,\n        default: role === 'main',\n        playlists: [],\n        uri: ''\n      };\n    }\n\n    const formatted = addSidxSegmentsToPlaylist(formatAudioPlaylist(playlist, isAudioOnly), sidxMapping);\n    a[label].playlists.push(formatted);\n\n    if (typeof mainPlaylist === 'undefined' && role === 'main') {\n      mainPlaylist = playlist;\n      mainPlaylist.default = true;\n    }\n\n    return a;\n  }, {}); // if no playlists have role \"main\", mark the first as main\n\n  if (!mainPlaylist) {\n    const firstLabel = Object.keys(formattedPlaylists)[0];\n    formattedPlaylists[firstLabel].default = true;\n  }\n\n  return formattedPlaylists;\n};\nconst organizeVttPlaylists = (playlists, sidxMapping = {}) => {\n  return playlists.reduce((a, playlist) => {\n    const label = playlist.attributes.label || playlist.attributes.lang || 'text';\n\n    if (!a[label]) {\n      a[label] = {\n        language: label,\n        default: false,\n        autoselect: false,\n        playlists: [],\n        uri: ''\n      };\n    }\n\n    a[label].playlists.push(addSidxSegmentsToPlaylist(formatVttPlaylist(playlist), sidxMapping));\n    return a;\n  }, {});\n};\n\nconst organizeCaptionServices = captionServices => captionServices.reduce((svcObj, svc) => {\n  if (!svc) {\n    return svcObj;\n  }\n\n  svc.forEach(service => {\n    const {\n      channel,\n      language\n    } = service;\n    svcObj[language] = {\n      autoselect: false,\n      default: false,\n      instreamId: channel,\n      language\n    };\n\n    if (service.hasOwnProperty('aspectRatio')) {\n      svcObj[language].aspectRatio = service.aspectRatio;\n    }\n\n    if (service.hasOwnProperty('easyReader')) {\n      svcObj[language].easyReader = service.easyReader;\n    }\n\n    if (service.hasOwnProperty('3D')) {\n      svcObj[language]['3D'] = service['3D'];\n    }\n  });\n  return svcObj;\n}, {});\n\nconst formatVideoPlaylist = ({\n  attributes,\n  segments,\n  sidx,\n  discontinuityStarts\n}) => {\n  const playlist = {\n    attributes: {\n      NAME: attributes.id,\n      AUDIO: 'audio',\n      SUBTITLES: 'subs',\n      RESOLUTION: {\n        width: attributes.width,\n        height: attributes.height\n      },\n      CODECS: attributes.codecs,\n      BANDWIDTH: attributes.bandwidth,\n      ['PROGRAM-ID']: 1\n    },\n    uri: '',\n    endList: attributes.type === 'static',\n    timeline: attributes.periodStart,\n    resolvedUri: '',\n    targetDuration: attributes.duration,\n    discontinuityStarts,\n    timelineStarts: attributes.timelineStarts,\n    segments\n  };\n\n  if (attributes.frameRate) {\n    playlist.attributes['FRAME-RATE'] = attributes.frameRate;\n  }\n\n  if (attributes.contentProtection) {\n    playlist.contentProtection = attributes.contentProtection;\n  }\n\n  if (sidx) {\n    playlist.sidx = sidx;\n  }\n\n  return playlist;\n};\n\nconst videoOnly = ({\n  attributes\n}) => attributes.mimeType === 'video/mp4' || attributes.mimeType === 'video/webm' || attributes.contentType === 'video';\n\nconst audioOnly = ({\n  attributes\n}) => attributes.mimeType === 'audio/mp4' || attributes.mimeType === 'audio/webm' || attributes.contentType === 'audio';\n\nconst vttOnly = ({\n  attributes\n}) => attributes.mimeType === 'text/vtt' || attributes.contentType === 'text';\n/**\n * Contains start and timeline properties denoting a timeline start. For DASH, these will\n * be the same number.\n *\n * @typedef {Object} TimelineStart\n * @property {number} start - the start time of the timeline\n * @property {number} timeline - the timeline number\n */\n\n/**\n * Adds appropriate media and discontinuity sequence values to the segments and playlists.\n *\n * Throughout mpd-parser, the `number` attribute is used in relation to `startNumber`, a\n * DASH specific attribute used in constructing segment URI's from templates. However, from\n * an HLS perspective, the `number` attribute on a segment would be its `mediaSequence`\n * value, which should start at the original media sequence value (or 0) and increment by 1\n * for each segment thereafter. Since DASH's `startNumber` values are independent per\n * period, it doesn't make sense to use it for `number`. Instead, assume everything starts\n * from a 0 mediaSequence value and increment from there.\n *\n * Note that VHS currently doesn't use the `number` property, but it can be helpful for\n * debugging and making sense of the manifest.\n *\n * For live playlists, to account for values increasing in manifests when periods are\n * removed on refreshes, merging logic should be used to update the numbers to their\n * appropriate values (to ensure they're sequential and increasing).\n *\n * @param {Object[]} playlists - the playlists to update\n * @param {TimelineStart[]} timelineStarts - the timeline starts for the manifest\n */\n\n\nconst addMediaSequenceValues = (playlists, timelineStarts) => {\n  // increment all segments sequentially\n  playlists.forEach(playlist => {\n    playlist.mediaSequence = 0;\n    playlist.discontinuitySequence = timelineStarts.findIndex(function ({\n      timeline\n    }) {\n      return timeline === playlist.timeline;\n    });\n\n    if (!playlist.segments) {\n      return;\n    }\n\n    playlist.segments.forEach((segment, index) => {\n      segment.number = index;\n    });\n  });\n};\n/**\n * Given a media group object, flattens all playlists within the media group into a single\n * array.\n *\n * @param {Object} mediaGroupObject - the media group object\n *\n * @return {Object[]}\n *         The media group playlists\n */\n\nconst flattenMediaGroupPlaylists = mediaGroupObject => {\n  if (!mediaGroupObject) {\n    return [];\n  }\n\n  return Object.keys(mediaGroupObject).reduce((acc, label) => {\n    const labelContents = mediaGroupObject[label];\n    return acc.concat(labelContents.playlists);\n  }, []);\n};\nconst toM3u8 = ({\n  dashPlaylists,\n  locations,\n  sidxMapping = {},\n  previousManifest,\n  eventStream\n}) => {\n  if (!dashPlaylists.length) {\n    return {};\n  } // grab all main manifest attributes\n\n\n  const {\n    sourceDuration: duration,\n    type,\n    suggestedPresentationDelay,\n    minimumUpdatePeriod\n  } = dashPlaylists[0].attributes;\n  const videoPlaylists = mergeDiscontiguousPlaylists(dashPlaylists.filter(videoOnly)).map(formatVideoPlaylist);\n  const audioPlaylists = mergeDiscontiguousPlaylists(dashPlaylists.filter(audioOnly));\n  const vttPlaylists = mergeDiscontiguousPlaylists(dashPlaylists.filter(vttOnly));\n  const captions = dashPlaylists.map(playlist => playlist.attributes.captionServices).filter(Boolean);\n  const manifest = {\n    allowCache: true,\n    discontinuityStarts: [],\n    segments: [],\n    endList: true,\n    mediaGroups: {\n      AUDIO: {},\n      VIDEO: {},\n      ['CLOSED-CAPTIONS']: {},\n      SUBTITLES: {}\n    },\n    uri: '',\n    duration,\n    playlists: addSidxSegmentsToPlaylists(videoPlaylists, sidxMapping)\n  };\n\n  if (minimumUpdatePeriod >= 0) {\n    manifest.minimumUpdatePeriod = minimumUpdatePeriod * 1000;\n  }\n\n  if (locations) {\n    manifest.locations = locations;\n  }\n\n  if (type === 'dynamic') {\n    manifest.suggestedPresentationDelay = suggestedPresentationDelay;\n  }\n\n  if (eventStream && eventStream.length > 0) {\n    manifest.eventStream = eventStream;\n  }\n\n  const isAudioOnly = manifest.playlists.length === 0;\n  const organizedAudioGroup = audioPlaylists.length ? organizeAudioPlaylists(audioPlaylists, sidxMapping, isAudioOnly) : null;\n  const organizedVttGroup = vttPlaylists.length ? organizeVttPlaylists(vttPlaylists, sidxMapping) : null;\n  const formattedPlaylists = videoPlaylists.concat(flattenMediaGroupPlaylists(organizedAudioGroup), flattenMediaGroupPlaylists(organizedVttGroup));\n  const playlistTimelineStarts = formattedPlaylists.map(({\n    timelineStarts\n  }) => timelineStarts);\n  manifest.timelineStarts = getUniqueTimelineStarts(playlistTimelineStarts);\n  addMediaSequenceValues(formattedPlaylists, manifest.timelineStarts);\n\n  if (organizedAudioGroup) {\n    manifest.mediaGroups.AUDIO.audio = organizedAudioGroup;\n  }\n\n  if (organizedVttGroup) {\n    manifest.mediaGroups.SUBTITLES.subs = organizedVttGroup;\n  }\n\n  if (captions.length) {\n    manifest.mediaGroups['CLOSED-CAPTIONS'].cc = organizeCaptionServices(captions);\n  }\n\n  if (previousManifest) {\n    return positionManifestOnTimeline({\n      oldManifest: previousManifest,\n      newManifest: manifest\n    });\n  }\n\n  return manifest;\n};\n\n/**\n * Calculates the R (repetition) value for a live stream (for the final segment\n * in a manifest where the r value is negative 1)\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {number} time\n *        current time (typically the total time up until the final segment)\n * @param {number} duration\n *        duration property for the given <S />\n *\n * @return {number}\n *        R value to reach the end of the given period\n */\nconst getLiveRValue = (attributes, time, duration) => {\n  const {\n    NOW,\n    clientOffset,\n    availabilityStartTime,\n    timescale = 1,\n    periodStart = 0,\n    minimumUpdatePeriod = 0\n  } = attributes;\n  const now = (NOW + clientOffset) / 1000;\n  const periodStartWC = availabilityStartTime + periodStart;\n  const periodEndWC = now + minimumUpdatePeriod;\n  const periodDuration = periodEndWC - periodStartWC;\n  return Math.ceil((periodDuration * timescale - time) / duration);\n};\n/**\n * Uses information provided by SegmentTemplate.SegmentTimeline to determine segment\n * timing and duration\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {Object[]} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *\n * @return {{number: number, duration: number, time: number, timeline: number}[]}\n *         List of Objects with segment timing and duration info\n */\n\n\nconst parseByTimeline = (attributes, segmentTimeline) => {\n  const {\n    type,\n    minimumUpdatePeriod = 0,\n    media = '',\n    sourceDuration,\n    timescale = 1,\n    startNumber = 1,\n    periodStart: timeline\n  } = attributes;\n  const segments = [];\n  let time = -1;\n\n  for (let sIndex = 0; sIndex < segmentTimeline.length; sIndex++) {\n    const S = segmentTimeline[sIndex];\n    const duration = S.d;\n    const repeat = S.r || 0;\n    const segmentTime = S.t || 0;\n\n    if (time < 0) {\n      // first segment\n      time = segmentTime;\n    }\n\n    if (segmentTime && segmentTime > time) {\n      // discontinuity\n      // TODO: How to handle this type of discontinuity\n      // timeline++ here would treat it like HLS discontuity and content would\n      // get appended without gap\n      // E.G.\n      //  <S t=\"0\" d=\"1\" />\n      //  <S d=\"1\" />\n      //  <S d=\"1\" />\n      //  <S t=\"5\" d=\"1\" />\n      // would have $Time$ values of [0, 1, 2, 5]\n      // should this be appened at time positions [0, 1, 2, 3],(#EXT-X-DISCONTINUITY)\n      // or [0, 1, 2, gap, gap, 5]? (#EXT-X-GAP)\n      // does the value of sourceDuration consider this when calculating arbitrary\n      // negative @r repeat value?\n      // E.G. Same elements as above with this added at the end\n      //  <S d=\"1\" r=\"-1\" />\n      //  with a sourceDuration of 10\n      // Would the 2 gaps be included in the time duration calculations resulting in\n      // 8 segments with $Time$ values of [0, 1, 2, 5, 6, 7, 8, 9] or 10 segments\n      // with $Time$ values of [0, 1, 2, 5, 6, 7, 8, 9, 10, 11] ?\n      time = segmentTime;\n    }\n\n    let count;\n\n    if (repeat < 0) {\n      const nextS = sIndex + 1;\n\n      if (nextS === segmentTimeline.length) {\n        // last segment\n        if (type === 'dynamic' && minimumUpdatePeriod > 0 && media.indexOf('$Number$') > 0) {\n          count = getLiveRValue(attributes, time, duration);\n        } else {\n          // TODO: This may be incorrect depending on conclusion of TODO above\n          count = (sourceDuration * timescale - time) / duration;\n        }\n      } else {\n        count = (segmentTimeline[nextS].t - time) / duration;\n      }\n    } else {\n      count = repeat + 1;\n    }\n\n    const end = startNumber + segments.length + count;\n    let number = startNumber + segments.length;\n\n    while (number < end) {\n      segments.push({\n        number,\n        duration: duration / timescale,\n        time,\n        timeline\n      });\n      time += duration;\n      number++;\n    }\n  }\n\n  return segments;\n};\n\nconst identifierPattern = /\\$([A-z]*)(?:(%0)([0-9]+)d)?\\$/g;\n/**\n * Replaces template identifiers with corresponding values. To be used as the callback\n * for String.prototype.replace\n *\n * @name replaceCallback\n * @function\n * @param {string} match\n *        Entire match of identifier\n * @param {string} identifier\n *        Name of matched identifier\n * @param {string} format\n *        Format tag string. Its presence indicates that padding is expected\n * @param {string} width\n *        Desired length of the replaced value. Values less than this width shall be left\n *        zero padded\n * @return {string}\n *         Replacement for the matched identifier\n */\n\n/**\n * Returns a function to be used as a callback for String.prototype.replace to replace\n * template identifiers\n *\n * @param {Obect} values\n *        Object containing values that shall be used to replace known identifiers\n * @param {number} values.RepresentationID\n *        Value of the Representation@id attribute\n * @param {number} values.Number\n *        Number of the corresponding segment\n * @param {number} values.Bandwidth\n *        Value of the Representation@bandwidth attribute.\n * @param {number} values.Time\n *        Timestamp value of the corresponding segment\n * @return {replaceCallback}\n *         Callback to be used with String.prototype.replace to replace identifiers\n */\n\nconst identifierReplacement = values => (match, identifier, format, width) => {\n  if (match === '$$') {\n    // escape sequence\n    return '$';\n  }\n\n  if (typeof values[identifier] === 'undefined') {\n    return match;\n  }\n\n  const value = '' + values[identifier];\n\n  if (identifier === 'RepresentationID') {\n    // Format tag shall not be present with RepresentationID\n    return value;\n  }\n\n  if (!format) {\n    width = 1;\n  } else {\n    width = parseInt(width, 10);\n  }\n\n  if (value.length >= width) {\n    return value;\n  }\n\n  return `${new Array(width - value.length + 1).join('0')}${value}`;\n};\n/**\n * Constructs a segment url from a template string\n *\n * @param {string} url\n *        Template string to construct url from\n * @param {Obect} values\n *        Object containing values that shall be used to replace known identifiers\n * @param {number} values.RepresentationID\n *        Value of the Representation@id attribute\n * @param {number} values.Number\n *        Number of the corresponding segment\n * @param {number} values.Bandwidth\n *        Value of the Representation@bandwidth attribute.\n * @param {number} values.Time\n *        Timestamp value of the corresponding segment\n * @return {string}\n *         Segment url with identifiers replaced\n */\n\nconst constructTemplateUrl = (url, values) => url.replace(identifierPattern, identifierReplacement(values));\n/**\n * Generates a list of objects containing timing and duration information about each\n * segment needed to generate segment uris and the complete segment object\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {Object[]|undefined} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *        the SegmentTimeline element\n * @return {{number: number, duration: number, time: number, timeline: number}[]}\n *         List of Objects with segment timing and duration info\n */\n\nconst parseTemplateInfo = (attributes, segmentTimeline) => {\n  if (!attributes.duration && !segmentTimeline) {\n    // if neither @duration or SegmentTimeline are present, then there shall be exactly\n    // one media segment\n    return [{\n      number: attributes.startNumber || 1,\n      duration: attributes.sourceDuration,\n      time: 0,\n      timeline: attributes.periodStart\n    }];\n  }\n\n  if (attributes.duration) {\n    return parseByDuration(attributes);\n  }\n\n  return parseByTimeline(attributes, segmentTimeline);\n};\n/**\n * Generates a list of segments using information provided by the SegmentTemplate element\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {Object[]|undefined} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *        the SegmentTimeline element\n * @return {Object[]}\n *         List of segment objects\n */\n\nconst segmentsFromTemplate = (attributes, segmentTimeline) => {\n  const templateValues = {\n    RepresentationID: attributes.id,\n    Bandwidth: attributes.bandwidth || 0\n  };\n  const {\n    initialization = {\n      sourceURL: '',\n      range: ''\n    }\n  } = attributes;\n  const mapSegment = urlTypeToSegment({\n    baseUrl: attributes.baseUrl,\n    source: constructTemplateUrl(initialization.sourceURL, templateValues),\n    range: initialization.range\n  });\n  const segments = parseTemplateInfo(attributes, segmentTimeline);\n  return segments.map(segment => {\n    templateValues.Number = segment.number;\n    templateValues.Time = segment.time;\n    const uri = constructTemplateUrl(attributes.media || '', templateValues); // See DASH spec section 5.3.9.2.2\n    // - if timescale isn't present on any level, default to 1.\n\n    const timescale = attributes.timescale || 1; // - if presentationTimeOffset isn't present on any level, default to 0\n\n    const presentationTimeOffset = attributes.presentationTimeOffset || 0;\n    const presentationTime = // Even if the @t attribute is not specified for the segment, segment.time is\n    // calculated in mpd-parser prior to this, so it's assumed to be available.\n    attributes.periodStart + (segment.time - presentationTimeOffset) / timescale;\n    const map = {\n      uri,\n      timeline: segment.timeline,\n      duration: segment.duration,\n      resolvedUri: resolveUrl(attributes.baseUrl || '', uri),\n      map: mapSegment,\n      number: segment.number,\n      presentationTime\n    };\n    return map;\n  });\n};\n\n/**\n * Converts a <SegmentUrl> (of type URLType from the DASH spec 5.3.9.2 Table 14)\n * to an object that matches the output of a segment in videojs/mpd-parser\n *\n * @param {Object} attributes\n *   Object containing all inherited attributes from parent elements with attribute\n *   names as keys\n * @param {Object} segmentUrl\n *   <SegmentURL> node to translate into a segment object\n * @return {Object} translated segment object\n */\n\nconst SegmentURLToSegmentObject = (attributes, segmentUrl) => {\n  const {\n    baseUrl,\n    initialization = {}\n  } = attributes;\n  const initSegment = urlTypeToSegment({\n    baseUrl,\n    source: initialization.sourceURL,\n    range: initialization.range\n  });\n  const segment = urlTypeToSegment({\n    baseUrl,\n    source: segmentUrl.media,\n    range: segmentUrl.mediaRange\n  });\n  segment.map = initSegment;\n  return segment;\n};\n/**\n * Generates a list of segments using information provided by the SegmentList element\n * SegmentList (DASH SPEC Section 5.3.9.3.2) contains a set of <SegmentURL> nodes.  Each\n * node should be translated into segment.\n *\n * @param {Object} attributes\n *   Object containing all inherited attributes from parent elements with attribute\n *   names as keys\n * @param {Object[]|undefined} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *        the SegmentTimeline element\n * @return {Object.<Array>} list of segments\n */\n\n\nconst segmentsFromList = (attributes, segmentTimeline) => {\n  const {\n    duration,\n    segmentUrls = [],\n    periodStart\n  } = attributes; // Per spec (5.3.9.2.1) no way to determine segment duration OR\n  // if both SegmentTimeline and @duration are defined, it is outside of spec.\n\n  if (!duration && !segmentTimeline || duration && segmentTimeline) {\n    throw new Error(errors.SEGMENT_TIME_UNSPECIFIED);\n  }\n\n  const segmentUrlMap = segmentUrls.map(segmentUrlObject => SegmentURLToSegmentObject(attributes, segmentUrlObject));\n  let segmentTimeInfo;\n\n  if (duration) {\n    segmentTimeInfo = parseByDuration(attributes);\n  }\n\n  if (segmentTimeline) {\n    segmentTimeInfo = parseByTimeline(attributes, segmentTimeline);\n  }\n\n  const segments = segmentTimeInfo.map((segmentTime, index) => {\n    if (segmentUrlMap[index]) {\n      const segment = segmentUrlMap[index]; // See DASH spec section 5.3.9.2.2\n      // - if timescale isn't present on any level, default to 1.\n\n      const timescale = attributes.timescale || 1; // - if presentationTimeOffset isn't present on any level, default to 0\n\n      const presentationTimeOffset = attributes.presentationTimeOffset || 0;\n      segment.timeline = segmentTime.timeline;\n      segment.duration = segmentTime.duration;\n      segment.number = segmentTime.number;\n      segment.presentationTime = periodStart + (segmentTime.time - presentationTimeOffset) / timescale;\n      return segment;\n    } // Since we're mapping we should get rid of any blank segments (in case\n    // the given SegmentTimeline is handling for more elements than we have\n    // SegmentURLs for).\n\n  }).filter(segment => segment);\n  return segments;\n};\n\nconst generateSegments = ({\n  attributes,\n  segmentInfo\n}) => {\n  let segmentAttributes;\n  let segmentsFn;\n\n  if (segmentInfo.template) {\n    segmentsFn = segmentsFromTemplate;\n    segmentAttributes = merge(attributes, segmentInfo.template);\n  } else if (segmentInfo.base) {\n    segmentsFn = segmentsFromBase;\n    segmentAttributes = merge(attributes, segmentInfo.base);\n  } else if (segmentInfo.list) {\n    segmentsFn = segmentsFromList;\n    segmentAttributes = merge(attributes, segmentInfo.list);\n  }\n\n  const segmentsInfo = {\n    attributes\n  };\n\n  if (!segmentsFn) {\n    return segmentsInfo;\n  }\n\n  const segments = segmentsFn(segmentAttributes, segmentInfo.segmentTimeline); // The @duration attribute will be used to determin the playlist's targetDuration which\n  // must be in seconds. Since we've generated the segment list, we no longer need\n  // @duration to be in @timescale units, so we can convert it here.\n\n  if (segmentAttributes.duration) {\n    const {\n      duration,\n      timescale = 1\n    } = segmentAttributes;\n    segmentAttributes.duration = duration / timescale;\n  } else if (segments.length) {\n    // if there is no @duration attribute, use the largest segment duration as\n    // as target duration\n    segmentAttributes.duration = segments.reduce((max, segment) => {\n      return Math.max(max, Math.ceil(segment.duration));\n    }, 0);\n  } else {\n    segmentAttributes.duration = 0;\n  }\n\n  segmentsInfo.attributes = segmentAttributes;\n  segmentsInfo.segments = segments; // This is a sidx box without actual segment information\n\n  if (segmentInfo.base && segmentAttributes.indexRange) {\n    segmentsInfo.sidx = segments[0];\n    segmentsInfo.segments = [];\n  }\n\n  return segmentsInfo;\n};\nconst toPlaylists = representations => representations.map(generateSegments);\n\nconst findChildren = (element, name) => from(element.childNodes).filter(({\n  tagName\n}) => tagName === name);\nconst getContent = element => element.textContent.trim();\n\n/**\n * Converts the provided string that may contain a division operation to a number.\n *\n * @param {string} value - the provided string value\n *\n * @return {number} the parsed string value\n */\nconst parseDivisionValue = value => {\n  return parseFloat(value.split('/').reduce((prev, current) => prev / current));\n};\n\nconst parseDuration = str => {\n  const SECONDS_IN_YEAR = 365 * 24 * 60 * 60;\n  const SECONDS_IN_MONTH = 30 * 24 * 60 * 60;\n  const SECONDS_IN_DAY = 24 * 60 * 60;\n  const SECONDS_IN_HOUR = 60 * 60;\n  const SECONDS_IN_MIN = 60; // P10Y10M10DT10H10M10.1S\n\n  const durationRegex = /P(?:(\\d*)Y)?(?:(\\d*)M)?(?:(\\d*)D)?(?:T(?:(\\d*)H)?(?:(\\d*)M)?(?:([\\d.]*)S)?)?/;\n  const match = durationRegex.exec(str);\n\n  if (!match) {\n    return 0;\n  }\n\n  const [year, month, day, hour, minute, second] = match.slice(1);\n  return parseFloat(year || 0) * SECONDS_IN_YEAR + parseFloat(month || 0) * SECONDS_IN_MONTH + parseFloat(day || 0) * SECONDS_IN_DAY + parseFloat(hour || 0) * SECONDS_IN_HOUR + parseFloat(minute || 0) * SECONDS_IN_MIN + parseFloat(second || 0);\n};\nconst parseDate = str => {\n  // Date format without timezone according to ISO 8601\n  // YYY-MM-DDThh:mm:ss.ssssss\n  const dateRegex = /^\\d+-\\d+-\\d+T\\d+:\\d+:\\d+(\\.\\d+)?$/; // If the date string does not specifiy a timezone, we must specifiy UTC. This is\n  // expressed by ending with 'Z'\n\n  if (dateRegex.test(str)) {\n    str += 'Z';\n  }\n\n  return Date.parse(str);\n};\n\nconst parsers = {\n  /**\n   * Specifies the duration of the entire Media Presentation. Format is a duration string\n   * as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  mediaPresentationDuration(value) {\n    return parseDuration(value);\n  },\n\n  /**\n   * Specifies the Segment availability start time for all Segments referred to in this\n   * MPD. For a dynamic manifest, it specifies the anchor for the earliest availability\n   * time. Format is a date string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The date as seconds from unix epoch\n   */\n  availabilityStartTime(value) {\n    return parseDate(value) / 1000;\n  },\n\n  /**\n   * Specifies the smallest period between potential changes to the MPD. Format is a\n   * duration string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  minimumUpdatePeriod(value) {\n    return parseDuration(value);\n  },\n\n  /**\n   * Specifies the suggested presentation delay. Format is a\n   * duration string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  suggestedPresentationDelay(value) {\n    return parseDuration(value);\n  },\n\n  /**\n   * specifices the type of mpd. Can be either \"static\" or \"dynamic\"\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   *\n   * @return {string}\n   *         The type as a string\n   */\n  type(value) {\n    return value;\n  },\n\n  /**\n   * Specifies the duration of the smallest time shifting buffer for any Representation\n   * in the MPD. Format is a duration string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  timeShiftBufferDepth(value) {\n    return parseDuration(value);\n  },\n\n  /**\n   * Specifies the PeriodStart time of the Period relative to the availabilityStarttime.\n   * Format is a duration string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  start(value) {\n    return parseDuration(value);\n  },\n\n  /**\n   * Specifies the width of the visual presentation\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed width\n   */\n  width(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the height of the visual presentation\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed height\n   */\n  height(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the bitrate of the representation\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed bandwidth\n   */\n  bandwidth(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the frame rate of the representation\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed frame rate\n   */\n  frameRate(value) {\n    return parseDivisionValue(value);\n  },\n\n  /**\n   * Specifies the number of the first Media Segment in this Representation in the Period\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed number\n   */\n  startNumber(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the timescale in units per seconds\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed timescale\n   */\n  timescale(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the presentationTimeOffset.\n   *\n   * @param {string} value\n   *        value of the attribute as a string\n   *\n   * @return {number}\n   *         The parsed presentationTimeOffset\n   */\n  presentationTimeOffset(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the constant approximate Segment duration\n   * NOTE: The <Period> element also contains an @duration attribute. This duration\n   *       specifies the duration of the Period. This attribute is currently not\n   *       supported by the rest of the parser, however we still check for it to prevent\n   *       errors.\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed duration\n   */\n  duration(value) {\n    const parsedValue = parseInt(value, 10);\n\n    if (isNaN(parsedValue)) {\n      return parseDuration(value);\n    }\n\n    return parsedValue;\n  },\n\n  /**\n   * Specifies the Segment duration, in units of the value of the @timescale.\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed duration\n   */\n  d(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the MPD start time, in @timescale units, the first Segment in the series\n   * starts relative to the beginning of the Period\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed time\n   */\n  t(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the repeat count of the number of following contiguous Segments with the\n   * same duration expressed by the value of @d\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed number\n   */\n  r(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the presentationTime.\n   *\n   * @param {string} value\n   *        value of the attribute as a string\n   *\n   * @return {number}\n   *         The parsed presentationTime\n   */\n  presentationTime(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Default parser for all other attributes. Acts as a no-op and just returns the value\n   * as a string\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {string}\n   *         Unparsed value\n   */\n  DEFAULT(value) {\n    return value;\n  }\n\n};\n/**\n * Gets all the attributes and values of the provided node, parses attributes with known\n * types, and returns an object with attribute names mapped to values.\n *\n * @param {Node} el\n *        The node to parse attributes from\n * @return {Object}\n *         Object with all attributes of el parsed\n */\n\nconst parseAttributes = el => {\n  if (!(el && el.attributes)) {\n    return {};\n  }\n\n  return from(el.attributes).reduce((a, e) => {\n    const parseFn = parsers[e.name] || parsers.DEFAULT;\n    a[e.name] = parseFn(e.value);\n    return a;\n  }, {});\n};\n\nconst keySystemsMap = {\n  'urn:uuid:1077efec-c0b2-4d02-ace3-3c1e52e2fb4b': 'org.w3.clearkey',\n  'urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed': 'com.widevine.alpha',\n  'urn:uuid:9a04f079-9840-4286-ab92-e65be0885f95': 'com.microsoft.playready',\n  'urn:uuid:f239e769-efa3-4850-9c16-a903c6932efb': 'com.adobe.primetime'\n};\n/**\n * Builds a list of urls that is the product of the reference urls and BaseURL values\n *\n * @param {string[]} referenceUrls\n *        List of reference urls to resolve to\n * @param {Node[]} baseUrlElements\n *        List of BaseURL nodes from the mpd\n * @return {string[]}\n *         List of resolved urls\n */\n\nconst buildBaseUrls = (referenceUrls, baseUrlElements) => {\n  if (!baseUrlElements.length) {\n    return referenceUrls;\n  }\n\n  return flatten(referenceUrls.map(function (reference) {\n    return baseUrlElements.map(function (baseUrlElement) {\n      return resolveUrl(reference, getContent(baseUrlElement));\n    });\n  }));\n};\n/**\n * Contains all Segment information for its containing AdaptationSet\n *\n * @typedef {Object} SegmentInformation\n * @property {Object|undefined} template\n *           Contains the attributes for the SegmentTemplate node\n * @property {Object[]|undefined} segmentTimeline\n *           Contains a list of atrributes for each S node within the SegmentTimeline node\n * @property {Object|undefined} list\n *           Contains the attributes for the SegmentList node\n * @property {Object|undefined} base\n *           Contains the attributes for the SegmentBase node\n */\n\n/**\n * Returns all available Segment information contained within the AdaptationSet node\n *\n * @param {Node} adaptationSet\n *        The AdaptationSet node to get Segment information from\n * @return {SegmentInformation}\n *         The Segment information contained within the provided AdaptationSet\n */\n\nconst getSegmentInformation = adaptationSet => {\n  const segmentTemplate = findChildren(adaptationSet, 'SegmentTemplate')[0];\n  const segmentList = findChildren(adaptationSet, 'SegmentList')[0];\n  const segmentUrls = segmentList && findChildren(segmentList, 'SegmentURL').map(s => merge({\n    tag: 'SegmentURL'\n  }, parseAttributes(s)));\n  const segmentBase = findChildren(adaptationSet, 'SegmentBase')[0];\n  const segmentTimelineParentNode = segmentList || segmentTemplate;\n  const segmentTimeline = segmentTimelineParentNode && findChildren(segmentTimelineParentNode, 'SegmentTimeline')[0];\n  const segmentInitializationParentNode = segmentList || segmentBase || segmentTemplate;\n  const segmentInitialization = segmentInitializationParentNode && findChildren(segmentInitializationParentNode, 'Initialization')[0]; // SegmentTemplate is handled slightly differently, since it can have both\n  // @initialization and an <Initialization> node.  @initialization can be templated,\n  // while the node can have a url and range specified.  If the <SegmentTemplate> has\n  // both @initialization and an <Initialization> subelement we opt to override with\n  // the node, as this interaction is not defined in the spec.\n\n  const template = segmentTemplate && parseAttributes(segmentTemplate);\n\n  if (template && segmentInitialization) {\n    template.initialization = segmentInitialization && parseAttributes(segmentInitialization);\n  } else if (template && template.initialization) {\n    // If it is @initialization we convert it to an object since this is the format that\n    // later functions will rely on for the initialization segment.  This is only valid\n    // for <SegmentTemplate>\n    template.initialization = {\n      sourceURL: template.initialization\n    };\n  }\n\n  const segmentInfo = {\n    template,\n    segmentTimeline: segmentTimeline && findChildren(segmentTimeline, 'S').map(s => parseAttributes(s)),\n    list: segmentList && merge(parseAttributes(segmentList), {\n      segmentUrls,\n      initialization: parseAttributes(segmentInitialization)\n    }),\n    base: segmentBase && merge(parseAttributes(segmentBase), {\n      initialization: parseAttributes(segmentInitialization)\n    })\n  };\n  Object.keys(segmentInfo).forEach(key => {\n    if (!segmentInfo[key]) {\n      delete segmentInfo[key];\n    }\n  });\n  return segmentInfo;\n};\n/**\n * Contains Segment information and attributes needed to construct a Playlist object\n * from a Representation\n *\n * @typedef {Object} RepresentationInformation\n * @property {SegmentInformation} segmentInfo\n *           Segment information for this Representation\n * @property {Object} attributes\n *           Inherited attributes for this Representation\n */\n\n/**\n * Maps a Representation node to an object containing Segment information and attributes\n *\n * @name inheritBaseUrlsCallback\n * @function\n * @param {Node} representation\n *        Representation node from the mpd\n * @return {RepresentationInformation}\n *         Representation information needed to construct a Playlist object\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping Representation nodes to\n * Segment information and attributes using inherited BaseURL nodes.\n *\n * @param {Object} adaptationSetAttributes\n *        Contains attributes inherited by the AdaptationSet\n * @param {string[]} adaptationSetBaseUrls\n *        Contains list of resolved base urls inherited by the AdaptationSet\n * @param {SegmentInformation} adaptationSetSegmentInfo\n *        Contains Segment information for the AdaptationSet\n * @return {inheritBaseUrlsCallback}\n *         Callback map function\n */\n\nconst inheritBaseUrls = (adaptationSetAttributes, adaptationSetBaseUrls, adaptationSetSegmentInfo) => representation => {\n  const repBaseUrlElements = findChildren(representation, 'BaseURL');\n  const repBaseUrls = buildBaseUrls(adaptationSetBaseUrls, repBaseUrlElements);\n  const attributes = merge(adaptationSetAttributes, parseAttributes(representation));\n  const representationSegmentInfo = getSegmentInformation(representation);\n  return repBaseUrls.map(baseUrl => {\n    return {\n      segmentInfo: merge(adaptationSetSegmentInfo, representationSegmentInfo),\n      attributes: merge(attributes, {\n        baseUrl\n      })\n    };\n  });\n};\n/**\n * Tranforms a series of content protection nodes to\n * an object containing pssh data by key system\n *\n * @param {Node[]} contentProtectionNodes\n *        Content protection nodes\n * @return {Object}\n *        Object containing pssh data by key system\n */\n\nconst generateKeySystemInformation = contentProtectionNodes => {\n  return contentProtectionNodes.reduce((acc, node) => {\n    const attributes = parseAttributes(node); // Although it could be argued that according to the UUID RFC spec the UUID string (a-f chars) should be generated\n    // as a lowercase string it also mentions it should be treated as case-insensitive on input. Since the key system\n    // UUIDs in the keySystemsMap are hardcoded as lowercase in the codebase there isn't any reason not to do\n    // .toLowerCase() on the input UUID string from the manifest (at least I could not think of one).\n\n    if (attributes.schemeIdUri) {\n      attributes.schemeIdUri = attributes.schemeIdUri.toLowerCase();\n    }\n\n    const keySystem = keySystemsMap[attributes.schemeIdUri];\n\n    if (keySystem) {\n      acc[keySystem] = {\n        attributes\n      };\n      const psshNode = findChildren(node, 'cenc:pssh')[0];\n\n      if (psshNode) {\n        const pssh = getContent(psshNode);\n        acc[keySystem].pssh = pssh && decodeB64ToUint8Array(pssh);\n      }\n    }\n\n    return acc;\n  }, {});\n}; // defined in ANSI_SCTE 214-1 2016\n\n\nconst parseCaptionServiceMetadata = service => {\n  // 608 captions\n  if (service.schemeIdUri === 'urn:scte:dash:cc:cea-608:2015') {\n    const values = typeof service.value !== 'string' ? [] : service.value.split(';');\n    return values.map(value => {\n      let channel;\n      let language; // default language to value\n\n      language = value;\n\n      if (/^CC\\d=/.test(value)) {\n        [channel, language] = value.split('=');\n      } else if (/^CC\\d$/.test(value)) {\n        channel = value;\n      }\n\n      return {\n        channel,\n        language\n      };\n    });\n  } else if (service.schemeIdUri === 'urn:scte:dash:cc:cea-708:2015') {\n    const values = typeof service.value !== 'string' ? [] : service.value.split(';');\n    return values.map(value => {\n      const flags = {\n        // service or channel number 1-63\n        'channel': undefined,\n        // language is a 3ALPHA per ISO 639.2/B\n        // field is required\n        'language': undefined,\n        // BIT 1/0 or ?\n        // default value is 1, meaning 16:9 aspect ratio, 0 is 4:3, ? is unknown\n        'aspectRatio': 1,\n        // BIT 1/0\n        // easy reader flag indicated the text is tailed to the needs of beginning readers\n        // default 0, or off\n        'easyReader': 0,\n        // BIT 1/0\n        // If 3d metadata is present (CEA-708.1) then 1\n        // default 0\n        '3D': 0\n      };\n\n      if (/=/.test(value)) {\n        const [channel, opts = ''] = value.split('=');\n        flags.channel = channel;\n        flags.language = value;\n        opts.split(',').forEach(opt => {\n          const [name, val] = opt.split(':');\n\n          if (name === 'lang') {\n            flags.language = val; // er for easyReadery\n          } else if (name === 'er') {\n            flags.easyReader = Number(val); // war for wide aspect ratio\n          } else if (name === 'war') {\n            flags.aspectRatio = Number(val);\n          } else if (name === '3D') {\n            flags['3D'] = Number(val);\n          }\n        });\n      } else {\n        flags.language = value;\n      }\n\n      if (flags.channel) {\n        flags.channel = 'SERVICE' + flags.channel;\n      }\n\n      return flags;\n    });\n  }\n};\n/**\n * A map callback that will parse all event stream data for a collection of periods\n * DASH ISO_IEC_23009 5.10.2.2\n * https://dashif-documents.azurewebsites.net/Events/master/event.html#mpd-event-timing\n *\n * @param {PeriodInformation} period object containing necessary period information\n * @return a collection of parsed eventstream event objects\n */\n\nconst toEventStream = period => {\n  // get and flatten all EventStreams tags and parse attributes and children\n  return flatten(findChildren(period.node, 'EventStream').map(eventStream => {\n    const eventStreamAttributes = parseAttributes(eventStream);\n    const schemeIdUri = eventStreamAttributes.schemeIdUri; // find all Events per EventStream tag and map to return objects\n\n    return findChildren(eventStream, 'Event').map(event => {\n      const eventAttributes = parseAttributes(event);\n      const presentationTime = eventAttributes.presentationTime || 0;\n      const timescale = eventStreamAttributes.timescale || 1;\n      const duration = eventAttributes.duration || 0;\n      const start = presentationTime / timescale + period.attributes.start;\n      return {\n        schemeIdUri,\n        value: eventStreamAttributes.value,\n        id: eventAttributes.id,\n        start,\n        end: start + duration / timescale,\n        messageData: getContent(event) || eventAttributes.messageData,\n        contentEncoding: eventStreamAttributes.contentEncoding,\n        presentationTimeOffset: eventStreamAttributes.presentationTimeOffset || 0\n      };\n    });\n  }));\n};\n/**\n * Maps an AdaptationSet node to a list of Representation information objects\n *\n * @name toRepresentationsCallback\n * @function\n * @param {Node} adaptationSet\n *        AdaptationSet node from the mpd\n * @return {RepresentationInformation[]}\n *         List of objects containing Representaion information\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping AdaptationSet nodes to a list of\n * Representation information objects\n *\n * @param {Object} periodAttributes\n *        Contains attributes inherited by the Period\n * @param {string[]} periodBaseUrls\n *        Contains list of resolved base urls inherited by the Period\n * @param {string[]} periodSegmentInfo\n *        Contains Segment Information at the period level\n * @return {toRepresentationsCallback}\n *         Callback map function\n */\n\nconst toRepresentations = (periodAttributes, periodBaseUrls, periodSegmentInfo) => adaptationSet => {\n  const adaptationSetAttributes = parseAttributes(adaptationSet);\n  const adaptationSetBaseUrls = buildBaseUrls(periodBaseUrls, findChildren(adaptationSet, 'BaseURL'));\n  const role = findChildren(adaptationSet, 'Role')[0];\n  const roleAttributes = {\n    role: parseAttributes(role)\n  };\n  let attrs = merge(periodAttributes, adaptationSetAttributes, roleAttributes);\n  const accessibility = findChildren(adaptationSet, 'Accessibility')[0];\n  const captionServices = parseCaptionServiceMetadata(parseAttributes(accessibility));\n\n  if (captionServices) {\n    attrs = merge(attrs, {\n      captionServices\n    });\n  }\n\n  const label = findChildren(adaptationSet, 'Label')[0];\n\n  if (label && label.childNodes.length) {\n    const labelVal = label.childNodes[0].nodeValue.trim();\n    attrs = merge(attrs, {\n      label: labelVal\n    });\n  }\n\n  const contentProtection = generateKeySystemInformation(findChildren(adaptationSet, 'ContentProtection'));\n\n  if (Object.keys(contentProtection).length) {\n    attrs = merge(attrs, {\n      contentProtection\n    });\n  }\n\n  const segmentInfo = getSegmentInformation(adaptationSet);\n  const representations = findChildren(adaptationSet, 'Representation');\n  const adaptationSetSegmentInfo = merge(periodSegmentInfo, segmentInfo);\n  return flatten(representations.map(inheritBaseUrls(attrs, adaptationSetBaseUrls, adaptationSetSegmentInfo)));\n};\n/**\n * Contains all period information for mapping nodes onto adaptation sets.\n *\n * @typedef {Object} PeriodInformation\n * @property {Node} period.node\n *           Period node from the mpd\n * @property {Object} period.attributes\n *           Parsed period attributes from node plus any added\n */\n\n/**\n * Maps a PeriodInformation object to a list of Representation information objects for all\n * AdaptationSet nodes contained within the Period.\n *\n * @name toAdaptationSetsCallback\n * @function\n * @param {PeriodInformation} period\n *        Period object containing necessary period information\n * @param {number} periodStart\n *        Start time of the Period within the mpd\n * @return {RepresentationInformation[]}\n *         List of objects containing Representaion information\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping Period nodes to a list of\n * Representation information objects\n *\n * @param {Object} mpdAttributes\n *        Contains attributes inherited by the mpd\n * @param {string[]} mpdBaseUrls\n *        Contains list of resolved base urls inherited by the mpd\n * @return {toAdaptationSetsCallback}\n *         Callback map function\n */\n\nconst toAdaptationSets = (mpdAttributes, mpdBaseUrls) => (period, index) => {\n  const periodBaseUrls = buildBaseUrls(mpdBaseUrls, findChildren(period.node, 'BaseURL'));\n  const periodAttributes = merge(mpdAttributes, {\n    periodStart: period.attributes.start\n  });\n\n  if (typeof period.attributes.duration === 'number') {\n    periodAttributes.periodDuration = period.attributes.duration;\n  }\n\n  const adaptationSets = findChildren(period.node, 'AdaptationSet');\n  const periodSegmentInfo = getSegmentInformation(period.node);\n  return flatten(adaptationSets.map(toRepresentations(periodAttributes, periodBaseUrls, periodSegmentInfo)));\n};\n/**\n * Gets Period@start property for a given period.\n *\n * @param {Object} options\n *        Options object\n * @param {Object} options.attributes\n *        Period attributes\n * @param {Object} [options.priorPeriodAttributes]\n *        Prior period attributes (if prior period is available)\n * @param {string} options.mpdType\n *        The MPD@type these periods came from\n * @return {number|null}\n *         The period start, or null if it's an early available period or error\n */\n\nconst getPeriodStart = ({\n  attributes,\n  priorPeriodAttributes,\n  mpdType\n}) => {\n  // Summary of period start time calculation from DASH spec section 5.3.2.1\n  //\n  // A period's start is the first period's start + time elapsed after playing all\n  // prior periods to this one. Periods continue one after the other in time (without\n  // gaps) until the end of the presentation.\n  //\n  // The value of Period@start should be:\n  // 1. if Period@start is present: value of Period@start\n  // 2. if previous period exists and it has @duration: previous Period@start +\n  //    previous Period@duration\n  // 3. if this is first period and MPD@type is 'static': 0\n  // 4. in all other cases, consider the period an \"early available period\" (note: not\n  //    currently supported)\n  // (1)\n  if (typeof attributes.start === 'number') {\n    return attributes.start;\n  } // (2)\n\n\n  if (priorPeriodAttributes && typeof priorPeriodAttributes.start === 'number' && typeof priorPeriodAttributes.duration === 'number') {\n    return priorPeriodAttributes.start + priorPeriodAttributes.duration;\n  } // (3)\n\n\n  if (!priorPeriodAttributes && mpdType === 'static') {\n    return 0;\n  } // (4)\n  // There is currently no logic for calculating the Period@start value if there is\n  // no Period@start or prior Period@start and Period@duration available. This is not made\n  // explicit by the DASH interop guidelines or the DASH spec, however, since there's\n  // nothing about any other resolution strategies, it's implied. Thus, this case should\n  // be considered an early available period, or error, and null should suffice for both\n  // of those cases.\n\n\n  return null;\n};\n/**\n * Traverses the mpd xml tree to generate a list of Representation information objects\n * that have inherited attributes from parent nodes\n *\n * @param {Node} mpd\n *        The root node of the mpd\n * @param {Object} options\n *        Available options for inheritAttributes\n * @param {string} options.manifestUri\n *        The uri source of the mpd\n * @param {number} options.NOW\n *        Current time per DASH IOP.  Default is current time in ms since epoch\n * @param {number} options.clientOffset\n *        Client time difference from NOW (in milliseconds)\n * @return {RepresentationInformation[]}\n *         List of objects containing Representation information\n */\n\nconst inheritAttributes = (mpd, options = {}) => {\n  const {\n    manifestUri = '',\n    NOW = Date.now(),\n    clientOffset = 0\n  } = options;\n  const periodNodes = findChildren(mpd, 'Period');\n\n  if (!periodNodes.length) {\n    throw new Error(errors.INVALID_NUMBER_OF_PERIOD);\n  }\n\n  const locations = findChildren(mpd, 'Location');\n  const mpdAttributes = parseAttributes(mpd);\n  const mpdBaseUrls = buildBaseUrls([manifestUri], findChildren(mpd, 'BaseURL')); // See DASH spec section 5.3.1.2, Semantics of MPD element. Default type to 'static'.\n\n  mpdAttributes.type = mpdAttributes.type || 'static';\n  mpdAttributes.sourceDuration = mpdAttributes.mediaPresentationDuration || 0;\n  mpdAttributes.NOW = NOW;\n  mpdAttributes.clientOffset = clientOffset;\n\n  if (locations.length) {\n    mpdAttributes.locations = locations.map(getContent);\n  }\n\n  const periods = []; // Since toAdaptationSets acts on individual periods right now, the simplest approach to\n  // adding properties that require looking at prior periods is to parse attributes and add\n  // missing ones before toAdaptationSets is called. If more such properties are added, it\n  // may be better to refactor toAdaptationSets.\n\n  periodNodes.forEach((node, index) => {\n    const attributes = parseAttributes(node); // Use the last modified prior period, as it may contain added information necessary\n    // for this period.\n\n    const priorPeriod = periods[index - 1];\n    attributes.start = getPeriodStart({\n      attributes,\n      priorPeriodAttributes: priorPeriod ? priorPeriod.attributes : null,\n      mpdType: mpdAttributes.type\n    });\n    periods.push({\n      node,\n      attributes\n    });\n  });\n  return {\n    locations: mpdAttributes.locations,\n    representationInfo: flatten(periods.map(toAdaptationSets(mpdAttributes, mpdBaseUrls))),\n    eventStream: flatten(periods.map(toEventStream))\n  };\n};\n\nconst stringToMpdXml = manifestString => {\n  if (manifestString === '') {\n    throw new Error(errors.DASH_EMPTY_MANIFEST);\n  }\n\n  const parser = new DOMParser();\n  let xml;\n  let mpd;\n\n  try {\n    xml = parser.parseFromString(manifestString, 'application/xml');\n    mpd = xml && xml.documentElement.tagName === 'MPD' ? xml.documentElement : null;\n  } catch (e) {// ie 11 throwsw on invalid xml\n  }\n\n  if (!mpd || mpd && mpd.getElementsByTagName('parsererror').length > 0) {\n    throw new Error(errors.DASH_INVALID_XML);\n  }\n\n  return mpd;\n};\n\n/**\n * Parses the manifest for a UTCTiming node, returning the nodes attributes if found\n *\n * @param {string} mpd\n *        XML string of the MPD manifest\n * @return {Object|null}\n *         Attributes of UTCTiming node specified in the manifest. Null if none found\n */\n\nconst parseUTCTimingScheme = mpd => {\n  const UTCTimingNode = findChildren(mpd, 'UTCTiming')[0];\n\n  if (!UTCTimingNode) {\n    return null;\n  }\n\n  const attributes = parseAttributes(UTCTimingNode);\n\n  switch (attributes.schemeIdUri) {\n    case 'urn:mpeg:dash:utc:http-head:2014':\n    case 'urn:mpeg:dash:utc:http-head:2012':\n      attributes.method = 'HEAD';\n      break;\n\n    case 'urn:mpeg:dash:utc:http-xsdate:2014':\n    case 'urn:mpeg:dash:utc:http-iso:2014':\n    case 'urn:mpeg:dash:utc:http-xsdate:2012':\n    case 'urn:mpeg:dash:utc:http-iso:2012':\n      attributes.method = 'GET';\n      break;\n\n    case 'urn:mpeg:dash:utc:direct:2014':\n    case 'urn:mpeg:dash:utc:direct:2012':\n      attributes.method = 'DIRECT';\n      attributes.value = Date.parse(attributes.value);\n      break;\n\n    case 'urn:mpeg:dash:utc:http-ntp:2014':\n    case 'urn:mpeg:dash:utc:ntp:2014':\n    case 'urn:mpeg:dash:utc:sntp:2014':\n    default:\n      throw new Error(errors.UNSUPPORTED_UTC_TIMING_SCHEME);\n  }\n\n  return attributes;\n};\n\nconst VERSION = version;\n/*\n * Given a DASH manifest string and options, parses the DASH manifest into an object in the\n * form outputed by m3u8-parser and accepted by videojs/http-streaming.\n *\n * For live DASH manifests, if `previousManifest` is provided in options, then the newly\n * parsed DASH manifest will have its media sequence and discontinuity sequence values\n * updated to reflect its position relative to the prior manifest.\n *\n * @param {string} manifestString - the DASH manifest as a string\n * @param {options} [options] - any options\n *\n * @return {Object} the manifest object\n */\n\nconst parse = (manifestString, options = {}) => {\n  const parsedManifestInfo = inheritAttributes(stringToMpdXml(manifestString), options);\n  const playlists = toPlaylists(parsedManifestInfo.representationInfo);\n  return toM3u8({\n    dashPlaylists: playlists,\n    locations: parsedManifestInfo.locations,\n    sidxMapping: options.sidxMapping,\n    previousManifest: options.previousManifest,\n    eventStream: parsedManifestInfo.eventStream\n  });\n};\n/**\n * Parses the manifest for a UTCTiming node, returning the nodes attributes if found\n *\n * @param {string} manifestString\n *        XML string of the MPD manifest\n * @return {Object|null}\n *         Attributes of UTCTiming node specified in the manifest. Null if none found\n */\n\n\nconst parseUTCTiming = manifestString => parseUTCTimingScheme(stringToMpdXml(manifestString));\n\nexport { VERSION, addSidxSegmentsToPlaylist$1 as addSidxSegmentsToPlaylist, generateSidxKey, inheritAttributes, parse, parseUTCTiming, stringToMpdXml, toM3u8, toPlaylists };\n","/**\n * Loops through all supported media groups in master and calls the provided\n * callback for each group\n *\n * @param {Object} master\n *        The parsed master manifest object\n * @param {string[]} groups\n *        The media groups to call the callback for\n * @param {Function} callback\n *        Callback to call for each media group\n */\nexport var forEachMediaGroup = function forEachMediaGroup(master, groups, callback) {\n  groups.forEach(function (mediaType) {\n    for (var groupKey in master.mediaGroups[mediaType]) {\n      for (var labelKey in master.mediaGroups[mediaType][groupKey]) {\n        var mediaProperties = master.mediaGroups[mediaType][groupKey][labelKey];\n        callback(mediaProperties, mediaType, groupKey, labelKey);\n      }\n    }\n  });\n};","import { toUint8, bytesMatch } from './byte-helpers.js';\nvar ID3 = toUint8([0x49, 0x44, 0x33]);\nexport var getId3Size = function getId3Size(bytes, offset) {\n  if (offset === void 0) {\n    offset = 0;\n  }\n\n  bytes = toUint8(bytes);\n  var flags = bytes[offset + 5];\n  var returnSize = bytes[offset + 6] << 21 | bytes[offset + 7] << 14 | bytes[offset + 8] << 7 | bytes[offset + 9];\n  var footerPresent = (flags & 16) >> 4;\n\n  if (footerPresent) {\n    return returnSize + 20;\n  }\n\n  return returnSize + 10;\n};\nexport var getId3Offset = function getId3Offset(bytes, offset) {\n  if (offset === void 0) {\n    offset = 0;\n  }\n\n  bytes = toUint8(bytes);\n\n  if (bytes.length - offset < 10 || !bytesMatch(bytes, ID3, {\n    offset: offset\n  })) {\n    return offset;\n  }\n\n  offset += getId3Size(bytes, offset); // recursive check for id3 tags as some files\n  // have multiple ID3 tag sections even though\n  // they should not.\n\n  return getId3Offset(bytes, offset);\n};","export var OPUS_HEAD = new Uint8Array([// O, p, u, s\n0x4f, 0x70, 0x75, 0x73, // H, e, a, d\n0x48, 0x65, 0x61, 0x64]); // https://wiki.xiph.org/OggOpus\n// https://vfrmaniac.fushizen.eu/contents/opus_in_isobmff.html\n// https://opus-codec.org/docs/opusfile_api-0.7/structOpusHead.html\n\nexport var parseOpusHead = function parseOpusHead(bytes) {\n  var view = new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n  var version = view.getUint8(0); // version 0, from mp4, does not use littleEndian.\n\n  var littleEndian = version !== 0;\n  var config = {\n    version: version,\n    channels: view.getUint8(1),\n    preSkip: view.getUint16(2, littleEndian),\n    sampleRate: view.getUint32(4, littleEndian),\n    outputGain: view.getUint16(8, littleEndian),\n    channelMappingFamily: view.getUint8(10)\n  };\n\n  if (config.channelMappingFamily > 0 && bytes.length > 10) {\n    config.streamCount = view.getUint8(11);\n    config.twoChannelStreamCount = view.getUint8(12);\n    config.channelMapping = [];\n\n    for (var c = 0; c < config.channels; c++) {\n      config.channelMapping.push(view.getUint8(13 + c));\n    }\n  }\n\n  return config;\n};\nexport var setOpusHead = function setOpusHead(config) {\n  var size = config.channelMappingFamily <= 0 ? 11 : 12 + config.channels;\n  var view = new DataView(new ArrayBuffer(size));\n  var littleEndian = config.version !== 0;\n  view.setUint8(0, config.version);\n  view.setUint8(1, config.channels);\n  view.setUint16(2, config.preSkip, littleEndian);\n  view.setUint32(4, config.sampleRate, littleEndian);\n  view.setUint16(8, config.outputGain, littleEndian);\n  view.setUint8(10, config.channelMappingFamily);\n\n  if (config.channelMappingFamily > 0) {\n    view.setUint8(11, config.streamCount);\n    config.channelMapping.foreach(function (cm, i) {\n      view.setUint8(12 + i, cm);\n    });\n  }\n\n  return new Uint8Array(view.buffer);\n};","import { toUint8, bytesToNumber, bytesMatch, bytesToString, numberToBytes, padStart } from './byte-helpers';\nimport { getAvcCodec, getHvcCodec, getAv1Codec } from './codec-helpers.js'; // relevant specs for this parser:\n// https://matroska-org.github.io/libebml/specs.html\n// https://www.matroska.org/technical/elements.html\n// https://www.webmproject.org/docs/container/\n\nexport var EBML_TAGS = {\n  EBML: toUint8([0x1A, 0x45, 0xDF, 0xA3]),\n  DocType: toUint8([0x42, 0x82]),\n  Segment: toUint8([0x18, 0x53, 0x80, 0x67]),\n  SegmentInfo: toUint8([0x15, 0x49, 0xA9, 0x66]),\n  Tracks: toUint8([0x16, 0x54, 0xAE, 0x6B]),\n  Track: toUint8([0xAE]),\n  TrackNumber: toUint8([0xd7]),\n  DefaultDuration: toUint8([0x23, 0xe3, 0x83]),\n  TrackEntry: toUint8([0xAE]),\n  TrackType: toUint8([0x83]),\n  FlagDefault: toUint8([0x88]),\n  CodecID: toUint8([0x86]),\n  CodecPrivate: toUint8([0x63, 0xA2]),\n  VideoTrack: toUint8([0xe0]),\n  AudioTrack: toUint8([0xe1]),\n  // Not used yet, but will be used for live webm/mkv\n  // see https://www.matroska.org/technical/basics.html#block-structure\n  // see https://www.matroska.org/technical/basics.html#simpleblock-structure\n  Cluster: toUint8([0x1F, 0x43, 0xB6, 0x75]),\n  Timestamp: toUint8([0xE7]),\n  TimestampScale: toUint8([0x2A, 0xD7, 0xB1]),\n  BlockGroup: toUint8([0xA0]),\n  BlockDuration: toUint8([0x9B]),\n  Block: toUint8([0xA1]),\n  SimpleBlock: toUint8([0xA3])\n};\n/**\n * This is a simple table to determine the length\n * of things in ebml. The length is one based (starts at 1,\n * rather than zero) and for every zero bit before a one bit\n * we add one to length. We also need this table because in some\n * case we have to xor all the length bits from another value.\n */\n\nvar LENGTH_TABLE = [128, 64, 32, 16, 8, 4, 2, 1];\n\nvar getLength = function getLength(byte) {\n  var len = 1;\n\n  for (var i = 0; i < LENGTH_TABLE.length; i++) {\n    if (byte & LENGTH_TABLE[i]) {\n      break;\n    }\n\n    len++;\n  }\n\n  return len;\n}; // length in ebml is stored in the first 4 to 8 bits\n// of the first byte. 4 for the id length and 8 for the\n// data size length. Length is measured by converting the number to binary\n// then 1 + the number of zeros before a 1 is encountered starting\n// from the left.\n\n\nvar getvint = function getvint(bytes, offset, removeLength, signed) {\n  if (removeLength === void 0) {\n    removeLength = true;\n  }\n\n  if (signed === void 0) {\n    signed = false;\n  }\n\n  var length = getLength(bytes[offset]);\n  var valueBytes = bytes.subarray(offset, offset + length); // NOTE that we do **not** subarray here because we need to copy these bytes\n  // as they will be modified below to remove the dataSizeLen bits and we do not\n  // want to modify the original data. normally we could just call slice on\n  // uint8array but ie 11 does not support that...\n\n  if (removeLength) {\n    valueBytes = Array.prototype.slice.call(bytes, offset, offset + length);\n    valueBytes[0] ^= LENGTH_TABLE[length - 1];\n  }\n\n  return {\n    length: length,\n    value: bytesToNumber(valueBytes, {\n      signed: signed\n    }),\n    bytes: valueBytes\n  };\n};\n\nvar normalizePath = function normalizePath(path) {\n  if (typeof path === 'string') {\n    return path.match(/.{1,2}/g).map(function (p) {\n      return normalizePath(p);\n    });\n  }\n\n  if (typeof path === 'number') {\n    return numberToBytes(path);\n  }\n\n  return path;\n};\n\nvar normalizePaths = function normalizePaths(paths) {\n  if (!Array.isArray(paths)) {\n    return [normalizePath(paths)];\n  }\n\n  return paths.map(function (p) {\n    return normalizePath(p);\n  });\n};\n\nvar getInfinityDataSize = function getInfinityDataSize(id, bytes, offset) {\n  if (offset >= bytes.length) {\n    return bytes.length;\n  }\n\n  var innerid = getvint(bytes, offset, false);\n\n  if (bytesMatch(id.bytes, innerid.bytes)) {\n    return offset;\n  }\n\n  var dataHeader = getvint(bytes, offset + innerid.length);\n  return getInfinityDataSize(id, bytes, offset + dataHeader.length + dataHeader.value + innerid.length);\n};\n/**\n * Notes on the EBLM format.\n *\n * EBLM uses \"vints\" tags. Every vint tag contains\n * two parts\n *\n * 1. The length from the first byte. You get this by\n *    converting the byte to binary and counting the zeros\n *    before a 1. Then you add 1 to that. Examples\n *    00011111 = length 4 because there are 3 zeros before a 1.\n *    00100000 = length 3 because there are 2 zeros before a 1.\n *    00000011 = length 7 because there are 6 zeros before a 1.\n *\n * 2. The bits used for length are removed from the first byte\n *    Then all the bytes are merged into a value. NOTE: this\n *    is not the case for id ebml tags as there id includes\n *    length bits.\n *\n */\n\n\nexport var findEbml = function findEbml(bytes, paths) {\n  paths = normalizePaths(paths);\n  bytes = toUint8(bytes);\n  var results = [];\n\n  if (!paths.length) {\n    return results;\n  }\n\n  var i = 0;\n\n  while (i < bytes.length) {\n    var id = getvint(bytes, i, false);\n    var dataHeader = getvint(bytes, i + id.length);\n    var dataStart = i + id.length + dataHeader.length; // dataSize is unknown or this is a live stream\n\n    if (dataHeader.value === 0x7f) {\n      dataHeader.value = getInfinityDataSize(id, bytes, dataStart);\n\n      if (dataHeader.value !== bytes.length) {\n        dataHeader.value -= dataStart;\n      }\n    }\n\n    var dataEnd = dataStart + dataHeader.value > bytes.length ? bytes.length : dataStart + dataHeader.value;\n    var data = bytes.subarray(dataStart, dataEnd);\n\n    if (bytesMatch(paths[0], id.bytes)) {\n      if (paths.length === 1) {\n        // this is the end of the paths and we've found the tag we were\n        // looking for\n        results.push(data);\n      } else {\n        // recursively search for the next tag inside of the data\n        // of this one\n        results = results.concat(findEbml(data, paths.slice(1)));\n      }\n    }\n\n    var totalLength = id.length + dataHeader.length + data.length; // move past this tag entirely, we are not looking for it\n\n    i += totalLength;\n  }\n\n  return results;\n}; // see https://www.matroska.org/technical/basics.html#block-structure\n\nexport var decodeBlock = function decodeBlock(block, type, timestampScale, clusterTimestamp) {\n  var duration;\n\n  if (type === 'group') {\n    duration = findEbml(block, [EBML_TAGS.BlockDuration])[0];\n\n    if (duration) {\n      duration = bytesToNumber(duration);\n      duration = 1 / timestampScale * duration * timestampScale / 1000;\n    }\n\n    block = findEbml(block, [EBML_TAGS.Block])[0];\n    type = 'block'; // treat data as a block after this point\n  }\n\n  var dv = new DataView(block.buffer, block.byteOffset, block.byteLength);\n  var trackNumber = getvint(block, 0);\n  var timestamp = dv.getInt16(trackNumber.length, false);\n  var flags = block[trackNumber.length + 2];\n  var data = block.subarray(trackNumber.length + 3); // pts/dts in seconds\n\n  var ptsdts = 1 / timestampScale * (clusterTimestamp + timestamp) * timestampScale / 1000; // return the frame\n\n  var parsed = {\n    duration: duration,\n    trackNumber: trackNumber.value,\n    keyframe: type === 'simple' && flags >> 7 === 1,\n    invisible: (flags & 0x08) >> 3 === 1,\n    lacing: (flags & 0x06) >> 1,\n    discardable: type === 'simple' && (flags & 0x01) === 1,\n    frames: [],\n    pts: ptsdts,\n    dts: ptsdts,\n    timestamp: timestamp\n  };\n\n  if (!parsed.lacing) {\n    parsed.frames.push(data);\n    return parsed;\n  }\n\n  var numberOfFrames = data[0] + 1;\n  var frameSizes = [];\n  var offset = 1; // Fixed\n\n  if (parsed.lacing === 2) {\n    var sizeOfFrame = (data.length - offset) / numberOfFrames;\n\n    for (var i = 0; i < numberOfFrames; i++) {\n      frameSizes.push(sizeOfFrame);\n    }\n  } // xiph\n\n\n  if (parsed.lacing === 1) {\n    for (var _i = 0; _i < numberOfFrames - 1; _i++) {\n      var size = 0;\n\n      do {\n        size += data[offset];\n        offset++;\n      } while (data[offset - 1] === 0xFF);\n\n      frameSizes.push(size);\n    }\n  } // ebml\n\n\n  if (parsed.lacing === 3) {\n    // first vint is unsinged\n    // after that vints are singed and\n    // based on a compounding size\n    var _size = 0;\n\n    for (var _i2 = 0; _i2 < numberOfFrames - 1; _i2++) {\n      var vint = _i2 === 0 ? getvint(data, offset) : getvint(data, offset, true, true);\n      _size += vint.value;\n      frameSizes.push(_size);\n      offset += vint.length;\n    }\n  }\n\n  frameSizes.forEach(function (size) {\n    parsed.frames.push(data.subarray(offset, offset + size));\n    offset += size;\n  });\n  return parsed;\n}; // VP9 Codec Feature Metadata (CodecPrivate)\n// https://www.webmproject.org/docs/container/\n\nvar parseVp9Private = function parseVp9Private(bytes) {\n  var i = 0;\n  var params = {};\n\n  while (i < bytes.length) {\n    var id = bytes[i] & 0x7f;\n    var len = bytes[i + 1];\n    var val = void 0;\n\n    if (len === 1) {\n      val = bytes[i + 2];\n    } else {\n      val = bytes.subarray(i + 2, i + 2 + len);\n    }\n\n    if (id === 1) {\n      params.profile = val;\n    } else if (id === 2) {\n      params.level = val;\n    } else if (id === 3) {\n      params.bitDepth = val;\n    } else if (id === 4) {\n      params.chromaSubsampling = val;\n    } else {\n      params[id] = val;\n    }\n\n    i += 2 + len;\n  }\n\n  return params;\n};\n\nexport var parseTracks = function parseTracks(bytes) {\n  bytes = toUint8(bytes);\n  var decodedTracks = [];\n  var tracks = findEbml(bytes, [EBML_TAGS.Segment, EBML_TAGS.Tracks, EBML_TAGS.Track]);\n\n  if (!tracks.length) {\n    tracks = findEbml(bytes, [EBML_TAGS.Tracks, EBML_TAGS.Track]);\n  }\n\n  if (!tracks.length) {\n    tracks = findEbml(bytes, [EBML_TAGS.Track]);\n  }\n\n  if (!tracks.length) {\n    return decodedTracks;\n  }\n\n  tracks.forEach(function (track) {\n    var trackType = findEbml(track, EBML_TAGS.TrackType)[0];\n\n    if (!trackType || !trackType.length) {\n      return;\n    } // 1 is video, 2 is audio, 17 is subtitle\n    // other values are unimportant in this context\n\n\n    if (trackType[0] === 1) {\n      trackType = 'video';\n    } else if (trackType[0] === 2) {\n      trackType = 'audio';\n    } else if (trackType[0] === 17) {\n      trackType = 'subtitle';\n    } else {\n      return;\n    } // todo parse language\n\n\n    var decodedTrack = {\n      rawCodec: bytesToString(findEbml(track, [EBML_TAGS.CodecID])[0]),\n      type: trackType,\n      codecPrivate: findEbml(track, [EBML_TAGS.CodecPrivate])[0],\n      number: bytesToNumber(findEbml(track, [EBML_TAGS.TrackNumber])[0]),\n      defaultDuration: bytesToNumber(findEbml(track, [EBML_TAGS.DefaultDuration])[0]),\n      default: findEbml(track, [EBML_TAGS.FlagDefault])[0],\n      rawData: track\n    };\n    var codec = '';\n\n    if (/V_MPEG4\\/ISO\\/AVC/.test(decodedTrack.rawCodec)) {\n      codec = \"avc1.\" + getAvcCodec(decodedTrack.codecPrivate);\n    } else if (/V_MPEGH\\/ISO\\/HEVC/.test(decodedTrack.rawCodec)) {\n      codec = \"hev1.\" + getHvcCodec(decodedTrack.codecPrivate);\n    } else if (/V_MPEG4\\/ISO\\/ASP/.test(decodedTrack.rawCodec)) {\n      if (decodedTrack.codecPrivate) {\n        codec = 'mp4v.20.' + decodedTrack.codecPrivate[4].toString();\n      } else {\n        codec = 'mp4v.20.9';\n      }\n    } else if (/^V_THEORA/.test(decodedTrack.rawCodec)) {\n      codec = 'theora';\n    } else if (/^V_VP8/.test(decodedTrack.rawCodec)) {\n      codec = 'vp8';\n    } else if (/^V_VP9/.test(decodedTrack.rawCodec)) {\n      if (decodedTrack.codecPrivate) {\n        var _parseVp9Private = parseVp9Private(decodedTrack.codecPrivate),\n            profile = _parseVp9Private.profile,\n            level = _parseVp9Private.level,\n            bitDepth = _parseVp9Private.bitDepth,\n            chromaSubsampling = _parseVp9Private.chromaSubsampling;\n\n        codec = 'vp09.';\n        codec += padStart(profile, 2, '0') + \".\";\n        codec += padStart(level, 2, '0') + \".\";\n        codec += padStart(bitDepth, 2, '0') + \".\";\n        codec += \"\" + padStart(chromaSubsampling, 2, '0'); // Video -> Colour -> Ebml name\n\n        var matrixCoefficients = findEbml(track, [0xE0, [0x55, 0xB0], [0x55, 0xB1]])[0] || [];\n        var videoFullRangeFlag = findEbml(track, [0xE0, [0x55, 0xB0], [0x55, 0xB9]])[0] || [];\n        var transferCharacteristics = findEbml(track, [0xE0, [0x55, 0xB0], [0x55, 0xBA]])[0] || [];\n        var colourPrimaries = findEbml(track, [0xE0, [0x55, 0xB0], [0x55, 0xBB]])[0] || []; // if we find any optional codec parameter specify them all.\n\n        if (matrixCoefficients.length || videoFullRangeFlag.length || transferCharacteristics.length || colourPrimaries.length) {\n          codec += \".\" + padStart(colourPrimaries[0], 2, '0');\n          codec += \".\" + padStart(transferCharacteristics[0], 2, '0');\n          codec += \".\" + padStart(matrixCoefficients[0], 2, '0');\n          codec += \".\" + padStart(videoFullRangeFlag[0], 2, '0');\n        }\n      } else {\n        codec = 'vp9';\n      }\n    } else if (/^V_AV1/.test(decodedTrack.rawCodec)) {\n      codec = \"av01.\" + getAv1Codec(decodedTrack.codecPrivate);\n    } else if (/A_ALAC/.test(decodedTrack.rawCodec)) {\n      codec = 'alac';\n    } else if (/A_MPEG\\/L2/.test(decodedTrack.rawCodec)) {\n      codec = 'mp2';\n    } else if (/A_MPEG\\/L3/.test(decodedTrack.rawCodec)) {\n      codec = 'mp3';\n    } else if (/^A_AAC/.test(decodedTrack.rawCodec)) {\n      if (decodedTrack.codecPrivate) {\n        codec = 'mp4a.40.' + (decodedTrack.codecPrivate[0] >>> 3).toString();\n      } else {\n        codec = 'mp4a.40.2';\n      }\n    } else if (/^A_AC3/.test(decodedTrack.rawCodec)) {\n      codec = 'ac-3';\n    } else if (/^A_PCM/.test(decodedTrack.rawCodec)) {\n      codec = 'pcm';\n    } else if (/^A_MS\\/ACM/.test(decodedTrack.rawCodec)) {\n      codec = 'speex';\n    } else if (/^A_EAC3/.test(decodedTrack.rawCodec)) {\n      codec = 'ec-3';\n    } else if (/^A_VORBIS/.test(decodedTrack.rawCodec)) {\n      codec = 'vorbis';\n    } else if (/^A_FLAC/.test(decodedTrack.rawCodec)) {\n      codec = 'flac';\n    } else if (/^A_OPUS/.test(decodedTrack.rawCodec)) {\n      codec = 'opus';\n    }\n\n    decodedTrack.codec = codec;\n    decodedTracks.push(decodedTrack);\n  });\n  return decodedTracks.sort(function (a, b) {\n    return a.number - b.number;\n  });\n};\nexport var parseData = function parseData(data, tracks) {\n  var allBlocks = [];\n  var segment = findEbml(data, [EBML_TAGS.Segment])[0];\n  var timestampScale = findEbml(segment, [EBML_TAGS.SegmentInfo, EBML_TAGS.TimestampScale])[0]; // in nanoseconds, defaults to 1ms\n\n  if (timestampScale && timestampScale.length) {\n    timestampScale = bytesToNumber(timestampScale);\n  } else {\n    timestampScale = 1000000;\n  }\n\n  var clusters = findEbml(segment, [EBML_TAGS.Cluster]);\n\n  if (!tracks) {\n    tracks = parseTracks(segment);\n  }\n\n  clusters.forEach(function (cluster, ci) {\n    var simpleBlocks = findEbml(cluster, [EBML_TAGS.SimpleBlock]).map(function (b) {\n      return {\n        type: 'simple',\n        data: b\n      };\n    });\n    var blockGroups = findEbml(cluster, [EBML_TAGS.BlockGroup]).map(function (b) {\n      return {\n        type: 'group',\n        data: b\n      };\n    });\n    var timestamp = findEbml(cluster, [EBML_TAGS.Timestamp])[0] || 0;\n\n    if (timestamp && timestamp.length) {\n      timestamp = bytesToNumber(timestamp);\n    } // get all blocks then sort them into the correct order\n\n\n    var blocks = simpleBlocks.concat(blockGroups).sort(function (a, b) {\n      return a.data.byteOffset - b.data.byteOffset;\n    });\n    blocks.forEach(function (block, bi) {\n      var decoded = decodeBlock(block.data, block.type, timestampScale, timestamp);\n      allBlocks.push(decoded);\n    });\n  });\n  return {\n    tracks: tracks,\n    blocks: allBlocks\n  };\n};","import { bytesMatch, toUint8 } from './byte-helpers.js';\nexport var NAL_TYPE_ONE = toUint8([0x00, 0x00, 0x00, 0x01]);\nexport var NAL_TYPE_TWO = toUint8([0x00, 0x00, 0x01]);\nexport var EMULATION_PREVENTION = toUint8([0x00, 0x00, 0x03]);\n/**\n * Expunge any \"Emulation Prevention\" bytes from a \"Raw Byte\n * Sequence Payload\"\n *\n * @param data {Uint8Array} the bytes of a RBSP from a NAL\n * unit\n * @return {Uint8Array} the RBSP without any Emulation\n * Prevention Bytes\n */\n\nexport var discardEmulationPreventionBytes = function discardEmulationPreventionBytes(bytes) {\n  var positions = [];\n  var i = 1; // Find all `Emulation Prevention Bytes`\n\n  while (i < bytes.length - 2) {\n    if (bytesMatch(bytes.subarray(i, i + 3), EMULATION_PREVENTION)) {\n      positions.push(i + 2);\n      i++;\n    }\n\n    i++;\n  } // If no Emulation Prevention Bytes were found just return the original\n  // array\n\n\n  if (positions.length === 0) {\n    return bytes;\n  } // Create a new array to hold the NAL unit data\n\n\n  var newLength = bytes.length - positions.length;\n  var newData = new Uint8Array(newLength);\n  var sourceIndex = 0;\n\n  for (i = 0; i < newLength; sourceIndex++, i++) {\n    if (sourceIndex === positions[0]) {\n      // Skip this byte\n      sourceIndex++; // Remove this position index\n\n      positions.shift();\n    }\n\n    newData[i] = bytes[sourceIndex];\n  }\n\n  return newData;\n};\nexport var findNal = function findNal(bytes, dataType, types, nalLimit) {\n  if (nalLimit === void 0) {\n    nalLimit = Infinity;\n  }\n\n  bytes = toUint8(bytes);\n  types = [].concat(types);\n  var i = 0;\n  var nalStart;\n  var nalsFound = 0; // keep searching until:\n  // we reach the end of bytes\n  // we reach the maximum number of nals they want to seach\n  // NOTE: that we disregard nalLimit when we have found the start\n  // of the nal we want so that we can find the end of the nal we want.\n\n  while (i < bytes.length && (nalsFound < nalLimit || nalStart)) {\n    var nalOffset = void 0;\n\n    if (bytesMatch(bytes.subarray(i), NAL_TYPE_ONE)) {\n      nalOffset = 4;\n    } else if (bytesMatch(bytes.subarray(i), NAL_TYPE_TWO)) {\n      nalOffset = 3;\n    } // we are unsynced,\n    // find the next nal unit\n\n\n    if (!nalOffset) {\n      i++;\n      continue;\n    }\n\n    nalsFound++;\n\n    if (nalStart) {\n      return discardEmulationPreventionBytes(bytes.subarray(nalStart, i));\n    }\n\n    var nalType = void 0;\n\n    if (dataType === 'h264') {\n      nalType = bytes[i + nalOffset] & 0x1f;\n    } else if (dataType === 'h265') {\n      nalType = bytes[i + nalOffset] >> 1 & 0x3f;\n    }\n\n    if (types.indexOf(nalType) !== -1) {\n      nalStart = i + nalOffset;\n    } // nal header is 1 length for h264, and 2 for h265\n\n\n    i += nalOffset + (dataType === 'h264' ? 1 : 2);\n  }\n\n  return bytes.subarray(0, 0);\n};\nexport var findH264Nal = function findH264Nal(bytes, type, nalLimit) {\n  return findNal(bytes, 'h264', type, nalLimit);\n};\nexport var findH265Nal = function findH265Nal(bytes, type, nalLimit) {\n  return findNal(bytes, 'h265', type, nalLimit);\n};","import { toUint8, bytesMatch } from './byte-helpers.js';\nimport { findBox } from './mp4-helpers.js';\nimport { findEbml, EBML_TAGS } from './ebml-helpers.js';\nimport { getId3Offset } from './id3-helpers.js';\nimport { findH264Nal, findH265Nal } from './nal-helpers.js';\nvar CONSTANTS = {\n  // \"webm\" string literal in hex\n  'webm': toUint8([0x77, 0x65, 0x62, 0x6d]),\n  // \"matroska\" string literal in hex\n  'matroska': toUint8([0x6d, 0x61, 0x74, 0x72, 0x6f, 0x73, 0x6b, 0x61]),\n  // \"fLaC\" string literal in hex\n  'flac': toUint8([0x66, 0x4c, 0x61, 0x43]),\n  // \"OggS\" string literal in hex\n  'ogg': toUint8([0x4f, 0x67, 0x67, 0x53]),\n  // ac-3 sync byte, also works for ec-3 as that is simply a codec\n  // of ac-3\n  'ac3': toUint8([0x0b, 0x77]),\n  // \"RIFF\" string literal in hex used for wav and avi\n  'riff': toUint8([0x52, 0x49, 0x46, 0x46]),\n  // \"AVI\" string literal in hex\n  'avi': toUint8([0x41, 0x56, 0x49]),\n  // \"WAVE\" string literal in hex\n  'wav': toUint8([0x57, 0x41, 0x56, 0x45]),\n  // \"ftyp3g\" string literal in hex\n  '3gp': toUint8([0x66, 0x74, 0x79, 0x70, 0x33, 0x67]),\n  // \"ftyp\" string literal in hex\n  'mp4': toUint8([0x66, 0x74, 0x79, 0x70]),\n  // \"styp\" string literal in hex\n  'fmp4': toUint8([0x73, 0x74, 0x79, 0x70]),\n  // \"ftypqt\" string literal in hex\n  'mov': toUint8([0x66, 0x74, 0x79, 0x70, 0x71, 0x74]),\n  // moov string literal in hex\n  'moov': toUint8([0x6D, 0x6F, 0x6F, 0x76]),\n  // moof string literal in hex\n  'moof': toUint8([0x6D, 0x6F, 0x6F, 0x66])\n};\nvar _isLikely = {\n  aac: function aac(bytes) {\n    var offset = getId3Offset(bytes);\n    return bytesMatch(bytes, [0xFF, 0x10], {\n      offset: offset,\n      mask: [0xFF, 0x16]\n    });\n  },\n  mp3: function mp3(bytes) {\n    var offset = getId3Offset(bytes);\n    return bytesMatch(bytes, [0xFF, 0x02], {\n      offset: offset,\n      mask: [0xFF, 0x06]\n    });\n  },\n  webm: function webm(bytes) {\n    var docType = findEbml(bytes, [EBML_TAGS.EBML, EBML_TAGS.DocType])[0]; // check if DocType EBML tag is webm\n\n    return bytesMatch(docType, CONSTANTS.webm);\n  },\n  mkv: function mkv(bytes) {\n    var docType = findEbml(bytes, [EBML_TAGS.EBML, EBML_TAGS.DocType])[0]; // check if DocType EBML tag is matroska\n\n    return bytesMatch(docType, CONSTANTS.matroska);\n  },\n  mp4: function mp4(bytes) {\n    // if this file is another base media file format, it is not mp4\n    if (_isLikely['3gp'](bytes) || _isLikely.mov(bytes)) {\n      return false;\n    } // if this file starts with a ftyp or styp box its mp4\n\n\n    if (bytesMatch(bytes, CONSTANTS.mp4, {\n      offset: 4\n    }) || bytesMatch(bytes, CONSTANTS.fmp4, {\n      offset: 4\n    })) {\n      return true;\n    } // if this file starts with a moof/moov box its mp4\n\n\n    if (bytesMatch(bytes, CONSTANTS.moof, {\n      offset: 4\n    }) || bytesMatch(bytes, CONSTANTS.moov, {\n      offset: 4\n    })) {\n      return true;\n    }\n  },\n  mov: function mov(bytes) {\n    return bytesMatch(bytes, CONSTANTS.mov, {\n      offset: 4\n    });\n  },\n  '3gp': function gp(bytes) {\n    return bytesMatch(bytes, CONSTANTS['3gp'], {\n      offset: 4\n    });\n  },\n  ac3: function ac3(bytes) {\n    var offset = getId3Offset(bytes);\n    return bytesMatch(bytes, CONSTANTS.ac3, {\n      offset: offset\n    });\n  },\n  ts: function ts(bytes) {\n    if (bytes.length < 189 && bytes.length >= 1) {\n      return bytes[0] === 0x47;\n    }\n\n    var i = 0; // check the first 376 bytes for two matching sync bytes\n\n    while (i + 188 < bytes.length && i < 188) {\n      if (bytes[i] === 0x47 && bytes[i + 188] === 0x47) {\n        return true;\n      }\n\n      i += 1;\n    }\n\n    return false;\n  },\n  flac: function flac(bytes) {\n    var offset = getId3Offset(bytes);\n    return bytesMatch(bytes, CONSTANTS.flac, {\n      offset: offset\n    });\n  },\n  ogg: function ogg(bytes) {\n    return bytesMatch(bytes, CONSTANTS.ogg);\n  },\n  avi: function avi(bytes) {\n    return bytesMatch(bytes, CONSTANTS.riff) && bytesMatch(bytes, CONSTANTS.avi, {\n      offset: 8\n    });\n  },\n  wav: function wav(bytes) {\n    return bytesMatch(bytes, CONSTANTS.riff) && bytesMatch(bytes, CONSTANTS.wav, {\n      offset: 8\n    });\n  },\n  'h264': function h264(bytes) {\n    // find seq_parameter_set_rbsp\n    return findH264Nal(bytes, 7, 3).length;\n  },\n  'h265': function h265(bytes) {\n    // find video_parameter_set_rbsp or seq_parameter_set_rbsp\n    return findH265Nal(bytes, [32, 33], 3).length;\n  }\n}; // get all the isLikely functions\n// but make sure 'ts' is above h264 and h265\n// but below everything else as it is the least specific\n\nvar isLikelyTypes = Object.keys(_isLikely) // remove ts, h264, h265\n.filter(function (t) {\n  return t !== 'ts' && t !== 'h264' && t !== 'h265';\n}) // add it back to the bottom\n.concat(['ts', 'h264', 'h265']); // make sure we are dealing with uint8 data.\n\nisLikelyTypes.forEach(function (type) {\n  var isLikelyFn = _isLikely[type];\n\n  _isLikely[type] = function (bytes) {\n    return isLikelyFn(toUint8(bytes));\n  };\n}); // export after wrapping\n\nexport var isLikely = _isLikely; // A useful list of file signatures can be found here\n// https://en.wikipedia.org/wiki/List_of_file_signatures\n\nexport var detectContainerForBytes = function detectContainerForBytes(bytes) {\n  bytes = toUint8(bytes);\n\n  for (var i = 0; i < isLikelyTypes.length; i++) {\n    var type = isLikelyTypes[i];\n\n    if (isLikely[type](bytes)) {\n      return type;\n    }\n  }\n\n  return '';\n}; // fmp4 is not a container\n\nexport var isLikelyFmp4MediaSegment = function isLikelyFmp4MediaSegment(bytes) {\n  return findBox(bytes, ['moof']).length > 0;\n};","/**\n * @license\n * Video.js 8.3.0 <http://videojs.com/>\n * Copyright Brightcove, Inc. <https://www.brightcove.com/>\n * Available under Apache License Version 2.0\n * <https://github.com/videojs/video.js/blob/main/LICENSE>\n *\n * Includes vtt.js <https://github.com/mozilla/vtt.js>\n * Available under Apache License Version 2.0\n * <https://github.com/mozilla/vtt.js/blob/main/LICENSE>\n */\n\nimport window$1 from 'global/window';\nimport document from 'global/document';\nimport keycode from 'keycode';\nimport safeParseTuple from 'safe-json-parse/tuple';\nimport XHR from '@videojs/xhr';\nimport vtt from 'videojs-vtt.js';\nimport _resolveUrl from '@videojs/vhs-utils/es/resolve-url.js';\nimport _extends from '@babel/runtime/helpers/extends';\nimport { Parser } from 'm3u8-parser';\nimport { DEFAULT_VIDEO_CODEC, DEFAULT_AUDIO_CODEC, parseCodecs, muxerSupportsCodec, browserSupportsCodec, translateLegacyCodec, codecsFromDefault, isAudioCodec, getMimeForCodec } from '@videojs/vhs-utils/es/codecs.js';\nimport { simpleTypeFromSourceType } from '@videojs/vhs-utils/es/media-types.js';\nimport { isArrayBufferView, concatTypedArrays, stringToBytes, toUint8 } from '@videojs/vhs-utils/es/byte-helpers';\nimport { generateSidxKey, parseUTCTiming, parse, addSidxSegmentsToPlaylist } from 'mpd-parser';\nimport parseSidx from 'mux.js/lib/tools/parse-sidx';\nimport { getId3Offset } from '@videojs/vhs-utils/es/id3-helpers';\nimport { detectContainerForBytes, isLikelyFmp4MediaSegment } from '@videojs/vhs-utils/es/containers';\nimport { ONE_SECOND_IN_TS } from 'mux.js/lib/utils/clock';\n\nvar version$6 = \"8.3.0\";\n\n/**\n * An Object that contains lifecycle hooks as keys which point to an array\n * of functions that are run when a lifecycle is triggered\n *\n * @private\n */\nconst hooks_ = {};\n\n/**\n * Get a list of hooks for a specific lifecycle\n *\n * @param  {string} type\n *         the lifecycle to get hooks from\n *\n * @param  {Function|Function[]} [fn]\n *         Optionally add a hook (or hooks) to the lifecycle that your are getting.\n *\n * @return {Array}\n *         an array of hooks, or an empty array if there are none.\n */\nconst hooks = function (type, fn) {\n  hooks_[type] = hooks_[type] || [];\n  if (fn) {\n    hooks_[type] = hooks_[type].concat(fn);\n  }\n  return hooks_[type];\n};\n\n/**\n * Add a function hook to a specific videojs lifecycle.\n *\n * @param {string} type\n *        the lifecycle to hook the function to.\n *\n * @param {Function|Function[]}\n *        The function or array of functions to attach.\n */\nconst hook = function (type, fn) {\n  hooks(type, fn);\n};\n\n/**\n * Remove a hook from a specific videojs lifecycle.\n *\n * @param  {string} type\n *         the lifecycle that the function hooked to\n *\n * @param  {Function} fn\n *         The hooked function to remove\n *\n * @return {boolean}\n *         The function that was removed or undef\n */\nconst removeHook = function (type, fn) {\n  const index = hooks(type).indexOf(fn);\n  if (index <= -1) {\n    return false;\n  }\n  hooks_[type] = hooks_[type].slice();\n  hooks_[type].splice(index, 1);\n  return true;\n};\n\n/**\n * Add a function hook that will only run once to a specific videojs lifecycle.\n *\n * @param {string} type\n *        the lifecycle to hook the function to.\n *\n * @param {Function|Function[]}\n *        The function or array of functions to attach.\n */\nconst hookOnce = function (type, fn) {\n  hooks(type, [].concat(fn).map(original => {\n    const wrapper = (...args) => {\n      removeHook(type, wrapper);\n      return original(...args);\n    };\n    return wrapper;\n  }));\n};\n\n/**\n * @file fullscreen-api.js\n * @module fullscreen-api\n */\n\n/**\n * Store the browser-specific methods for the fullscreen API.\n *\n * @type {Object}\n * @see [Specification]{@link https://fullscreen.spec.whatwg.org}\n * @see [Map Approach From Screenfull.js]{@link https://github.com/sindresorhus/screenfull.js}\n */\nconst FullscreenApi = {\n  prefixed: true\n};\n\n// browser API methods\nconst apiMap = [['requestFullscreen', 'exitFullscreen', 'fullscreenElement', 'fullscreenEnabled', 'fullscreenchange', 'fullscreenerror', 'fullscreen'],\n// WebKit\n['webkitRequestFullscreen', 'webkitExitFullscreen', 'webkitFullscreenElement', 'webkitFullscreenEnabled', 'webkitfullscreenchange', 'webkitfullscreenerror', '-webkit-full-screen'],\n// Mozilla\n['mozRequestFullScreen', 'mozCancelFullScreen', 'mozFullScreenElement', 'mozFullScreenEnabled', 'mozfullscreenchange', 'mozfullscreenerror', '-moz-full-screen'],\n// Microsoft\n['msRequestFullscreen', 'msExitFullscreen', 'msFullscreenElement', 'msFullscreenEnabled', 'MSFullscreenChange', 'MSFullscreenError', '-ms-fullscreen']];\nconst specApi = apiMap[0];\nlet browserApi;\n\n// determine the supported set of functions\nfor (let i = 0; i < apiMap.length; i++) {\n  // check for exitFullscreen function\n  if (apiMap[i][1] in document) {\n    browserApi = apiMap[i];\n    break;\n  }\n}\n\n// map the browser API names to the spec API names\nif (browserApi) {\n  for (let i = 0; i < browserApi.length; i++) {\n    FullscreenApi[specApi[i]] = browserApi[i];\n  }\n  FullscreenApi.prefixed = browserApi[0] !== specApi[0];\n}\n\n/**\n * @file create-logger.js\n * @module create-logger\n */\n\n// This is the private tracking variable for the logging history.\nlet history = [];\n\n/**\n * Log messages to the console and history based on the type of message\n *\n * @private\n * @param  {string} type\n *         The name of the console method to use.\n *\n * @param  {Array} args\n *         The arguments to be passed to the matching console method.\n */\nconst LogByTypeFactory = (name, log) => (type, level, args) => {\n  const lvl = log.levels[level];\n  const lvlRegExp = new RegExp(`^(${lvl})$`);\n  if (type !== 'log') {\n    // Add the type to the front of the message when it's not \"log\".\n    args.unshift(type.toUpperCase() + ':');\n  }\n\n  // Add console prefix after adding to history.\n  args.unshift(name + ':');\n\n  // Add a clone of the args at this point to history.\n  if (history) {\n    history.push([].concat(args));\n\n    // only store 1000 history entries\n    const splice = history.length - 1000;\n    history.splice(0, splice > 0 ? splice : 0);\n  }\n\n  // If there's no console then don't try to output messages, but they will\n  // still be stored in history.\n  if (!window$1.console) {\n    return;\n  }\n\n  // Was setting these once outside of this function, but containing them\n  // in the function makes it easier to test cases where console doesn't exist\n  // when the module is executed.\n  let fn = window$1.console[type];\n  if (!fn && type === 'debug') {\n    // Certain browsers don't have support for console.debug. For those, we\n    // should default to the closest comparable log.\n    fn = window$1.console.info || window$1.console.log;\n  }\n\n  // Bail out if there's no console or if this type is not allowed by the\n  // current logging level.\n  if (!fn || !lvl || !lvlRegExp.test(type)) {\n    return;\n  }\n  fn[Array.isArray(args) ? 'apply' : 'call'](window$1.console, args);\n};\nfunction createLogger$1(name) {\n  // This is the private tracking variable for logging level.\n  let level = 'info';\n\n  // the curried logByType bound to the specific log and history\n  let logByType;\n\n  /**\n   * Logs plain debug messages. Similar to `console.log`.\n   *\n   * Due to [limitations](https://github.com/jsdoc3/jsdoc/issues/955#issuecomment-313829149)\n   * of our JSDoc template, we cannot properly document this as both a function\n   * and a namespace, so its function signature is documented here.\n   *\n   * #### Arguments\n   * ##### *args\n   * *[]\n   *\n   * Any combination of values that could be passed to `console.log()`.\n   *\n   * #### Return Value\n   *\n   * `undefined`\n   *\n   * @namespace\n   * @param    {...*} args\n   *           One or more messages or objects that should be logged.\n   */\n  const log = function (...args) {\n    logByType('log', level, args);\n  };\n\n  // This is the logByType helper that the logging methods below use\n  logByType = LogByTypeFactory(name, log);\n\n  /**\n   * Create a new sublogger which chains the old name to the new name.\n   *\n   * For example, doing `videojs.log.createLogger('player')` and then using that logger will log the following:\n   * ```js\n   *  mylogger('foo');\n   *  // > VIDEOJS: player: foo\n   * ```\n   *\n   * @param {string} name\n   *        The name to add call the new logger\n   * @return {Object}\n   */\n  log.createLogger = subname => createLogger$1(name + ': ' + subname);\n\n  /**\n   * Enumeration of available logging levels, where the keys are the level names\n   * and the values are `|`-separated strings containing logging methods allowed\n   * in that logging level. These strings are used to create a regular expression\n   * matching the function name being called.\n   *\n   * Levels provided by Video.js are:\n   *\n   * - `off`: Matches no calls. Any value that can be cast to `false` will have\n   *   this effect. The most restrictive.\n   * - `all`: Matches only Video.js-provided functions (`debug`, `log`,\n   *   `log.warn`, and `log.error`).\n   * - `debug`: Matches `log.debug`, `log`, `log.warn`, and `log.error` calls.\n   * - `info` (default): Matches `log`, `log.warn`, and `log.error` calls.\n   * - `warn`: Matches `log.warn` and `log.error` calls.\n   * - `error`: Matches only `log.error` calls.\n   *\n   * @type {Object}\n   */\n  log.levels = {\n    all: 'debug|log|warn|error',\n    off: '',\n    debug: 'debug|log|warn|error',\n    info: 'log|warn|error',\n    warn: 'warn|error',\n    error: 'error',\n    DEFAULT: level\n  };\n\n  /**\n   * Get or set the current logging level.\n   *\n   * If a string matching a key from {@link module:log.levels} is provided, acts\n   * as a setter.\n   *\n   * @param  {string} [lvl]\n   *         Pass a valid level to set a new logging level.\n   *\n   * @return {string}\n   *         The current logging level.\n   */\n  log.level = lvl => {\n    if (typeof lvl === 'string') {\n      if (!log.levels.hasOwnProperty(lvl)) {\n        throw new Error(`\"${lvl}\" in not a valid log level`);\n      }\n      level = lvl;\n    }\n    return level;\n  };\n\n  /**\n   * Returns an array containing everything that has been logged to the history.\n   *\n   * This array is a shallow clone of the internal history record. However, its\n   * contents are _not_ cloned; so, mutating objects inside this array will\n   * mutate them in history.\n   *\n   * @return {Array}\n   */\n  log.history = () => history ? [].concat(history) : [];\n\n  /**\n   * Allows you to filter the history by the given logger name\n   *\n   * @param {string} fname\n   *        The name to filter by\n   *\n   * @return {Array}\n   *         The filtered list to return\n   */\n  log.history.filter = fname => {\n    return (history || []).filter(historyItem => {\n      // if the first item in each historyItem includes `fname`, then it's a match\n      return new RegExp(`.*${fname}.*`).test(historyItem[0]);\n    });\n  };\n\n  /**\n   * Clears the internal history tracking, but does not prevent further history\n   * tracking.\n   */\n  log.history.clear = () => {\n    if (history) {\n      history.length = 0;\n    }\n  };\n\n  /**\n   * Disable history tracking if it is currently enabled.\n   */\n  log.history.disable = () => {\n    if (history !== null) {\n      history.length = 0;\n      history = null;\n    }\n  };\n\n  /**\n   * Enable history tracking if it is currently disabled.\n   */\n  log.history.enable = () => {\n    if (history === null) {\n      history = [];\n    }\n  };\n\n  /**\n   * Logs error messages. Similar to `console.error`.\n   *\n   * @param {...*} args\n   *        One or more messages or objects that should be logged as an error\n   */\n  log.error = (...args) => logByType('error', level, args);\n\n  /**\n   * Logs warning messages. Similar to `console.warn`.\n   *\n   * @param {...*} args\n   *        One or more messages or objects that should be logged as a warning.\n   */\n  log.warn = (...args) => logByType('warn', level, args);\n\n  /**\n   * Logs debug messages. Similar to `console.debug`, but may also act as a comparable\n   * log if `console.debug` is not available\n   *\n   * @param {...*} args\n   *        One or more messages or objects that should be logged as debug.\n   */\n  log.debug = (...args) => logByType('debug', level, args);\n  return log;\n}\n\n/**\n * @file log.js\n * @module log\n */\nconst log$1 = createLogger$1('VIDEOJS');\nconst createLogger = log$1.createLogger;\n\n/**\n * @file obj.js\n * @module obj\n */\n\n/**\n * @callback obj:EachCallback\n *\n * @param {*} value\n *        The current key for the object that is being iterated over.\n *\n * @param {string} key\n *        The current key-value for object that is being iterated over\n */\n\n/**\n * @callback obj:ReduceCallback\n *\n * @param {*} accum\n *        The value that is accumulating over the reduce loop.\n *\n * @param {*} value\n *        The current key for the object that is being iterated over.\n *\n * @param {string} key\n *        The current key-value for object that is being iterated over\n *\n * @return {*}\n *         The new accumulated value.\n */\nconst toString = Object.prototype.toString;\n\n/**\n * Get the keys of an Object\n *\n * @param {Object}\n *        The Object to get the keys from\n *\n * @return {string[]}\n *         An array of the keys from the object. Returns an empty array if the\n *         object passed in was invalid or had no keys.\n *\n * @private\n */\nconst keys = function (object) {\n  return isObject(object) ? Object.keys(object) : [];\n};\n\n/**\n * Array-like iteration for objects.\n *\n * @param {Object} object\n *        The object to iterate over\n *\n * @param {obj:EachCallback} fn\n *        The callback function which is called for each key in the object.\n */\nfunction each(object, fn) {\n  keys(object).forEach(key => fn(object[key], key));\n}\n\n/**\n * Array-like reduce for objects.\n *\n * @param {Object} object\n *        The Object that you want to reduce.\n *\n * @param {Function} fn\n *         A callback function which is called for each key in the object. It\n *         receives the accumulated value and the per-iteration value and key\n *         as arguments.\n *\n * @param {*} [initial = 0]\n *        Starting value\n *\n * @return {*}\n *         The final accumulated value.\n */\nfunction reduce(object, fn, initial = 0) {\n  return keys(object).reduce((accum, key) => fn(accum, object[key], key), initial);\n}\n\n/**\n * Returns whether a value is an object of any kind - including DOM nodes,\n * arrays, regular expressions, etc. Not functions, though.\n *\n * This avoids the gotcha where using `typeof` on a `null` value\n * results in `'object'`.\n *\n * @param  {Object} value\n * @return {boolean}\n */\nfunction isObject(value) {\n  return !!value && typeof value === 'object';\n}\n\n/**\n * Returns whether an object appears to be a \"plain\" object - that is, a\n * direct instance of `Object`.\n *\n * @param  {Object} value\n * @return {boolean}\n */\nfunction isPlain(value) {\n  return isObject(value) && toString.call(value) === '[object Object]' && value.constructor === Object;\n}\n\n/**\n * Merge two objects recursively.\n *\n * Performs a deep merge like\n * {@link https://lodash.com/docs/4.17.10#merge|lodash.merge}, but only merges\n * plain objects (not arrays, elements, or anything else).\n *\n * Non-plain object values will be copied directly from the right-most\n * argument.\n *\n * @param   {Object[]} sources\n *          One or more objects to merge into a new object.\n *\n * @return {Object}\n *          A new object that is the merged result of all sources.\n */\nfunction merge$1(...sources) {\n  const result = {};\n  sources.forEach(source => {\n    if (!source) {\n      return;\n    }\n    each(source, (value, key) => {\n      if (!isPlain(value)) {\n        result[key] = value;\n        return;\n      }\n      if (!isPlain(result[key])) {\n        result[key] = {};\n      }\n      result[key] = merge$1(result[key], value);\n    });\n  });\n  return result;\n}\n\n/**\n * Object.defineProperty but \"lazy\", which means that the value is only set after\n * it is retrieved the first time, rather than being set right away.\n *\n * @param {Object} obj the object to set the property on\n * @param {string} key the key for the property to set\n * @param {Function} getValue the function used to get the value when it is needed.\n * @param {boolean} setter whether a setter should be allowed or not\n */\nfunction defineLazyProperty(obj, key, getValue, setter = true) {\n  const set = value => Object.defineProperty(obj, key, {\n    value,\n    enumerable: true,\n    writable: true\n  });\n  const options = {\n    configurable: true,\n    enumerable: true,\n    get() {\n      const value = getValue();\n      set(value);\n      return value;\n    }\n  };\n  if (setter) {\n    options.set = set;\n  }\n  return Object.defineProperty(obj, key, options);\n}\n\nvar Obj = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  each: each,\n  reduce: reduce,\n  isObject: isObject,\n  isPlain: isPlain,\n  merge: merge$1,\n  defineLazyProperty: defineLazyProperty\n});\n\n/**\n * @file browser.js\n * @module browser\n */\n\n/**\n * Whether or not this device is an iPod.\n *\n * @static\n * @type {Boolean}\n */\nlet IS_IPOD = false;\n\n/**\n * The detected iOS version - or `null`.\n *\n * @static\n * @type {string|null}\n */\nlet IOS_VERSION = null;\n\n/**\n * Whether or not this is an Android device.\n *\n * @static\n * @type {Boolean}\n */\nlet IS_ANDROID = false;\n\n/**\n * The detected Android version - or `null` if not Android or indeterminable.\n *\n * @static\n * @type {number|string|null}\n */\nlet ANDROID_VERSION;\n\n/**\n * Whether or not this is Mozilla Firefox.\n *\n * @static\n * @type {Boolean}\n */\nlet IS_FIREFOX = false;\n\n/**\n * Whether or not this is Microsoft Edge.\n *\n * @static\n * @type {Boolean}\n */\nlet IS_EDGE = false;\n\n/**\n * Whether or not this is any Chromium Browser\n *\n * @static\n * @type {Boolean}\n */\nlet IS_CHROMIUM = false;\n\n/**\n * Whether or not this is any Chromium browser that is not Edge.\n *\n * This will also be `true` for Chrome on iOS, which will have different support\n * as it is actually Safari under the hood.\n *\n * Deprecated, as the behaviour to not match Edge was to prevent Legacy Edge's UA matching.\n * IS_CHROMIUM should be used instead.\n * \"Chromium but not Edge\" could be explicitly tested with IS_CHROMIUM && !IS_EDGE\n *\n * @static\n * @deprecated\n * @type {Boolean}\n */\nlet IS_CHROME = false;\n\n/**\n * The detected Chromium version - or `null`.\n *\n * @static\n * @type {number|null}\n */\nlet CHROMIUM_VERSION = null;\n\n/**\n * The detected Google Chrome version - or `null`.\n * This has always been the _Chromium_ version, i.e. would return on Chromium Edge.\n * Deprecated, use CHROMIUM_VERSION instead.\n *\n * @static\n * @deprecated\n * @type {number|null}\n */\nlet CHROME_VERSION = null;\n\n/**\n * The detected Internet Explorer version - or `null`.\n *\n * @static\n * @deprecated\n * @type {number|null}\n */\nlet IE_VERSION = null;\n\n/**\n * Whether or not this is desktop Safari.\n *\n * @static\n * @type {Boolean}\n */\nlet IS_SAFARI = false;\n\n/**\n * Whether or not this is a Windows machine.\n *\n * @static\n * @type {Boolean}\n */\nlet IS_WINDOWS = false;\n\n/**\n * Whether or not this device is an iPad.\n *\n * @static\n * @type {Boolean}\n */\nlet IS_IPAD = false;\n\n/**\n * Whether or not this device is an iPhone.\n *\n * @static\n * @type {Boolean}\n */\n// The Facebook app's UIWebView identifies as both an iPhone and iPad, so\n// to identify iPhones, we need to exclude iPads.\n// http://artsy.github.io/blog/2012/10/18/the-perils-of-ios-user-agent-sniffing/\nlet IS_IPHONE = false;\n\n/**\n * Whether or not this device is touch-enabled.\n *\n * @static\n * @const\n * @type {Boolean}\n */\nconst TOUCH_ENABLED = Boolean(isReal() && ('ontouchstart' in window$1 || window$1.navigator.maxTouchPoints || window$1.DocumentTouch && window$1.document instanceof window$1.DocumentTouch));\nconst UAD = window$1.navigator && window$1.navigator.userAgentData;\nif (UAD) {\n  // If userAgentData is present, use it instead of userAgent to avoid warnings\n  // Currently only implemented on Chromium\n  // userAgentData does not expose Android version, so ANDROID_VERSION remains `null`\n\n  IS_ANDROID = UAD.platform === 'Android';\n  IS_EDGE = Boolean(UAD.brands.find(b => b.brand === 'Microsoft Edge'));\n  IS_CHROMIUM = Boolean(UAD.brands.find(b => b.brand === 'Chromium'));\n  IS_CHROME = !IS_EDGE && IS_CHROMIUM;\n  CHROMIUM_VERSION = CHROME_VERSION = (UAD.brands.find(b => b.brand === 'Chromium') || {}).version || null;\n  IS_WINDOWS = UAD.platform === 'Windows';\n}\n\n// If the browser is not Chromium, either userAgentData is not present which could be an old Chromium browser,\n//  or it's a browser that has added userAgentData since that we don't have tests for yet. In either case,\n// the checks need to be made agiainst the regular userAgent string.\nif (!IS_CHROMIUM) {\n  const USER_AGENT = window$1.navigator && window$1.navigator.userAgent || '';\n  IS_IPOD = /iPod/i.test(USER_AGENT);\n  IOS_VERSION = function () {\n    const match = USER_AGENT.match(/OS (\\d+)_/i);\n    if (match && match[1]) {\n      return match[1];\n    }\n    return null;\n  }();\n  IS_ANDROID = /Android/i.test(USER_AGENT);\n  ANDROID_VERSION = function () {\n    // This matches Android Major.Minor.Patch versions\n    // ANDROID_VERSION is Major.Minor as a Number, if Minor isn't available, then only Major is returned\n    const match = USER_AGENT.match(/Android (\\d+)(?:\\.(\\d+))?(?:\\.(\\d+))*/i);\n    if (!match) {\n      return null;\n    }\n    const major = match[1] && parseFloat(match[1]);\n    const minor = match[2] && parseFloat(match[2]);\n    if (major && minor) {\n      return parseFloat(match[1] + '.' + match[2]);\n    } else if (major) {\n      return major;\n    }\n    return null;\n  }();\n  IS_FIREFOX = /Firefox/i.test(USER_AGENT);\n  IS_EDGE = /Edg/i.test(USER_AGENT);\n  IS_CHROMIUM = /Chrome/i.test(USER_AGENT) || /CriOS/i.test(USER_AGENT);\n  IS_CHROME = !IS_EDGE && IS_CHROMIUM;\n  CHROMIUM_VERSION = CHROME_VERSION = function () {\n    const match = USER_AGENT.match(/(Chrome|CriOS)\\/(\\d+)/);\n    if (match && match[2]) {\n      return parseFloat(match[2]);\n    }\n    return null;\n  }();\n  IE_VERSION = function () {\n    const result = /MSIE\\s(\\d+)\\.\\d/.exec(USER_AGENT);\n    let version = result && parseFloat(result[1]);\n    if (!version && /Trident\\/7.0/i.test(USER_AGENT) && /rv:11.0/.test(USER_AGENT)) {\n      // IE 11 has a different user agent string than other IE versions\n      version = 11.0;\n    }\n    return version;\n  }();\n  IS_SAFARI = /Safari/i.test(USER_AGENT) && !IS_CHROME && !IS_ANDROID && !IS_EDGE;\n  IS_WINDOWS = /Windows/i.test(USER_AGENT);\n  IS_IPAD = /iPad/i.test(USER_AGENT) || IS_SAFARI && TOUCH_ENABLED && !/iPhone/i.test(USER_AGENT);\n  IS_IPHONE = /iPhone/i.test(USER_AGENT) && !IS_IPAD;\n}\n\n/**\n * Whether or not this is an iOS device.\n *\n * @static\n * @const\n * @type {Boolean}\n */\nconst IS_IOS = IS_IPHONE || IS_IPAD || IS_IPOD;\n\n/**\n * Whether or not this is any flavor of Safari - including iOS.\n *\n * @static\n * @const\n * @type {Boolean}\n */\nconst IS_ANY_SAFARI = (IS_SAFARI || IS_IOS) && !IS_CHROME;\n\nvar browser = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  get IS_IPOD () { return IS_IPOD; },\n  get IOS_VERSION () { return IOS_VERSION; },\n  get IS_ANDROID () { return IS_ANDROID; },\n  get ANDROID_VERSION () { return ANDROID_VERSION; },\n  get IS_FIREFOX () { return IS_FIREFOX; },\n  get IS_EDGE () { return IS_EDGE; },\n  get IS_CHROMIUM () { return IS_CHROMIUM; },\n  get IS_CHROME () { return IS_CHROME; },\n  get CHROMIUM_VERSION () { return CHROMIUM_VERSION; },\n  get CHROME_VERSION () { return CHROME_VERSION; },\n  get IE_VERSION () { return IE_VERSION; },\n  get IS_SAFARI () { return IS_SAFARI; },\n  get IS_WINDOWS () { return IS_WINDOWS; },\n  get IS_IPAD () { return IS_IPAD; },\n  get IS_IPHONE () { return IS_IPHONE; },\n  TOUCH_ENABLED: TOUCH_ENABLED,\n  IS_IOS: IS_IOS,\n  IS_ANY_SAFARI: IS_ANY_SAFARI\n});\n\n/**\n * @file dom.js\n * @module dom\n */\n\n/**\n * Detect if a value is a string with any non-whitespace characters.\n *\n * @private\n * @param  {string} str\n *         The string to check\n *\n * @return {boolean}\n *         Will be `true` if the string is non-blank, `false` otherwise.\n *\n */\nfunction isNonBlankString(str) {\n  // we use str.trim as it will trim any whitespace characters\n  // from the front or back of non-whitespace characters. aka\n  // Any string that contains non-whitespace characters will\n  // still contain them after `trim` but whitespace only strings\n  // will have a length of 0, failing this check.\n  return typeof str === 'string' && Boolean(str.trim());\n}\n\n/**\n * Throws an error if the passed string has whitespace. This is used by\n * class methods to be relatively consistent with the classList API.\n *\n * @private\n * @param  {string} str\n *         The string to check for whitespace.\n *\n * @throws {Error}\n *         Throws an error if there is whitespace in the string.\n */\nfunction throwIfWhitespace(str) {\n  // str.indexOf instead of regex because str.indexOf is faster performance wise.\n  if (str.indexOf(' ') >= 0) {\n    throw new Error('class has illegal whitespace characters');\n  }\n}\n\n/**\n * Whether the current DOM interface appears to be real (i.e. not simulated).\n *\n * @return {boolean}\n *         Will be `true` if the DOM appears to be real, `false` otherwise.\n */\nfunction isReal() {\n  // Both document and window will never be undefined thanks to `global`.\n  return document === window$1.document;\n}\n\n/**\n * Determines, via duck typing, whether or not a value is a DOM element.\n *\n * @param  {*} value\n *         The value to check.\n *\n * @return {boolean}\n *         Will be `true` if the value is a DOM element, `false` otherwise.\n */\nfunction isEl(value) {\n  return isObject(value) && value.nodeType === 1;\n}\n\n/**\n * Determines if the current DOM is embedded in an iframe.\n *\n * @return {boolean}\n *         Will be `true` if the DOM is embedded in an iframe, `false`\n *         otherwise.\n */\nfunction isInFrame() {\n  // We need a try/catch here because Safari will throw errors when attempting\n  // to get either `parent` or `self`\n  try {\n    return window$1.parent !== window$1.self;\n  } catch (x) {\n    return true;\n  }\n}\n\n/**\n * Creates functions to query the DOM using a given method.\n *\n * @private\n * @param   {string} method\n *          The method to create the query with.\n *\n * @return  {Function}\n *          The query method\n */\nfunction createQuerier(method) {\n  return function (selector, context) {\n    if (!isNonBlankString(selector)) {\n      return document[method](null);\n    }\n    if (isNonBlankString(context)) {\n      context = document.querySelector(context);\n    }\n    const ctx = isEl(context) ? context : document;\n    return ctx[method] && ctx[method](selector);\n  };\n}\n\n/**\n * Creates an element and applies properties, attributes, and inserts content.\n *\n * @param  {string} [tagName='div']\n *         Name of tag to be created.\n *\n * @param  {Object} [properties={}]\n *         Element properties to be applied.\n *\n * @param  {Object} [attributes={}]\n *         Element attributes to be applied.\n *\n * @param {ContentDescriptor} [content]\n *        A content descriptor object.\n *\n * @return {Element}\n *         The element that was created.\n */\nfunction createEl(tagName = 'div', properties = {}, attributes = {}, content) {\n  const el = document.createElement(tagName);\n  Object.getOwnPropertyNames(properties).forEach(function (propName) {\n    const val = properties[propName];\n\n    // Handle textContent since it's not supported everywhere and we have a\n    // method for it.\n    if (propName === 'textContent') {\n      textContent(el, val);\n    } else if (el[propName] !== val || propName === 'tabIndex') {\n      el[propName] = val;\n    }\n  });\n  Object.getOwnPropertyNames(attributes).forEach(function (attrName) {\n    el.setAttribute(attrName, attributes[attrName]);\n  });\n  if (content) {\n    appendContent(el, content);\n  }\n  return el;\n}\n\n/**\n * Injects text into an element, replacing any existing contents entirely.\n *\n * @param  {Element} el\n *         The element to add text content into\n *\n * @param  {string} text\n *         The text content to add.\n *\n * @return {Element}\n *         The element with added text content.\n */\nfunction textContent(el, text) {\n  if (typeof el.textContent === 'undefined') {\n    el.innerText = text;\n  } else {\n    el.textContent = text;\n  }\n  return el;\n}\n\n/**\n * Insert an element as the first child node of another\n *\n * @param {Element} child\n *        Element to insert\n *\n * @param {Element} parent\n *        Element to insert child into\n */\nfunction prependTo(child, parent) {\n  if (parent.firstChild) {\n    parent.insertBefore(child, parent.firstChild);\n  } else {\n    parent.appendChild(child);\n  }\n}\n\n/**\n * Check if an element has a class name.\n *\n * @param  {Element} element\n *         Element to check\n *\n * @param  {string} classToCheck\n *         Class name to check for\n *\n * @return {boolean}\n *         Will be `true` if the element has a class, `false` otherwise.\n *\n * @throws {Error}\n *         Throws an error if `classToCheck` has white space.\n */\nfunction hasClass(element, classToCheck) {\n  throwIfWhitespace(classToCheck);\n  return element.classList.contains(classToCheck);\n}\n\n/**\n * Add a class name to an element.\n *\n * @param  {Element} element\n *         Element to add class name to.\n *\n * @param  {...string} classesToAdd\n *         One or more class name to add.\n *\n * @return {Element}\n *         The DOM element with the added class name.\n */\nfunction addClass(element, ...classesToAdd) {\n  element.classList.add(...classesToAdd.reduce((prev, current) => prev.concat(current.split(/\\s+/)), []));\n  return element;\n}\n\n/**\n * Remove a class name from an element.\n *\n * @param  {Element} element\n *         Element to remove a class name from.\n *\n * @param  {...string} classesToRemove\n *         One or more class name to remove.\n *\n * @return {Element}\n *         The DOM element with class name removed.\n */\nfunction removeClass(element, ...classesToRemove) {\n  // Protect in case the player gets disposed\n  if (!element) {\n    log$1.warn(\"removeClass was called with an element that doesn't exist\");\n    return null;\n  }\n  element.classList.remove(...classesToRemove.reduce((prev, current) => prev.concat(current.split(/\\s+/)), []));\n  return element;\n}\n\n/**\n * The callback definition for toggleClass.\n *\n * @callback module:dom~PredicateCallback\n * @param    {Element} element\n *           The DOM element of the Component.\n *\n * @param    {string} classToToggle\n *           The `className` that wants to be toggled\n *\n * @return   {boolean|undefined}\n *           If `true` is returned, the `classToToggle` will be added to the\n *           `element`. If `false`, the `classToToggle` will be removed from\n *           the `element`. If `undefined`, the callback will be ignored.\n */\n\n/**\n * Adds or removes a class name to/from an element depending on an optional\n * condition or the presence/absence of the class name.\n *\n * @param  {Element} element\n *         The element to toggle a class name on.\n *\n * @param  {string} classToToggle\n *         The class that should be toggled.\n *\n * @param  {boolean|module:dom~PredicateCallback} [predicate]\n *         See the return value for {@link module:dom~PredicateCallback}\n *\n * @return {Element}\n *         The element with a class that has been toggled.\n */\nfunction toggleClass(element, classToToggle, predicate) {\n  if (typeof predicate === 'function') {\n    predicate = predicate(element, classToToggle);\n  }\n  if (typeof predicate !== 'boolean') {\n    predicate = undefined;\n  }\n  classToToggle.split(/\\s+/).forEach(className => element.classList.toggle(className, predicate));\n  return element;\n}\n\n/**\n * Apply attributes to an HTML element.\n *\n * @param {Element} el\n *        Element to add attributes to.\n *\n * @param {Object} [attributes]\n *        Attributes to be applied.\n */\nfunction setAttributes(el, attributes) {\n  Object.getOwnPropertyNames(attributes).forEach(function (attrName) {\n    const attrValue = attributes[attrName];\n    if (attrValue === null || typeof attrValue === 'undefined' || attrValue === false) {\n      el.removeAttribute(attrName);\n    } else {\n      el.setAttribute(attrName, attrValue === true ? '' : attrValue);\n    }\n  });\n}\n\n/**\n * Get an element's attribute values, as defined on the HTML tag.\n *\n * Attributes are not the same as properties. They're defined on the tag\n * or with setAttribute.\n *\n * @param  {Element} tag\n *         Element from which to get tag attributes.\n *\n * @return {Object}\n *         All attributes of the element. Boolean attributes will be `true` or\n *         `false`, others will be strings.\n */\nfunction getAttributes(tag) {\n  const obj = {};\n\n  // known boolean attributes\n  // we can check for matching boolean properties, but not all browsers\n  // and not all tags know about these attributes, so, we still want to check them manually\n  const knownBooleans = ',' + 'autoplay,controls,playsinline,loop,muted,default,defaultMuted' + ',';\n  if (tag && tag.attributes && tag.attributes.length > 0) {\n    const attrs = tag.attributes;\n    for (let i = attrs.length - 1; i >= 0; i--) {\n      const attrName = attrs[i].name;\n      let attrVal = attrs[i].value;\n\n      // check for known booleans\n      // the matching element property will return a value for typeof\n      if (typeof tag[attrName] === 'boolean' || knownBooleans.indexOf(',' + attrName + ',') !== -1) {\n        // the value of an included boolean attribute is typically an empty\n        // string ('') which would equal false if we just check for a false value.\n        // we also don't want support bad code like autoplay='false'\n        attrVal = attrVal !== null ? true : false;\n      }\n      obj[attrName] = attrVal;\n    }\n  }\n  return obj;\n}\n\n/**\n * Get the value of an element's attribute.\n *\n * @param {Element} el\n *        A DOM element.\n *\n * @param {string} attribute\n *        Attribute to get the value of.\n *\n * @return {string}\n *         The value of the attribute.\n */\nfunction getAttribute(el, attribute) {\n  return el.getAttribute(attribute);\n}\n\n/**\n * Set the value of an element's attribute.\n *\n * @param {Element} el\n *        A DOM element.\n *\n * @param {string} attribute\n *        Attribute to set.\n *\n * @param {string} value\n *        Value to set the attribute to.\n */\nfunction setAttribute(el, attribute, value) {\n  el.setAttribute(attribute, value);\n}\n\n/**\n * Remove an element's attribute.\n *\n * @param {Element} el\n *        A DOM element.\n *\n * @param {string} attribute\n *        Attribute to remove.\n */\nfunction removeAttribute(el, attribute) {\n  el.removeAttribute(attribute);\n}\n\n/**\n * Attempt to block the ability to select text.\n */\nfunction blockTextSelection() {\n  document.body.focus();\n  document.onselectstart = function () {\n    return false;\n  };\n}\n\n/**\n * Turn off text selection blocking.\n */\nfunction unblockTextSelection() {\n  document.onselectstart = function () {\n    return true;\n  };\n}\n\n/**\n * Identical to the native `getBoundingClientRect` function, but ensures that\n * the method is supported at all (it is in all browsers we claim to support)\n * and that the element is in the DOM before continuing.\n *\n * This wrapper function also shims properties which are not provided by some\n * older browsers (namely, IE8).\n *\n * Additionally, some browsers do not support adding properties to a\n * `ClientRect`/`DOMRect` object; so, we shallow-copy it with the standard\n * properties (except `x` and `y` which are not widely supported). This helps\n * avoid implementations where keys are non-enumerable.\n *\n * @param  {Element} el\n *         Element whose `ClientRect` we want to calculate.\n *\n * @return {Object|undefined}\n *         Always returns a plain object - or `undefined` if it cannot.\n */\nfunction getBoundingClientRect(el) {\n  if (el && el.getBoundingClientRect && el.parentNode) {\n    const rect = el.getBoundingClientRect();\n    const result = {};\n    ['bottom', 'height', 'left', 'right', 'top', 'width'].forEach(k => {\n      if (rect[k] !== undefined) {\n        result[k] = rect[k];\n      }\n    });\n    if (!result.height) {\n      result.height = parseFloat(computedStyle(el, 'height'));\n    }\n    if (!result.width) {\n      result.width = parseFloat(computedStyle(el, 'width'));\n    }\n    return result;\n  }\n}\n\n/**\n * Represents the position of a DOM element on the page.\n *\n * @typedef  {Object} module:dom~Position\n *\n * @property {number} left\n *           Pixels to the left.\n *\n * @property {number} top\n *           Pixels from the top.\n */\n\n/**\n * Get the position of an element in the DOM.\n *\n * Uses `getBoundingClientRect` technique from John Resig.\n *\n * @see http://ejohn.org/blog/getboundingclientrect-is-awesome/\n *\n * @param  {Element} el\n *         Element from which to get offset.\n *\n * @return {module:dom~Position}\n *         The position of the element that was passed in.\n */\nfunction findPosition(el) {\n  if (!el || el && !el.offsetParent) {\n    return {\n      left: 0,\n      top: 0,\n      width: 0,\n      height: 0\n    };\n  }\n  const width = el.offsetWidth;\n  const height = el.offsetHeight;\n  let left = 0;\n  let top = 0;\n  while (el.offsetParent && el !== document[FullscreenApi.fullscreenElement]) {\n    left += el.offsetLeft;\n    top += el.offsetTop;\n    el = el.offsetParent;\n  }\n  return {\n    left,\n    top,\n    width,\n    height\n  };\n}\n\n/**\n * Represents x and y coordinates for a DOM element or mouse pointer.\n *\n * @typedef  {Object} module:dom~Coordinates\n *\n * @property {number} x\n *           x coordinate in pixels\n *\n * @property {number} y\n *           y coordinate in pixels\n */\n\n/**\n * Get the pointer position within an element.\n *\n * The base on the coordinates are the bottom left of the element.\n *\n * @param  {Element} el\n *         Element on which to get the pointer position on.\n *\n * @param  {Event} event\n *         Event object.\n *\n * @return {module:dom~Coordinates}\n *         A coordinates object corresponding to the mouse position.\n *\n */\nfunction getPointerPosition(el, event) {\n  const translated = {\n    x: 0,\n    y: 0\n  };\n  if (IS_IOS) {\n    let item = el;\n    while (item && item.nodeName.toLowerCase() !== 'html') {\n      const transform = computedStyle(item, 'transform');\n      if (/^matrix/.test(transform)) {\n        const values = transform.slice(7, -1).split(/,\\s/).map(Number);\n        translated.x += values[4];\n        translated.y += values[5];\n      } else if (/^matrix3d/.test(transform)) {\n        const values = transform.slice(9, -1).split(/,\\s/).map(Number);\n        translated.x += values[12];\n        translated.y += values[13];\n      }\n      item = item.parentNode;\n    }\n  }\n  const position = {};\n  const boxTarget = findPosition(event.target);\n  const box = findPosition(el);\n  const boxW = box.width;\n  const boxH = box.height;\n  let offsetY = event.offsetY - (box.top - boxTarget.top);\n  let offsetX = event.offsetX - (box.left - boxTarget.left);\n  if (event.changedTouches) {\n    offsetX = event.changedTouches[0].pageX - box.left;\n    offsetY = event.changedTouches[0].pageY + box.top;\n    if (IS_IOS) {\n      offsetX -= translated.x;\n      offsetY -= translated.y;\n    }\n  }\n  position.y = 1 - Math.max(0, Math.min(1, offsetY / boxH));\n  position.x = Math.max(0, Math.min(1, offsetX / boxW));\n  return position;\n}\n\n/**\n * Determines, via duck typing, whether or not a value is a text node.\n *\n * @param  {*} value\n *         Check if this value is a text node.\n *\n * @return {boolean}\n *         Will be `true` if the value is a text node, `false` otherwise.\n */\nfunction isTextNode(value) {\n  return isObject(value) && value.nodeType === 3;\n}\n\n/**\n * Empties the contents of an element.\n *\n * @param  {Element} el\n *         The element to empty children from\n *\n * @return {Element}\n *         The element with no children\n */\nfunction emptyEl(el) {\n  while (el.firstChild) {\n    el.removeChild(el.firstChild);\n  }\n  return el;\n}\n\n/**\n * This is a mixed value that describes content to be injected into the DOM\n * via some method. It can be of the following types:\n *\n * Type       | Description\n * -----------|-------------\n * `string`   | The value will be normalized into a text node.\n * `Element`  | The value will be accepted as-is.\n * `Text`     | A TextNode. The value will be accepted as-is.\n * `Array`    | A one-dimensional array of strings, elements, text nodes, or functions. These functions should return a string, element, or text node (any other return value, like an array, will be ignored).\n * `Function` | A function, which is expected to return a string, element, text node, or array - any of the other possible values described above. This means that a content descriptor could be a function that returns an array of functions, but those second-level functions must return strings, elements, or text nodes.\n *\n * @typedef {string|Element|Text|Array|Function} ContentDescriptor\n */\n\n/**\n * Normalizes content for eventual insertion into the DOM.\n *\n * This allows a wide range of content definition methods, but helps protect\n * from falling into the trap of simply writing to `innerHTML`, which could\n * be an XSS concern.\n *\n * The content for an element can be passed in multiple types and\n * combinations, whose behavior is as follows:\n *\n * @param {ContentDescriptor} content\n *        A content descriptor value.\n *\n * @return {Array}\n *         All of the content that was passed in, normalized to an array of\n *         elements or text nodes.\n */\nfunction normalizeContent(content) {\n  // First, invoke content if it is a function. If it produces an array,\n  // that needs to happen before normalization.\n  if (typeof content === 'function') {\n    content = content();\n  }\n\n  // Next up, normalize to an array, so one or many items can be normalized,\n  // filtered, and returned.\n  return (Array.isArray(content) ? content : [content]).map(value => {\n    // First, invoke value if it is a function to produce a new value,\n    // which will be subsequently normalized to a Node of some kind.\n    if (typeof value === 'function') {\n      value = value();\n    }\n    if (isEl(value) || isTextNode(value)) {\n      return value;\n    }\n    if (typeof value === 'string' && /\\S/.test(value)) {\n      return document.createTextNode(value);\n    }\n  }).filter(value => value);\n}\n\n/**\n * Normalizes and appends content to an element.\n *\n * @param  {Element} el\n *         Element to append normalized content to.\n *\n * @param {ContentDescriptor} content\n *        A content descriptor value.\n *\n * @return {Element}\n *         The element with appended normalized content.\n */\nfunction appendContent(el, content) {\n  normalizeContent(content).forEach(node => el.appendChild(node));\n  return el;\n}\n\n/**\n * Normalizes and inserts content into an element; this is identical to\n * `appendContent()`, except it empties the element first.\n *\n * @param {Element} el\n *        Element to insert normalized content into.\n *\n * @param {ContentDescriptor} content\n *        A content descriptor value.\n *\n * @return {Element}\n *         The element with inserted normalized content.\n */\nfunction insertContent(el, content) {\n  return appendContent(emptyEl(el), content);\n}\n\n/**\n * Check if an event was a single left click.\n *\n * @param  {Event} event\n *         Event object.\n *\n * @return {boolean}\n *         Will be `true` if a single left click, `false` otherwise.\n */\nfunction isSingleLeftClick(event) {\n  // Note: if you create something draggable, be sure to\n  // call it on both `mousedown` and `mousemove` event,\n  // otherwise `mousedown` should be enough for a button\n\n  if (event.button === undefined && event.buttons === undefined) {\n    // Why do we need `buttons` ?\n    // Because, middle mouse sometimes have this:\n    // e.button === 0 and e.buttons === 4\n    // Furthermore, we want to prevent combination click, something like\n    // HOLD middlemouse then left click, that would be\n    // e.button === 0, e.buttons === 5\n    // just `button` is not gonna work\n\n    // Alright, then what this block does ?\n    // this is for chrome `simulate mobile devices`\n    // I want to support this as well\n\n    return true;\n  }\n  if (event.button === 0 && event.buttons === undefined) {\n    // Touch screen, sometimes on some specific device, `buttons`\n    // doesn't have anything (safari on ios, blackberry...)\n\n    return true;\n  }\n\n  // `mouseup` event on a single left click has\n  // `button` and `buttons` equal to 0\n  if (event.type === 'mouseup' && event.button === 0 && event.buttons === 0) {\n    return true;\n  }\n  if (event.button !== 0 || event.buttons !== 1) {\n    // This is the reason we have those if else block above\n    // if any special case we can catch and let it slide\n    // we do it above, when get to here, this definitely\n    // is-not-left-click\n\n    return false;\n  }\n  return true;\n}\n\n/**\n * Finds a single DOM element matching `selector` within the optional\n * `context` of another DOM element (defaulting to `document`).\n *\n * @param  {string} selector\n *         A valid CSS selector, which will be passed to `querySelector`.\n *\n * @param  {Element|String} [context=document]\n *         A DOM element within which to query. Can also be a selector\n *         string in which case the first matching element will be used\n *         as context. If missing (or no element matches selector), falls\n *         back to `document`.\n *\n * @return {Element|null}\n *         The element that was found or null.\n */\nconst $ = createQuerier('querySelector');\n\n/**\n * Finds a all DOM elements matching `selector` within the optional\n * `context` of another DOM element (defaulting to `document`).\n *\n * @param  {string} selector\n *         A valid CSS selector, which will be passed to `querySelectorAll`.\n *\n * @param  {Element|String} [context=document]\n *         A DOM element within which to query. Can also be a selector\n *         string in which case the first matching element will be used\n *         as context. If missing (or no element matches selector), falls\n *         back to `document`.\n *\n * @return {NodeList}\n *         A element list of elements that were found. Will be empty if none\n *         were found.\n *\n */\nconst $$ = createQuerier('querySelectorAll');\n\n/**\n * A safe getComputedStyle.\n *\n * This is needed because in Firefox, if the player is loaded in an iframe with\n * `display:none`, then `getComputedStyle` returns `null`, so, we do a\n * null-check to make sure that the player doesn't break in these cases.\n *\n * @param    {Element} el\n *           The element you want the computed style of\n *\n * @param    {string} prop\n *           The property name you want\n *\n * @see      https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n */\nfunction computedStyle(el, prop) {\n  if (!el || !prop) {\n    return '';\n  }\n  if (typeof window$1.getComputedStyle === 'function') {\n    let computedStyleValue;\n    try {\n      computedStyleValue = window$1.getComputedStyle(el);\n    } catch (e) {\n      return '';\n    }\n    return computedStyleValue ? computedStyleValue.getPropertyValue(prop) || computedStyleValue[prop] : '';\n  }\n  return '';\n}\n\nvar Dom = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  isReal: isReal,\n  isEl: isEl,\n  isInFrame: isInFrame,\n  createEl: createEl,\n  textContent: textContent,\n  prependTo: prependTo,\n  hasClass: hasClass,\n  addClass: addClass,\n  removeClass: removeClass,\n  toggleClass: toggleClass,\n  setAttributes: setAttributes,\n  getAttributes: getAttributes,\n  getAttribute: getAttribute,\n  setAttribute: setAttribute,\n  removeAttribute: removeAttribute,\n  blockTextSelection: blockTextSelection,\n  unblockTextSelection: unblockTextSelection,\n  getBoundingClientRect: getBoundingClientRect,\n  findPosition: findPosition,\n  getPointerPosition: getPointerPosition,\n  isTextNode: isTextNode,\n  emptyEl: emptyEl,\n  normalizeContent: normalizeContent,\n  appendContent: appendContent,\n  insertContent: insertContent,\n  isSingleLeftClick: isSingleLeftClick,\n  $: $,\n  $$: $$,\n  computedStyle: computedStyle\n});\n\n/**\n * @file setup.js - Functions for setting up a player without\n * user interaction based on the data-setup `attribute` of the video tag.\n *\n * @module setup\n */\nlet _windowLoaded = false;\nlet videojs$1;\n\n/**\n * Set up any tags that have a data-setup `attribute` when the player is started.\n */\nconst autoSetup = function () {\n  if (videojs$1.options.autoSetup === false) {\n    return;\n  }\n  const vids = Array.prototype.slice.call(document.getElementsByTagName('video'));\n  const audios = Array.prototype.slice.call(document.getElementsByTagName('audio'));\n  const divs = Array.prototype.slice.call(document.getElementsByTagName('video-js'));\n  const mediaEls = vids.concat(audios, divs);\n\n  // Check if any media elements exist\n  if (mediaEls && mediaEls.length > 0) {\n    for (let i = 0, e = mediaEls.length; i < e; i++) {\n      const mediaEl = mediaEls[i];\n\n      // Check if element exists, has getAttribute func.\n      if (mediaEl && mediaEl.getAttribute) {\n        // Make sure this player hasn't already been set up.\n        if (mediaEl.player === undefined) {\n          const options = mediaEl.getAttribute('data-setup');\n\n          // Check if data-setup attr exists.\n          // We only auto-setup if they've added the data-setup attr.\n          if (options !== null) {\n            // Create new video.js instance.\n            videojs$1(mediaEl);\n          }\n        }\n\n        // If getAttribute isn't defined, we need to wait for the DOM.\n      } else {\n        autoSetupTimeout(1);\n        break;\n      }\n    }\n\n    // No videos were found, so keep looping unless page is finished loading.\n  } else if (!_windowLoaded) {\n    autoSetupTimeout(1);\n  }\n};\n\n/**\n * Wait until the page is loaded before running autoSetup. This will be called in\n * autoSetup if `hasLoaded` returns false.\n *\n * @param {number} wait\n *        How long to wait in ms\n *\n * @param {module:videojs} [vjs]\n *        The videojs library function\n */\nfunction autoSetupTimeout(wait, vjs) {\n  // Protect against breakage in non-browser environments\n  if (!isReal()) {\n    return;\n  }\n  if (vjs) {\n    videojs$1 = vjs;\n  }\n  window$1.setTimeout(autoSetup, wait);\n}\n\n/**\n * Used to set the internal tracking of window loaded state to true.\n *\n * @private\n */\nfunction setWindowLoaded() {\n  _windowLoaded = true;\n  window$1.removeEventListener('load', setWindowLoaded);\n}\nif (isReal()) {\n  if (document.readyState === 'complete') {\n    setWindowLoaded();\n  } else {\n    /**\n     * Listen for the load event on window, and set _windowLoaded to true.\n     *\n     * We use a standard event listener here to avoid incrementing the GUID\n     * before any players are created.\n     *\n     * @listens load\n     */\n    window$1.addEventListener('load', setWindowLoaded);\n  }\n}\n\n/**\n * @file stylesheet.js\n * @module stylesheet\n */\n\n/**\n * Create a DOM style element given a className for it.\n *\n * @param {string} className\n *        The className to add to the created style element.\n *\n * @return {Element}\n *         The element that was created.\n */\nconst createStyleElement = function (className) {\n  const style = document.createElement('style');\n  style.className = className;\n  return style;\n};\n\n/**\n * Add text to a DOM element.\n *\n * @param {Element} el\n *        The Element to add text content to.\n *\n * @param {string} content\n *        The text to add to the element.\n */\nconst setTextContent = function (el, content) {\n  if (el.styleSheet) {\n    el.styleSheet.cssText = content;\n  } else {\n    el.textContent = content;\n  }\n};\n\n/**\n * @file dom-data.js\n * @module dom-data\n */\n\n/**\n * Element Data Store.\n *\n * Allows for binding data to an element without putting it directly on the\n * element. Ex. Event listeners are stored here.\n * (also from jsninja.com, slightly modified and updated for closure compiler)\n *\n * @type {Object}\n * @private\n */\nvar DomData = new WeakMap();\n\n/**\n * @file guid.js\n * @module guid\n */\n\n// Default value for GUIDs. This allows us to reset the GUID counter in tests.\n//\n// The initial GUID is 3 because some users have come to rely on the first\n// default player ID ending up as `vjs_video_3`.\n//\n// See: https://github.com/videojs/video.js/pull/6216\nconst _initialGuid = 3;\n\n/**\n * Unique ID for an element or function\n *\n * @type {Number}\n */\nlet _guid = _initialGuid;\n\n/**\n * Get a unique auto-incrementing ID by number that has not been returned before.\n *\n * @return {number}\n *         A new unique ID.\n */\nfunction newGUID() {\n  return _guid++;\n}\n\n/**\n * @file events.js. An Event System (John Resig - Secrets of a JS Ninja http://jsninja.com/)\n * (Original book version wasn't completely usable, so fixed some things and made Closure Compiler compatible)\n * This should work very similarly to jQuery's events, however it's based off the book version which isn't as\n * robust as jquery's, so there's probably some differences.\n *\n * @file events.js\n * @module events\n */\n\n/**\n * Clean up the listener cache and dispatchers\n *\n * @param {Element|Object} elem\n *        Element to clean up\n *\n * @param {string} type\n *        Type of event to clean up\n */\nfunction _cleanUpEvents(elem, type) {\n  if (!DomData.has(elem)) {\n    return;\n  }\n  const data = DomData.get(elem);\n\n  // Remove the events of a particular type if there are none left\n  if (data.handlers[type].length === 0) {\n    delete data.handlers[type];\n    // data.handlers[type] = null;\n    // Setting to null was causing an error with data.handlers\n\n    // Remove the meta-handler from the element\n    if (elem.removeEventListener) {\n      elem.removeEventListener(type, data.dispatcher, false);\n    } else if (elem.detachEvent) {\n      elem.detachEvent('on' + type, data.dispatcher);\n    }\n  }\n\n  // Remove the events object if there are no types left\n  if (Object.getOwnPropertyNames(data.handlers).length <= 0) {\n    delete data.handlers;\n    delete data.dispatcher;\n    delete data.disabled;\n  }\n\n  // Finally remove the element data if there is no data left\n  if (Object.getOwnPropertyNames(data).length === 0) {\n    DomData.delete(elem);\n  }\n}\n\n/**\n * Loops through an array of event types and calls the requested method for each type.\n *\n * @param {Function} fn\n *        The event method we want to use.\n *\n * @param {Element|Object} elem\n *        Element or object to bind listeners to\n *\n * @param {string} type\n *        Type of event to bind to.\n *\n * @param {Function} callback\n *        Event listener.\n */\nfunction _handleMultipleEvents(fn, elem, types, callback) {\n  types.forEach(function (type) {\n    // Call the event method for each one of the types\n    fn(elem, type, callback);\n  });\n}\n\n/**\n * Fix a native event to have standard property values\n *\n * @param {Object} event\n *        Event object to fix.\n *\n * @return {Object}\n *         Fixed event object.\n */\nfunction fixEvent(event) {\n  if (event.fixed_) {\n    return event;\n  }\n  function returnTrue() {\n    return true;\n  }\n  function returnFalse() {\n    return false;\n  }\n\n  // Test if fixing up is needed\n  // Used to check if !event.stopPropagation instead of isPropagationStopped\n  // But native events return true for stopPropagation, but don't have\n  // other expected methods like isPropagationStopped. Seems to be a problem\n  // with the Javascript Ninja code. So we're just overriding all events now.\n  if (!event || !event.isPropagationStopped || !event.isImmediatePropagationStopped) {\n    const old = event || window$1.event;\n    event = {};\n    // Clone the old object so that we can modify the values event = {};\n    // IE8 Doesn't like when you mess with native event properties\n    // Firefox returns false for event.hasOwnProperty('type') and other props\n    //  which makes copying more difficult.\n    // TODO: Probably best to create a whitelist of event props\n    for (const key in old) {\n      // Safari 6.0.3 warns you if you try to copy deprecated layerX/Y\n      // Chrome warns you if you try to copy deprecated keyboardEvent.keyLocation\n      // and webkitMovementX/Y\n      // Lighthouse complains if Event.path is copied\n      if (key !== 'layerX' && key !== 'layerY' && key !== 'keyLocation' && key !== 'webkitMovementX' && key !== 'webkitMovementY' && key !== 'path') {\n        // Chrome 32+ warns if you try to copy deprecated returnValue, but\n        // we still want to if preventDefault isn't supported (IE8).\n        if (!(key === 'returnValue' && old.preventDefault)) {\n          event[key] = old[key];\n        }\n      }\n    }\n\n    // The event occurred on this element\n    if (!event.target) {\n      event.target = event.srcElement || document;\n    }\n\n    // Handle which other element the event is related to\n    if (!event.relatedTarget) {\n      event.relatedTarget = event.fromElement === event.target ? event.toElement : event.fromElement;\n    }\n\n    // Stop the default browser action\n    event.preventDefault = function () {\n      if (old.preventDefault) {\n        old.preventDefault();\n      }\n      event.returnValue = false;\n      old.returnValue = false;\n      event.defaultPrevented = true;\n    };\n    event.defaultPrevented = false;\n\n    // Stop the event from bubbling\n    event.stopPropagation = function () {\n      if (old.stopPropagation) {\n        old.stopPropagation();\n      }\n      event.cancelBubble = true;\n      old.cancelBubble = true;\n      event.isPropagationStopped = returnTrue;\n    };\n    event.isPropagationStopped = returnFalse;\n\n    // Stop the event from bubbling and executing other handlers\n    event.stopImmediatePropagation = function () {\n      if (old.stopImmediatePropagation) {\n        old.stopImmediatePropagation();\n      }\n      event.isImmediatePropagationStopped = returnTrue;\n      event.stopPropagation();\n    };\n    event.isImmediatePropagationStopped = returnFalse;\n\n    // Handle mouse position\n    if (event.clientX !== null && event.clientX !== undefined) {\n      const doc = document.documentElement;\n      const body = document.body;\n      event.pageX = event.clientX + (doc && doc.scrollLeft || body && body.scrollLeft || 0) - (doc && doc.clientLeft || body && body.clientLeft || 0);\n      event.pageY = event.clientY + (doc && doc.scrollTop || body && body.scrollTop || 0) - (doc && doc.clientTop || body && body.clientTop || 0);\n    }\n\n    // Handle key presses\n    event.which = event.charCode || event.keyCode;\n\n    // Fix button for mouse clicks:\n    // 0 == left; 1 == middle; 2 == right\n    if (event.button !== null && event.button !== undefined) {\n      // The following is disabled because it does not pass videojs-standard\n      // and... yikes.\n      /* eslint-disable */\n      event.button = event.button & 1 ? 0 : event.button & 4 ? 1 : event.button & 2 ? 2 : 0;\n      /* eslint-enable */\n    }\n  }\n\n  event.fixed_ = true;\n  // Returns fixed-up instance\n  return event;\n}\n\n/**\n * Whether passive event listeners are supported\n */\nlet _supportsPassive;\nconst supportsPassive = function () {\n  if (typeof _supportsPassive !== 'boolean') {\n    _supportsPassive = false;\n    try {\n      const opts = Object.defineProperty({}, 'passive', {\n        get() {\n          _supportsPassive = true;\n        }\n      });\n      window$1.addEventListener('test', null, opts);\n      window$1.removeEventListener('test', null, opts);\n    } catch (e) {\n      // disregard\n    }\n  }\n  return _supportsPassive;\n};\n\n/**\n * Touch events Chrome expects to be passive\n */\nconst passiveEvents = ['touchstart', 'touchmove'];\n\n/**\n * Add an event listener to element\n * It stores the handler function in a separate cache object\n * and adds a generic handler to the element's event,\n * along with a unique id (guid) to the element.\n *\n * @param {Element|Object} elem\n *        Element or object to bind listeners to\n *\n * @param {string|string[]} type\n *        Type of event to bind to.\n *\n * @param {Function} fn\n *        Event listener.\n */\nfunction on(elem, type, fn) {\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(on, elem, type, fn);\n  }\n  if (!DomData.has(elem)) {\n    DomData.set(elem, {});\n  }\n  const data = DomData.get(elem);\n\n  // We need a place to store all our handler data\n  if (!data.handlers) {\n    data.handlers = {};\n  }\n  if (!data.handlers[type]) {\n    data.handlers[type] = [];\n  }\n  if (!fn.guid) {\n    fn.guid = newGUID();\n  }\n  data.handlers[type].push(fn);\n  if (!data.dispatcher) {\n    data.disabled = false;\n    data.dispatcher = function (event, hash) {\n      if (data.disabled) {\n        return;\n      }\n      event = fixEvent(event);\n      const handlers = data.handlers[event.type];\n      if (handlers) {\n        // Copy handlers so if handlers are added/removed during the process it doesn't throw everything off.\n        const handlersCopy = handlers.slice(0);\n        for (let m = 0, n = handlersCopy.length; m < n; m++) {\n          if (event.isImmediatePropagationStopped()) {\n            break;\n          } else {\n            try {\n              handlersCopy[m].call(elem, event, hash);\n            } catch (e) {\n              log$1.error(e);\n            }\n          }\n        }\n      }\n    };\n  }\n  if (data.handlers[type].length === 1) {\n    if (elem.addEventListener) {\n      let options = false;\n      if (supportsPassive() && passiveEvents.indexOf(type) > -1) {\n        options = {\n          passive: true\n        };\n      }\n      elem.addEventListener(type, data.dispatcher, options);\n    } else if (elem.attachEvent) {\n      elem.attachEvent('on' + type, data.dispatcher);\n    }\n  }\n}\n\n/**\n * Removes event listeners from an element\n *\n * @param {Element|Object} elem\n *        Object to remove listeners from.\n *\n * @param {string|string[]} [type]\n *        Type of listener to remove. Don't include to remove all events from element.\n *\n * @param {Function} [fn]\n *        Specific listener to remove. Don't include to remove listeners for an event\n *        type.\n */\nfunction off(elem, type, fn) {\n  // Don't want to add a cache object through getElData if not needed\n  if (!DomData.has(elem)) {\n    return;\n  }\n  const data = DomData.get(elem);\n\n  // If no events exist, nothing to unbind\n  if (!data.handlers) {\n    return;\n  }\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(off, elem, type, fn);\n  }\n\n  // Utility function\n  const removeType = function (el, t) {\n    data.handlers[t] = [];\n    _cleanUpEvents(el, t);\n  };\n\n  // Are we removing all bound events?\n  if (type === undefined) {\n    for (const t in data.handlers) {\n      if (Object.prototype.hasOwnProperty.call(data.handlers || {}, t)) {\n        removeType(elem, t);\n      }\n    }\n    return;\n  }\n  const handlers = data.handlers[type];\n\n  // If no handlers exist, nothing to unbind\n  if (!handlers) {\n    return;\n  }\n\n  // If no listener was provided, remove all listeners for type\n  if (!fn) {\n    removeType(elem, type);\n    return;\n  }\n\n  // We're only removing a single handler\n  if (fn.guid) {\n    for (let n = 0; n < handlers.length; n++) {\n      if (handlers[n].guid === fn.guid) {\n        handlers.splice(n--, 1);\n      }\n    }\n  }\n  _cleanUpEvents(elem, type);\n}\n\n/**\n * Trigger an event for an element\n *\n * @param {Element|Object} elem\n *        Element to trigger an event on\n *\n * @param {EventTarget~Event|string} event\n *        A string (the type) or an event object with a type attribute\n *\n * @param {Object} [hash]\n *        data hash to pass along with the event\n *\n * @return {boolean|undefined}\n *         Returns the opposite of `defaultPrevented` if default was\n *         prevented. Otherwise, returns `undefined`\n */\nfunction trigger(elem, event, hash) {\n  // Fetches element data and a reference to the parent (for bubbling).\n  // Don't want to add a data object to cache for every parent,\n  // so checking hasElData first.\n  const elemData = DomData.has(elem) ? DomData.get(elem) : {};\n  const parent = elem.parentNode || elem.ownerDocument;\n  // type = event.type || event,\n  // handler;\n\n  // If an event name was passed as a string, creates an event out of it\n  if (typeof event === 'string') {\n    event = {\n      type: event,\n      target: elem\n    };\n  } else if (!event.target) {\n    event.target = elem;\n  }\n\n  // Normalizes the event properties.\n  event = fixEvent(event);\n\n  // If the passed element has a dispatcher, executes the established handlers.\n  if (elemData.dispatcher) {\n    elemData.dispatcher.call(elem, event, hash);\n  }\n\n  // Unless explicitly stopped or the event does not bubble (e.g. media events)\n  // recursively calls this function to bubble the event up the DOM.\n  if (parent && !event.isPropagationStopped() && event.bubbles === true) {\n    trigger.call(null, parent, event, hash);\n\n    // If at the top of the DOM, triggers the default action unless disabled.\n  } else if (!parent && !event.defaultPrevented && event.target && event.target[event.type]) {\n    if (!DomData.has(event.target)) {\n      DomData.set(event.target, {});\n    }\n    const targetData = DomData.get(event.target);\n\n    // Checks if the target has a default action for this event.\n    if (event.target[event.type]) {\n      // Temporarily disables event dispatching on the target as we have already executed the handler.\n      targetData.disabled = true;\n      // Executes the default action.\n      if (typeof event.target[event.type] === 'function') {\n        event.target[event.type]();\n      }\n      // Re-enables event dispatching.\n      targetData.disabled = false;\n    }\n  }\n\n  // Inform the triggerer if the default was prevented by returning false\n  return !event.defaultPrevented;\n}\n\n/**\n * Trigger a listener only once for an event.\n *\n * @param {Element|Object} elem\n *        Element or object to bind to.\n *\n * @param {string|string[]} type\n *        Name/type of event\n *\n * @param {Event~EventListener} fn\n *        Event listener function\n */\nfunction one(elem, type, fn) {\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(one, elem, type, fn);\n  }\n  const func = function () {\n    off(elem, type, func);\n    fn.apply(this, arguments);\n  };\n\n  // copy the guid to the new function so it can removed using the original function's ID\n  func.guid = fn.guid = fn.guid || newGUID();\n  on(elem, type, func);\n}\n\n/**\n * Trigger a listener only once and then turn if off for all\n * configured events\n *\n * @param {Element|Object} elem\n *        Element or object to bind to.\n *\n * @param {string|string[]} type\n *        Name/type of event\n *\n * @param {Event~EventListener} fn\n *        Event listener function\n */\nfunction any(elem, type, fn) {\n  const func = function () {\n    off(elem, type, func);\n    fn.apply(this, arguments);\n  };\n\n  // copy the guid to the new function so it can removed using the original function's ID\n  func.guid = fn.guid = fn.guid || newGUID();\n\n  // multiple ons, but one off for everything\n  on(elem, type, func);\n}\n\nvar Events = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  fixEvent: fixEvent,\n  on: on,\n  off: off,\n  trigger: trigger,\n  one: one,\n  any: any\n});\n\n/**\n * @file fn.js\n * @module fn\n */\nconst UPDATE_REFRESH_INTERVAL = 30;\n\n/**\n * A private, internal-only function for changing the context of a function.\n *\n * It also stores a unique id on the function so it can be easily removed from\n * events.\n *\n * @private\n * @function\n * @param    {*} context\n *           The object to bind as scope.\n *\n * @param    {Function} fn\n *           The function to be bound to a scope.\n *\n * @param    {number} [uid]\n *           An optional unique ID for the function to be set\n *\n * @return   {Function}\n *           The new function that will be bound into the context given\n */\nconst bind_ = function (context, fn, uid) {\n  // Make sure the function has a unique ID\n  if (!fn.guid) {\n    fn.guid = newGUID();\n  }\n\n  // Create the new function that changes the context\n  const bound = fn.bind(context);\n\n  // Allow for the ability to individualize this function\n  // Needed in the case where multiple objects might share the same prototype\n  // IF both items add an event listener with the same function, then you try to remove just one\n  // it will remove both because they both have the same guid.\n  // when using this, you need to use the bind method when you remove the listener as well.\n  // currently used in text tracks\n  bound.guid = uid ? uid + '_' + fn.guid : fn.guid;\n  return bound;\n};\n\n/**\n * Wraps the given function, `fn`, with a new function that only invokes `fn`\n * at most once per every `wait` milliseconds.\n *\n * @function\n * @param    {Function} fn\n *           The function to be throttled.\n *\n * @param    {number}   wait\n *           The number of milliseconds by which to throttle.\n *\n * @return   {Function}\n */\nconst throttle = function (fn, wait) {\n  let last = window$1.performance.now();\n  const throttled = function (...args) {\n    const now = window$1.performance.now();\n    if (now - last >= wait) {\n      fn(...args);\n      last = now;\n    }\n  };\n  return throttled;\n};\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked.\n *\n * Inspired by lodash and underscore implementations.\n *\n * @function\n * @param    {Function} func\n *           The function to wrap with debounce behavior.\n *\n * @param    {number} wait\n *           The number of milliseconds to wait after the last invocation.\n *\n * @param    {boolean} [immediate]\n *           Whether or not to invoke the function immediately upon creation.\n *\n * @param    {Object} [context=window]\n *           The \"context\" in which the debounced function should debounce. For\n *           example, if this function should be tied to a Video.js player,\n *           the player can be passed here. Alternatively, defaults to the\n *           global `window` object.\n *\n * @return   {Function}\n *           A debounced function.\n */\nconst debounce = function (func, wait, immediate, context = window$1) {\n  let timeout;\n  const cancel = () => {\n    context.clearTimeout(timeout);\n    timeout = null;\n  };\n\n  /* eslint-disable consistent-this */\n  const debounced = function () {\n    const self = this;\n    const args = arguments;\n    let later = function () {\n      timeout = null;\n      later = null;\n      if (!immediate) {\n        func.apply(self, args);\n      }\n    };\n    if (!timeout && immediate) {\n      func.apply(self, args);\n    }\n    context.clearTimeout(timeout);\n    timeout = context.setTimeout(later, wait);\n  };\n  /* eslint-enable consistent-this */\n\n  debounced.cancel = cancel;\n  return debounced;\n};\n\nvar Fn = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  UPDATE_REFRESH_INTERVAL: UPDATE_REFRESH_INTERVAL,\n  bind_: bind_,\n  throttle: throttle,\n  debounce: debounce\n});\n\n/**\n * @file src/js/event-target.js\n */\nlet EVENT_MAP;\n\n/**\n * `EventTarget` is a class that can have the same API as the DOM `EventTarget`. It\n * adds shorthand functions that wrap around lengthy functions. For example:\n * the `on` function is a wrapper around `addEventListener`.\n *\n * @see [EventTarget Spec]{@link https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-EventTarget}\n * @class EventTarget\n */\nclass EventTarget$2 {\n  /**\n   * Adds an `event listener` to an instance of an `EventTarget`. An `event listener` is a\n   * function that will get called when an event with a certain name gets triggered.\n   *\n   * @param {string|string[]} type\n   *        An event name or an array of event names.\n   *\n   * @param {Function} fn\n   *        The function to call with `EventTarget`s\n   */\n  on(type, fn) {\n    // Remove the addEventListener alias before calling Events.on\n    // so we don't get into an infinite type loop\n    const ael = this.addEventListener;\n    this.addEventListener = () => {};\n    on(this, type, fn);\n    this.addEventListener = ael;\n  }\n  /**\n   * Removes an `event listener` for a specific event from an instance of `EventTarget`.\n   * This makes it so that the `event listener` will no longer get called when the\n   * named event happens.\n   *\n   * @param {string|string[]} type\n   *        An event name or an array of event names.\n   *\n   * @param {Function} fn\n   *        The function to remove.\n   */\n  off(type, fn) {\n    off(this, type, fn);\n  }\n  /**\n   * This function will add an `event listener` that gets triggered only once. After the\n   * first trigger it will get removed. This is like adding an `event listener`\n   * with {@link EventTarget#on} that calls {@link EventTarget#off} on itself.\n   *\n   * @param {string|string[]} type\n   *        An event name or an array of event names.\n   *\n   * @param {Function} fn\n   *        The function to be called once for each event name.\n   */\n  one(type, fn) {\n    // Remove the addEventListener aliasing Events.on\n    // so we don't get into an infinite type loop\n    const ael = this.addEventListener;\n    this.addEventListener = () => {};\n    one(this, type, fn);\n    this.addEventListener = ael;\n  }\n  /**\n   * This function will add an `event listener` that gets triggered only once and is\n   * removed from all events. This is like adding an array of `event listener`s\n   * with {@link EventTarget#on} that calls {@link EventTarget#off} on all events the\n   * first time it is triggered.\n   *\n   * @param {string|string[]} type\n   *        An event name or an array of event names.\n   *\n   * @param {Function} fn\n   *        The function to be called once for each event name.\n   */\n  any(type, fn) {\n    // Remove the addEventListener aliasing Events.on\n    // so we don't get into an infinite type loop\n    const ael = this.addEventListener;\n    this.addEventListener = () => {};\n    any(this, type, fn);\n    this.addEventListener = ael;\n  }\n  /**\n   * This function causes an event to happen. This will then cause any `event listeners`\n   * that are waiting for that event, to get called. If there are no `event listeners`\n   * for an event then nothing will happen.\n   *\n   * If the name of the `Event` that is being triggered is in `EventTarget.allowedEvents_`.\n   * Trigger will also call the `on` + `uppercaseEventName` function.\n   *\n   * Example:\n   * 'click' is in `EventTarget.allowedEvents_`, so, trigger will attempt to call\n   * `onClick` if it exists.\n   *\n   * @param {string|EventTarget~Event|Object} event\n   *        The name of the event, an `Event`, or an object with a key of type set to\n   *        an event name.\n   */\n  trigger(event) {\n    const type = event.type || event;\n\n    // deprecation\n    // In a future version we should default target to `this`\n    // similar to how we default the target to `elem` in\n    // `Events.trigger`. Right now the default `target` will be\n    // `document` due to the `Event.fixEvent` call.\n    if (typeof event === 'string') {\n      event = {\n        type\n      };\n    }\n    event = fixEvent(event);\n    if (this.allowedEvents_[type] && this['on' + type]) {\n      this['on' + type](event);\n    }\n    trigger(this, event);\n  }\n  queueTrigger(event) {\n    // only set up EVENT_MAP if it'll be used\n    if (!EVENT_MAP) {\n      EVENT_MAP = new Map();\n    }\n    const type = event.type || event;\n    let map = EVENT_MAP.get(this);\n    if (!map) {\n      map = new Map();\n      EVENT_MAP.set(this, map);\n    }\n    const oldTimeout = map.get(type);\n    map.delete(type);\n    window$1.clearTimeout(oldTimeout);\n    const timeout = window$1.setTimeout(() => {\n      map.delete(type);\n      // if we cleared out all timeouts for the current target, delete its map\n      if (map.size === 0) {\n        map = null;\n        EVENT_MAP.delete(this);\n      }\n      this.trigger(event);\n    }, 0);\n    map.set(type, timeout);\n  }\n}\n\n/**\n * A Custom DOM event.\n *\n * @typedef {CustomEvent} Event\n * @see [Properties]{@link https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent}\n */\n\n/**\n * All event listeners should follow the following format.\n *\n * @callback EventTarget~EventListener\n * @this {EventTarget}\n *\n * @param {Event} event\n *        the event that triggered this function\n *\n * @param {Object} [hash]\n *        hash of data sent during the event\n */\n\n/**\n * An object containing event names as keys and booleans as values.\n *\n * > NOTE: If an event name is set to a true value here {@link EventTarget#trigger}\n *         will have extra functionality. See that function for more information.\n *\n * @property EventTarget.prototype.allowedEvents_\n * @private\n */\nEventTarget$2.prototype.allowedEvents_ = {};\n\n/**\n * An alias of {@link EventTarget#on}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#on}\n */\nEventTarget$2.prototype.addEventListener = EventTarget$2.prototype.on;\n\n/**\n * An alias of {@link EventTarget#off}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#off}\n */\nEventTarget$2.prototype.removeEventListener = EventTarget$2.prototype.off;\n\n/**\n * An alias of {@link EventTarget#trigger}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#trigger}\n */\nEventTarget$2.prototype.dispatchEvent = EventTarget$2.prototype.trigger;\n\n/**\n * @file mixins/evented.js\n * @module evented\n */\nconst objName = obj => {\n  if (typeof obj.name === 'function') {\n    return obj.name();\n  }\n  if (typeof obj.name === 'string') {\n    return obj.name;\n  }\n  if (obj.name_) {\n    return obj.name_;\n  }\n  if (obj.constructor && obj.constructor.name) {\n    return obj.constructor.name;\n  }\n  return typeof obj;\n};\n\n/**\n * Returns whether or not an object has had the evented mixin applied.\n *\n * @param  {Object} object\n *         An object to test.\n *\n * @return {boolean}\n *         Whether or not the object appears to be evented.\n */\nconst isEvented = object => object instanceof EventTarget$2 || !!object.eventBusEl_ && ['on', 'one', 'off', 'trigger'].every(k => typeof object[k] === 'function');\n\n/**\n * Adds a callback to run after the evented mixin applied.\n *\n * @param  {Object} object\n *         An object to Add\n * @param  {Function} callback\n *         The callback to run.\n */\nconst addEventedCallback = (target, callback) => {\n  if (isEvented(target)) {\n    callback();\n  } else {\n    if (!target.eventedCallbacks) {\n      target.eventedCallbacks = [];\n    }\n    target.eventedCallbacks.push(callback);\n  }\n};\n\n/**\n * Whether a value is a valid event type - non-empty string or array.\n *\n * @private\n * @param  {string|Array} type\n *         The type value to test.\n *\n * @return {boolean}\n *         Whether or not the type is a valid event type.\n */\nconst isValidEventType = type =>\n// The regex here verifies that the `type` contains at least one non-\n// whitespace character.\ntypeof type === 'string' && /\\S/.test(type) || Array.isArray(type) && !!type.length;\n\n/**\n * Validates a value to determine if it is a valid event target. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the target does not appear to be a valid event target.\n *\n * @param  {Object} target\n *         The object to test.\n *\n * @param  {Object} obj\n *         The evented object we are validating for\n *\n * @param  {string} fnName\n *         The name of the evented mixin function that called this.\n */\nconst validateTarget = (target, obj, fnName) => {\n  if (!target || !target.nodeName && !isEvented(target)) {\n    throw new Error(`Invalid target for ${objName(obj)}#${fnName}; must be a DOM node or evented object.`);\n  }\n};\n\n/**\n * Validates a value to determine if it is a valid event target. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the type does not appear to be a valid event type.\n *\n * @param  {string|Array} type\n *         The type to test.\n *\n * @param  {Object} obj\n*         The evented object we are validating for\n *\n * @param  {string} fnName\n *         The name of the evented mixin function that called this.\n */\nconst validateEventType = (type, obj, fnName) => {\n  if (!isValidEventType(type)) {\n    throw new Error(`Invalid event type for ${objName(obj)}#${fnName}; must be a non-empty string or array.`);\n  }\n};\n\n/**\n * Validates a value to determine if it is a valid listener. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the listener is not a function.\n *\n * @param  {Function} listener\n *         The listener to test.\n *\n * @param  {Object} obj\n *         The evented object we are validating for\n *\n * @param  {string} fnName\n *         The name of the evented mixin function that called this.\n */\nconst validateListener = (listener, obj, fnName) => {\n  if (typeof listener !== 'function') {\n    throw new Error(`Invalid listener for ${objName(obj)}#${fnName}; must be a function.`);\n  }\n};\n\n/**\n * Takes an array of arguments given to `on()` or `one()`, validates them, and\n * normalizes them into an object.\n *\n * @private\n * @param  {Object} self\n *         The evented object on which `on()` or `one()` was called. This\n *         object will be bound as the `this` value for the listener.\n *\n * @param  {Array} args\n *         An array of arguments passed to `on()` or `one()`.\n *\n * @param  {string} fnName\n *         The name of the evented mixin function that called this.\n *\n * @return {Object}\n *         An object containing useful values for `on()` or `one()` calls.\n */\nconst normalizeListenArgs = (self, args, fnName) => {\n  // If the number of arguments is less than 3, the target is always the\n  // evented object itself.\n  const isTargetingSelf = args.length < 3 || args[0] === self || args[0] === self.eventBusEl_;\n  let target;\n  let type;\n  let listener;\n  if (isTargetingSelf) {\n    target = self.eventBusEl_;\n\n    // Deal with cases where we got 3 arguments, but we are still listening to\n    // the evented object itself.\n    if (args.length >= 3) {\n      args.shift();\n    }\n    [type, listener] = args;\n  } else {\n    [target, type, listener] = args;\n  }\n  validateTarget(target, self, fnName);\n  validateEventType(type, self, fnName);\n  validateListener(listener, self, fnName);\n  listener = bind_(self, listener);\n  return {\n    isTargetingSelf,\n    target,\n    type,\n    listener\n  };\n};\n\n/**\n * Adds the listener to the event type(s) on the target, normalizing for\n * the type of target.\n *\n * @private\n * @param  {Element|Object} target\n *         A DOM node or evented object.\n *\n * @param  {string} method\n *         The event binding method to use (\"on\" or \"one\").\n *\n * @param  {string|Array} type\n *         One or more event type(s).\n *\n * @param  {Function} listener\n *         A listener function.\n */\nconst listen = (target, method, type, listener) => {\n  validateTarget(target, target, method);\n  if (target.nodeName) {\n    Events[method](target, type, listener);\n  } else {\n    target[method](type, listener);\n  }\n};\n\n/**\n * Contains methods that provide event capabilities to an object which is passed\n * to {@link module:evented|evented}.\n *\n * @mixin EventedMixin\n */\nconst EventedMixin = {\n  /**\n   * Add a listener to an event (or events) on this object or another evented\n   * object.\n   *\n   * @param  {string|Array|Element|Object} targetOrType\n   *         If this is a string or array, it represents the event type(s)\n   *         that will trigger the listener.\n   *\n   *         Another evented object can be passed here instead, which will\n   *         cause the listener to listen for events on _that_ object.\n   *\n   *         In either case, the listener's `this` value will be bound to\n   *         this object.\n   *\n   * @param  {string|Array|Function} typeOrListener\n   *         If the first argument was a string or array, this should be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function.\n   */\n  on(...args) {\n    const {\n      isTargetingSelf,\n      target,\n      type,\n      listener\n    } = normalizeListenArgs(this, args, 'on');\n    listen(target, 'on', type, listener);\n\n    // If this object is listening to another evented object.\n    if (!isTargetingSelf) {\n      // If this object is disposed, remove the listener.\n      const removeListenerOnDispose = () => this.off(target, type, listener);\n\n      // Use the same function ID as the listener so we can remove it later it\n      // using the ID of the original listener.\n      removeListenerOnDispose.guid = listener.guid;\n\n      // Add a listener to the target's dispose event as well. This ensures\n      // that if the target is disposed BEFORE this object, we remove the\n      // removal listener that was just added. Otherwise, we create a memory leak.\n      const removeRemoverOnTargetDispose = () => this.off('dispose', removeListenerOnDispose);\n\n      // Use the same function ID as the listener so we can remove it later\n      // it using the ID of the original listener.\n      removeRemoverOnTargetDispose.guid = listener.guid;\n      listen(this, 'on', 'dispose', removeListenerOnDispose);\n      listen(target, 'on', 'dispose', removeRemoverOnTargetDispose);\n    }\n  },\n  /**\n   * Add a listener to an event (or events) on this object or another evented\n   * object. The listener will be called once per event and then removed.\n   *\n   * @param  {string|Array|Element|Object} targetOrType\n   *         If this is a string or array, it represents the event type(s)\n   *         that will trigger the listener.\n   *\n   *         Another evented object can be passed here instead, which will\n   *         cause the listener to listen for events on _that_ object.\n   *\n   *         In either case, the listener's `this` value will be bound to\n   *         this object.\n   *\n   * @param  {string|Array|Function} typeOrListener\n   *         If the first argument was a string or array, this should be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function.\n   */\n  one(...args) {\n    const {\n      isTargetingSelf,\n      target,\n      type,\n      listener\n    } = normalizeListenArgs(this, args, 'one');\n\n    // Targeting this evented object.\n    if (isTargetingSelf) {\n      listen(target, 'one', type, listener);\n\n      // Targeting another evented object.\n    } else {\n      // TODO: This wrapper is incorrect! It should only\n      //       remove the wrapper for the event type that called it.\n      //       Instead all listeners are removed on the first trigger!\n      //       see https://github.com/videojs/video.js/issues/5962\n      const wrapper = (...largs) => {\n        this.off(target, type, wrapper);\n        listener.apply(null, largs);\n      };\n\n      // Use the same function ID as the listener so we can remove it later\n      // it using the ID of the original listener.\n      wrapper.guid = listener.guid;\n      listen(target, 'one', type, wrapper);\n    }\n  },\n  /**\n   * Add a listener to an event (or events) on this object or another evented\n   * object. The listener will only be called once for the first event that is triggered\n   * then removed.\n   *\n   * @param  {string|Array|Element|Object} targetOrType\n   *         If this is a string or array, it represents the event type(s)\n   *         that will trigger the listener.\n   *\n   *         Another evented object can be passed here instead, which will\n   *         cause the listener to listen for events on _that_ object.\n   *\n   *         In either case, the listener's `this` value will be bound to\n   *         this object.\n   *\n   * @param  {string|Array|Function} typeOrListener\n   *         If the first argument was a string or array, this should be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function.\n   */\n  any(...args) {\n    const {\n      isTargetingSelf,\n      target,\n      type,\n      listener\n    } = normalizeListenArgs(this, args, 'any');\n\n    // Targeting this evented object.\n    if (isTargetingSelf) {\n      listen(target, 'any', type, listener);\n\n      // Targeting another evented object.\n    } else {\n      const wrapper = (...largs) => {\n        this.off(target, type, wrapper);\n        listener.apply(null, largs);\n      };\n\n      // Use the same function ID as the listener so we can remove it later\n      // it using the ID of the original listener.\n      wrapper.guid = listener.guid;\n      listen(target, 'any', type, wrapper);\n    }\n  },\n  /**\n   * Removes listener(s) from event(s) on an evented object.\n   *\n   * @param  {string|Array|Element|Object} [targetOrType]\n   *         If this is a string or array, it represents the event type(s).\n   *\n   *         Another evented object can be passed here instead, in which case\n   *         ALL 3 arguments are _required_.\n   *\n   * @param  {string|Array|Function} [typeOrListener]\n   *         If the first argument was a string or array, this may be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function; otherwise, _all_ listeners bound to the\n   *         event type(s) will be removed.\n   */\n  off(targetOrType, typeOrListener, listener) {\n    // Targeting this evented object.\n    if (!targetOrType || isValidEventType(targetOrType)) {\n      off(this.eventBusEl_, targetOrType, typeOrListener);\n\n      // Targeting another evented object.\n    } else {\n      const target = targetOrType;\n      const type = typeOrListener;\n\n      // Fail fast and in a meaningful way!\n      validateTarget(target, this, 'off');\n      validateEventType(type, this, 'off');\n      validateListener(listener, this, 'off');\n\n      // Ensure there's at least a guid, even if the function hasn't been used\n      listener = bind_(this, listener);\n\n      // Remove the dispose listener on this evented object, which was given\n      // the same guid as the event listener in on().\n      this.off('dispose', listener);\n      if (target.nodeName) {\n        off(target, type, listener);\n        off(target, 'dispose', listener);\n      } else if (isEvented(target)) {\n        target.off(type, listener);\n        target.off('dispose', listener);\n      }\n    }\n  },\n  /**\n   * Fire an event on this evented object, causing its listeners to be called.\n   *\n   * @param   {string|Object} event\n   *          An event type or an object with a type property.\n   *\n   * @param   {Object} [hash]\n   *          An additional object to pass along to listeners.\n   *\n   * @return {boolean}\n   *          Whether or not the default behavior was prevented.\n   */\n  trigger(event, hash) {\n    validateTarget(this.eventBusEl_, this, 'trigger');\n    const type = event && typeof event !== 'string' ? event.type : event;\n    if (!isValidEventType(type)) {\n      throw new Error(`Invalid event type for ${objName(this)}#trigger; ` + 'must be a non-empty string or object with a type key that has a non-empty value.');\n    }\n    return trigger(this.eventBusEl_, event, hash);\n  }\n};\n\n/**\n * Applies {@link module:evented~EventedMixin|EventedMixin} to a target object.\n *\n * @param  {Object} target\n *         The object to which to add event methods.\n *\n * @param  {Object} [options={}]\n *         Options for customizing the mixin behavior.\n *\n * @param  {string} [options.eventBusKey]\n *         By default, adds a `eventBusEl_` DOM element to the target object,\n *         which is used as an event bus. If the target object already has a\n *         DOM element that should be used, pass its key here.\n *\n * @return {Object}\n *         The target object.\n */\nfunction evented(target, options = {}) {\n  const {\n    eventBusKey\n  } = options;\n\n  // Set or create the eventBusEl_.\n  if (eventBusKey) {\n    if (!target[eventBusKey].nodeName) {\n      throw new Error(`The eventBusKey \"${eventBusKey}\" does not refer to an element.`);\n    }\n    target.eventBusEl_ = target[eventBusKey];\n  } else {\n    target.eventBusEl_ = createEl('span', {\n      className: 'vjs-event-bus'\n    });\n  }\n  Object.assign(target, EventedMixin);\n  if (target.eventedCallbacks) {\n    target.eventedCallbacks.forEach(callback => {\n      callback();\n    });\n  }\n\n  // When any evented object is disposed, it removes all its listeners.\n  target.on('dispose', () => {\n    target.off();\n    [target, target.el_, target.eventBusEl_].forEach(function (val) {\n      if (val && DomData.has(val)) {\n        DomData.delete(val);\n      }\n    });\n    window$1.setTimeout(() => {\n      target.eventBusEl_ = null;\n    }, 0);\n  });\n  return target;\n}\n\n/**\n * @file mixins/stateful.js\n * @module stateful\n */\n\n/**\n * Contains methods that provide statefulness to an object which is passed\n * to {@link module:stateful}.\n *\n * @mixin StatefulMixin\n */\nconst StatefulMixin = {\n  /**\n   * A hash containing arbitrary keys and values representing the state of\n   * the object.\n   *\n   * @type {Object}\n   */\n  state: {},\n  /**\n   * Set the state of an object by mutating its\n   * {@link module:stateful~StatefulMixin.state|state} object in place.\n   *\n   * @fires   module:stateful~StatefulMixin#statechanged\n   * @param   {Object|Function} stateUpdates\n   *          A new set of properties to shallow-merge into the plugin state.\n   *          Can be a plain object or a function returning a plain object.\n   *\n   * @return {Object|undefined}\n   *          An object containing changes that occurred. If no changes\n   *          occurred, returns `undefined`.\n   */\n  setState(stateUpdates) {\n    // Support providing the `stateUpdates` state as a function.\n    if (typeof stateUpdates === 'function') {\n      stateUpdates = stateUpdates();\n    }\n    let changes;\n    each(stateUpdates, (value, key) => {\n      // Record the change if the value is different from what's in the\n      // current state.\n      if (this.state[key] !== value) {\n        changes = changes || {};\n        changes[key] = {\n          from: this.state[key],\n          to: value\n        };\n      }\n      this.state[key] = value;\n    });\n\n    // Only trigger \"statechange\" if there were changes AND we have a trigger\n    // function. This allows us to not require that the target object be an\n    // evented object.\n    if (changes && isEvented(this)) {\n      /**\n       * An event triggered on an object that is both\n       * {@link module:stateful|stateful} and {@link module:evented|evented}\n       * indicating that its state has changed.\n       *\n       * @event    module:stateful~StatefulMixin#statechanged\n       * @type     {Object}\n       * @property {Object} changes\n       *           A hash containing the properties that were changed and\n       *           the values they were changed `from` and `to`.\n       */\n      this.trigger({\n        changes,\n        type: 'statechanged'\n      });\n    }\n    return changes;\n  }\n};\n\n/**\n * Applies {@link module:stateful~StatefulMixin|StatefulMixin} to a target\n * object.\n *\n * If the target object is {@link module:evented|evented} and has a\n * `handleStateChanged` method, that method will be automatically bound to the\n * `statechanged` event on itself.\n *\n * @param   {Object} target\n *          The object to be made stateful.\n *\n * @param   {Object} [defaultState]\n *          A default set of properties to populate the newly-stateful object's\n *          `state` property.\n *\n * @return {Object}\n *          Returns the `target`.\n */\nfunction stateful(target, defaultState) {\n  Object.assign(target, StatefulMixin);\n\n  // This happens after the mixing-in because we need to replace the `state`\n  // added in that step.\n  target.state = Object.assign({}, target.state, defaultState);\n\n  // Auto-bind the `handleStateChanged` method of the target object if it exists.\n  if (typeof target.handleStateChanged === 'function' && isEvented(target)) {\n    target.on('statechanged', target.handleStateChanged);\n  }\n  return target;\n}\n\n/**\n * @file str.js\n * @module to-lower-case\n */\n\n/**\n * Lowercase the first letter of a string.\n *\n * @param {string} string\n *        String to be lowercased\n *\n * @return {string}\n *         The string with a lowercased first letter\n */\nconst toLowerCase = function (string) {\n  if (typeof string !== 'string') {\n    return string;\n  }\n  return string.replace(/./, w => w.toLowerCase());\n};\n\n/**\n * Uppercase the first letter of a string.\n *\n * @param {string} string\n *        String to be uppercased\n *\n * @return {string}\n *         The string with an uppercased first letter\n */\nconst toTitleCase$1 = function (string) {\n  if (typeof string !== 'string') {\n    return string;\n  }\n  return string.replace(/./, w => w.toUpperCase());\n};\n\n/**\n * Compares the TitleCase versions of the two strings for equality.\n *\n * @param {string} str1\n *        The first string to compare\n *\n * @param {string} str2\n *        The second string to compare\n *\n * @return {boolean}\n *         Whether the TitleCase versions of the strings are equal\n */\nconst titleCaseEquals = function (str1, str2) {\n  return toTitleCase$1(str1) === toTitleCase$1(str2);\n};\n\nvar Str = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  toLowerCase: toLowerCase,\n  toTitleCase: toTitleCase$1,\n  titleCaseEquals: titleCaseEquals\n});\n\n/**\n * Player Component - Base class for all UI objects\n *\n * @file component.js\n */\n\n/**\n * Base class for all UI Components.\n * Components are UI objects which represent both a javascript object and an element\n * in the DOM. They can be children of other components, and can have\n * children themselves.\n *\n * Components can also use methods from {@link EventTarget}\n */\nclass Component$1 {\n  /**\n   * A callback that is called when a component is ready. Does not have any\n   * parameters and any callback value will be ignored.\n   *\n   * @callback ReadyCallback\n   * @this Component\n   */\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('./player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of component options.\n   *\n   * @param {Object[]} [options.children]\n   *        An array of children objects to initialize this component with. Children objects have\n   *        a name property that will be used if more than one component of the same type needs to be\n   *        added.\n   *\n   * @param  {string} [options.className]\n   *         A class or space separated list of classes to add the component\n   *\n   * @param {ReadyCallback} [ready]\n   *        Function that gets called when the `Component` is ready.\n   */\n  constructor(player, options, ready) {\n    // The component might be the player itself and we can't pass `this` to super\n    if (!player && this.play) {\n      this.player_ = player = this; // eslint-disable-line\n    } else {\n      this.player_ = player;\n    }\n    this.isDisposed_ = false;\n\n    // Hold the reference to the parent component via `addChild` method\n    this.parentComponent_ = null;\n\n    // Make a copy of prototype.options_ to protect against overriding defaults\n    this.options_ = merge$1({}, this.options_);\n\n    // Updated options with supplied options\n    options = this.options_ = merge$1(this.options_, options);\n\n    // Get ID from options or options element if one is supplied\n    this.id_ = options.id || options.el && options.el.id;\n\n    // If there was no ID from the options, generate one\n    if (!this.id_) {\n      // Don't require the player ID function in the case of mock players\n      const id = player && player.id && player.id() || 'no_player';\n      this.id_ = `${id}_component_${newGUID()}`;\n    }\n    this.name_ = options.name || null;\n\n    // Create element if one wasn't provided in options\n    if (options.el) {\n      this.el_ = options.el;\n    } else if (options.createEl !== false) {\n      this.el_ = this.createEl();\n    }\n    if (options.className && this.el_) {\n      options.className.split(' ').forEach(c => this.addClass(c));\n    }\n\n    // Remove the placeholder event methods. If the component is evented, the\n    // real methods are added next\n    ['on', 'off', 'one', 'any', 'trigger'].forEach(fn => {\n      this[fn] = undefined;\n    });\n\n    // if evented is anything except false, we want to mixin in evented\n    if (options.evented !== false) {\n      // Make this an evented object and use `el_`, if available, as its event bus\n      evented(this, {\n        eventBusKey: this.el_ ? 'el_' : null\n      });\n      this.handleLanguagechange = this.handleLanguagechange.bind(this);\n      this.on(this.player_, 'languagechange', this.handleLanguagechange);\n    }\n    stateful(this, this.constructor.defaultState);\n    this.children_ = [];\n    this.childIndex_ = {};\n    this.childNameIndex_ = {};\n    this.setTimeoutIds_ = new Set();\n    this.setIntervalIds_ = new Set();\n    this.rafIds_ = new Set();\n    this.namedRafs_ = new Map();\n    this.clearingTimersOnDispose_ = false;\n\n    // Add any child components in options\n    if (options.initChildren !== false) {\n      this.initChildren();\n    }\n\n    // Don't want to trigger ready here or it will go before init is actually\n    // finished for all children that run this constructor\n    this.ready(ready);\n    if (options.reportTouchActivity !== false) {\n      this.enableTouchActivity();\n    }\n  }\n\n  // `on`, `off`, `one`, `any` and `trigger` are here so tsc includes them in definitions.\n  // They are replaced or removed in the constructor\n\n  /**\n   * Adds an `event listener` to an instance of an `EventTarget`. An `event listener` is a\n   * function that will get called when an event with a certain name gets triggered.\n   *\n   * @param {string|string[]} type\n   *        An event name or an array of event names.\n   *\n   * @param {Function} fn\n   *        The function to call with `EventTarget`s\n   */\n  on(type, fn) {}\n\n  /**\n   * Removes an `event listener` for a specific event from an instance of `EventTarget`.\n   * This makes it so that the `event listener` will no longer get called when the\n   * named event happens.\n   *\n   * @param {string|string[]} type\n   *        An event name or an array of event names.\n   *\n   * @param {Function} fn\n   *        The function to remove.\n   */\n  off(type, fn) {}\n\n  /**\n   * This function will add an `event listener` that gets triggered only once. After the\n   * first trigger it will get removed. This is like adding an `event listener`\n   * with {@link EventTarget#on} that calls {@link EventTarget#off} on itself.\n   *\n   * @param {string|string[]} type\n   *        An event name or an array of event names.\n   *\n   * @param {Function} fn\n   *        The function to be called once for each event name.\n   */\n  one(type, fn) {}\n\n  /**\n   * This function will add an `event listener` that gets triggered only once and is\n   * removed from all events. This is like adding an array of `event listener`s\n   * with {@link EventTarget#on} that calls {@link EventTarget#off} on all events the\n   * first time it is triggered.\n   *\n   * @param {string|string[]} type\n   *        An event name or an array of event names.\n   *\n   * @param {Function} fn\n   *        The function to be called once for each event name.\n   */\n  any(type, fn) {}\n\n  /**\n   * This function causes an event to happen. This will then cause any `event listeners`\n   * that are waiting for that event, to get called. If there are no `event listeners`\n   * for an event then nothing will happen.\n   *\n   * If the name of the `Event` that is being triggered is in `EventTarget.allowedEvents_`.\n   * Trigger will also call the `on` + `uppercaseEventName` function.\n   *\n   * Example:\n   * 'click' is in `EventTarget.allowedEvents_`, so, trigger will attempt to call\n   * `onClick` if it exists.\n   *\n   * @param {string|Event|Object} event\n   *        The name of the event, an `Event`, or an object with a key of type set to\n   *        an event name.\n   */\n  trigger(event) {}\n\n  /**\n   * Dispose of the `Component` and all child components.\n   *\n   * @fires Component#dispose\n   *\n   * @param {Object} options\n   * @param {Element} options.originalEl element with which to replace player element\n   */\n  dispose(options = {}) {\n    // Bail out if the component has already been disposed.\n    if (this.isDisposed_) {\n      return;\n    }\n    if (this.readyQueue_) {\n      this.readyQueue_.length = 0;\n    }\n\n    /**\n     * Triggered when a `Component` is disposed.\n     *\n     * @event Component#dispose\n     * @type {Event}\n     *\n     * @property {boolean} [bubbles=false]\n     *           set to false so that the dispose event does not\n     *           bubble up\n     */\n    this.trigger({\n      type: 'dispose',\n      bubbles: false\n    });\n    this.isDisposed_ = true;\n\n    // Dispose all children.\n    if (this.children_) {\n      for (let i = this.children_.length - 1; i >= 0; i--) {\n        if (this.children_[i].dispose) {\n          this.children_[i].dispose();\n        }\n      }\n    }\n\n    // Delete child references\n    this.children_ = null;\n    this.childIndex_ = null;\n    this.childNameIndex_ = null;\n    this.parentComponent_ = null;\n    if (this.el_) {\n      // Remove element from DOM\n      if (this.el_.parentNode) {\n        if (options.restoreEl) {\n          this.el_.parentNode.replaceChild(options.restoreEl, this.el_);\n        } else {\n          this.el_.parentNode.removeChild(this.el_);\n        }\n      }\n      this.el_ = null;\n    }\n\n    // remove reference to the player after disposing of the element\n    this.player_ = null;\n  }\n\n  /**\n   * Determine whether or not this component has been disposed.\n   *\n   * @return {boolean}\n   *         If the component has been disposed, will be `true`. Otherwise, `false`.\n   */\n  isDisposed() {\n    return Boolean(this.isDisposed_);\n  }\n\n  /**\n   * Return the {@link Player} that the `Component` has attached to.\n   *\n   * @return { import('./player').default }\n   *         The player that this `Component` has attached to.\n   */\n  player() {\n    return this.player_;\n  }\n\n  /**\n   * Deep merge of options objects with new options.\n   * > Note: When both `obj` and `options` contain properties whose values are objects.\n   *         The two properties get merged using {@link module:obj.merge}\n   *\n   * @param {Object} obj\n   *        The object that contains new options.\n   *\n   * @return {Object}\n   *         A new object of `this.options_` and `obj` merged together.\n   */\n  options(obj) {\n    if (!obj) {\n      return this.options_;\n    }\n    this.options_ = merge$1(this.options_, obj);\n    return this.options_;\n  }\n\n  /**\n   * Get the `Component`s DOM element\n   *\n   * @return {Element}\n   *         The DOM element for this `Component`.\n   */\n  el() {\n    return this.el_;\n  }\n\n  /**\n   * Create the `Component`s DOM element.\n   *\n   * @param {string} [tagName]\n   *        Element's DOM node type. e.g. 'div'\n   *\n   * @param {Object} [properties]\n   *        An object of properties that should be set.\n   *\n   * @param {Object} [attributes]\n   *        An object of attributes that should be set.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  createEl(tagName, properties, attributes) {\n    return createEl(tagName, properties, attributes);\n  }\n\n  /**\n   * Localize a string given the string in english.\n   *\n   * If tokens are provided, it'll try and run a simple token replacement on the provided string.\n   * The tokens it looks for look like `{1}` with the index being 1-indexed into the tokens array.\n   *\n   * If a `defaultValue` is provided, it'll use that over `string`,\n   * if a value isn't found in provided language files.\n   * This is useful if you want to have a descriptive key for token replacement\n   * but have a succinct localized string and not require `en.json` to be included.\n   *\n   * Currently, it is used for the progress bar timing.\n   * ```js\n   * {\n   *   \"progress bar timing: currentTime={1} duration={2}\": \"{1} of {2}\"\n   * }\n   * ```\n   * It is then used like so:\n   * ```js\n   * this.localize('progress bar timing: currentTime={1} duration{2}',\n   *               [this.player_.currentTime(), this.player_.duration()],\n   *               '{1} of {2}');\n   * ```\n   *\n   * Which outputs something like: `01:23 of 24:56`.\n   *\n   *\n   * @param {string} string\n   *        The string to localize and the key to lookup in the language files.\n   * @param {string[]} [tokens]\n   *        If the current item has token replacements, provide the tokens here.\n   * @param {string} [defaultValue]\n   *        Defaults to `string`. Can be a default value to use for token replacement\n   *        if the lookup key is needed to be separate.\n   *\n   * @return {string}\n   *         The localized string or if no localization exists the english string.\n   */\n  localize(string, tokens, defaultValue = string) {\n    const code = this.player_.language && this.player_.language();\n    const languages = this.player_.languages && this.player_.languages();\n    const language = languages && languages[code];\n    const primaryCode = code && code.split('-')[0];\n    const primaryLang = languages && languages[primaryCode];\n    let localizedString = defaultValue;\n    if (language && language[string]) {\n      localizedString = language[string];\n    } else if (primaryLang && primaryLang[string]) {\n      localizedString = primaryLang[string];\n    }\n    if (tokens) {\n      localizedString = localizedString.replace(/\\{(\\d+)\\}/g, function (match, index) {\n        const value = tokens[index - 1];\n        let ret = value;\n        if (typeof value === 'undefined') {\n          ret = match;\n        }\n        return ret;\n      });\n    }\n    return localizedString;\n  }\n\n  /**\n   * Handles language change for the player in components. Should be overridden by sub-components.\n   *\n   * @abstract\n   */\n  handleLanguagechange() {}\n\n  /**\n   * Return the `Component`s DOM element. This is where children get inserted.\n   * This will usually be the the same as the element returned in {@link Component#el}.\n   *\n   * @return {Element}\n   *         The content element for this `Component`.\n   */\n  contentEl() {\n    return this.contentEl_ || this.el_;\n  }\n\n  /**\n   * Get this `Component`s ID\n   *\n   * @return {string}\n   *         The id of this `Component`\n   */\n  id() {\n    return this.id_;\n  }\n\n  /**\n   * Get the `Component`s name. The name gets used to reference the `Component`\n   * and is set during registration.\n   *\n   * @return {string}\n   *         The name of this `Component`.\n   */\n  name() {\n    return this.name_;\n  }\n\n  /**\n   * Get an array of all child components\n   *\n   * @return {Array}\n   *         The children\n   */\n  children() {\n    return this.children_;\n  }\n\n  /**\n   * Returns the child `Component` with the given `id`.\n   *\n   * @param {string} id\n   *        The id of the child `Component` to get.\n   *\n   * @return {Component|undefined}\n   *         The child `Component` with the given `id` or undefined.\n   */\n  getChildById(id) {\n    return this.childIndex_[id];\n  }\n\n  /**\n   * Returns the child `Component` with the given `name`.\n   *\n   * @param {string} name\n   *        The name of the child `Component` to get.\n   *\n   * @return {Component|undefined}\n   *         The child `Component` with the given `name` or undefined.\n   */\n  getChild(name) {\n    if (!name) {\n      return;\n    }\n    return this.childNameIndex_[name];\n  }\n\n  /**\n   * Returns the descendant `Component` following the givent\n   * descendant `names`. For instance ['foo', 'bar', 'baz'] would\n   * try to get 'foo' on the current component, 'bar' on the 'foo'\n   * component and 'baz' on the 'bar' component and return undefined\n   * if any of those don't exist.\n   *\n   * @param {...string[]|...string} names\n   *        The name of the child `Component` to get.\n   *\n   * @return {Component|undefined}\n   *         The descendant `Component` following the given descendant\n   *         `names` or undefined.\n   */\n  getDescendant(...names) {\n    // flatten array argument into the main array\n    names = names.reduce((acc, n) => acc.concat(n), []);\n    let currentChild = this;\n    for (let i = 0; i < names.length; i++) {\n      currentChild = currentChild.getChild(names[i]);\n      if (!currentChild || !currentChild.getChild) {\n        return;\n      }\n    }\n    return currentChild;\n  }\n\n  /**\n   * Add a child `Component` inside the current `Component`.\n   *\n   *\n   * @param {string|Component} child\n   *        The name or instance of a child to add.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of options that will get passed to children of\n   *        the child.\n   *\n   * @param {number} [index=this.children_.length]\n   *        The index to attempt to add a child into.\n   *\n   * @return {Component}\n   *         The `Component` that gets added as a child. When using a string the\n   *         `Component` will get created by this process.\n   */\n  addChild(child, options = {}, index = this.children_.length) {\n    let component;\n    let componentName;\n\n    // If child is a string, create component with options\n    if (typeof child === 'string') {\n      componentName = toTitleCase$1(child);\n      const componentClassName = options.componentClass || componentName;\n\n      // Set name through options\n      options.name = componentName;\n\n      // Create a new object & element for this controls set\n      // If there's no .player_, this is a player\n      const ComponentClass = Component$1.getComponent(componentClassName);\n      if (!ComponentClass) {\n        throw new Error(`Component ${componentClassName} does not exist`);\n      }\n\n      // data stored directly on the videojs object may be\n      // misidentified as a component to retain\n      // backwards-compatibility with 4.x. check to make sure the\n      // component class can be instantiated.\n      if (typeof ComponentClass !== 'function') {\n        return null;\n      }\n      component = new ComponentClass(this.player_ || this, options);\n\n      // child is a component instance\n    } else {\n      component = child;\n    }\n    if (component.parentComponent_) {\n      component.parentComponent_.removeChild(component);\n    }\n    this.children_.splice(index, 0, component);\n    component.parentComponent_ = this;\n    if (typeof component.id === 'function') {\n      this.childIndex_[component.id()] = component;\n    }\n\n    // If a name wasn't used to create the component, check if we can use the\n    // name function of the component\n    componentName = componentName || component.name && toTitleCase$1(component.name());\n    if (componentName) {\n      this.childNameIndex_[componentName] = component;\n      this.childNameIndex_[toLowerCase(componentName)] = component;\n    }\n\n    // Add the UI object's element to the container div (box)\n    // Having an element is not required\n    if (typeof component.el === 'function' && component.el()) {\n      // If inserting before a component, insert before that component's element\n      let refNode = null;\n      if (this.children_[index + 1]) {\n        // Most children are components, but the video tech is an HTML element\n        if (this.children_[index + 1].el_) {\n          refNode = this.children_[index + 1].el_;\n        } else if (isEl(this.children_[index + 1])) {\n          refNode = this.children_[index + 1];\n        }\n      }\n      this.contentEl().insertBefore(component.el(), refNode);\n    }\n\n    // Return so it can stored on parent object if desired.\n    return component;\n  }\n\n  /**\n   * Remove a child `Component` from this `Component`s list of children. Also removes\n   * the child `Component`s element from this `Component`s element.\n   *\n   * @param {Component} component\n   *        The child `Component` to remove.\n   */\n  removeChild(component) {\n    if (typeof component === 'string') {\n      component = this.getChild(component);\n    }\n    if (!component || !this.children_) {\n      return;\n    }\n    let childFound = false;\n    for (let i = this.children_.length - 1; i >= 0; i--) {\n      if (this.children_[i] === component) {\n        childFound = true;\n        this.children_.splice(i, 1);\n        break;\n      }\n    }\n    if (!childFound) {\n      return;\n    }\n    component.parentComponent_ = null;\n    this.childIndex_[component.id()] = null;\n    this.childNameIndex_[toTitleCase$1(component.name())] = null;\n    this.childNameIndex_[toLowerCase(component.name())] = null;\n    const compEl = component.el();\n    if (compEl && compEl.parentNode === this.contentEl()) {\n      this.contentEl().removeChild(component.el());\n    }\n  }\n\n  /**\n   * Add and initialize default child `Component`s based upon options.\n   */\n  initChildren() {\n    const children = this.options_.children;\n    if (children) {\n      // `this` is `parent`\n      const parentOptions = this.options_;\n      const handleAdd = child => {\n        const name = child.name;\n        let opts = child.opts;\n\n        // Allow options for children to be set at the parent options\n        // e.g. videojs(id, { controlBar: false });\n        // instead of videojs(id, { children: { controlBar: false });\n        if (parentOptions[name] !== undefined) {\n          opts = parentOptions[name];\n        }\n\n        // Allow for disabling default components\n        // e.g. options['children']['posterImage'] = false\n        if (opts === false) {\n          return;\n        }\n\n        // Allow options to be passed as a simple boolean if no configuration\n        // is necessary.\n        if (opts === true) {\n          opts = {};\n        }\n\n        // We also want to pass the original player options\n        // to each component as well so they don't need to\n        // reach back into the player for options later.\n        opts.playerOptions = this.options_.playerOptions;\n\n        // Create and add the child component.\n        // Add a direct reference to the child by name on the parent instance.\n        // If two of the same component are used, different names should be supplied\n        // for each\n        const newChild = this.addChild(name, opts);\n        if (newChild) {\n          this[name] = newChild;\n        }\n      };\n\n      // Allow for an array of children details to passed in the options\n      let workingChildren;\n      const Tech = Component$1.getComponent('Tech');\n      if (Array.isArray(children)) {\n        workingChildren = children;\n      } else {\n        workingChildren = Object.keys(children);\n      }\n      workingChildren\n      // children that are in this.options_ but also in workingChildren  would\n      // give us extra children we do not want. So, we want to filter them out.\n      .concat(Object.keys(this.options_).filter(function (child) {\n        return !workingChildren.some(function (wchild) {\n          if (typeof wchild === 'string') {\n            return child === wchild;\n          }\n          return child === wchild.name;\n        });\n      })).map(child => {\n        let name;\n        let opts;\n        if (typeof child === 'string') {\n          name = child;\n          opts = children[name] || this.options_[name] || {};\n        } else {\n          name = child.name;\n          opts = child;\n        }\n        return {\n          name,\n          opts\n        };\n      }).filter(child => {\n        // we have to make sure that child.name isn't in the techOrder since\n        // techs are registered as Components but can't aren't compatible\n        // See https://github.com/videojs/video.js/issues/2772\n        const c = Component$1.getComponent(child.opts.componentClass || toTitleCase$1(child.name));\n        return c && !Tech.isTech(c);\n      }).forEach(handleAdd);\n    }\n  }\n\n  /**\n   * Builds the default DOM class name. Should be overridden by sub-components.\n   *\n   * @return {string}\n   *         The DOM class name for this object.\n   *\n   * @abstract\n   */\n  buildCSSClass() {\n    // Child classes can include a function that does:\n    // return 'CLASS NAME' + this._super();\n    return '';\n  }\n\n  /**\n   * Bind a listener to the component's ready state.\n   * Different from event listeners in that if the ready event has already happened\n   * it will trigger the function immediately.\n   *\n   * @param {ReadyCallback} fn\n   *        Function that gets called when the `Component` is ready.\n   *\n   * @return {Component}\n   *         Returns itself; method can be chained.\n   */\n  ready(fn, sync = false) {\n    if (!fn) {\n      return;\n    }\n    if (!this.isReady_) {\n      this.readyQueue_ = this.readyQueue_ || [];\n      this.readyQueue_.push(fn);\n      return;\n    }\n    if (sync) {\n      fn.call(this);\n    } else {\n      // Call the function asynchronously by default for consistency\n      this.setTimeout(fn, 1);\n    }\n  }\n\n  /**\n   * Trigger all the ready listeners for this `Component`.\n   *\n   * @fires Component#ready\n   */\n  triggerReady() {\n    this.isReady_ = true;\n\n    // Ensure ready is triggered asynchronously\n    this.setTimeout(function () {\n      const readyQueue = this.readyQueue_;\n\n      // Reset Ready Queue\n      this.readyQueue_ = [];\n      if (readyQueue && readyQueue.length > 0) {\n        readyQueue.forEach(function (fn) {\n          fn.call(this);\n        }, this);\n      }\n\n      // Allow for using event listeners also\n      /**\n       * Triggered when a `Component` is ready.\n       *\n       * @event Component#ready\n       * @type {Event}\n       */\n      this.trigger('ready');\n    }, 1);\n  }\n\n  /**\n   * Find a single DOM element matching a `selector`. This can be within the `Component`s\n   * `contentEl()` or another custom context.\n   *\n   * @param {string} selector\n   *        A valid CSS selector, which will be passed to `querySelector`.\n   *\n   * @param {Element|string} [context=this.contentEl()]\n   *        A DOM element within which to query. Can also be a selector string in\n   *        which case the first matching element will get used as context. If\n   *        missing `this.contentEl()` gets used. If  `this.contentEl()` returns\n   *        nothing it falls back to `document`.\n   *\n   * @return {Element|null}\n   *         the dom element that was found, or null\n   *\n   * @see [Information on CSS Selectors](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_Started/Selectors)\n   */\n  $(selector, context) {\n    return $(selector, context || this.contentEl());\n  }\n\n  /**\n   * Finds all DOM element matching a `selector`. This can be within the `Component`s\n   * `contentEl()` or another custom context.\n   *\n   * @param {string} selector\n   *        A valid CSS selector, which will be passed to `querySelectorAll`.\n   *\n   * @param {Element|string} [context=this.contentEl()]\n   *        A DOM element within which to query. Can also be a selector string in\n   *        which case the first matching element will get used as context. If\n   *        missing `this.contentEl()` gets used. If  `this.contentEl()` returns\n   *        nothing it falls back to `document`.\n   *\n   * @return {NodeList}\n   *         a list of dom elements that were found\n   *\n   * @see [Information on CSS Selectors](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_Started/Selectors)\n   */\n  $$(selector, context) {\n    return $$(selector, context || this.contentEl());\n  }\n\n  /**\n   * Check if a component's element has a CSS class name.\n   *\n   * @param {string} classToCheck\n   *        CSS class name to check.\n   *\n   * @return {boolean}\n   *         - True if the `Component` has the class.\n   *         - False if the `Component` does not have the class`\n   */\n  hasClass(classToCheck) {\n    return hasClass(this.el_, classToCheck);\n  }\n\n  /**\n   * Add a CSS class name to the `Component`s element.\n   *\n   * @param {...string} classesToAdd\n   *        One or more CSS class name to add.\n   */\n  addClass(...classesToAdd) {\n    addClass(this.el_, ...classesToAdd);\n  }\n\n  /**\n   * Remove a CSS class name from the `Component`s element.\n   *\n   * @param {...string} classesToRemove\n   *        One or more CSS class name to remove.\n   */\n  removeClass(...classesToRemove) {\n    removeClass(this.el_, ...classesToRemove);\n  }\n\n  /**\n   * Add or remove a CSS class name from the component's element.\n   * - `classToToggle` gets added when {@link Component#hasClass} would return false.\n   * - `classToToggle` gets removed when {@link Component#hasClass} would return true.\n   *\n   * @param  {string} classToToggle\n   *         The class to add or remove based on (@link Component#hasClass}\n   *\n   * @param  {boolean|Dom~predicate} [predicate]\n   *         An {@link Dom~predicate} function or a boolean\n   */\n  toggleClass(classToToggle, predicate) {\n    toggleClass(this.el_, classToToggle, predicate);\n  }\n\n  /**\n   * Show the `Component`s element if it is hidden by removing the\n   * 'vjs-hidden' class name from it.\n   */\n  show() {\n    this.removeClass('vjs-hidden');\n  }\n\n  /**\n   * Hide the `Component`s element if it is currently showing by adding the\n   * 'vjs-hidden` class name to it.\n   */\n  hide() {\n    this.addClass('vjs-hidden');\n  }\n\n  /**\n   * Lock a `Component`s element in its visible state by adding the 'vjs-lock-showing'\n   * class name to it. Used during fadeIn/fadeOut.\n   *\n   * @private\n   */\n  lockShowing() {\n    this.addClass('vjs-lock-showing');\n  }\n\n  /**\n   * Unlock a `Component`s element from its visible state by removing the 'vjs-lock-showing'\n   * class name from it. Used during fadeIn/fadeOut.\n   *\n   * @private\n   */\n  unlockShowing() {\n    this.removeClass('vjs-lock-showing');\n  }\n\n  /**\n   * Get the value of an attribute on the `Component`s element.\n   *\n   * @param {string} attribute\n   *        Name of the attribute to get the value from.\n   *\n   * @return {string|null}\n   *         - The value of the attribute that was asked for.\n   *         - Can be an empty string on some browsers if the attribute does not exist\n   *           or has no value\n   *         - Most browsers will return null if the attribute does not exist or has\n   *           no value.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/getAttribute}\n   */\n  getAttribute(attribute) {\n    return getAttribute(this.el_, attribute);\n  }\n\n  /**\n   * Set the value of an attribute on the `Component`'s element\n   *\n   * @param {string} attribute\n   *        Name of the attribute to set.\n   *\n   * @param {string} value\n   *        Value to set the attribute to.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/setAttribute}\n   */\n  setAttribute(attribute, value) {\n    setAttribute(this.el_, attribute, value);\n  }\n\n  /**\n   * Remove an attribute from the `Component`s element.\n   *\n   * @param {string} attribute\n   *        Name of the attribute to remove.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/removeAttribute}\n   */\n  removeAttribute(attribute) {\n    removeAttribute(this.el_, attribute);\n  }\n\n  /**\n   * Get or set the width of the component based upon the CSS styles.\n   * See {@link Component#dimension} for more detailed information.\n   *\n   * @param {number|string} [num]\n   *        The width that you want to set postfixed with '%', 'px' or nothing.\n   *\n   * @param {boolean} [skipListeners]\n   *        Skip the componentresize event trigger\n   *\n   * @return {number|string}\n   *         The width when getting, zero if there is no width. Can be a string\n   *           postpixed with '%' or 'px'.\n   */\n  width(num, skipListeners) {\n    return this.dimension('width', num, skipListeners);\n  }\n\n  /**\n   * Get or set the height of the component based upon the CSS styles.\n   * See {@link Component#dimension} for more detailed information.\n   *\n   * @param {number|string} [num]\n   *        The height that you want to set postfixed with '%', 'px' or nothing.\n   *\n   * @param {boolean} [skipListeners]\n   *        Skip the componentresize event trigger\n   *\n   * @return {number|string}\n   *         The width when getting, zero if there is no width. Can be a string\n   *         postpixed with '%' or 'px'.\n   */\n  height(num, skipListeners) {\n    return this.dimension('height', num, skipListeners);\n  }\n\n  /**\n   * Set both the width and height of the `Component` element at the same time.\n   *\n   * @param  {number|string} width\n   *         Width to set the `Component`s element to.\n   *\n   * @param  {number|string} height\n   *         Height to set the `Component`s element to.\n   */\n  dimensions(width, height) {\n    // Skip componentresize listeners on width for optimization\n    this.width(width, true);\n    this.height(height);\n  }\n\n  /**\n   * Get or set width or height of the `Component` element. This is the shared code\n   * for the {@link Component#width} and {@link Component#height}.\n   *\n   * Things to know:\n   * - If the width or height in an number this will return the number postfixed with 'px'.\n   * - If the width/height is a percent this will return the percent postfixed with '%'\n   * - Hidden elements have a width of 0 with `window.getComputedStyle`. This function\n   *   defaults to the `Component`s `style.width` and falls back to `window.getComputedStyle`.\n   *   See [this]{@link http://www.foliotek.com/devblog/getting-the-width-of-a-hidden-element-with-jquery-using-width/}\n   *   for more information\n   * - If you want the computed style of the component, use {@link Component#currentWidth}\n   *   and {@link {Component#currentHeight}\n   *\n   * @fires Component#componentresize\n   *\n   * @param {string} widthOrHeight\n   8        'width' or 'height'\n   *\n   * @param  {number|string} [num]\n   8         New dimension\n   *\n   * @param  {boolean} [skipListeners]\n   *         Skip componentresize event trigger\n   *\n   * @return {number}\n   *         The dimension when getting or 0 if unset\n   */\n  dimension(widthOrHeight, num, skipListeners) {\n    if (num !== undefined) {\n      // Set to zero if null or literally NaN (NaN !== NaN)\n      if (num === null || num !== num) {\n        num = 0;\n      }\n\n      // Check if using css width/height (% or px) and adjust\n      if (('' + num).indexOf('%') !== -1 || ('' + num).indexOf('px') !== -1) {\n        this.el_.style[widthOrHeight] = num;\n      } else if (num === 'auto') {\n        this.el_.style[widthOrHeight] = '';\n      } else {\n        this.el_.style[widthOrHeight] = num + 'px';\n      }\n\n      // skipListeners allows us to avoid triggering the resize event when setting both width and height\n      if (!skipListeners) {\n        /**\n         * Triggered when a component is resized.\n         *\n         * @event Component#componentresize\n         * @type {Event}\n         */\n        this.trigger('componentresize');\n      }\n      return;\n    }\n\n    // Not setting a value, so getting it\n    // Make sure element exists\n    if (!this.el_) {\n      return 0;\n    }\n\n    // Get dimension value from style\n    const val = this.el_.style[widthOrHeight];\n    const pxIndex = val.indexOf('px');\n    if (pxIndex !== -1) {\n      // Return the pixel value with no 'px'\n      return parseInt(val.slice(0, pxIndex), 10);\n    }\n\n    // No px so using % or no style was set, so falling back to offsetWidth/height\n    // If component has display:none, offset will return 0\n    // TODO: handle display:none and no dimension style using px\n    return parseInt(this.el_['offset' + toTitleCase$1(widthOrHeight)], 10);\n  }\n\n  /**\n   * Get the computed width or the height of the component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @param {string} widthOrHeight\n   *        A string containing 'width' or 'height'. Whichever one you want to get.\n   *\n   * @return {number}\n   *         The dimension that gets asked for or 0 if nothing was set\n   *         for that dimension.\n   */\n  currentDimension(widthOrHeight) {\n    let computedWidthOrHeight = 0;\n    if (widthOrHeight !== 'width' && widthOrHeight !== 'height') {\n      throw new Error('currentDimension only accepts width or height value');\n    }\n    computedWidthOrHeight = computedStyle(this.el_, widthOrHeight);\n\n    // remove 'px' from variable and parse as integer\n    computedWidthOrHeight = parseFloat(computedWidthOrHeight);\n\n    // if the computed value is still 0, it's possible that the browser is lying\n    // and we want to check the offset values.\n    // This code also runs wherever getComputedStyle doesn't exist.\n    if (computedWidthOrHeight === 0 || isNaN(computedWidthOrHeight)) {\n      const rule = `offset${toTitleCase$1(widthOrHeight)}`;\n      computedWidthOrHeight = this.el_[rule];\n    }\n    return computedWidthOrHeight;\n  }\n\n  /**\n   * An object that contains width and height values of the `Component`s\n   * computed style. Uses `window.getComputedStyle`.\n   *\n   * @typedef {Object} Component~DimensionObject\n   *\n   * @property {number} width\n   *           The width of the `Component`s computed style.\n   *\n   * @property {number} height\n   *           The height of the `Component`s computed style.\n   */\n\n  /**\n   * Get an object that contains computed width and height values of the\n   * component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @return {Component~DimensionObject}\n   *         The computed dimensions of the component's element.\n   */\n  currentDimensions() {\n    return {\n      width: this.currentDimension('width'),\n      height: this.currentDimension('height')\n    };\n  }\n\n  /**\n   * Get the computed width of the component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @return {number}\n   *         The computed width of the component's element.\n   */\n  currentWidth() {\n    return this.currentDimension('width');\n  }\n\n  /**\n   * Get the computed height of the component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @return {number}\n   *         The computed height of the component's element.\n   */\n  currentHeight() {\n    return this.currentDimension('height');\n  }\n\n  /**\n   * Set the focus to this component\n   */\n  focus() {\n    this.el_.focus();\n  }\n\n  /**\n   * Remove the focus from this component\n   */\n  blur() {\n    this.el_.blur();\n  }\n\n  /**\n   * When this Component receives a `keydown` event which it does not process,\n   *  it passes the event to the Player for handling.\n   *\n   * @param {KeyboardEvent} event\n   *        The `keydown` event that caused this function to be called.\n   */\n  handleKeyDown(event) {\n    if (this.player_) {\n      // We only stop propagation here because we want unhandled events to fall\n      // back to the browser. Exclude Tab for focus trapping.\n      if (!keycode.isEventKey(event, 'Tab')) {\n        event.stopPropagation();\n      }\n      this.player_.handleKeyDown(event);\n    }\n  }\n\n  /**\n   * Many components used to have a `handleKeyPress` method, which was poorly\n   * named because it listened to a `keydown` event. This method name now\n   * delegates to `handleKeyDown`. This means anyone calling `handleKeyPress`\n   * will not see their method calls stop working.\n   *\n   * @param {Event} event\n   *        The event that caused this function to be called.\n   */\n  handleKeyPress(event) {\n    this.handleKeyDown(event);\n  }\n\n  /**\n   * Emit a 'tap' events when touch event support gets detected. This gets used to\n   * support toggling the controls through a tap on the video. They get enabled\n   * because every sub-component would have extra overhead otherwise.\n   *\n   * @private\n   * @fires Component#tap\n   * @listens Component#touchstart\n   * @listens Component#touchmove\n   * @listens Component#touchleave\n   * @listens Component#touchcancel\n   * @listens Component#touchend\n    */\n  emitTapEvents() {\n    // Track the start time so we can determine how long the touch lasted\n    let touchStart = 0;\n    let firstTouch = null;\n\n    // Maximum movement allowed during a touch event to still be considered a tap\n    // Other popular libs use anywhere from 2 (hammer.js) to 15,\n    // so 10 seems like a nice, round number.\n    const tapMovementThreshold = 10;\n\n    // The maximum length a touch can be while still being considered a tap\n    const touchTimeThreshold = 200;\n    let couldBeTap;\n    this.on('touchstart', function (event) {\n      // If more than one finger, don't consider treating this as a click\n      if (event.touches.length === 1) {\n        // Copy pageX/pageY from the object\n        firstTouch = {\n          pageX: event.touches[0].pageX,\n          pageY: event.touches[0].pageY\n        };\n        // Record start time so we can detect a tap vs. \"touch and hold\"\n        touchStart = window$1.performance.now();\n        // Reset couldBeTap tracking\n        couldBeTap = true;\n      }\n    });\n    this.on('touchmove', function (event) {\n      // If more than one finger, don't consider treating this as a click\n      if (event.touches.length > 1) {\n        couldBeTap = false;\n      } else if (firstTouch) {\n        // Some devices will throw touchmoves for all but the slightest of taps.\n        // So, if we moved only a small distance, this could still be a tap\n        const xdiff = event.touches[0].pageX - firstTouch.pageX;\n        const ydiff = event.touches[0].pageY - firstTouch.pageY;\n        const touchDistance = Math.sqrt(xdiff * xdiff + ydiff * ydiff);\n        if (touchDistance > tapMovementThreshold) {\n          couldBeTap = false;\n        }\n      }\n    });\n    const noTap = function () {\n      couldBeTap = false;\n    };\n\n    // TODO: Listen to the original target. http://youtu.be/DujfpXOKUp8?t=13m8s\n    this.on('touchleave', noTap);\n    this.on('touchcancel', noTap);\n\n    // When the touch ends, measure how long it took and trigger the appropriate\n    // event\n    this.on('touchend', function (event) {\n      firstTouch = null;\n      // Proceed only if the touchmove/leave/cancel event didn't happen\n      if (couldBeTap === true) {\n        // Measure how long the touch lasted\n        const touchTime = window$1.performance.now() - touchStart;\n\n        // Make sure the touch was less than the threshold to be considered a tap\n        if (touchTime < touchTimeThreshold) {\n          // Don't let browser turn this into a click\n          event.preventDefault();\n          /**\n           * Triggered when a `Component` is tapped.\n           *\n           * @event Component#tap\n           * @type {MouseEvent}\n           */\n          this.trigger('tap');\n          // It may be good to copy the touchend event object and change the\n          // type to tap, if the other event properties aren't exact after\n          // Events.fixEvent runs (e.g. event.target)\n        }\n      }\n    });\n  }\n\n  /**\n   * This function reports user activity whenever touch events happen. This can get\n   * turned off by any sub-components that wants touch events to act another way.\n   *\n   * Report user touch activity when touch events occur. User activity gets used to\n   * determine when controls should show/hide. It is simple when it comes to mouse\n   * events, because any mouse event should show the controls. So we capture mouse\n   * events that bubble up to the player and report activity when that happens.\n   * With touch events it isn't as easy as `touchstart` and `touchend` toggle player\n   * controls. So touch events can't help us at the player level either.\n   *\n   * User activity gets checked asynchronously. So what could happen is a tap event\n   * on the video turns the controls off. Then the `touchend` event bubbles up to\n   * the player. Which, if it reported user activity, would turn the controls right\n   * back on. We also don't want to completely block touch events from bubbling up.\n   * Furthermore a `touchmove` event and anything other than a tap, should not turn\n   * controls back on.\n   *\n   * @listens Component#touchstart\n   * @listens Component#touchmove\n   * @listens Component#touchend\n   * @listens Component#touchcancel\n   */\n  enableTouchActivity() {\n    // Don't continue if the root player doesn't support reporting user activity\n    if (!this.player() || !this.player().reportUserActivity) {\n      return;\n    }\n\n    // listener for reporting that the user is active\n    const report = bind_(this.player(), this.player().reportUserActivity);\n    let touchHolding;\n    this.on('touchstart', function () {\n      report();\n      // For as long as the they are touching the device or have their mouse down,\n      // we consider them active even if they're not moving their finger or mouse.\n      // So we want to continue to update that they are active\n      this.clearInterval(touchHolding);\n      // report at the same interval as activityCheck\n      touchHolding = this.setInterval(report, 250);\n    });\n    const touchEnd = function (event) {\n      report();\n      // stop the interval that maintains activity if the touch is holding\n      this.clearInterval(touchHolding);\n    };\n    this.on('touchmove', report);\n    this.on('touchend', touchEnd);\n    this.on('touchcancel', touchEnd);\n  }\n\n  /**\n   * A callback that has no parameters and is bound into `Component`s context.\n   *\n   * @callback Component~GenericCallback\n   * @this Component\n   */\n\n  /**\n   * Creates a function that runs after an `x` millisecond timeout. This function is a\n   * wrapper around `window.setTimeout`. There are a few reasons to use this one\n   * instead though:\n   * 1. It gets cleared via  {@link Component#clearTimeout} when\n   *    {@link Component#dispose} gets called.\n   * 2. The function callback will gets turned into a {@link Component~GenericCallback}\n   *\n   * > Note: You can't use `window.clearTimeout` on the id returned by this function. This\n   *         will cause its dispose listener not to get cleaned up! Please use\n   *         {@link Component#clearTimeout} or {@link Component#dispose} instead.\n   *\n   * @param {Component~GenericCallback} fn\n   *        The function that will be run after `timeout`.\n   *\n   * @param {number} timeout\n   *        Timeout in milliseconds to delay before executing the specified function.\n   *\n   * @return {number}\n   *         Returns a timeout ID that gets used to identify the timeout. It can also\n   *         get used in {@link Component#clearTimeout} to clear the timeout that\n   *         was set.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setTimeout}\n   */\n  setTimeout(fn, timeout) {\n    // declare as variables so they are properly available in timeout function\n    // eslint-disable-next-line\n    var timeoutId;\n    fn = bind_(this, fn);\n    this.clearTimersOnDispose_();\n    timeoutId = window$1.setTimeout(() => {\n      if (this.setTimeoutIds_.has(timeoutId)) {\n        this.setTimeoutIds_.delete(timeoutId);\n      }\n      fn();\n    }, timeout);\n    this.setTimeoutIds_.add(timeoutId);\n    return timeoutId;\n  }\n\n  /**\n   * Clears a timeout that gets created via `window.setTimeout` or\n   * {@link Component#setTimeout}. If you set a timeout via {@link Component#setTimeout}\n   * use this function instead of `window.clearTimout`. If you don't your dispose\n   * listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} timeoutId\n   *        The id of the timeout to clear. The return value of\n   *        {@link Component#setTimeout} or `window.setTimeout`.\n   *\n   * @return {number}\n   *         Returns the timeout id that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/clearTimeout}\n   */\n  clearTimeout(timeoutId) {\n    if (this.setTimeoutIds_.has(timeoutId)) {\n      this.setTimeoutIds_.delete(timeoutId);\n      window$1.clearTimeout(timeoutId);\n    }\n    return timeoutId;\n  }\n\n  /**\n   * Creates a function that gets run every `x` milliseconds. This function is a wrapper\n   * around `window.setInterval`. There are a few reasons to use this one instead though.\n   * 1. It gets cleared via  {@link Component#clearInterval} when\n   *    {@link Component#dispose} gets called.\n   * 2. The function callback will be a {@link Component~GenericCallback}\n   *\n   * @param {Component~GenericCallback} fn\n   *        The function to run every `x` seconds.\n   *\n   * @param {number} interval\n   *        Execute the specified function every `x` milliseconds.\n   *\n   * @return {number}\n   *         Returns an id that can be used to identify the interval. It can also be be used in\n   *         {@link Component#clearInterval} to clear the interval.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setInterval}\n   */\n  setInterval(fn, interval) {\n    fn = bind_(this, fn);\n    this.clearTimersOnDispose_();\n    const intervalId = window$1.setInterval(fn, interval);\n    this.setIntervalIds_.add(intervalId);\n    return intervalId;\n  }\n\n  /**\n   * Clears an interval that gets created via `window.setInterval` or\n   * {@link Component#setInterval}. If you set an interval via {@link Component#setInterval}\n   * use this function instead of `window.clearInterval`. If you don't your dispose\n   * listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} intervalId\n   *        The id of the interval to clear. The return value of\n   *        {@link Component#setInterval} or `window.setInterval`.\n   *\n   * @return {number}\n   *         Returns the interval id that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/clearInterval}\n   */\n  clearInterval(intervalId) {\n    if (this.setIntervalIds_.has(intervalId)) {\n      this.setIntervalIds_.delete(intervalId);\n      window$1.clearInterval(intervalId);\n    }\n    return intervalId;\n  }\n\n  /**\n   * Queues up a callback to be passed to requestAnimationFrame (rAF), but\n   * with a few extra bonuses:\n   *\n   * - Supports browsers that do not support rAF by falling back to\n   *   {@link Component#setTimeout}.\n   *\n   * - The callback is turned into a {@link Component~GenericCallback} (i.e.\n   *   bound to the component).\n   *\n   * - Automatic cancellation of the rAF callback is handled if the component\n   *   is disposed before it is called.\n   *\n   * @param  {Component~GenericCallback} fn\n   *         A function that will be bound to this component and executed just\n   *         before the browser's next repaint.\n   *\n   * @return {number}\n   *         Returns an rAF ID that gets used to identify the timeout. It can\n   *         also be used in {@link Component#cancelAnimationFrame} to cancel\n   *         the animation frame callback.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/window/requestAnimationFrame}\n   */\n  requestAnimationFrame(fn) {\n    this.clearTimersOnDispose_();\n\n    // declare as variables so they are properly available in rAF function\n    // eslint-disable-next-line\n    var id;\n    fn = bind_(this, fn);\n    id = window$1.requestAnimationFrame(() => {\n      if (this.rafIds_.has(id)) {\n        this.rafIds_.delete(id);\n      }\n      fn();\n    });\n    this.rafIds_.add(id);\n    return id;\n  }\n\n  /**\n   * Request an animation frame, but only one named animation\n   * frame will be queued. Another will never be added until\n   * the previous one finishes.\n   *\n   * @param {string} name\n   *        The name to give this requestAnimationFrame\n   *\n   * @param  {Component~GenericCallback} fn\n   *         A function that will be bound to this component and executed just\n   *         before the browser's next repaint.\n   */\n  requestNamedAnimationFrame(name, fn) {\n    if (this.namedRafs_.has(name)) {\n      return;\n    }\n    this.clearTimersOnDispose_();\n    fn = bind_(this, fn);\n    const id = this.requestAnimationFrame(() => {\n      fn();\n      if (this.namedRafs_.has(name)) {\n        this.namedRafs_.delete(name);\n      }\n    });\n    this.namedRafs_.set(name, id);\n    return name;\n  }\n\n  /**\n   * Cancels a current named animation frame if it exists.\n   *\n   * @param {string} name\n   *        The name of the requestAnimationFrame to cancel.\n   */\n  cancelNamedAnimationFrame(name) {\n    if (!this.namedRafs_.has(name)) {\n      return;\n    }\n    this.cancelAnimationFrame(this.namedRafs_.get(name));\n    this.namedRafs_.delete(name);\n  }\n\n  /**\n   * Cancels a queued callback passed to {@link Component#requestAnimationFrame}\n   * (rAF).\n   *\n   * If you queue an rAF callback via {@link Component#requestAnimationFrame},\n   * use this function instead of `window.cancelAnimationFrame`. If you don't,\n   * your dispose listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} id\n   *        The rAF ID to clear. The return value of {@link Component#requestAnimationFrame}.\n   *\n   * @return {number}\n   *         Returns the rAF ID that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/window/cancelAnimationFrame}\n   */\n  cancelAnimationFrame(id) {\n    if (this.rafIds_.has(id)) {\n      this.rafIds_.delete(id);\n      window$1.cancelAnimationFrame(id);\n    }\n    return id;\n  }\n\n  /**\n   * A function to setup `requestAnimationFrame`, `setTimeout`,\n   * and `setInterval`, clearing on dispose.\n   *\n   * > Previously each timer added and removed dispose listeners on it's own.\n   * For better performance it was decided to batch them all, and use `Set`s\n   * to track outstanding timer ids.\n   *\n   * @private\n   */\n  clearTimersOnDispose_() {\n    if (this.clearingTimersOnDispose_) {\n      return;\n    }\n    this.clearingTimersOnDispose_ = true;\n    this.one('dispose', () => {\n      [['namedRafs_', 'cancelNamedAnimationFrame'], ['rafIds_', 'cancelAnimationFrame'], ['setTimeoutIds_', 'clearTimeout'], ['setIntervalIds_', 'clearInterval']].forEach(([idName, cancelName]) => {\n        // for a `Set` key will actually be the value again\n        // so forEach((val, val) =>` but for maps we want to use\n        // the key.\n        this[idName].forEach((val, key) => this[cancelName](key));\n      });\n      this.clearingTimersOnDispose_ = false;\n    });\n  }\n\n  /**\n   * Register a `Component` with `videojs` given the name and the component.\n   *\n   * > NOTE: {@link Tech}s should not be registered as a `Component`. {@link Tech}s\n   *         should be registered using {@link Tech.registerTech} or\n   *         {@link videojs:videojs.registerTech}.\n   *\n   * > NOTE: This function can also be seen on videojs as\n   *         {@link videojs:videojs.registerComponent}.\n   *\n   * @param {string} name\n   *        The name of the `Component` to register.\n   *\n   * @param {Component} ComponentToRegister\n   *        The `Component` class to register.\n   *\n   * @return {Component}\n   *         The `Component` that was registered.\n   */\n  static registerComponent(name, ComponentToRegister) {\n    if (typeof name !== 'string' || !name) {\n      throw new Error(`Illegal component name, \"${name}\"; must be a non-empty string.`);\n    }\n    const Tech = Component$1.getComponent('Tech');\n\n    // We need to make sure this check is only done if Tech has been registered.\n    const isTech = Tech && Tech.isTech(ComponentToRegister);\n    const isComp = Component$1 === ComponentToRegister || Component$1.prototype.isPrototypeOf(ComponentToRegister.prototype);\n    if (isTech || !isComp) {\n      let reason;\n      if (isTech) {\n        reason = 'techs must be registered using Tech.registerTech()';\n      } else {\n        reason = 'must be a Component subclass';\n      }\n      throw new Error(`Illegal component, \"${name}\"; ${reason}.`);\n    }\n    name = toTitleCase$1(name);\n    if (!Component$1.components_) {\n      Component$1.components_ = {};\n    }\n    const Player = Component$1.getComponent('Player');\n    if (name === 'Player' && Player && Player.players) {\n      const players = Player.players;\n      const playerNames = Object.keys(players);\n\n      // If we have players that were disposed, then their name will still be\n      // in Players.players. So, we must loop through and verify that the value\n      // for each item is not null. This allows registration of the Player component\n      // after all players have been disposed or before any were created.\n      if (players && playerNames.length > 0 && playerNames.map(pname => players[pname]).every(Boolean)) {\n        throw new Error('Can not register Player component after player has been created.');\n      }\n    }\n    Component$1.components_[name] = ComponentToRegister;\n    Component$1.components_[toLowerCase(name)] = ComponentToRegister;\n    return ComponentToRegister;\n  }\n\n  /**\n   * Get a `Component` based on the name it was registered with.\n   *\n   * @param {string} name\n   *        The Name of the component to get.\n   *\n   * @return {Component}\n   *         The `Component` that got registered under the given name.\n   */\n  static getComponent(name) {\n    if (!name || !Component$1.components_) {\n      return;\n    }\n    return Component$1.components_[name];\n  }\n}\nComponent$1.registerComponent('Component', Component$1);\n\n/**\n * @file time.js\n * @module time\n */\n\n/**\n * Returns the time for the specified index at the start or end\n * of a TimeRange object.\n *\n * @typedef    {Function} TimeRangeIndex\n *\n * @param      {number} [index=0]\n *             The range number to return the time for.\n *\n * @return     {number}\n *             The time offset at the specified index.\n *\n * @deprecated The index argument must be provided.\n *             In the future, leaving it out will throw an error.\n */\n\n/**\n * An object that contains ranges of time, which mimics {@link TimeRanges}.\n *\n * @typedef  {Object} TimeRange\n *\n * @property {number} length\n *           The number of time ranges represented by this object.\n *\n * @property {module:time~TimeRangeIndex} start\n *           Returns the time offset at which a specified time range begins.\n *\n * @property {module:time~TimeRangeIndex} end\n *           Returns the time offset at which a specified time range ends.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/TimeRanges\n */\n\n/**\n * Check if any of the time ranges are over the maximum index.\n *\n * @private\n * @param   {string} fnName\n *          The function name to use for logging\n *\n * @param   {number} index\n *          The index to check\n *\n * @param   {number} maxIndex\n *          The maximum possible index\n *\n * @throws  {Error} if the timeRanges provided are over the maxIndex\n */\nfunction rangeCheck(fnName, index, maxIndex) {\n  if (typeof index !== 'number' || index < 0 || index > maxIndex) {\n    throw new Error(`Failed to execute '${fnName}' on 'TimeRanges': The index provided (${index}) is non-numeric or out of bounds (0-${maxIndex}).`);\n  }\n}\n\n/**\n * Get the time for the specified index at the start or end\n * of a TimeRange object.\n *\n * @private\n * @param      {string} fnName\n *             The function name to use for logging\n *\n * @param      {string} valueIndex\n *             The property that should be used to get the time. should be\n *             'start' or 'end'\n *\n * @param      {Array} ranges\n *             An array of time ranges\n *\n * @param      {Array} [rangeIndex=0]\n *             The index to start the search at\n *\n * @return     {number}\n *             The time that offset at the specified index.\n *\n * @deprecated rangeIndex must be set to a value, in the future this will throw an error.\n * @throws     {Error} if rangeIndex is more than the length of ranges\n */\nfunction getRange(fnName, valueIndex, ranges, rangeIndex) {\n  rangeCheck(fnName, rangeIndex, ranges.length - 1);\n  return ranges[rangeIndex][valueIndex];\n}\n\n/**\n * Create a time range object given ranges of time.\n *\n * @private\n * @param   {Array} [ranges]\n *          An array of time ranges.\n *\n * @return  {TimeRange}\n */\nfunction createTimeRangesObj(ranges) {\n  let timeRangesObj;\n  if (ranges === undefined || ranges.length === 0) {\n    timeRangesObj = {\n      length: 0,\n      start() {\n        throw new Error('This TimeRanges object is empty');\n      },\n      end() {\n        throw new Error('This TimeRanges object is empty');\n      }\n    };\n  } else {\n    timeRangesObj = {\n      length: ranges.length,\n      start: getRange.bind(null, 'start', 0, ranges),\n      end: getRange.bind(null, 'end', 1, ranges)\n    };\n  }\n  if (window$1.Symbol && window$1.Symbol.iterator) {\n    timeRangesObj[window$1.Symbol.iterator] = () => (ranges || []).values();\n  }\n  return timeRangesObj;\n}\n\n/**\n * Create a `TimeRange` object which mimics an\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/TimeRanges|HTML5 TimeRanges instance}.\n *\n * @param {number|Array[]} start\n *        The start of a single range (a number) or an array of ranges (an\n *        array of arrays of two numbers each).\n *\n * @param {number} end\n *        The end of a single range. Cannot be used with the array form of\n *        the `start` argument.\n *\n * @return {TimeRange}\n */\nfunction createTimeRanges$1(start, end) {\n  if (Array.isArray(start)) {\n    return createTimeRangesObj(start);\n  } else if (start === undefined || end === undefined) {\n    return createTimeRangesObj();\n  }\n  return createTimeRangesObj([[start, end]]);\n}\n\n/**\n * Format seconds as a time string, H:MM:SS or M:SS. Supplying a guide (in\n * seconds) will force a number of leading zeros to cover the length of the\n * guide.\n *\n * @private\n * @param  {number} seconds\n *         Number of seconds to be turned into a string\n *\n * @param  {number} guide\n *         Number (in seconds) to model the string after\n *\n * @return {string}\n *         Time formatted as H:MM:SS or M:SS\n */\nconst defaultImplementation = function (seconds, guide) {\n  seconds = seconds < 0 ? 0 : seconds;\n  let s = Math.floor(seconds % 60);\n  let m = Math.floor(seconds / 60 % 60);\n  let h = Math.floor(seconds / 3600);\n  const gm = Math.floor(guide / 60 % 60);\n  const gh = Math.floor(guide / 3600);\n\n  // handle invalid times\n  if (isNaN(seconds) || seconds === Infinity) {\n    // '-' is false for all relational operators (e.g. <, >=) so this setting\n    // will add the minimum number of fields specified by the guide\n    h = m = s = '-';\n  }\n\n  // Check if we need to show hours\n  h = h > 0 || gh > 0 ? h + ':' : '';\n\n  // If hours are showing, we may need to add a leading zero.\n  // Always show at least one digit of minutes.\n  m = ((h || gm >= 10) && m < 10 ? '0' + m : m) + ':';\n\n  // Check if leading zero is need for seconds\n  s = s < 10 ? '0' + s : s;\n  return h + m + s;\n};\n\n// Internal pointer to the current implementation.\nlet implementation = defaultImplementation;\n\n/**\n * Replaces the default formatTime implementation with a custom implementation.\n *\n * @param {Function} customImplementation\n *        A function which will be used in place of the default formatTime\n *        implementation. Will receive the current time in seconds and the\n *        guide (in seconds) as arguments.\n */\nfunction setFormatTime(customImplementation) {\n  implementation = customImplementation;\n}\n\n/**\n * Resets formatTime to the default implementation.\n */\nfunction resetFormatTime() {\n  implementation = defaultImplementation;\n}\n\n/**\n * Delegates to either the default time formatting function or a custom\n * function supplied via `setFormatTime`.\n *\n * Formats seconds as a time string (H:MM:SS or M:SS). Supplying a\n * guide (in seconds) will force a number of leading zeros to cover the\n * length of the guide.\n *\n * @example  formatTime(125, 600) === \"02:05\"\n * @param    {number} seconds\n *           Number of seconds to be turned into a string\n *\n * @param    {number} guide\n *           Number (in seconds) to model the string after\n *\n * @return   {string}\n *           Time formatted as H:MM:SS or M:SS\n */\nfunction formatTime(seconds, guide = seconds) {\n  return implementation(seconds, guide);\n}\n\nvar Time = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  createTimeRanges: createTimeRanges$1,\n  createTimeRange: createTimeRanges$1,\n  setFormatTime: setFormatTime,\n  resetFormatTime: resetFormatTime,\n  formatTime: formatTime\n});\n\n/**\n * @file buffer.js\n * @module buffer\n */\n\n/**\n * Compute the percentage of the media that has been buffered.\n *\n * @param { import('./time').TimeRange } buffered\n *        The current `TimeRanges` object representing buffered time ranges\n *\n * @param {number} duration\n *        Total duration of the media\n *\n * @return {number}\n *         Percent buffered of the total duration in decimal form.\n */\nfunction bufferedPercent(buffered, duration) {\n  let bufferedDuration = 0;\n  let start;\n  let end;\n  if (!duration) {\n    return 0;\n  }\n  if (!buffered || !buffered.length) {\n    buffered = createTimeRanges$1(0, 0);\n  }\n  for (let i = 0; i < buffered.length; i++) {\n    start = buffered.start(i);\n    end = buffered.end(i);\n\n    // buffered end can be bigger than duration by a very small fraction\n    if (end > duration) {\n      end = duration;\n    }\n    bufferedDuration += end - start;\n  }\n  return bufferedDuration / duration;\n}\n\n/**\n * @file media-error.js\n */\n\n/**\n * A Custom `MediaError` class which mimics the standard HTML5 `MediaError` class.\n *\n * @param {number|string|Object|MediaError} value\n *        This can be of multiple types:\n *        - number: should be a standard error code\n *        - string: an error message (the code will be 0)\n *        - Object: arbitrary properties\n *        - `MediaError` (native): used to populate a video.js `MediaError` object\n *        - `MediaError` (video.js): will return itself if it's already a\n *          video.js `MediaError` object.\n *\n * @see [MediaError Spec]{@link https://dev.w3.org/html5/spec-author-view/video.html#mediaerror}\n * @see [Encrypted MediaError Spec]{@link https://www.w3.org/TR/2013/WD-encrypted-media-20130510/#error-codes}\n *\n * @class MediaError\n */\nfunction MediaError(value) {\n  // Allow redundant calls to this constructor to avoid having `instanceof`\n  // checks peppered around the code.\n  if (value instanceof MediaError) {\n    return value;\n  }\n  if (typeof value === 'number') {\n    this.code = value;\n  } else if (typeof value === 'string') {\n    // default code is zero, so this is a custom error\n    this.message = value;\n  } else if (isObject(value)) {\n    // We assign the `code` property manually because native `MediaError` objects\n    // do not expose it as an own/enumerable property of the object.\n    if (typeof value.code === 'number') {\n      this.code = value.code;\n    }\n    Object.assign(this, value);\n  }\n  if (!this.message) {\n    this.message = MediaError.defaultMessages[this.code] || '';\n  }\n}\n\n/**\n * The error code that refers two one of the defined `MediaError` types\n *\n * @type {Number}\n */\nMediaError.prototype.code = 0;\n\n/**\n * An optional message that to show with the error. Message is not part of the HTML5\n * video spec but allows for more informative custom errors.\n *\n * @type {String}\n */\nMediaError.prototype.message = '';\n\n/**\n * An optional status code that can be set by plugins to allow even more detail about\n * the error. For example a plugin might provide a specific HTTP status code and an\n * error message for that code. Then when the plugin gets that error this class will\n * know how to display an error message for it. This allows a custom message to show\n * up on the `Player` error overlay.\n *\n * @type {Array}\n */\nMediaError.prototype.status = null;\n\n/**\n * Errors indexed by the W3C standard. The order **CANNOT CHANGE**! See the\n * specification listed under {@link MediaError} for more information.\n *\n * @enum {array}\n * @readonly\n * @property {string} 0 - MEDIA_ERR_CUSTOM\n * @property {string} 1 - MEDIA_ERR_ABORTED\n * @property {string} 2 - MEDIA_ERR_NETWORK\n * @property {string} 3 - MEDIA_ERR_DECODE\n * @property {string} 4 - MEDIA_ERR_SRC_NOT_SUPPORTED\n * @property {string} 5 - MEDIA_ERR_ENCRYPTED\n */\nMediaError.errorTypes = ['MEDIA_ERR_CUSTOM', 'MEDIA_ERR_ABORTED', 'MEDIA_ERR_NETWORK', 'MEDIA_ERR_DECODE', 'MEDIA_ERR_SRC_NOT_SUPPORTED', 'MEDIA_ERR_ENCRYPTED'];\n\n/**\n * The default `MediaError` messages based on the {@link MediaError.errorTypes}.\n *\n * @type {Array}\n * @constant\n */\nMediaError.defaultMessages = {\n  1: 'You aborted the media playback',\n  2: 'A network error caused the media download to fail part-way.',\n  3: 'The media playback was aborted due to a corruption problem or because the media used features your browser did not support.',\n  4: 'The media could not be loaded, either because the server or network failed or because the format is not supported.',\n  5: 'The media is encrypted and we do not have the keys to decrypt it.'\n};\n\n// Add types as properties on MediaError\n// e.g. MediaError.MEDIA_ERR_SRC_NOT_SUPPORTED = 4;\nfor (let errNum = 0; errNum < MediaError.errorTypes.length; errNum++) {\n  MediaError[MediaError.errorTypes[errNum]] = errNum;\n  // values should be accessible on both the class and instance\n  MediaError.prototype[MediaError.errorTypes[errNum]] = errNum;\n}\n\n/**\n * Returns whether an object is `Promise`-like (i.e. has a `then` method).\n *\n * @param  {Object}  value\n *         An object that may or may not be `Promise`-like.\n *\n * @return {boolean}\n *         Whether or not the object is `Promise`-like.\n */\nfunction isPromise(value) {\n  return value !== undefined && value !== null && typeof value.then === 'function';\n}\n\n/**\n * Silence a Promise-like object.\n *\n * This is useful for avoiding non-harmful, but potentially confusing \"uncaught\n * play promise\" rejection error messages.\n *\n * @param  {Object} value\n *         An object that may or may not be `Promise`-like.\n */\nfunction silencePromise(value) {\n  if (isPromise(value)) {\n    value.then(null, e => {});\n  }\n}\n\n/**\n * @file text-track-list-converter.js Utilities for capturing text track state and\n * re-creating tracks based on a capture.\n *\n * @module text-track-list-converter\n */\n\n/**\n * Examine a single {@link TextTrack} and return a JSON-compatible javascript object that\n * represents the {@link TextTrack}'s state.\n *\n * @param {TextTrack} track\n *        The text track to query.\n *\n * @return {Object}\n *         A serializable javascript representation of the TextTrack.\n * @private\n */\nconst trackToJson_ = function (track) {\n  const ret = ['kind', 'label', 'language', 'id', 'inBandMetadataTrackDispatchType', 'mode', 'src'].reduce((acc, prop, i) => {\n    if (track[prop]) {\n      acc[prop] = track[prop];\n    }\n    return acc;\n  }, {\n    cues: track.cues && Array.prototype.map.call(track.cues, function (cue) {\n      return {\n        startTime: cue.startTime,\n        endTime: cue.endTime,\n        text: cue.text,\n        id: cue.id\n      };\n    })\n  });\n  return ret;\n};\n\n/**\n * Examine a {@link Tech} and return a JSON-compatible javascript array that represents the\n * state of all {@link TextTrack}s currently configured. The return array is compatible with\n * {@link text-track-list-converter:jsonToTextTracks}.\n *\n * @param { import('../tech/tech').default } tech\n *        The tech object to query\n *\n * @return {Array}\n *         A serializable javascript representation of the {@link Tech}s\n *         {@link TextTrackList}.\n */\nconst textTracksToJson = function (tech) {\n  const trackEls = tech.$$('track');\n  const trackObjs = Array.prototype.map.call(trackEls, t => t.track);\n  const tracks = Array.prototype.map.call(trackEls, function (trackEl) {\n    const json = trackToJson_(trackEl.track);\n    if (trackEl.src) {\n      json.src = trackEl.src;\n    }\n    return json;\n  });\n  return tracks.concat(Array.prototype.filter.call(tech.textTracks(), function (track) {\n    return trackObjs.indexOf(track) === -1;\n  }).map(trackToJson_));\n};\n\n/**\n * Create a set of remote {@link TextTrack}s on a {@link Tech} based on an array of javascript\n * object {@link TextTrack} representations.\n *\n * @param {Array} json\n *        An array of `TextTrack` representation objects, like those that would be\n *        produced by `textTracksToJson`.\n *\n * @param {Tech} tech\n *        The `Tech` to create the `TextTrack`s on.\n */\nconst jsonToTextTracks = function (json, tech) {\n  json.forEach(function (track) {\n    const addedTrack = tech.addRemoteTextTrack(track).track;\n    if (!track.src && track.cues) {\n      track.cues.forEach(cue => addedTrack.addCue(cue));\n    }\n  });\n  return tech.textTracks();\n};\nvar textTrackConverter = {\n  textTracksToJson,\n  jsonToTextTracks,\n  trackToJson_\n};\n\n/**\n * @file modal-dialog.js\n */\nconst MODAL_CLASS_NAME = 'vjs-modal-dialog';\n\n/**\n * The `ModalDialog` displays over the video and its controls, which blocks\n * interaction with the player until it is closed.\n *\n * Modal dialogs include a \"Close\" button and will close when that button\n * is activated - or when ESC is pressed anywhere.\n *\n * @extends Component\n */\nclass ModalDialog extends Component$1 {\n  /**\n   * Create an instance of this class.\n   *\n   * @param { import('./player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param { import('./utils/dom').ContentDescriptor} [options.content=undefined]\n   *        Provide customized content for this modal.\n   *\n   * @param {string} [options.description]\n   *        A text description for the modal, primarily for accessibility.\n   *\n   * @param {boolean} [options.fillAlways=false]\n   *        Normally, modals are automatically filled only the first time\n   *        they open. This tells the modal to refresh its content\n   *        every time it opens.\n   *\n   * @param {string} [options.label]\n   *        A text label for the modal, primarily for accessibility.\n   *\n   * @param {boolean} [options.pauseOnOpen=true]\n   *        If `true`, playback will will be paused if playing when\n   *        the modal opens, and resumed when it closes.\n   *\n   * @param {boolean} [options.temporary=true]\n   *        If `true`, the modal can only be opened once; it will be\n   *        disposed as soon as it's closed.\n   *\n   * @param {boolean} [options.uncloseable=false]\n   *        If `true`, the user will not be able to close the modal\n   *        through the UI in the normal ways. Programmatic closing is\n   *        still possible.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.handleKeyDown_ = e => this.handleKeyDown(e);\n    this.close_ = e => this.close(e);\n    this.opened_ = this.hasBeenOpened_ = this.hasBeenFilled_ = false;\n    this.closeable(!this.options_.uncloseable);\n    this.content(this.options_.content);\n\n    // Make sure the contentEl is defined AFTER any children are initialized\n    // because we only want the contents of the modal in the contentEl\n    // (not the UI elements like the close button).\n    this.contentEl_ = createEl('div', {\n      className: `${MODAL_CLASS_NAME}-content`\n    }, {\n      role: 'document'\n    });\n    this.descEl_ = createEl('p', {\n      className: `${MODAL_CLASS_NAME}-description vjs-control-text`,\n      id: this.el().getAttribute('aria-describedby')\n    });\n    textContent(this.descEl_, this.description());\n    this.el_.appendChild(this.descEl_);\n    this.el_.appendChild(this.contentEl_);\n  }\n\n  /**\n   * Create the `ModalDialog`'s DOM element\n   *\n   * @return {Element}\n   *         The DOM element that gets created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: this.buildCSSClass(),\n      tabIndex: -1\n    }, {\n      'aria-describedby': `${this.id()}_description`,\n      'aria-hidden': 'true',\n      'aria-label': this.label(),\n      'role': 'dialog'\n    });\n  }\n  dispose() {\n    this.contentEl_ = null;\n    this.descEl_ = null;\n    this.previouslyActiveEl_ = null;\n    super.dispose();\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `${MODAL_CLASS_NAME} vjs-hidden ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * Returns the label string for this modal. Primarily used for accessibility.\n   *\n   * @return {string}\n   *         the localized or raw label of this modal.\n   */\n  label() {\n    return this.localize(this.options_.label || 'Modal Window');\n  }\n\n  /**\n   * Returns the description string for this modal. Primarily used for\n   * accessibility.\n   *\n   * @return {string}\n   *         The localized or raw description of this modal.\n   */\n  description() {\n    let desc = this.options_.description || this.localize('This is a modal window.');\n\n    // Append a universal closeability message if the modal is closeable.\n    if (this.closeable()) {\n      desc += ' ' + this.localize('This modal can be closed by pressing the Escape key or activating the close button.');\n    }\n    return desc;\n  }\n\n  /**\n   * Opens the modal.\n   *\n   * @fires ModalDialog#beforemodalopen\n   * @fires ModalDialog#modalopen\n   */\n  open() {\n    if (!this.opened_) {\n      const player = this.player();\n\n      /**\n        * Fired just before a `ModalDialog` is opened.\n        *\n        * @event ModalDialog#beforemodalopen\n        * @type {Event}\n        */\n      this.trigger('beforemodalopen');\n      this.opened_ = true;\n\n      // Fill content if the modal has never opened before and\n      // never been filled.\n      if (this.options_.fillAlways || !this.hasBeenOpened_ && !this.hasBeenFilled_) {\n        this.fill();\n      }\n\n      // If the player was playing, pause it and take note of its previously\n      // playing state.\n      this.wasPlaying_ = !player.paused();\n      if (this.options_.pauseOnOpen && this.wasPlaying_) {\n        player.pause();\n      }\n      this.on('keydown', this.handleKeyDown_);\n\n      // Hide controls and note if they were enabled.\n      this.hadControls_ = player.controls();\n      player.controls(false);\n      this.show();\n      this.conditionalFocus_();\n      this.el().setAttribute('aria-hidden', 'false');\n\n      /**\n        * Fired just after a `ModalDialog` is opened.\n        *\n        * @event ModalDialog#modalopen\n        * @type {Event}\n        */\n      this.trigger('modalopen');\n      this.hasBeenOpened_ = true;\n    }\n  }\n\n  /**\n   * If the `ModalDialog` is currently open or closed.\n   *\n   * @param  {boolean} [value]\n   *         If given, it will open (`true`) or close (`false`) the modal.\n   *\n   * @return {boolean}\n   *         the current open state of the modaldialog\n   */\n  opened(value) {\n    if (typeof value === 'boolean') {\n      this[value ? 'open' : 'close']();\n    }\n    return this.opened_;\n  }\n\n  /**\n   * Closes the modal, does nothing if the `ModalDialog` is\n   * not open.\n   *\n   * @fires ModalDialog#beforemodalclose\n   * @fires ModalDialog#modalclose\n   */\n  close() {\n    if (!this.opened_) {\n      return;\n    }\n    const player = this.player();\n\n    /**\n      * Fired just before a `ModalDialog` is closed.\n      *\n      * @event ModalDialog#beforemodalclose\n      * @type {Event}\n      */\n    this.trigger('beforemodalclose');\n    this.opened_ = false;\n    if (this.wasPlaying_ && this.options_.pauseOnOpen) {\n      player.play();\n    }\n    this.off('keydown', this.handleKeyDown_);\n    if (this.hadControls_) {\n      player.controls(true);\n    }\n    this.hide();\n    this.el().setAttribute('aria-hidden', 'true');\n\n    /**\n      * Fired just after a `ModalDialog` is closed.\n      *\n      * @event ModalDialog#modalclose\n      * @type {Event}\n      */\n    this.trigger('modalclose');\n    this.conditionalBlur_();\n    if (this.options_.temporary) {\n      this.dispose();\n    }\n  }\n\n  /**\n   * Check to see if the `ModalDialog` is closeable via the UI.\n   *\n   * @param  {boolean} [value]\n   *         If given as a boolean, it will set the `closeable` option.\n   *\n   * @return {boolean}\n   *         Returns the final value of the closable option.\n   */\n  closeable(value) {\n    if (typeof value === 'boolean') {\n      const closeable = this.closeable_ = !!value;\n      let close = this.getChild('closeButton');\n\n      // If this is being made closeable and has no close button, add one.\n      if (closeable && !close) {\n        // The close button should be a child of the modal - not its\n        // content element, so temporarily change the content element.\n        const temp = this.contentEl_;\n        this.contentEl_ = this.el_;\n        close = this.addChild('closeButton', {\n          controlText: 'Close Modal Dialog'\n        });\n        this.contentEl_ = temp;\n        this.on(close, 'close', this.close_);\n      }\n\n      // If this is being made uncloseable and has a close button, remove it.\n      if (!closeable && close) {\n        this.off(close, 'close', this.close_);\n        this.removeChild(close);\n        close.dispose();\n      }\n    }\n    return this.closeable_;\n  }\n\n  /**\n   * Fill the modal's content element with the modal's \"content\" option.\n   * The content element will be emptied before this change takes place.\n   */\n  fill() {\n    this.fillWith(this.content());\n  }\n\n  /**\n   * Fill the modal's content element with arbitrary content.\n   * The content element will be emptied before this change takes place.\n   *\n   * @fires ModalDialog#beforemodalfill\n   * @fires ModalDialog#modalfill\n   *\n   * @param { import('./utils/dom').ContentDescriptor} [content]\n   *        The same rules apply to this as apply to the `content` option.\n   */\n  fillWith(content) {\n    const contentEl = this.contentEl();\n    const parentEl = contentEl.parentNode;\n    const nextSiblingEl = contentEl.nextSibling;\n\n    /**\n      * Fired just before a `ModalDialog` is filled with content.\n      *\n      * @event ModalDialog#beforemodalfill\n      * @type {Event}\n      */\n    this.trigger('beforemodalfill');\n    this.hasBeenFilled_ = true;\n\n    // Detach the content element from the DOM before performing\n    // manipulation to avoid modifying the live DOM multiple times.\n    parentEl.removeChild(contentEl);\n    this.empty();\n    insertContent(contentEl, content);\n    /**\n     * Fired just after a `ModalDialog` is filled with content.\n     *\n     * @event ModalDialog#modalfill\n     * @type {Event}\n     */\n    this.trigger('modalfill');\n\n    // Re-inject the re-filled content element.\n    if (nextSiblingEl) {\n      parentEl.insertBefore(contentEl, nextSiblingEl);\n    } else {\n      parentEl.appendChild(contentEl);\n    }\n\n    // make sure that the close button is last in the dialog DOM\n    const closeButton = this.getChild('closeButton');\n    if (closeButton) {\n      parentEl.appendChild(closeButton.el_);\n    }\n  }\n\n  /**\n   * Empties the content element. This happens anytime the modal is filled.\n   *\n   * @fires ModalDialog#beforemodalempty\n   * @fires ModalDialog#modalempty\n   */\n  empty() {\n    /**\n    * Fired just before a `ModalDialog` is emptied.\n    *\n    * @event ModalDialog#beforemodalempty\n    * @type {Event}\n    */\n    this.trigger('beforemodalempty');\n    emptyEl(this.contentEl());\n\n    /**\n    * Fired just after a `ModalDialog` is emptied.\n    *\n    * @event ModalDialog#modalempty\n    * @type {Event}\n    */\n    this.trigger('modalempty');\n  }\n\n  /**\n   * Gets or sets the modal content, which gets normalized before being\n   * rendered into the DOM.\n   *\n   * This does not update the DOM or fill the modal, but it is called during\n   * that process.\n   *\n   * @param  { import('./utils/dom').ContentDescriptor} [value]\n   *         If defined, sets the internal content value to be used on the\n   *         next call(s) to `fill`. This value is normalized before being\n   *         inserted. To \"clear\" the internal content value, pass `null`.\n   *\n   * @return { import('./utils/dom').ContentDescriptor}\n   *         The current content of the modal dialog\n   */\n  content(value) {\n    if (typeof value !== 'undefined') {\n      this.content_ = value;\n    }\n    return this.content_;\n  }\n\n  /**\n   * conditionally focus the modal dialog if focus was previously on the player.\n   *\n   * @private\n   */\n  conditionalFocus_() {\n    const activeEl = document.activeElement;\n    const playerEl = this.player_.el_;\n    this.previouslyActiveEl_ = null;\n    if (playerEl.contains(activeEl) || playerEl === activeEl) {\n      this.previouslyActiveEl_ = activeEl;\n      this.focus();\n    }\n  }\n\n  /**\n   * conditionally blur the element and refocus the last focused element\n   *\n   * @private\n   */\n  conditionalBlur_() {\n    if (this.previouslyActiveEl_) {\n      this.previouslyActiveEl_.focus();\n      this.previouslyActiveEl_ = null;\n    }\n  }\n\n  /**\n   * Keydown handler. Attached when modal is focused.\n   *\n   * @listens keydown\n   */\n  handleKeyDown(event) {\n    // Do not allow keydowns to reach out of the modal dialog.\n    event.stopPropagation();\n    if (keycode.isEventKey(event, 'Escape') && this.closeable()) {\n      event.preventDefault();\n      this.close();\n      return;\n    }\n\n    // exit early if it isn't a tab key\n    if (!keycode.isEventKey(event, 'Tab')) {\n      return;\n    }\n    const focusableEls = this.focusableEls_();\n    const activeEl = this.el_.querySelector(':focus');\n    let focusIndex;\n    for (let i = 0; i < focusableEls.length; i++) {\n      if (activeEl === focusableEls[i]) {\n        focusIndex = i;\n        break;\n      }\n    }\n    if (document.activeElement === this.el_) {\n      focusIndex = 0;\n    }\n    if (event.shiftKey && focusIndex === 0) {\n      focusableEls[focusableEls.length - 1].focus();\n      event.preventDefault();\n    } else if (!event.shiftKey && focusIndex === focusableEls.length - 1) {\n      focusableEls[0].focus();\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * get all focusable elements\n   *\n   * @private\n   */\n  focusableEls_() {\n    const allChildren = this.el_.querySelectorAll('*');\n    return Array.prototype.filter.call(allChildren, child => {\n      return (child instanceof window$1.HTMLAnchorElement || child instanceof window$1.HTMLAreaElement) && child.hasAttribute('href') || (child instanceof window$1.HTMLInputElement || child instanceof window$1.HTMLSelectElement || child instanceof window$1.HTMLTextAreaElement || child instanceof window$1.HTMLButtonElement) && !child.hasAttribute('disabled') || child instanceof window$1.HTMLIFrameElement || child instanceof window$1.HTMLObjectElement || child instanceof window$1.HTMLEmbedElement || child.hasAttribute('tabindex') && child.getAttribute('tabindex') !== -1 || child.hasAttribute('contenteditable');\n    });\n  }\n}\n\n/**\n * Default options for `ModalDialog` default options.\n *\n * @type {Object}\n * @private\n */\nModalDialog.prototype.options_ = {\n  pauseOnOpen: true,\n  temporary: true\n};\nComponent$1.registerComponent('ModalDialog', ModalDialog);\n\n/**\n * @file track-list.js\n */\n\n/**\n * Common functionaliy between {@link TextTrackList}, {@link AudioTrackList}, and\n * {@link VideoTrackList}\n *\n * @extends EventTarget\n */\nclass TrackList extends EventTarget$2 {\n  /**\n   * Create an instance of this class\n   *\n   * @param { import('./track').default[] } tracks\n   *        A list of tracks to initialize the list with.\n   *\n   * @abstract\n   */\n  constructor(tracks = []) {\n    super();\n    this.tracks_ = [];\n\n    /**\n     * @memberof TrackList\n     * @member {number} length\n     *         The current number of `Track`s in the this Trackist.\n     * @instance\n     */\n    Object.defineProperty(this, 'length', {\n      get() {\n        return this.tracks_.length;\n      }\n    });\n    for (let i = 0; i < tracks.length; i++) {\n      this.addTrack(tracks[i]);\n    }\n  }\n\n  /**\n   * Add a {@link Track} to the `TrackList`\n   *\n   * @param { import('./track').default } track\n   *        The audio, video, or text track to add to the list.\n   *\n   * @fires TrackList#addtrack\n   */\n  addTrack(track) {\n    const index = this.tracks_.length;\n    if (!('' + index in this)) {\n      Object.defineProperty(this, index, {\n        get() {\n          return this.tracks_[index];\n        }\n      });\n    }\n\n    // Do not add duplicate tracks\n    if (this.tracks_.indexOf(track) === -1) {\n      this.tracks_.push(track);\n      /**\n       * Triggered when a track is added to a track list.\n       *\n       * @event TrackList#addtrack\n       * @type {Event}\n       * @property {Track} track\n       *           A reference to track that was added.\n       */\n      this.trigger({\n        track,\n        type: 'addtrack',\n        target: this\n      });\n    }\n\n    /**\n     * Triggered when a track label is changed.\n     *\n     * @event TrackList#addtrack\n     * @type {Event}\n     * @property {Track} track\n     *           A reference to track that was added.\n     */\n    track.labelchange_ = () => {\n      this.trigger({\n        track,\n        type: 'labelchange',\n        target: this\n      });\n    };\n    if (isEvented(track)) {\n      track.addEventListener('labelchange', track.labelchange_);\n    }\n  }\n\n  /**\n   * Remove a {@link Track} from the `TrackList`\n   *\n   * @param { import('./track').default } rtrack\n   *        The audio, video, or text track to remove from the list.\n   *\n   * @fires TrackList#removetrack\n   */\n  removeTrack(rtrack) {\n    let track;\n    for (let i = 0, l = this.length; i < l; i++) {\n      if (this[i] === rtrack) {\n        track = this[i];\n        if (track.off) {\n          track.off();\n        }\n        this.tracks_.splice(i, 1);\n        break;\n      }\n    }\n    if (!track) {\n      return;\n    }\n\n    /**\n     * Triggered when a track is removed from track list.\n     *\n     * @event TrackList#removetrack\n     * @type {Event}\n     * @property {Track} track\n     *           A reference to track that was removed.\n     */\n    this.trigger({\n      track,\n      type: 'removetrack',\n      target: this\n    });\n  }\n\n  /**\n   * Get a Track from the TrackList by a tracks id\n   *\n   * @param {string} id - the id of the track to get\n   * @method getTrackById\n   * @return { import('./track').default }\n   * @private\n   */\n  getTrackById(id) {\n    let result = null;\n    for (let i = 0, l = this.length; i < l; i++) {\n      const track = this[i];\n      if (track.id === id) {\n        result = track;\n        break;\n      }\n    }\n    return result;\n  }\n}\n\n/**\n * Triggered when a different track is selected/enabled.\n *\n * @event TrackList#change\n * @type {Event}\n */\n\n/**\n * Events that can be called with on + eventName. See {@link EventHandler}.\n *\n * @property {Object} TrackList#allowedEvents_\n * @private\n */\nTrackList.prototype.allowedEvents_ = {\n  change: 'change',\n  addtrack: 'addtrack',\n  removetrack: 'removetrack',\n  labelchange: 'labelchange'\n};\n\n// emulate attribute EventHandler support to allow for feature detection\nfor (const event in TrackList.prototype.allowedEvents_) {\n  TrackList.prototype['on' + event] = null;\n}\n\n/**\n * @file audio-track-list.js\n */\n\n/**\n * Anywhere we call this function we diverge from the spec\n * as we only support one enabled audiotrack at a time\n *\n * @param {AudioTrackList} list\n *        list to work on\n *\n * @param { import('./audio-track').default } track\n *        The track to skip\n *\n * @private\n */\nconst disableOthers$1 = function (list, track) {\n  for (let i = 0; i < list.length; i++) {\n    if (!Object.keys(list[i]).length || track.id === list[i].id) {\n      continue;\n    }\n    // another audio track is enabled, disable it\n    list[i].enabled = false;\n  }\n};\n\n/**\n * The current list of {@link AudioTrack} for a media file.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotracklist}\n * @extends TrackList\n */\nclass AudioTrackList extends TrackList {\n  /**\n   * Create an instance of this class.\n   *\n   * @param {AudioTrack[]} [tracks=[]]\n   *        A list of `AudioTrack` to instantiate the list with.\n   */\n  constructor(tracks = []) {\n    // make sure only 1 track is enabled\n    // sorted from last index to first index\n    for (let i = tracks.length - 1; i >= 0; i--) {\n      if (tracks[i].enabled) {\n        disableOthers$1(tracks, tracks[i]);\n        break;\n      }\n    }\n    super(tracks);\n    this.changing_ = false;\n  }\n\n  /**\n   * Add an {@link AudioTrack} to the `AudioTrackList`.\n   *\n   * @param { import('./audio-track').default } track\n   *        The AudioTrack to add to the list\n   *\n   * @fires TrackList#addtrack\n   */\n  addTrack(track) {\n    if (track.enabled) {\n      disableOthers$1(this, track);\n    }\n    super.addTrack(track);\n    // native tracks don't have this\n    if (!track.addEventListener) {\n      return;\n    }\n    track.enabledChange_ = () => {\n      // when we are disabling other tracks (since we don't support\n      // more than one track at a time) we will set changing_\n      // to true so that we don't trigger additional change events\n      if (this.changing_) {\n        return;\n      }\n      this.changing_ = true;\n      disableOthers$1(this, track);\n      this.changing_ = false;\n      this.trigger('change');\n    };\n\n    /**\n     * @listens AudioTrack#enabledchange\n     * @fires TrackList#change\n     */\n    track.addEventListener('enabledchange', track.enabledChange_);\n  }\n  removeTrack(rtrack) {\n    super.removeTrack(rtrack);\n    if (rtrack.removeEventListener && rtrack.enabledChange_) {\n      rtrack.removeEventListener('enabledchange', rtrack.enabledChange_);\n      rtrack.enabledChange_ = null;\n    }\n  }\n}\n\n/**\n * @file video-track-list.js\n */\n\n/**\n * Un-select all other {@link VideoTrack}s that are selected.\n *\n * @param {VideoTrackList} list\n *        list to work on\n *\n * @param { import('./video-track').default } track\n *        The track to skip\n *\n * @private\n */\nconst disableOthers = function (list, track) {\n  for (let i = 0; i < list.length; i++) {\n    if (!Object.keys(list[i]).length || track.id === list[i].id) {\n      continue;\n    }\n    // another video track is enabled, disable it\n    list[i].selected = false;\n  }\n};\n\n/**\n * The current list of {@link VideoTrack} for a video.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#videotracklist}\n * @extends TrackList\n */\nclass VideoTrackList extends TrackList {\n  /**\n   * Create an instance of this class.\n   *\n   * @param {VideoTrack[]} [tracks=[]]\n   *        A list of `VideoTrack` to instantiate the list with.\n   */\n  constructor(tracks = []) {\n    // make sure only 1 track is enabled\n    // sorted from last index to first index\n    for (let i = tracks.length - 1; i >= 0; i--) {\n      if (tracks[i].selected) {\n        disableOthers(tracks, tracks[i]);\n        break;\n      }\n    }\n    super(tracks);\n    this.changing_ = false;\n\n    /**\n     * @member {number} VideoTrackList#selectedIndex\n     *         The current index of the selected {@link VideoTrack`}.\n     */\n    Object.defineProperty(this, 'selectedIndex', {\n      get() {\n        for (let i = 0; i < this.length; i++) {\n          if (this[i].selected) {\n            return i;\n          }\n        }\n        return -1;\n      },\n      set() {}\n    });\n  }\n\n  /**\n   * Add a {@link VideoTrack} to the `VideoTrackList`.\n   *\n   * @param { import('./video-track').default } track\n   *        The VideoTrack to add to the list\n   *\n   * @fires TrackList#addtrack\n   */\n  addTrack(track) {\n    if (track.selected) {\n      disableOthers(this, track);\n    }\n    super.addTrack(track);\n    // native tracks don't have this\n    if (!track.addEventListener) {\n      return;\n    }\n    track.selectedChange_ = () => {\n      if (this.changing_) {\n        return;\n      }\n      this.changing_ = true;\n      disableOthers(this, track);\n      this.changing_ = false;\n      this.trigger('change');\n    };\n\n    /**\n     * @listens VideoTrack#selectedchange\n     * @fires TrackList#change\n     */\n    track.addEventListener('selectedchange', track.selectedChange_);\n  }\n  removeTrack(rtrack) {\n    super.removeTrack(rtrack);\n    if (rtrack.removeEventListener && rtrack.selectedChange_) {\n      rtrack.removeEventListener('selectedchange', rtrack.selectedChange_);\n      rtrack.selectedChange_ = null;\n    }\n  }\n}\n\n/**\n * @file text-track-list.js\n */\n\n/**\n * The current list of {@link TextTrack} for a media file.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttracklist}\n * @extends TrackList\n */\nclass TextTrackList extends TrackList {\n  /**\n   * Add a {@link TextTrack} to the `TextTrackList`\n   *\n   * @param { import('./text-track').default } track\n   *        The text track to add to the list.\n   *\n   * @fires TrackList#addtrack\n   */\n  addTrack(track) {\n    super.addTrack(track);\n    if (!this.queueChange_) {\n      this.queueChange_ = () => this.queueTrigger('change');\n    }\n    if (!this.triggerSelectedlanguagechange) {\n      this.triggerSelectedlanguagechange_ = () => this.trigger('selectedlanguagechange');\n    }\n\n    /**\n     * @listens TextTrack#modechange\n     * @fires TrackList#change\n     */\n    track.addEventListener('modechange', this.queueChange_);\n    const nonLanguageTextTrackKind = ['metadata', 'chapters'];\n    if (nonLanguageTextTrackKind.indexOf(track.kind) === -1) {\n      track.addEventListener('modechange', this.triggerSelectedlanguagechange_);\n    }\n  }\n  removeTrack(rtrack) {\n    super.removeTrack(rtrack);\n\n    // manually remove the event handlers we added\n    if (rtrack.removeEventListener) {\n      if (this.queueChange_) {\n        rtrack.removeEventListener('modechange', this.queueChange_);\n      }\n      if (this.selectedlanguagechange_) {\n        rtrack.removeEventListener('modechange', this.triggerSelectedlanguagechange_);\n      }\n    }\n  }\n}\n\n/**\n * @file html-track-element-list.js\n */\n\n/**\n * The current list of {@link HtmlTrackElement}s.\n */\nclass HtmlTrackElementList {\n  /**\n   * Create an instance of this class.\n   *\n   * @param {HtmlTrackElement[]} [tracks=[]]\n   *        A list of `HtmlTrackElement` to instantiate the list with.\n   */\n  constructor(trackElements = []) {\n    this.trackElements_ = [];\n\n    /**\n     * @memberof HtmlTrackElementList\n     * @member {number} length\n     *         The current number of `Track`s in the this Trackist.\n     * @instance\n     */\n    Object.defineProperty(this, 'length', {\n      get() {\n        return this.trackElements_.length;\n      }\n    });\n    for (let i = 0, length = trackElements.length; i < length; i++) {\n      this.addTrackElement_(trackElements[i]);\n    }\n  }\n\n  /**\n   * Add an {@link HtmlTrackElement} to the `HtmlTrackElementList`\n   *\n   * @param {HtmlTrackElement} trackElement\n   *        The track element to add to the list.\n   *\n   * @private\n   */\n  addTrackElement_(trackElement) {\n    const index = this.trackElements_.length;\n    if (!('' + index in this)) {\n      Object.defineProperty(this, index, {\n        get() {\n          return this.trackElements_[index];\n        }\n      });\n    }\n\n    // Do not add duplicate elements\n    if (this.trackElements_.indexOf(trackElement) === -1) {\n      this.trackElements_.push(trackElement);\n    }\n  }\n\n  /**\n   * Get an {@link HtmlTrackElement} from the `HtmlTrackElementList` given an\n   * {@link TextTrack}.\n   *\n   * @param {TextTrack} track\n   *        The track associated with a track element.\n   *\n   * @return {HtmlTrackElement|undefined}\n   *         The track element that was found or undefined.\n   *\n   * @private\n   */\n  getTrackElementByTrack_(track) {\n    let trackElement_;\n    for (let i = 0, length = this.trackElements_.length; i < length; i++) {\n      if (track === this.trackElements_[i].track) {\n        trackElement_ = this.trackElements_[i];\n        break;\n      }\n    }\n    return trackElement_;\n  }\n\n  /**\n   * Remove a {@link HtmlTrackElement} from the `HtmlTrackElementList`\n   *\n   * @param {HtmlTrackElement} trackElement\n   *        The track element to remove from the list.\n   *\n   * @private\n   */\n  removeTrackElement_(trackElement) {\n    for (let i = 0, length = this.trackElements_.length; i < length; i++) {\n      if (trackElement === this.trackElements_[i]) {\n        if (this.trackElements_[i].track && typeof this.trackElements_[i].track.off === 'function') {\n          this.trackElements_[i].track.off();\n        }\n        if (typeof this.trackElements_[i].off === 'function') {\n          this.trackElements_[i].off();\n        }\n        this.trackElements_.splice(i, 1);\n        break;\n      }\n    }\n  }\n}\n\n/**\n * @file text-track-cue-list.js\n */\n\n/**\n * @typedef {Object} TextTrackCueList~TextTrackCue\n *\n * @property {string} id\n *           The unique id for this text track cue\n *\n * @property {number} startTime\n *           The start time for this text track cue\n *\n * @property {number} endTime\n *           The end time for this text track cue\n *\n * @property {boolean} pauseOnExit\n *           Pause when the end time is reached if true.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackcue}\n */\n\n/**\n * A List of TextTrackCues.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackcuelist}\n */\nclass TextTrackCueList {\n  /**\n   * Create an instance of this class..\n   *\n   * @param {Array} cues\n   *        A list of cues to be initialized with\n   */\n  constructor(cues) {\n    TextTrackCueList.prototype.setCues_.call(this, cues);\n\n    /**\n     * @memberof TextTrackCueList\n     * @member {number} length\n     *         The current number of `TextTrackCue`s in the TextTrackCueList.\n     * @instance\n     */\n    Object.defineProperty(this, 'length', {\n      get() {\n        return this.length_;\n      }\n    });\n  }\n\n  /**\n   * A setter for cues in this list. Creates getters\n   * an an index for the cues.\n   *\n   * @param {Array} cues\n   *        An array of cues to set\n   *\n   * @private\n   */\n  setCues_(cues) {\n    const oldLength = this.length || 0;\n    let i = 0;\n    const l = cues.length;\n    this.cues_ = cues;\n    this.length_ = cues.length;\n    const defineProp = function (index) {\n      if (!('' + index in this)) {\n        Object.defineProperty(this, '' + index, {\n          get() {\n            return this.cues_[index];\n          }\n        });\n      }\n    };\n    if (oldLength < l) {\n      i = oldLength;\n      for (; i < l; i++) {\n        defineProp.call(this, i);\n      }\n    }\n  }\n\n  /**\n   * Get a `TextTrackCue` that is currently in the `TextTrackCueList` by id.\n   *\n   * @param {string} id\n   *        The id of the cue that should be searched for.\n   *\n   * @return {TextTrackCueList~TextTrackCue|null}\n   *         A single cue or null if none was found.\n   */\n  getCueById(id) {\n    let result = null;\n    for (let i = 0, l = this.length; i < l; i++) {\n      const cue = this[i];\n      if (cue.id === id) {\n        result = cue;\n        break;\n      }\n    }\n    return result;\n  }\n}\n\n/**\n * @file track-kinds.js\n */\n\n/**\n * All possible `VideoTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-videotrack-kind\n * @typedef VideoTrack~Kind\n * @enum\n */\nconst VideoTrackKind = {\n  alternative: 'alternative',\n  captions: 'captions',\n  main: 'main',\n  sign: 'sign',\n  subtitles: 'subtitles',\n  commentary: 'commentary'\n};\n\n/**\n * All possible `AudioTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-audiotrack-kind\n * @typedef AudioTrack~Kind\n * @enum\n */\nconst AudioTrackKind = {\n  'alternative': 'alternative',\n  'descriptions': 'descriptions',\n  'main': 'main',\n  'main-desc': 'main-desc',\n  'translation': 'translation',\n  'commentary': 'commentary'\n};\n\n/**\n * All possible `TextTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-texttrack-kind\n * @typedef TextTrack~Kind\n * @enum\n */\nconst TextTrackKind = {\n  subtitles: 'subtitles',\n  captions: 'captions',\n  descriptions: 'descriptions',\n  chapters: 'chapters',\n  metadata: 'metadata'\n};\n\n/**\n * All possible `TextTrackMode`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackmode\n * @typedef TextTrack~Mode\n * @enum\n */\nconst TextTrackMode = {\n  disabled: 'disabled',\n  hidden: 'hidden',\n  showing: 'showing'\n};\n\n/**\n * @file track.js\n */\n\n/**\n * A Track class that contains all of the common functionality for {@link AudioTrack},\n * {@link VideoTrack}, and {@link TextTrack}.\n *\n * > Note: This class should not be used directly\n *\n * @see {@link https://html.spec.whatwg.org/multipage/embedded-content.html}\n * @extends EventTarget\n * @abstract\n */\nclass Track extends EventTarget$2 {\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {string} [options.kind='']\n   *        A valid kind for the track type you are creating.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @abstract\n   */\n  constructor(options = {}) {\n    super();\n    const trackProps = {\n      id: options.id || 'vjs_track_' + newGUID(),\n      kind: options.kind || '',\n      language: options.language || ''\n    };\n    let label = options.label || '';\n\n    /**\n     * @memberof Track\n     * @member {string} id\n     *         The id of this track. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} kind\n     *         The kind of track that this is. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} language\n     *         The two letter language code for this track. Cannot be changed after\n     *         creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    for (const key in trackProps) {\n      Object.defineProperty(this, key, {\n        get() {\n          return trackProps[key];\n        },\n        set() {}\n      });\n    }\n\n    /**\n     * @memberof Track\n     * @member {string} label\n     *         The label of this track. Cannot be changed after creation.\n     * @instance\n     *\n     * @fires Track#labelchange\n     */\n    Object.defineProperty(this, 'label', {\n      get() {\n        return label;\n      },\n      set(newLabel) {\n        if (newLabel !== label) {\n          label = newLabel;\n\n          /**\n           * An event that fires when label changes on this track.\n           *\n           * > Note: This is not part of the spec!\n           *\n           * @event Track#labelchange\n           * @type {Event}\n           */\n          this.trigger('labelchange');\n        }\n      }\n    });\n  }\n}\n\n/**\n * @file url.js\n * @module url\n */\n\n/**\n * @typedef {Object} url:URLObject\n *\n * @property {string} protocol\n *           The protocol of the url that was parsed.\n *\n * @property {string} hostname\n *           The hostname of the url that was parsed.\n *\n * @property {string} port\n *           The port of the url that was parsed.\n *\n * @property {string} pathname\n *           The pathname of the url that was parsed.\n *\n * @property {string} search\n *           The search query of the url that was parsed.\n *\n * @property {string} hash\n *           The hash of the url that was parsed.\n *\n * @property {string} host\n *           The host of the url that was parsed.\n */\n\n/**\n * Resolve and parse the elements of a URL.\n *\n * @function\n * @param    {String} url\n *           The url to parse\n *\n * @return   {url:URLObject}\n *           An object of url details\n */\nconst parseUrl = function (url) {\n  // This entire method can be replace with URL once we are able to drop IE11\n\n  const props = ['protocol', 'hostname', 'port', 'pathname', 'search', 'hash', 'host'];\n\n  // add the url to an anchor and let the browser parse the URL\n  const a = document.createElement('a');\n  a.href = url;\n\n  // Copy the specific URL properties to a new object\n  // This is also needed for IE because the anchor loses its\n  // properties when it's removed from the dom\n  const details = {};\n  for (let i = 0; i < props.length; i++) {\n    details[props[i]] = a[props[i]];\n  }\n\n  // IE adds the port to the host property unlike everyone else. If\n  // a port identifier is added for standard ports, strip it.\n  if (details.protocol === 'http:') {\n    details.host = details.host.replace(/:80$/, '');\n  }\n  if (details.protocol === 'https:') {\n    details.host = details.host.replace(/:443$/, '');\n  }\n  if (!details.protocol) {\n    details.protocol = window$1.location.protocol;\n  }\n\n  /* istanbul ignore if */\n  if (!details.host) {\n    details.host = window$1.location.host;\n  }\n  return details;\n};\n\n/**\n * Get absolute version of relative URL.\n *\n * @function\n * @param    {string} url\n *           URL to make absolute\n *\n * @return   {string}\n *           Absolute URL\n *\n * @see      http://stackoverflow.com/questions/470832/getting-an-absolute-url-from-a-relative-one-ie6-issue\n */\nconst getAbsoluteURL = function (url) {\n  // Check if absolute URL\n  if (!url.match(/^https?:\\/\\//)) {\n    // Add the url to an anchor and let the browser parse it to convert to an absolute url\n    const a = document.createElement('a');\n    a.href = url;\n    url = a.href;\n  }\n  return url;\n};\n\n/**\n * Returns the extension of the passed file name. It will return an empty string\n * if passed an invalid path.\n *\n * @function\n * @param    {string} path\n *           The fileName path like '/path/to/file.mp4'\n *\n * @return  {string}\n *           The extension in lower case or an empty string if no\n *           extension could be found.\n */\nconst getFileExtension = function (path) {\n  if (typeof path === 'string') {\n    const splitPathRe = /^(\\/?)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?)(\\.([^\\.\\/\\?]+)))(?:[\\/]*|[\\?].*)$/;\n    const pathParts = splitPathRe.exec(path);\n    if (pathParts) {\n      return pathParts.pop().toLowerCase();\n    }\n  }\n  return '';\n};\n\n/**\n * Returns whether the url passed is a cross domain request or not.\n *\n * @function\n * @param    {string} url\n *           The url to check.\n *\n * @param    {Object} [winLoc]\n *           the domain to check the url against, defaults to window.location\n *\n * @param    {string} [winLoc.protocol]\n *           The window location protocol defaults to window.location.protocol\n *\n * @param    {string} [winLoc.host]\n *           The window location host defaults to window.location.host\n *\n * @return   {boolean}\n *           Whether it is a cross domain request or not.\n */\nconst isCrossOrigin = function (url, winLoc = window$1.location) {\n  const urlInfo = parseUrl(url);\n\n  // IE8 protocol relative urls will return ':' for protocol\n  const srcProtocol = urlInfo.protocol === ':' ? winLoc.protocol : urlInfo.protocol;\n\n  // Check if url is for another domain/origin\n  // IE8 doesn't know location.origin, so we won't rely on it here\n  const crossOrigin = srcProtocol + urlInfo.host !== winLoc.protocol + winLoc.host;\n  return crossOrigin;\n};\n\nvar Url = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  parseUrl: parseUrl,\n  getAbsoluteURL: getAbsoluteURL,\n  getFileExtension: getFileExtension,\n  isCrossOrigin: isCrossOrigin\n});\n\n/**\n * @file text-track.js\n */\n\n/**\n * Takes a webvtt file contents and parses it into cues\n *\n * @param {string} srcContent\n *        webVTT file contents\n *\n * @param {TextTrack} track\n *        TextTrack to add cues to. Cues come from the srcContent.\n *\n * @private\n */\nconst parseCues = function (srcContent, track) {\n  const parser = new window$1.WebVTT.Parser(window$1, window$1.vttjs, window$1.WebVTT.StringDecoder());\n  const errors = [];\n  parser.oncue = function (cue) {\n    track.addCue(cue);\n  };\n  parser.onparsingerror = function (error) {\n    errors.push(error);\n  };\n  parser.onflush = function () {\n    track.trigger({\n      type: 'loadeddata',\n      target: track\n    });\n  };\n  parser.parse(srcContent);\n  if (errors.length > 0) {\n    if (window$1.console && window$1.console.groupCollapsed) {\n      window$1.console.groupCollapsed(`Text Track parsing errors for ${track.src}`);\n    }\n    errors.forEach(error => log$1.error(error));\n    if (window$1.console && window$1.console.groupEnd) {\n      window$1.console.groupEnd();\n    }\n  }\n  parser.flush();\n};\n\n/**\n * Load a `TextTrack` from a specified url.\n *\n * @param {string} src\n *        Url to load track from.\n *\n * @param {TextTrack} track\n *        Track to add cues to. Comes from the content at the end of `url`.\n *\n * @private\n */\nconst loadTrack = function (src, track) {\n  const opts = {\n    uri: src\n  };\n  const crossOrigin = isCrossOrigin(src);\n  if (crossOrigin) {\n    opts.cors = crossOrigin;\n  }\n  const withCredentials = track.tech_.crossOrigin() === 'use-credentials';\n  if (withCredentials) {\n    opts.withCredentials = withCredentials;\n  }\n  XHR(opts, bind_(this, function (err, response, responseBody) {\n    if (err) {\n      return log$1.error(err, response);\n    }\n    track.loaded_ = true;\n\n    // Make sure that vttjs has loaded, otherwise, wait till it finished loading\n    // NOTE: this is only used for the alt/video.novtt.js build\n    if (typeof window$1.WebVTT !== 'function') {\n      if (track.tech_) {\n        // to prevent use before define eslint error, we define loadHandler\n        // as a let here\n        track.tech_.any(['vttjsloaded', 'vttjserror'], event => {\n          if (event.type === 'vttjserror') {\n            log$1.error(`vttjs failed to load, stopping trying to process ${track.src}`);\n            return;\n          }\n          return parseCues(responseBody, track);\n        });\n      }\n    } else {\n      parseCues(responseBody, track);\n    }\n  }));\n};\n\n/**\n * A representation of a single `TextTrack`.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrack}\n * @extends Track\n */\nclass TextTrack extends Track {\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} options={}\n   *        Object of option names and values\n   *\n   * @param { import('../tech/tech').default } options.tech\n   *        A reference to the tech that owns this TextTrack.\n   *\n   * @param {TextTrack~Kind} [options.kind='subtitles']\n   *        A valid text track kind.\n   *\n   * @param {TextTrack~Mode} [options.mode='disabled']\n   *        A valid text track mode.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this TextTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {string} [options.srclang='']\n   *        A valid two character language code. An alternative, but deprioritized\n   *        version of `options.language`\n   *\n   * @param {string} [options.src]\n   *        A url to TextTrack cues.\n   *\n   * @param {boolean} [options.default]\n   *        If this track should default to on or off.\n   */\n  constructor(options = {}) {\n    if (!options.tech) {\n      throw new Error('A tech was not provided.');\n    }\n    const settings = merge$1(options, {\n      kind: TextTrackKind[options.kind] || 'subtitles',\n      language: options.language || options.srclang || ''\n    });\n    let mode = TextTrackMode[settings.mode] || 'disabled';\n    const default_ = settings.default;\n    if (settings.kind === 'metadata' || settings.kind === 'chapters') {\n      mode = 'hidden';\n    }\n    super(settings);\n    this.tech_ = settings.tech;\n    this.cues_ = [];\n    this.activeCues_ = [];\n    this.preload_ = this.tech_.preloadTextTracks !== false;\n    const cues = new TextTrackCueList(this.cues_);\n    const activeCues = new TextTrackCueList(this.activeCues_);\n    let changed = false;\n    this.timeupdateHandler = bind_(this, function (event = {}) {\n      if (this.tech_.isDisposed()) {\n        return;\n      }\n      if (!this.tech_.isReady_) {\n        if (event.type !== 'timeupdate') {\n          this.rvf_ = this.tech_.requestVideoFrameCallback(this.timeupdateHandler);\n        }\n        return;\n      }\n\n      // Accessing this.activeCues for the side-effects of updating itself\n      // due to its nature as a getter function. Do not remove or cues will\n      // stop updating!\n      // Use the setter to prevent deletion from uglify (pure_getters rule)\n      this.activeCues = this.activeCues;\n      if (changed) {\n        this.trigger('cuechange');\n        changed = false;\n      }\n      if (event.type !== 'timeupdate') {\n        this.rvf_ = this.tech_.requestVideoFrameCallback(this.timeupdateHandler);\n      }\n    });\n    const disposeHandler = () => {\n      this.stopTracking();\n    };\n    this.tech_.one('dispose', disposeHandler);\n    if (mode !== 'disabled') {\n      this.startTracking();\n    }\n    Object.defineProperties(this, {\n      /**\n       * @memberof TextTrack\n       * @member {boolean} default\n       *         If this track was set to be on or off by default. Cannot be changed after\n       *         creation.\n       * @instance\n       *\n       * @readonly\n       */\n      default: {\n        get() {\n          return default_;\n        },\n        set() {}\n      },\n      /**\n       * @memberof TextTrack\n       * @member {string} mode\n       *         Set the mode of this TextTrack to a valid {@link TextTrack~Mode}. Will\n       *         not be set if setting to an invalid mode.\n       * @instance\n       *\n       * @fires TextTrack#modechange\n       */\n      mode: {\n        get() {\n          return mode;\n        },\n        set(newMode) {\n          if (!TextTrackMode[newMode]) {\n            return;\n          }\n          if (mode === newMode) {\n            return;\n          }\n          mode = newMode;\n          if (!this.preload_ && mode !== 'disabled' && this.cues.length === 0) {\n            // On-demand load.\n            loadTrack(this.src, this);\n          }\n          this.stopTracking();\n          if (mode !== 'disabled') {\n            this.startTracking();\n          }\n          /**\n           * An event that fires when mode changes on this track. This allows\n           * the TextTrackList that holds this track to act accordingly.\n           *\n           * > Note: This is not part of the spec!\n           *\n           * @event TextTrack#modechange\n           * @type {Event}\n           */\n          this.trigger('modechange');\n        }\n      },\n      /**\n       * @memberof TextTrack\n       * @member {TextTrackCueList} cues\n       *         The text track cue list for this TextTrack.\n       * @instance\n       */\n      cues: {\n        get() {\n          if (!this.loaded_) {\n            return null;\n          }\n          return cues;\n        },\n        set() {}\n      },\n      /**\n       * @memberof TextTrack\n       * @member {TextTrackCueList} activeCues\n       *         The list text track cues that are currently active for this TextTrack.\n       * @instance\n       */\n      activeCues: {\n        get() {\n          if (!this.loaded_) {\n            return null;\n          }\n\n          // nothing to do\n          if (this.cues.length === 0) {\n            return activeCues;\n          }\n          const ct = this.tech_.currentTime();\n          const active = [];\n          for (let i = 0, l = this.cues.length; i < l; i++) {\n            const cue = this.cues[i];\n            if (cue.startTime <= ct && cue.endTime >= ct) {\n              active.push(cue);\n            }\n          }\n          changed = false;\n          if (active.length !== this.activeCues_.length) {\n            changed = true;\n          } else {\n            for (let i = 0; i < active.length; i++) {\n              if (this.activeCues_.indexOf(active[i]) === -1) {\n                changed = true;\n              }\n            }\n          }\n          this.activeCues_ = active;\n          activeCues.setCues_(this.activeCues_);\n          return activeCues;\n        },\n        // /!\\ Keep this setter empty (see the timeupdate handler above)\n        set() {}\n      }\n    });\n    if (settings.src) {\n      this.src = settings.src;\n      if (!this.preload_) {\n        // Tracks will load on-demand.\n        // Act like we're loaded for other purposes.\n        this.loaded_ = true;\n      }\n      if (this.preload_ || settings.kind !== 'subtitles' && settings.kind !== 'captions') {\n        loadTrack(this.src, this);\n      }\n    } else {\n      this.loaded_ = true;\n    }\n  }\n  startTracking() {\n    // More precise cues based on requestVideoFrameCallback with a requestAnimationFram fallback\n    this.rvf_ = this.tech_.requestVideoFrameCallback(this.timeupdateHandler);\n    // Also listen to timeupdate in case rVFC/rAF stops (window in background, audio in video el)\n    this.tech_.on('timeupdate', this.timeupdateHandler);\n  }\n  stopTracking() {\n    if (this.rvf_) {\n      this.tech_.cancelVideoFrameCallback(this.rvf_);\n      this.rvf_ = undefined;\n    }\n    this.tech_.off('timeupdate', this.timeupdateHandler);\n  }\n\n  /**\n   * Add a cue to the internal list of cues.\n   *\n   * @param {TextTrack~Cue} cue\n   *        The cue to add to our internal list\n   */\n  addCue(originalCue) {\n    let cue = originalCue;\n    if (window$1.vttjs && !(originalCue instanceof window$1.vttjs.VTTCue)) {\n      cue = new window$1.vttjs.VTTCue(originalCue.startTime, originalCue.endTime, originalCue.text);\n      for (const prop in originalCue) {\n        if (!(prop in cue)) {\n          cue[prop] = originalCue[prop];\n        }\n      }\n\n      // make sure that `id` is copied over\n      cue.id = originalCue.id;\n      cue.originalCue_ = originalCue;\n    }\n    const tracks = this.tech_.textTracks();\n    for (let i = 0; i < tracks.length; i++) {\n      if (tracks[i] !== this) {\n        tracks[i].removeCue(cue);\n      }\n    }\n    this.cues_.push(cue);\n    this.cues.setCues_(this.cues_);\n  }\n\n  /**\n   * Remove a cue from our internal list\n   *\n   * @param {TextTrack~Cue} removeCue\n   *        The cue to remove from our internal list\n   */\n  removeCue(removeCue) {\n    let i = this.cues_.length;\n    while (i--) {\n      const cue = this.cues_[i];\n      if (cue === removeCue || cue.originalCue_ && cue.originalCue_ === removeCue) {\n        this.cues_.splice(i, 1);\n        this.cues.setCues_(this.cues_);\n        break;\n      }\n    }\n  }\n}\n\n/**\n * cuechange - One or more cues in the track have become active or stopped being active.\n */\nTextTrack.prototype.allowedEvents_ = {\n  cuechange: 'cuechange'\n};\n\n/**\n * A representation of a single `AudioTrack`. If it is part of an {@link AudioTrackList}\n * only one `AudioTrack` in the list will be enabled at a time.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotrack}\n * @extends Track\n */\nclass AudioTrack extends Track {\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {AudioTrack~Kind} [options.kind='']\n   *        A valid audio track kind\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {boolean} [options.enabled]\n   *        If this track is the one that is currently playing. If this track is part of\n   *        an {@link AudioTrackList}, only one {@link AudioTrack} will be enabled.\n   */\n  constructor(options = {}) {\n    const settings = merge$1(options, {\n      kind: AudioTrackKind[options.kind] || ''\n    });\n    super(settings);\n    let enabled = false;\n\n    /**\n     * @memberof AudioTrack\n     * @member {boolean} enabled\n     *         If this `AudioTrack` is enabled or not. When setting this will\n     *         fire {@link AudioTrack#enabledchange} if the state of enabled is changed.\n     * @instance\n     *\n     * @fires VideoTrack#selectedchange\n     */\n    Object.defineProperty(this, 'enabled', {\n      get() {\n        return enabled;\n      },\n      set(newEnabled) {\n        // an invalid or unchanged value\n        if (typeof newEnabled !== 'boolean' || newEnabled === enabled) {\n          return;\n        }\n        enabled = newEnabled;\n\n        /**\n         * An event that fires when enabled changes on this track. This allows\n         * the AudioTrackList that holds this track to act accordingly.\n         *\n         * > Note: This is not part of the spec! Native tracks will do\n         *         this internally without an event.\n         *\n         * @event AudioTrack#enabledchange\n         * @type {Event}\n         */\n        this.trigger('enabledchange');\n      }\n    });\n\n    // if the user sets this track to selected then\n    // set selected to that true value otherwise\n    // we keep it false\n    if (settings.enabled) {\n      this.enabled = settings.enabled;\n    }\n    this.loaded_ = true;\n  }\n}\n\n/**\n * A representation of a single `VideoTrack`.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#videotrack}\n * @extends Track\n */\nclass VideoTrack extends Track {\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {string} [options.kind='']\n   *        A valid {@link VideoTrack~Kind}\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {boolean} [options.selected]\n   *        If this track is the one that is currently playing.\n   */\n  constructor(options = {}) {\n    const settings = merge$1(options, {\n      kind: VideoTrackKind[options.kind] || ''\n    });\n    super(settings);\n    let selected = false;\n\n    /**\n     * @memberof VideoTrack\n     * @member {boolean} selected\n     *         If this `VideoTrack` is selected or not. When setting this will\n     *         fire {@link VideoTrack#selectedchange} if the state of selected changed.\n     * @instance\n     *\n     * @fires VideoTrack#selectedchange\n     */\n    Object.defineProperty(this, 'selected', {\n      get() {\n        return selected;\n      },\n      set(newSelected) {\n        // an invalid or unchanged value\n        if (typeof newSelected !== 'boolean' || newSelected === selected) {\n          return;\n        }\n        selected = newSelected;\n\n        /**\n         * An event that fires when selected changes on this track. This allows\n         * the VideoTrackList that holds this track to act accordingly.\n         *\n         * > Note: This is not part of the spec! Native tracks will do\n         *         this internally without an event.\n         *\n         * @event VideoTrack#selectedchange\n         * @type {Event}\n         */\n        this.trigger('selectedchange');\n      }\n    });\n\n    // if the user sets this track to selected then\n    // set selected to that true value otherwise\n    // we keep it false\n    if (settings.selected) {\n      this.selected = settings.selected;\n    }\n  }\n}\n\n/**\n * @file html-track-element.js\n */\n\n/**\n * A single track represented in the DOM.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#htmltrackelement}\n * @extends EventTarget\n */\nclass HTMLTrackElement extends EventTarget$2 {\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} options={}\n   *        Object of option names and values\n   *\n   * @param { import('../tech/tech').default } options.tech\n   *        A reference to the tech that owns this HTMLTrackElement.\n   *\n   * @param {TextTrack~Kind} [options.kind='subtitles']\n   *        A valid text track kind.\n   *\n   * @param {TextTrack~Mode} [options.mode='disabled']\n   *        A valid text track mode.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this TextTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {string} [options.srclang='']\n   *        A valid two character language code. An alternative, but deprioritized\n   *        version of `options.language`\n   *\n   * @param {string} [options.src]\n   *        A url to TextTrack cues.\n   *\n   * @param {boolean} [options.default]\n   *        If this track should default to on or off.\n   */\n  constructor(options = {}) {\n    super();\n    let readyState;\n    const track = new TextTrack(options);\n    this.kind = track.kind;\n    this.src = track.src;\n    this.srclang = track.language;\n    this.label = track.label;\n    this.default = track.default;\n    Object.defineProperties(this, {\n      /**\n       * @memberof HTMLTrackElement\n       * @member {HTMLTrackElement~ReadyState} readyState\n       *         The current ready state of the track element.\n       * @instance\n       */\n      readyState: {\n        get() {\n          return readyState;\n        }\n      },\n      /**\n       * @memberof HTMLTrackElement\n       * @member {TextTrack} track\n       *         The underlying TextTrack object.\n       * @instance\n       *\n       */\n      track: {\n        get() {\n          return track;\n        }\n      }\n    });\n    readyState = HTMLTrackElement.NONE;\n\n    /**\n     * @listens TextTrack#loadeddata\n     * @fires HTMLTrackElement#load\n     */\n    track.addEventListener('loadeddata', () => {\n      readyState = HTMLTrackElement.LOADED;\n      this.trigger({\n        type: 'load',\n        target: this\n      });\n    });\n  }\n}\nHTMLTrackElement.prototype.allowedEvents_ = {\n  load: 'load'\n};\n\n/**\n * The text track not loaded state.\n *\n * @type {number}\n * @static\n */\nHTMLTrackElement.NONE = 0;\n\n/**\n * The text track loading state.\n *\n * @type {number}\n * @static\n */\nHTMLTrackElement.LOADING = 1;\n\n/**\n * The text track loaded state.\n *\n * @type {number}\n * @static\n */\nHTMLTrackElement.LOADED = 2;\n\n/**\n * The text track failed to load state.\n *\n * @type {number}\n * @static\n */\nHTMLTrackElement.ERROR = 3;\n\n/*\n * This file contains all track properties that are used in\n * player.js, tech.js, html5.js and possibly other techs in the future.\n */\n\nconst NORMAL = {\n  audio: {\n    ListClass: AudioTrackList,\n    TrackClass: AudioTrack,\n    capitalName: 'Audio'\n  },\n  video: {\n    ListClass: VideoTrackList,\n    TrackClass: VideoTrack,\n    capitalName: 'Video'\n  },\n  text: {\n    ListClass: TextTrackList,\n    TrackClass: TextTrack,\n    capitalName: 'Text'\n  }\n};\nObject.keys(NORMAL).forEach(function (type) {\n  NORMAL[type].getterName = `${type}Tracks`;\n  NORMAL[type].privateName = `${type}Tracks_`;\n});\nconst REMOTE = {\n  remoteText: {\n    ListClass: TextTrackList,\n    TrackClass: TextTrack,\n    capitalName: 'RemoteText',\n    getterName: 'remoteTextTracks',\n    privateName: 'remoteTextTracks_'\n  },\n  remoteTextEl: {\n    ListClass: HtmlTrackElementList,\n    TrackClass: HTMLTrackElement,\n    capitalName: 'RemoteTextTrackEls',\n    getterName: 'remoteTextTrackEls',\n    privateName: 'remoteTextTrackEls_'\n  }\n};\nconst ALL = Object.assign({}, NORMAL, REMOTE);\nREMOTE.names = Object.keys(REMOTE);\nNORMAL.names = Object.keys(NORMAL);\nALL.names = [].concat(REMOTE.names).concat(NORMAL.names);\n\n/**\n * @file tech.js\n */\n\n/**\n * An Object containing a structure like: `{src: 'url', type: 'mimetype'}` or string\n * that just contains the src url alone.\n * * `var SourceObject = {src: 'http://ex.com/video.mp4', type: 'video/mp4'};`\n   * `var SourceString = 'http://example.com/some-video.mp4';`\n *\n * @typedef {Object|string} Tech~SourceObject\n *\n * @property {string} src\n *           The url to the source\n *\n * @property {string} type\n *           The mime type of the source\n */\n\n/**\n * A function used by {@link Tech} to create a new {@link TextTrack}.\n *\n * @private\n *\n * @param {Tech} self\n *        An instance of the Tech class.\n *\n * @param {string} kind\n *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n *\n * @param {string} [label]\n *        Label to identify the text track\n *\n * @param {string} [language]\n *        Two letter language abbreviation\n *\n * @param {Object} [options={}]\n *        An object with additional text track options\n *\n * @return {TextTrack}\n *          The text track that was created.\n */\nfunction createTrackHelper(self, kind, label, language, options = {}) {\n  const tracks = self.textTracks();\n  options.kind = kind;\n  if (label) {\n    options.label = label;\n  }\n  if (language) {\n    options.language = language;\n  }\n  options.tech = self;\n  const track = new ALL.text.TrackClass(options);\n  tracks.addTrack(track);\n  return track;\n}\n\n/**\n * This is the base class for media playback technology controllers, such as\n * {@link HTML5}\n *\n * @extends Component\n */\nclass Tech extends Component$1 {\n  /**\n  * Create an instance of this Tech.\n  *\n  * @param {Object} [options]\n  *        The key/value store of player options.\n  *\n  * @param {Function} [ready]\n  *        Callback function to call when the `HTML5` Tech is ready.\n  */\n  constructor(options = {}, ready = function () {}) {\n    // we don't want the tech to report user activity automatically.\n    // This is done manually in addControlsListeners\n    options.reportTouchActivity = false;\n    super(null, options, ready);\n    this.onDurationChange_ = e => this.onDurationChange(e);\n    this.trackProgress_ = e => this.trackProgress(e);\n    this.trackCurrentTime_ = e => this.trackCurrentTime(e);\n    this.stopTrackingCurrentTime_ = e => this.stopTrackingCurrentTime(e);\n    this.disposeSourceHandler_ = e => this.disposeSourceHandler(e);\n    this.queuedHanders_ = new Set();\n\n    // keep track of whether the current source has played at all to\n    // implement a very limited played()\n    this.hasStarted_ = false;\n    this.on('playing', function () {\n      this.hasStarted_ = true;\n    });\n    this.on('loadstart', function () {\n      this.hasStarted_ = false;\n    });\n    ALL.names.forEach(name => {\n      const props = ALL[name];\n      if (options && options[props.getterName]) {\n        this[props.privateName] = options[props.getterName];\n      }\n    });\n\n    // Manually track progress in cases where the browser/tech doesn't report it.\n    if (!this.featuresProgressEvents) {\n      this.manualProgressOn();\n    }\n\n    // Manually track timeupdates in cases where the browser/tech doesn't report it.\n    if (!this.featuresTimeupdateEvents) {\n      this.manualTimeUpdatesOn();\n    }\n    ['Text', 'Audio', 'Video'].forEach(track => {\n      if (options[`native${track}Tracks`] === false) {\n        this[`featuresNative${track}Tracks`] = false;\n      }\n    });\n    if (options.nativeCaptions === false || options.nativeTextTracks === false) {\n      this.featuresNativeTextTracks = false;\n    } else if (options.nativeCaptions === true || options.nativeTextTracks === true) {\n      this.featuresNativeTextTracks = true;\n    }\n    if (!this.featuresNativeTextTracks) {\n      this.emulateTextTracks();\n    }\n    this.preloadTextTracks = options.preloadTextTracks !== false;\n    this.autoRemoteTextTracks_ = new ALL.text.ListClass();\n    this.initTrackListeners();\n\n    // Turn on component tap events only if not using native controls\n    if (!options.nativeControlsForTouch) {\n      this.emitTapEvents();\n    }\n    if (this.constructor) {\n      this.name_ = this.constructor.name || 'Unknown Tech';\n    }\n  }\n\n  /**\n   * A special function to trigger source set in a way that will allow player\n   * to re-trigger if the player or tech are not ready yet.\n   *\n   * @fires Tech#sourceset\n   * @param {string} src The source string at the time of the source changing.\n   */\n  triggerSourceset(src) {\n    if (!this.isReady_) {\n      // on initial ready we have to trigger source set\n      // 1ms after ready so that player can watch for it.\n      this.one('ready', () => this.setTimeout(() => this.triggerSourceset(src), 1));\n    }\n\n    /**\n     * Fired when the source is set on the tech causing the media element\n     * to reload.\n     *\n     * @see {@link Player#event:sourceset}\n     * @event Tech#sourceset\n     * @type {Event}\n     */\n    this.trigger({\n      src,\n      type: 'sourceset'\n    });\n  }\n\n  /* Fallbacks for unsupported event types\n  ================================================================================ */\n\n  /**\n   * Polyfill the `progress` event for browsers that don't support it natively.\n   *\n   * @see {@link Tech#trackProgress}\n   */\n  manualProgressOn() {\n    this.on('durationchange', this.onDurationChange_);\n    this.manualProgress = true;\n\n    // Trigger progress watching when a source begins loading\n    this.one('ready', this.trackProgress_);\n  }\n\n  /**\n   * Turn off the polyfill for `progress` events that was created in\n   * {@link Tech#manualProgressOn}\n   */\n  manualProgressOff() {\n    this.manualProgress = false;\n    this.stopTrackingProgress();\n    this.off('durationchange', this.onDurationChange_);\n  }\n\n  /**\n   * This is used to trigger a `progress` event when the buffered percent changes. It\n   * sets an interval function that will be called every 500 milliseconds to check if the\n   * buffer end percent has changed.\n   *\n   * > This function is called by {@link Tech#manualProgressOn}\n   *\n   * @param {Event} event\n   *        The `ready` event that caused this to run.\n   *\n   * @listens Tech#ready\n   * @fires Tech#progress\n   */\n  trackProgress(event) {\n    this.stopTrackingProgress();\n    this.progressInterval = this.setInterval(bind_(this, function () {\n      // Don't trigger unless buffered amount is greater than last time\n\n      const numBufferedPercent = this.bufferedPercent();\n      if (this.bufferedPercent_ !== numBufferedPercent) {\n        /**\n         * See {@link Player#progress}\n         *\n         * @event Tech#progress\n         * @type {Event}\n         */\n        this.trigger('progress');\n      }\n      this.bufferedPercent_ = numBufferedPercent;\n      if (numBufferedPercent === 1) {\n        this.stopTrackingProgress();\n      }\n    }), 500);\n  }\n\n  /**\n   * Update our internal duration on a `durationchange` event by calling\n   * {@link Tech#duration}.\n   *\n   * @param {Event} event\n   *        The `durationchange` event that caused this to run.\n   *\n   * @listens Tech#durationchange\n   */\n  onDurationChange(event) {\n    this.duration_ = this.duration();\n  }\n\n  /**\n   * Get and create a `TimeRange` object for buffering.\n   *\n   * @return { import('../utils/time').TimeRange }\n   *         The time range object that was created.\n   */\n  buffered() {\n    return createTimeRanges$1(0, 0);\n  }\n\n  /**\n   * Get the percentage of the current video that is currently buffered.\n   *\n   * @return {number}\n   *         A number from 0 to 1 that represents the decimal percentage of the\n   *         video that is buffered.\n   *\n   */\n  bufferedPercent() {\n    return bufferedPercent(this.buffered(), this.duration_);\n  }\n\n  /**\n   * Turn off the polyfill for `progress` events that was created in\n   * {@link Tech#manualProgressOn}\n   * Stop manually tracking progress events by clearing the interval that was set in\n   * {@link Tech#trackProgress}.\n   */\n  stopTrackingProgress() {\n    this.clearInterval(this.progressInterval);\n  }\n\n  /**\n   * Polyfill the `timeupdate` event for browsers that don't support it.\n   *\n   * @see {@link Tech#trackCurrentTime}\n   */\n  manualTimeUpdatesOn() {\n    this.manualTimeUpdates = true;\n    this.on('play', this.trackCurrentTime_);\n    this.on('pause', this.stopTrackingCurrentTime_);\n  }\n\n  /**\n   * Turn off the polyfill for `timeupdate` events that was created in\n   * {@link Tech#manualTimeUpdatesOn}\n   */\n  manualTimeUpdatesOff() {\n    this.manualTimeUpdates = false;\n    this.stopTrackingCurrentTime();\n    this.off('play', this.trackCurrentTime_);\n    this.off('pause', this.stopTrackingCurrentTime_);\n  }\n\n  /**\n   * Sets up an interval function to track current time and trigger `timeupdate` every\n   * 250 milliseconds.\n   *\n   * @listens Tech#play\n   * @triggers Tech#timeupdate\n   */\n  trackCurrentTime() {\n    if (this.currentTimeInterval) {\n      this.stopTrackingCurrentTime();\n    }\n    this.currentTimeInterval = this.setInterval(function () {\n      /**\n       * Triggered at an interval of 250ms to indicated that time is passing in the video.\n       *\n       * @event Tech#timeupdate\n       * @type {Event}\n       */\n      this.trigger({\n        type: 'timeupdate',\n        target: this,\n        manuallyTriggered: true\n      });\n\n      // 42 = 24 fps // 250 is what Webkit uses // FF uses 15\n    }, 250);\n  }\n\n  /**\n   * Stop the interval function created in {@link Tech#trackCurrentTime} so that the\n   * `timeupdate` event is no longer triggered.\n   *\n   * @listens {Tech#pause}\n   */\n  stopTrackingCurrentTime() {\n    this.clearInterval(this.currentTimeInterval);\n\n    // #1002 - if the video ends right before the next timeupdate would happen,\n    // the progress bar won't make it all the way to the end\n    this.trigger({\n      type: 'timeupdate',\n      target: this,\n      manuallyTriggered: true\n    });\n  }\n\n  /**\n   * Turn off all event polyfills, clear the `Tech`s {@link AudioTrackList},\n   * {@link VideoTrackList}, and {@link TextTrackList}, and dispose of this Tech.\n   *\n   * @fires Component#dispose\n   */\n  dispose() {\n    // clear out all tracks because we can't reuse them between techs\n    this.clearTracks(NORMAL.names);\n\n    // Turn off any manual progress or timeupdate tracking\n    if (this.manualProgress) {\n      this.manualProgressOff();\n    }\n    if (this.manualTimeUpdates) {\n      this.manualTimeUpdatesOff();\n    }\n    super.dispose();\n  }\n\n  /**\n   * Clear out a single `TrackList` or an array of `TrackLists` given their names.\n   *\n   * > Note: Techs without source handlers should call this between sources for `video`\n   *         & `audio` tracks. You don't want to use them between tracks!\n   *\n   * @param {string[]|string} types\n   *        TrackList names to clear, valid names are `video`, `audio`, and\n   *        `text`.\n   */\n  clearTracks(types) {\n    types = [].concat(types);\n    // clear out all tracks because we can't reuse them between techs\n    types.forEach(type => {\n      const list = this[`${type}Tracks`]() || [];\n      let i = list.length;\n      while (i--) {\n        const track = list[i];\n        if (type === 'text') {\n          this.removeRemoteTextTrack(track);\n        }\n        list.removeTrack(track);\n      }\n    });\n  }\n\n  /**\n   * Remove any TextTracks added via addRemoteTextTrack that are\n   * flagged for automatic garbage collection\n   */\n  cleanupAutoTextTracks() {\n    const list = this.autoRemoteTextTracks_ || [];\n    let i = list.length;\n    while (i--) {\n      const track = list[i];\n      this.removeRemoteTextTrack(track);\n    }\n  }\n\n  /**\n   * Reset the tech, which will removes all sources and reset the internal readyState.\n   *\n   * @abstract\n   */\n  reset() {}\n\n  /**\n   * Get the value of `crossOrigin` from the tech.\n   *\n   * @abstract\n   *\n   * @see {Html5#crossOrigin}\n   */\n  crossOrigin() {}\n\n  /**\n   * Set the value of `crossOrigin` on the tech.\n   *\n   * @abstract\n   *\n   * @param {string} crossOrigin the crossOrigin value\n   * @see {Html5#setCrossOrigin}\n   */\n  setCrossOrigin() {}\n\n  /**\n   * Get or set an error on the Tech.\n   *\n   * @param {MediaError} [err]\n   *        Error to set on the Tech\n   *\n   * @return {MediaError|null}\n   *         The current error object on the tech, or null if there isn't one.\n   */\n  error(err) {\n    if (err !== undefined) {\n      this.error_ = new MediaError(err);\n      this.trigger('error');\n    }\n    return this.error_;\n  }\n\n  /**\n   * Returns the `TimeRange`s that have been played through for the current source.\n   *\n   * > NOTE: This implementation is incomplete. It does not track the played `TimeRange`.\n   *         It only checks whether the source has played at all or not.\n   *\n   * @return {TimeRange}\n   *         - A single time range if this video has played\n   *         - An empty set of ranges if not.\n   */\n  played() {\n    if (this.hasStarted_) {\n      return createTimeRanges$1(0, 0);\n    }\n    return createTimeRanges$1();\n  }\n\n  /**\n   * Start playback\n   *\n   * @abstract\n   *\n   * @see {Html5#play}\n   */\n  play() {}\n\n  /**\n   * Set whether we are scrubbing or not\n   *\n   * @abstract\n   * @param {boolean} _isScrubbing\n   *                  - true for we are currently scrubbing\n   *                  - false for we are no longer scrubbing\n   *\n   * @see {Html5#setScrubbing}\n   */\n  setScrubbing(_isScrubbing) {}\n\n  /**\n   * Get whether we are scrubbing or not\n   *\n   * @abstract\n   *\n   * @see {Html5#scrubbing}\n   */\n  scrubbing() {}\n\n  /**\n   * Causes a manual time update to occur if {@link Tech#manualTimeUpdatesOn} was\n   * previously called.\n   *\n   * @param {number} _seconds\n   *        Set the current time of the media to this.\n   * @fires Tech#timeupdate\n   */\n  setCurrentTime(_seconds) {\n    // improve the accuracy of manual timeupdates\n    if (this.manualTimeUpdates) {\n      /**\n       * A manual `timeupdate` event.\n       *\n       * @event Tech#timeupdate\n       * @type {Event}\n       */\n      this.trigger({\n        type: 'timeupdate',\n        target: this,\n        manuallyTriggered: true\n      });\n    }\n  }\n\n  /**\n   * Turn on listeners for {@link VideoTrackList}, {@link {AudioTrackList}, and\n   * {@link TextTrackList} events.\n   *\n   * This adds {@link EventTarget~EventListeners} for `addtrack`, and  `removetrack`.\n   *\n   * @fires Tech#audiotrackchange\n   * @fires Tech#videotrackchange\n   * @fires Tech#texttrackchange\n   */\n  initTrackListeners() {\n    /**\n      * Triggered when tracks are added or removed on the Tech {@link AudioTrackList}\n      *\n      * @event Tech#audiotrackchange\n      * @type {Event}\n      */\n\n    /**\n      * Triggered when tracks are added or removed on the Tech {@link VideoTrackList}\n      *\n      * @event Tech#videotrackchange\n      * @type {Event}\n      */\n\n    /**\n      * Triggered when tracks are added or removed on the Tech {@link TextTrackList}\n      *\n      * @event Tech#texttrackchange\n      * @type {Event}\n      */\n    NORMAL.names.forEach(name => {\n      const props = NORMAL[name];\n      const trackListChanges = () => {\n        this.trigger(`${name}trackchange`);\n      };\n      const tracks = this[props.getterName]();\n      tracks.addEventListener('removetrack', trackListChanges);\n      tracks.addEventListener('addtrack', trackListChanges);\n      this.on('dispose', () => {\n        tracks.removeEventListener('removetrack', trackListChanges);\n        tracks.removeEventListener('addtrack', trackListChanges);\n      });\n    });\n  }\n\n  /**\n   * Emulate TextTracks using vtt.js if necessary\n   *\n   * @fires Tech#vttjsloaded\n   * @fires Tech#vttjserror\n   */\n  addWebVttScript_() {\n    if (window$1.WebVTT) {\n      return;\n    }\n\n    // Initially, Tech.el_ is a child of a dummy-div wait until the Component system\n    // signals that the Tech is ready at which point Tech.el_ is part of the DOM\n    // before inserting the WebVTT script\n    if (document.body.contains(this.el())) {\n      // load via require if available and vtt.js script location was not passed in\n      // as an option. novtt builds will turn the above require call into an empty object\n      // which will cause this if check to always fail.\n      if (!this.options_['vtt.js'] && isPlain(vtt) && Object.keys(vtt).length > 0) {\n        this.trigger('vttjsloaded');\n        return;\n      }\n\n      // load vtt.js via the script location option or the cdn of no location was\n      // passed in\n      const script = document.createElement('script');\n      script.src = this.options_['vtt.js'] || 'https://vjs.zencdn.net/vttjs/0.14.1/vtt.min.js';\n      script.onload = () => {\n        /**\n         * Fired when vtt.js is loaded.\n         *\n         * @event Tech#vttjsloaded\n         * @type {Event}\n         */\n        this.trigger('vttjsloaded');\n      };\n      script.onerror = () => {\n        /**\n         * Fired when vtt.js was not loaded due to an error\n         *\n         * @event Tech#vttjsloaded\n         * @type {Event}\n         */\n        this.trigger('vttjserror');\n      };\n      this.on('dispose', () => {\n        script.onload = null;\n        script.onerror = null;\n      });\n      // but have not loaded yet and we set it to true before the inject so that\n      // we don't overwrite the injected window.WebVTT if it loads right away\n      window$1.WebVTT = true;\n      this.el().parentNode.appendChild(script);\n    } else {\n      this.ready(this.addWebVttScript_);\n    }\n  }\n\n  /**\n   * Emulate texttracks\n   *\n   */\n  emulateTextTracks() {\n    const tracks = this.textTracks();\n    const remoteTracks = this.remoteTextTracks();\n    const handleAddTrack = e => tracks.addTrack(e.track);\n    const handleRemoveTrack = e => tracks.removeTrack(e.track);\n    remoteTracks.on('addtrack', handleAddTrack);\n    remoteTracks.on('removetrack', handleRemoveTrack);\n    this.addWebVttScript_();\n    const updateDisplay = () => this.trigger('texttrackchange');\n    const textTracksChanges = () => {\n      updateDisplay();\n      for (let i = 0; i < tracks.length; i++) {\n        const track = tracks[i];\n        track.removeEventListener('cuechange', updateDisplay);\n        if (track.mode === 'showing') {\n          track.addEventListener('cuechange', updateDisplay);\n        }\n      }\n    };\n    textTracksChanges();\n    tracks.addEventListener('change', textTracksChanges);\n    tracks.addEventListener('addtrack', textTracksChanges);\n    tracks.addEventListener('removetrack', textTracksChanges);\n    this.on('dispose', function () {\n      remoteTracks.off('addtrack', handleAddTrack);\n      remoteTracks.off('removetrack', handleRemoveTrack);\n      tracks.removeEventListener('change', textTracksChanges);\n      tracks.removeEventListener('addtrack', textTracksChanges);\n      tracks.removeEventListener('removetrack', textTracksChanges);\n      for (let i = 0; i < tracks.length; i++) {\n        const track = tracks[i];\n        track.removeEventListener('cuechange', updateDisplay);\n      }\n    });\n  }\n\n  /**\n   * Create and returns a remote {@link TextTrack} object.\n   *\n   * @param {string} kind\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n   *\n   * @param {string} [label]\n   *        Label to identify the text track\n   *\n   * @param {string} [language]\n   *        Two letter language abbreviation\n   *\n   * @return {TextTrack}\n   *         The TextTrack that gets created.\n   */\n  addTextTrack(kind, label, language) {\n    if (!kind) {\n      throw new Error('TextTrack kind is required but was not provided');\n    }\n    return createTrackHelper(this, kind, label, language);\n  }\n\n  /**\n   * Create an emulated TextTrack for use by addRemoteTextTrack\n   *\n   * This is intended to be overridden by classes that inherit from\n   * Tech in order to create native or custom TextTracks.\n   *\n   * @param {Object} options\n   *        The object should contain the options to initialize the TextTrack with.\n   *\n   * @param {string} [options.kind]\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata).\n   *\n   * @param {string} [options.label].\n   *        Label to identify the text track\n   *\n   * @param {string} [options.language]\n   *        Two letter language abbreviation.\n   *\n   * @return {HTMLTrackElement}\n   *         The track element that gets created.\n   */\n  createRemoteTextTrack(options) {\n    const track = merge$1(options, {\n      tech: this\n    });\n    return new REMOTE.remoteTextEl.TrackClass(track);\n  }\n\n  /**\n   * Creates a remote text track object and returns an html track element.\n   *\n   * > Note: This can be an emulated {@link HTMLTrackElement} or a native one.\n   *\n   * @param {Object} options\n   *        See {@link Tech#createRemoteTextTrack} for more detailed properties.\n   *\n   * @param {boolean} [manualCleanup=false]\n   *        - When false: the TextTrack will be automatically removed from the video\n   *          element whenever the source changes\n   *        - When True: The TextTrack will have to be cleaned up manually\n   *\n   * @return {HTMLTrackElement}\n   *         An Html Track Element.\n   *\n   */\n  addRemoteTextTrack(options = {}, manualCleanup) {\n    const htmlTrackElement = this.createRemoteTextTrack(options);\n    if (typeof manualCleanup !== 'boolean') {\n      manualCleanup = false;\n    }\n\n    // store HTMLTrackElement and TextTrack to remote list\n    this.remoteTextTrackEls().addTrackElement_(htmlTrackElement);\n    this.remoteTextTracks().addTrack(htmlTrackElement.track);\n    if (manualCleanup === false) {\n      // create the TextTrackList if it doesn't exist\n      this.ready(() => this.autoRemoteTextTracks_.addTrack(htmlTrackElement.track));\n    }\n    return htmlTrackElement;\n  }\n\n  /**\n   * Remove a remote text track from the remote `TextTrackList`.\n   *\n   * @param {TextTrack} track\n   *        `TextTrack` to remove from the `TextTrackList`\n   */\n  removeRemoteTextTrack(track) {\n    const trackElement = this.remoteTextTrackEls().getTrackElementByTrack_(track);\n\n    // remove HTMLTrackElement and TextTrack from remote list\n    this.remoteTextTrackEls().removeTrackElement_(trackElement);\n    this.remoteTextTracks().removeTrack(track);\n    this.autoRemoteTextTracks_.removeTrack(track);\n  }\n\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object}\n   *         An object with supported media playback quality metrics\n   *\n   * @abstract\n   */\n  getVideoPlaybackQuality() {\n    return {};\n  }\n\n  /**\n   * Attempt to create a floating video window always on top of other windows\n   * so that users may continue consuming media while they interact with other\n   * content sites, or applications on their device.\n   *\n   * @see [Spec]{@link https://wicg.github.io/picture-in-picture}\n   *\n   * @return {Promise|undefined}\n   *         A promise with a Picture-in-Picture window if the browser supports\n   *         Promises (or one was passed in as an option). It returns undefined\n   *         otherwise.\n   *\n   * @abstract\n   */\n  requestPictureInPicture() {\n    return Promise.reject();\n  }\n\n  /**\n   * A method to check for the value of the 'disablePictureInPicture' <video> property.\n   * Defaults to true, as it should be considered disabled if the tech does not support pip\n   *\n   * @abstract\n   */\n  disablePictureInPicture() {\n    return true;\n  }\n\n  /**\n   * A method to set or unset the 'disablePictureInPicture' <video> property.\n   *\n   * @abstract\n   */\n  setDisablePictureInPicture() {}\n\n  /**\n   * A fallback implementation of requestVideoFrameCallback using requestAnimationFrame\n   *\n   * @param {function} cb\n   * @return {number} request id\n   */\n  requestVideoFrameCallback(cb) {\n    const id = newGUID();\n    if (!this.isReady_ || this.paused()) {\n      this.queuedHanders_.add(id);\n      this.one('playing', () => {\n        if (this.queuedHanders_.has(id)) {\n          this.queuedHanders_.delete(id);\n          cb();\n        }\n      });\n    } else {\n      this.requestNamedAnimationFrame(id, cb);\n    }\n    return id;\n  }\n\n  /**\n   * A fallback implementation of cancelVideoFrameCallback\n   *\n   * @param {number} id id of callback to be cancelled\n   */\n  cancelVideoFrameCallback(id) {\n    if (this.queuedHanders_.has(id)) {\n      this.queuedHanders_.delete(id);\n    } else {\n      this.cancelNamedAnimationFrame(id);\n    }\n  }\n\n  /**\n   * A method to set a poster from a `Tech`.\n   *\n   * @abstract\n   */\n  setPoster() {}\n\n  /**\n   * A method to check for the presence of the 'playsinline' <video> attribute.\n   *\n   * @abstract\n   */\n  playsinline() {}\n\n  /**\n   * A method to set or unset the 'playsinline' <video> attribute.\n   *\n   * @abstract\n   */\n  setPlaysinline() {}\n\n  /**\n   * Attempt to force override of native audio tracks.\n   *\n   * @param {boolean} override - If set to true native audio will be overridden,\n   * otherwise native audio will potentially be used.\n   *\n   * @abstract\n   */\n  overrideNativeAudioTracks(override) {}\n\n  /**\n   * Attempt to force override of native video tracks.\n   *\n   * @param {boolean} override - If set to true native video will be overridden,\n   * otherwise native video will potentially be used.\n   *\n   * @abstract\n   */\n  overrideNativeVideoTracks(override) {}\n\n  /**\n   * Check if the tech can support the given mime-type.\n   *\n   * The base tech does not support any type, but source handlers might\n   * overwrite this.\n   *\n   * @param  {string} _type\n   *         The mimetype to check for support\n   *\n   * @return {string}\n   *         'probably', 'maybe', or empty string\n   *\n   * @see [Spec]{@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/canPlayType}\n   *\n   * @abstract\n   */\n  canPlayType(_type) {\n    return '';\n  }\n\n  /**\n   * Check if the type is supported by this tech.\n   *\n   * The base tech does not support any type, but source handlers might\n   * overwrite this.\n   *\n   * @param {string} _type\n   *        The media type to check\n   * @return {string} Returns the native video element's response\n   */\n  static canPlayType(_type) {\n    return '';\n  }\n\n  /**\n   * Check if the tech can support the given source\n   *\n   * @param {Object} srcObj\n   *        The source object\n   * @param {Object} options\n   *        The options passed to the tech\n   * @return {string} 'probably', 'maybe', or '' (empty string)\n   */\n  static canPlaySource(srcObj, options) {\n    return Tech.canPlayType(srcObj.type);\n  }\n\n  /*\n   * Return whether the argument is a Tech or not.\n   * Can be passed either a Class like `Html5` or a instance like `player.tech_`\n   *\n   * @param {Object} component\n   *        The item to check\n   *\n   * @return {boolean}\n   *         Whether it is a tech or not\n   *         - True if it is a tech\n   *         - False if it is not\n   */\n  static isTech(component) {\n    return component.prototype instanceof Tech || component instanceof Tech || component === Tech;\n  }\n\n  /**\n   * Registers a `Tech` into a shared list for videojs.\n   *\n   * @param {string} name\n   *        Name of the `Tech` to register.\n   *\n   * @param {Object} tech\n   *        The `Tech` class to register.\n   */\n  static registerTech(name, tech) {\n    if (!Tech.techs_) {\n      Tech.techs_ = {};\n    }\n    if (!Tech.isTech(tech)) {\n      throw new Error(`Tech ${name} must be a Tech`);\n    }\n    if (!Tech.canPlayType) {\n      throw new Error('Techs must have a static canPlayType method on them');\n    }\n    if (!Tech.canPlaySource) {\n      throw new Error('Techs must have a static canPlaySource method on them');\n    }\n    name = toTitleCase$1(name);\n    Tech.techs_[name] = tech;\n    Tech.techs_[toLowerCase(name)] = tech;\n    if (name !== 'Tech') {\n      // camel case the techName for use in techOrder\n      Tech.defaultTechOrder_.push(name);\n    }\n    return tech;\n  }\n\n  /**\n   * Get a `Tech` from the shared list by name.\n   *\n   * @param {string} name\n   *        `camelCase` or `TitleCase` name of the Tech to get\n   *\n   * @return {Tech|undefined}\n   *         The `Tech` or undefined if there was no tech with the name requested.\n   */\n  static getTech(name) {\n    if (!name) {\n      return;\n    }\n    if (Tech.techs_ && Tech.techs_[name]) {\n      return Tech.techs_[name];\n    }\n    name = toTitleCase$1(name);\n    if (window$1 && window$1.videojs && window$1.videojs[name]) {\n      log$1.warn(`The ${name} tech was added to the videojs object when it should be registered using videojs.registerTech(name, tech)`);\n      return window$1.videojs[name];\n    }\n  }\n}\n\n/**\n * Get the {@link VideoTrackList}\n *\n * @returns {VideoTrackList}\n * @method Tech.prototype.videoTracks\n */\n\n/**\n * Get the {@link AudioTrackList}\n *\n * @returns {AudioTrackList}\n * @method Tech.prototype.audioTracks\n */\n\n/**\n * Get the {@link TextTrackList}\n *\n * @returns {TextTrackList}\n * @method Tech.prototype.textTracks\n */\n\n/**\n * Get the remote element {@link TextTrackList}\n *\n * @returns {TextTrackList}\n * @method Tech.prototype.remoteTextTracks\n */\n\n/**\n * Get the remote element {@link HtmlTrackElementList}\n *\n * @returns {HtmlTrackElementList}\n * @method Tech.prototype.remoteTextTrackEls\n */\n\nALL.names.forEach(function (name) {\n  const props = ALL[name];\n  Tech.prototype[props.getterName] = function () {\n    this[props.privateName] = this[props.privateName] || new props.ListClass();\n    return this[props.privateName];\n  };\n});\n\n/**\n * List of associated text tracks\n *\n * @type {TextTrackList}\n * @private\n * @property Tech#textTracks_\n */\n\n/**\n * List of associated audio tracks.\n *\n * @type {AudioTrackList}\n * @private\n * @property Tech#audioTracks_\n */\n\n/**\n * List of associated video tracks.\n *\n * @type {VideoTrackList}\n * @private\n * @property Tech#videoTracks_\n */\n\n/**\n * Boolean indicating whether the `Tech` supports volume control.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresVolumeControl = true;\n\n/**\n * Boolean indicating whether the `Tech` supports muting volume.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresMuteControl = true;\n\n/**\n * Boolean indicating whether the `Tech` supports fullscreen resize control.\n * Resizing plugins using request fullscreen reloads the plugin\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresFullscreenResize = false;\n\n/**\n * Boolean indicating whether the `Tech` supports changing the speed at which the video\n * plays. Examples:\n *   - Set player to play 2x (twice) as fast\n *   - Set player to play 0.5x (half) as fast\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresPlaybackRate = false;\n\n/**\n * Boolean indicating whether the `Tech` supports the `progress` event.\n * This will be used to determine if {@link Tech#manualProgressOn} should be called.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresProgressEvents = false;\n\n/**\n * Boolean indicating whether the `Tech` supports the `sourceset` event.\n *\n * A tech should set this to `true` and then use {@link Tech#triggerSourceset}\n * to trigger a {@link Tech#event:sourceset} at the earliest time after getting\n * a new source.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresSourceset = false;\n\n/**\n * Boolean indicating whether the `Tech` supports the `timeupdate` event.\n * This will be used to determine if {@link Tech#manualTimeUpdates} should be called.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresTimeupdateEvents = false;\n\n/**\n * Boolean indicating whether the `Tech` supports the native `TextTrack`s.\n * This will help us integrate with native `TextTrack`s if the browser supports them.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresNativeTextTracks = false;\n\n/**\n * Boolean indicating whether the `Tech` supports `requestVideoFrameCallback`.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresVideoFrameCallback = false;\n\n/**\n * A functional mixin for techs that want to use the Source Handler pattern.\n * Source handlers are scripts for handling specific formats.\n * The source handler pattern is used for adaptive formats (HLS, DASH) that\n * manually load video data and feed it into a Source Buffer (Media Source Extensions)\n * Example: `Tech.withSourceHandlers.call(MyTech);`\n *\n * @param {Tech} _Tech\n *        The tech to add source handler functions to.\n *\n * @mixes Tech~SourceHandlerAdditions\n */\nTech.withSourceHandlers = function (_Tech) {\n  /**\n   * Register a source handler\n   *\n   * @param {Function} handler\n   *        The source handler class\n   *\n   * @param {number} [index]\n   *        Register it at the following index\n   */\n  _Tech.registerSourceHandler = function (handler, index) {\n    let handlers = _Tech.sourceHandlers;\n    if (!handlers) {\n      handlers = _Tech.sourceHandlers = [];\n    }\n    if (index === undefined) {\n      // add to the end of the list\n      index = handlers.length;\n    }\n    handlers.splice(index, 0, handler);\n  };\n\n  /**\n   * Check if the tech can support the given type. Also checks the\n   * Techs sourceHandlers.\n   *\n   * @param {string} type\n   *         The mimetype to check.\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n  _Tech.canPlayType = function (type) {\n    const handlers = _Tech.sourceHandlers || [];\n    let can;\n    for (let i = 0; i < handlers.length; i++) {\n      can = handlers[i].canPlayType(type);\n      if (can) {\n        return can;\n      }\n    }\n    return '';\n  };\n\n  /**\n   * Returns the first source handler that supports the source.\n   *\n   * TODO: Answer question: should 'probably' be prioritized over 'maybe'\n   *\n   * @param {Tech~SourceObject} source\n   *        The source object\n   *\n   * @param {Object} options\n   *        The options passed to the tech\n   *\n   * @return {SourceHandler|null}\n   *          The first source handler that supports the source or null if\n   *          no SourceHandler supports the source\n   */\n  _Tech.selectSourceHandler = function (source, options) {\n    const handlers = _Tech.sourceHandlers || [];\n    let can;\n    for (let i = 0; i < handlers.length; i++) {\n      can = handlers[i].canHandleSource(source, options);\n      if (can) {\n        return handlers[i];\n      }\n    }\n    return null;\n  };\n\n  /**\n   * Check if the tech can support the given source.\n   *\n   * @param {Tech~SourceObject} srcObj\n   *        The source object\n   *\n   * @param {Object} options\n   *        The options passed to the tech\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n  _Tech.canPlaySource = function (srcObj, options) {\n    const sh = _Tech.selectSourceHandler(srcObj, options);\n    if (sh) {\n      return sh.canHandleSource(srcObj, options);\n    }\n    return '';\n  };\n\n  /**\n   * When using a source handler, prefer its implementation of\n   * any function normally provided by the tech.\n   */\n  const deferrable = ['seekable', 'seeking', 'duration'];\n\n  /**\n   * A wrapper around {@link Tech#seekable} that will call a `SourceHandler`s seekable\n   * function if it exists, with a fallback to the Techs seekable function.\n   *\n   * @method _Tech.seekable\n   */\n\n  /**\n   * A wrapper around {@link Tech#duration} that will call a `SourceHandler`s duration\n   * function if it exists, otherwise it will fallback to the techs duration function.\n   *\n   * @method _Tech.duration\n   */\n\n  deferrable.forEach(function (fnName) {\n    const originalFn = this[fnName];\n    if (typeof originalFn !== 'function') {\n      return;\n    }\n    this[fnName] = function () {\n      if (this.sourceHandler_ && this.sourceHandler_[fnName]) {\n        return this.sourceHandler_[fnName].apply(this.sourceHandler_, arguments);\n      }\n      return originalFn.apply(this, arguments);\n    };\n  }, _Tech.prototype);\n\n  /**\n   * Create a function for setting the source using a source object\n   * and source handlers.\n   * Should never be called unless a source handler was found.\n   *\n   * @param {Tech~SourceObject} source\n   *        A source object with src and type keys\n   */\n  _Tech.prototype.setSource = function (source) {\n    let sh = _Tech.selectSourceHandler(source, this.options_);\n    if (!sh) {\n      // Fall back to a native source handler when unsupported sources are\n      // deliberately set\n      if (_Tech.nativeSourceHandler) {\n        sh = _Tech.nativeSourceHandler;\n      } else {\n        log$1.error('No source handler found for the current source.');\n      }\n    }\n\n    // Dispose any existing source handler\n    this.disposeSourceHandler();\n    this.off('dispose', this.disposeSourceHandler_);\n    if (sh !== _Tech.nativeSourceHandler) {\n      this.currentSource_ = source;\n    }\n    this.sourceHandler_ = sh.handleSource(source, this, this.options_);\n    this.one('dispose', this.disposeSourceHandler_);\n  };\n\n  /**\n   * Clean up any existing SourceHandlers and listeners when the Tech is disposed.\n   *\n   * @listens Tech#dispose\n   */\n  _Tech.prototype.disposeSourceHandler = function () {\n    // if we have a source and get another one\n    // then we are loading something new\n    // than clear all of our current tracks\n    if (this.currentSource_) {\n      this.clearTracks(['audio', 'video']);\n      this.currentSource_ = null;\n    }\n\n    // always clean up auto-text tracks\n    this.cleanupAutoTextTracks();\n    if (this.sourceHandler_) {\n      if (this.sourceHandler_.dispose) {\n        this.sourceHandler_.dispose();\n      }\n      this.sourceHandler_ = null;\n    }\n  };\n};\n\n// The base Tech class needs to be registered as a Component. It is the only\n// Tech that can be registered as a Component.\nComponent$1.registerComponent('Tech', Tech);\nTech.registerTech('Tech', Tech);\n\n/**\n * A list of techs that should be added to techOrder on Players\n *\n * @private\n */\nTech.defaultTechOrder_ = [];\n\n/**\n * @file middleware.js\n * @module middleware\n */\nconst middlewares = {};\nconst middlewareInstances = {};\nconst TERMINATOR = {};\n\n/**\n * A middleware object is a plain JavaScript object that has methods that\n * match the {@link Tech} methods found in the lists of allowed\n * {@link module:middleware.allowedGetters|getters},\n * {@link module:middleware.allowedSetters|setters}, and\n * {@link module:middleware.allowedMediators|mediators}.\n *\n * @typedef {Object} MiddlewareObject\n */\n\n/**\n * A middleware factory function that should return a\n * {@link module:middleware~MiddlewareObject|MiddlewareObject}.\n *\n * This factory will be called for each player when needed, with the player\n * passed in as an argument.\n *\n * @callback MiddlewareFactory\n * @param { import('../player').default } player\n *        A Video.js player.\n */\n\n/**\n * Define a middleware that the player should use by way of a factory function\n * that returns a middleware object.\n *\n * @param  {string} type\n *         The MIME type to match or `\"*\"` for all MIME types.\n *\n * @param  {MiddlewareFactory} middleware\n *         A middleware factory function that will be executed for\n *         matching types.\n */\nfunction use(type, middleware) {\n  middlewares[type] = middlewares[type] || [];\n  middlewares[type].push(middleware);\n}\n\n/**\n * Asynchronously sets a source using middleware by recursing through any\n * matching middlewares and calling `setSource` on each, passing along the\n * previous returned value each time.\n *\n * @param  { import('../player').default } player\n *         A {@link Player} instance.\n *\n * @param  {Tech~SourceObject} src\n *         A source object.\n *\n * @param  {Function}\n *         The next middleware to run.\n */\nfunction setSource(player, src, next) {\n  player.setTimeout(() => setSourceHelper(src, middlewares[src.type], next, player), 1);\n}\n\n/**\n * When the tech is set, passes the tech to each middleware's `setTech` method.\n *\n * @param {Object[]} middleware\n *        An array of middleware instances.\n *\n * @param { import('../tech/tech').default } tech\n *        A Video.js tech.\n */\nfunction setTech(middleware, tech) {\n  middleware.forEach(mw => mw.setTech && mw.setTech(tech));\n}\n\n/**\n * Calls a getter on the tech first, through each middleware\n * from right to left to the player.\n *\n * @param  {Object[]} middleware\n *         An array of middleware instances.\n *\n * @param  { import('../tech/tech').default } tech\n *         The current tech.\n *\n * @param  {string} method\n *         A method name.\n *\n * @return {*}\n *         The final value from the tech after middleware has intercepted it.\n */\nfunction get(middleware, tech, method) {\n  return middleware.reduceRight(middlewareIterator(method), tech[method]());\n}\n\n/**\n * Takes the argument given to the player and calls the setter method on each\n * middleware from left to right to the tech.\n *\n * @param  {Object[]} middleware\n *         An array of middleware instances.\n *\n * @param  { import('../tech/tech').default } tech\n *         The current tech.\n *\n * @param  {string} method\n *         A method name.\n *\n * @param  {*} arg\n *         The value to set on the tech.\n *\n * @return {*}\n *         The return value of the `method` of the `tech`.\n */\nfunction set(middleware, tech, method, arg) {\n  return tech[method](middleware.reduce(middlewareIterator(method), arg));\n}\n\n/**\n * Takes the argument given to the player and calls the `call` version of the\n * method on each middleware from left to right.\n *\n * Then, call the passed in method on the tech and return the result unchanged\n * back to the player, through middleware, this time from right to left.\n *\n * @param  {Object[]} middleware\n *         An array of middleware instances.\n *\n * @param  { import('../tech/tech').default } tech\n *         The current tech.\n *\n * @param  {string} method\n *         A method name.\n *\n * @param  {*} arg\n *         The value to set on the tech.\n *\n * @return {*}\n *         The return value of the `method` of the `tech`, regardless of the\n *         return values of middlewares.\n */\nfunction mediate(middleware, tech, method, arg = null) {\n  const callMethod = 'call' + toTitleCase$1(method);\n  const middlewareValue = middleware.reduce(middlewareIterator(callMethod), arg);\n  const terminated = middlewareValue === TERMINATOR;\n  // deprecated. The `null` return value should instead return TERMINATOR to\n  // prevent confusion if a techs method actually returns null.\n  const returnValue = terminated ? null : tech[method](middlewareValue);\n  executeRight(middleware, method, returnValue, terminated);\n  return returnValue;\n}\n\n/**\n * Enumeration of allowed getters where the keys are method names.\n *\n * @type {Object}\n */\nconst allowedGetters = {\n  buffered: 1,\n  currentTime: 1,\n  duration: 1,\n  muted: 1,\n  played: 1,\n  paused: 1,\n  seekable: 1,\n  volume: 1,\n  ended: 1\n};\n\n/**\n * Enumeration of allowed setters where the keys are method names.\n *\n * @type {Object}\n */\nconst allowedSetters = {\n  setCurrentTime: 1,\n  setMuted: 1,\n  setVolume: 1\n};\n\n/**\n * Enumeration of allowed mediators where the keys are method names.\n *\n * @type {Object}\n */\nconst allowedMediators = {\n  play: 1,\n  pause: 1\n};\nfunction middlewareIterator(method) {\n  return (value, mw) => {\n    // if the previous middleware terminated, pass along the termination\n    if (value === TERMINATOR) {\n      return TERMINATOR;\n    }\n    if (mw[method]) {\n      return mw[method](value);\n    }\n    return value;\n  };\n}\nfunction executeRight(mws, method, value, terminated) {\n  for (let i = mws.length - 1; i >= 0; i--) {\n    const mw = mws[i];\n    if (mw[method]) {\n      mw[method](terminated, value);\n    }\n  }\n}\n\n/**\n * Clear the middleware cache for a player.\n *\n * @param  { import('../player').default } player\n *         A {@link Player} instance.\n */\nfunction clearCacheForPlayer(player) {\n  middlewareInstances[player.id()] = null;\n}\n\n/**\n * {\n *  [playerId]: [[mwFactory, mwInstance], ...]\n * }\n *\n * @private\n */\nfunction getOrCreateFactory(player, mwFactory) {\n  const mws = middlewareInstances[player.id()];\n  let mw = null;\n  if (mws === undefined || mws === null) {\n    mw = mwFactory(player);\n    middlewareInstances[player.id()] = [[mwFactory, mw]];\n    return mw;\n  }\n  for (let i = 0; i < mws.length; i++) {\n    const [mwf, mwi] = mws[i];\n    if (mwf !== mwFactory) {\n      continue;\n    }\n    mw = mwi;\n  }\n  if (mw === null) {\n    mw = mwFactory(player);\n    mws.push([mwFactory, mw]);\n  }\n  return mw;\n}\nfunction setSourceHelper(src = {}, middleware = [], next, player, acc = [], lastRun = false) {\n  const [mwFactory, ...mwrest] = middleware;\n\n  // if mwFactory is a string, then we're at a fork in the road\n  if (typeof mwFactory === 'string') {\n    setSourceHelper(src, middlewares[mwFactory], next, player, acc, lastRun);\n\n    // if we have an mwFactory, call it with the player to get the mw,\n    // then call the mw's setSource method\n  } else if (mwFactory) {\n    const mw = getOrCreateFactory(player, mwFactory);\n\n    // if setSource isn't present, implicitly select this middleware\n    if (!mw.setSource) {\n      acc.push(mw);\n      return setSourceHelper(src, mwrest, next, player, acc, lastRun);\n    }\n    mw.setSource(Object.assign({}, src), function (err, _src) {\n      // something happened, try the next middleware on the current level\n      // make sure to use the old src\n      if (err) {\n        return setSourceHelper(src, mwrest, next, player, acc, lastRun);\n      }\n\n      // we've succeeded, now we need to go deeper\n      acc.push(mw);\n\n      // if it's the same type, continue down the current chain\n      // otherwise, we want to go down the new chain\n      setSourceHelper(_src, src.type === _src.type ? mwrest : middlewares[_src.type], next, player, acc, lastRun);\n    });\n  } else if (mwrest.length) {\n    setSourceHelper(src, mwrest, next, player, acc, lastRun);\n  } else if (lastRun) {\n    next(src, acc);\n  } else {\n    setSourceHelper(src, middlewares['*'], next, player, acc, true);\n  }\n}\n\n/**\n * Mimetypes\n *\n * @see https://www.iana.org/assignments/media-types/media-types.xhtml\n * @typedef Mimetypes~Kind\n * @enum\n */\nconst MimetypesKind = {\n  opus: 'video/ogg',\n  ogv: 'video/ogg',\n  mp4: 'video/mp4',\n  mov: 'video/mp4',\n  m4v: 'video/mp4',\n  mkv: 'video/x-matroska',\n  m4a: 'audio/mp4',\n  mp3: 'audio/mpeg',\n  aac: 'audio/aac',\n  caf: 'audio/x-caf',\n  flac: 'audio/flac',\n  oga: 'audio/ogg',\n  wav: 'audio/wav',\n  m3u8: 'application/x-mpegURL',\n  mpd: 'application/dash+xml',\n  jpg: 'image/jpeg',\n  jpeg: 'image/jpeg',\n  gif: 'image/gif',\n  png: 'image/png',\n  svg: 'image/svg+xml',\n  webp: 'image/webp'\n};\n\n/**\n * Get the mimetype of a given src url if possible\n *\n * @param {string} src\n *        The url to the src\n *\n * @return {string}\n *         return the mimetype if it was known or empty string otherwise\n */\nconst getMimetype = function (src = '') {\n  const ext = getFileExtension(src);\n  const mimetype = MimetypesKind[ext.toLowerCase()];\n  return mimetype || '';\n};\n\n/**\n * Find the mime type of a given source string if possible. Uses the player\n * source cache.\n *\n * @param { import('../player').default } player\n *        The player object\n *\n * @param {string} src\n *        The source string\n *\n * @return {string}\n *         The type that was found\n */\nconst findMimetype = (player, src) => {\n  if (!src) {\n    return '';\n  }\n\n  // 1. check for the type in the `source` cache\n  if (player.cache_.source.src === src && player.cache_.source.type) {\n    return player.cache_.source.type;\n  }\n\n  // 2. see if we have this source in our `currentSources` cache\n  const matchingSources = player.cache_.sources.filter(s => s.src === src);\n  if (matchingSources.length) {\n    return matchingSources[0].type;\n  }\n\n  // 3. look for the src url in source elements and use the type there\n  const sources = player.$$('source');\n  for (let i = 0; i < sources.length; i++) {\n    const s = sources[i];\n    if (s.type && s.src && s.src === src) {\n      return s.type;\n    }\n  }\n\n  // 4. finally fallback to our list of mime types based on src url extension\n  return getMimetype(src);\n};\n\n/**\n * @module filter-source\n */\n\n/**\n * Filter out single bad source objects or multiple source objects in an\n * array. Also flattens nested source object arrays into a 1 dimensional\n * array of source objects.\n *\n * @param {Tech~SourceObject|Tech~SourceObject[]} src\n *        The src object to filter\n *\n * @return {Tech~SourceObject[]}\n *         An array of sourceobjects containing only valid sources\n *\n * @private\n */\nconst filterSource = function (src) {\n  // traverse array\n  if (Array.isArray(src)) {\n    let newsrc = [];\n    src.forEach(function (srcobj) {\n      srcobj = filterSource(srcobj);\n      if (Array.isArray(srcobj)) {\n        newsrc = newsrc.concat(srcobj);\n      } else if (isObject(srcobj)) {\n        newsrc.push(srcobj);\n      }\n    });\n    src = newsrc;\n  } else if (typeof src === 'string' && src.trim()) {\n    // convert string into object\n    src = [fixSource({\n      src\n    })];\n  } else if (isObject(src) && typeof src.src === 'string' && src.src && src.src.trim()) {\n    // src is already valid\n    src = [fixSource(src)];\n  } else {\n    // invalid source, turn it into an empty array\n    src = [];\n  }\n  return src;\n};\n\n/**\n * Checks src mimetype, adding it when possible\n *\n * @param {Tech~SourceObject} src\n *        The src object to check\n * @return {Tech~SourceObject}\n *        src Object with known type\n */\nfunction fixSource(src) {\n  if (!src.type) {\n    const mimetype = getMimetype(src.src);\n    if (mimetype) {\n      src.type = mimetype;\n    }\n  }\n  return src;\n}\n\n/**\n * @file loader.js\n */\n\n/**\n * The `MediaLoader` is the `Component` that decides which playback technology to load\n * when a player is initialized.\n *\n * @extends Component\n */\nclass MediaLoader extends Component$1 {\n  /**\n   * Create an instance of this class.\n   *\n   * @param { import('../player').default } player\n   *        The `Player` that this class should attach to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Function} [ready]\n   *        The function that is run when this component is ready.\n   */\n  constructor(player, options, ready) {\n    // MediaLoader has no element\n    const options_ = merge$1({\n      createEl: false\n    }, options);\n    super(player, options_, ready);\n\n    // If there are no sources when the player is initialized,\n    // load the first supported playback technology.\n\n    if (!options.playerOptions.sources || options.playerOptions.sources.length === 0) {\n      for (let i = 0, j = options.playerOptions.techOrder; i < j.length; i++) {\n        const techName = toTitleCase$1(j[i]);\n        let tech = Tech.getTech(techName);\n\n        // Support old behavior of techs being registered as components.\n        // Remove once that deprecated behavior is removed.\n        if (!techName) {\n          tech = Component$1.getComponent(techName);\n        }\n\n        // Check if the browser supports this technology\n        if (tech && tech.isSupported()) {\n          player.loadTech_(techName);\n          break;\n        }\n      }\n    } else {\n      // Loop through playback technologies (e.g. HTML5) and check for support.\n      // Then load the best source.\n      // A few assumptions here:\n      //   All playback technologies respect preload false.\n      player.src(options.playerOptions.sources);\n    }\n  }\n}\nComponent$1.registerComponent('MediaLoader', MediaLoader);\n\n/**\n * @file clickable-component.js\n */\n\n/**\n * Component which is clickable or keyboard actionable, but is not a\n * native HTML button.\n *\n * @extends Component\n */\nclass ClickableComponent extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param  { import('./player').default } player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param  {Object} [options]\n   *         The key/value store of component options.\n   *\n   * @param  {function} [options.clickHandler]\n   *         The function to call when the button is clicked / activated\n   *\n   * @param  {string} [options.controlText]\n   *         The text to set on the button\n   *\n   * @param  {string} [options.className]\n   *         A class or space separated list of classes to add the component\n   *\n   */\n  constructor(player, options) {\n    super(player, options);\n    if (this.options_.controlText) {\n      this.controlText(this.options_.controlText);\n    }\n    this.handleMouseOver_ = e => this.handleMouseOver(e);\n    this.handleMouseOut_ = e => this.handleMouseOut(e);\n    this.handleClick_ = e => this.handleClick(e);\n    this.handleKeyDown_ = e => this.handleKeyDown(e);\n    this.emitTapEvents();\n    this.enable();\n  }\n\n  /**\n   * Create the `ClickableComponent`s DOM element.\n   *\n   * @param {string} [tag=div]\n   *        The element's node type.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element.\n   *\n   * @param {Object} [attributes={}]\n   *        An object of attributes that should be set on the element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  createEl(tag = 'div', props = {}, attributes = {}) {\n    props = Object.assign({\n      className: this.buildCSSClass(),\n      tabIndex: 0\n    }, props);\n    if (tag === 'button') {\n      log$1.error(`Creating a ClickableComponent with an HTML element of ${tag} is not supported; use a Button instead.`);\n    }\n\n    // Add ARIA attributes for clickable element which is not a native HTML button\n    attributes = Object.assign({\n      role: 'button'\n    }, attributes);\n    this.tabIndex_ = props.tabIndex;\n    const el = createEl(tag, props, attributes);\n    el.appendChild(createEl('span', {\n      className: 'vjs-icon-placeholder'\n    }, {\n      'aria-hidden': true\n    }));\n    this.createControlTextEl(el);\n    return el;\n  }\n  dispose() {\n    // remove controlTextEl_ on dispose\n    this.controlTextEl_ = null;\n    super.dispose();\n  }\n\n  /**\n   * Create a control text element on this `ClickableComponent`\n   *\n   * @param {Element} [el]\n   *        Parent element for the control text.\n   *\n   * @return {Element}\n   *         The control text element that gets created.\n   */\n  createControlTextEl(el) {\n    this.controlTextEl_ = createEl('span', {\n      className: 'vjs-control-text'\n    }, {\n      // let the screen reader user know that the text of the element may change\n      'aria-live': 'polite'\n    });\n    if (el) {\n      el.appendChild(this.controlTextEl_);\n    }\n    this.controlText(this.controlText_, el);\n    return this.controlTextEl_;\n  }\n\n  /**\n   * Get or set the localize text to use for the controls on the `ClickableComponent`.\n   *\n   * @param {string} [text]\n   *        Control text for element.\n   *\n   * @param {Element} [el=this.el()]\n   *        Element to set the title on.\n   *\n   * @return {string}\n   *         - The control text when getting\n   */\n  controlText(text, el = this.el()) {\n    if (text === undefined) {\n      return this.controlText_ || 'Need Text';\n    }\n    const localizedText = this.localize(text);\n\n    /** @protected */\n    this.controlText_ = text;\n    textContent(this.controlTextEl_, localizedText);\n    if (!this.nonIconControl && !this.player_.options_.noUITitleAttributes) {\n      // Set title attribute if only an icon is shown\n      el.setAttribute('title', localizedText);\n    }\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-control vjs-button ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * Enable this `ClickableComponent`\n   */\n  enable() {\n    if (!this.enabled_) {\n      this.enabled_ = true;\n      this.removeClass('vjs-disabled');\n      this.el_.setAttribute('aria-disabled', 'false');\n      if (typeof this.tabIndex_ !== 'undefined') {\n        this.el_.setAttribute('tabIndex', this.tabIndex_);\n      }\n      this.on(['tap', 'click'], this.handleClick_);\n      this.on('keydown', this.handleKeyDown_);\n    }\n  }\n\n  /**\n   * Disable this `ClickableComponent`\n   */\n  disable() {\n    this.enabled_ = false;\n    this.addClass('vjs-disabled');\n    this.el_.setAttribute('aria-disabled', 'true');\n    if (typeof this.tabIndex_ !== 'undefined') {\n      this.el_.removeAttribute('tabIndex');\n    }\n    this.off('mouseover', this.handleMouseOver_);\n    this.off('mouseout', this.handleMouseOut_);\n    this.off(['tap', 'click'], this.handleClick_);\n    this.off('keydown', this.handleKeyDown_);\n  }\n\n  /**\n   * Handles language change in ClickableComponent for the player in components\n   *\n   *\n   */\n  handleLanguagechange() {\n    this.controlText(this.controlText_);\n  }\n\n  /**\n   * Event handler that is called when a `ClickableComponent` receives a\n   * `click` or `tap` event.\n   *\n   * @param {Event} event\n   *        The `tap` or `click` event that caused this function to be called.\n   *\n   * @listens tap\n   * @listens click\n   * @abstract\n   */\n  handleClick(event) {\n    if (this.options_.clickHandler) {\n      this.options_.clickHandler.call(this, arguments);\n    }\n  }\n\n  /**\n   * Event handler that is called when a `ClickableComponent` receives a\n   * `keydown` event.\n   *\n   * By default, if the key is Space or Enter, it will trigger a `click` event.\n   *\n   * @param {Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  handleKeyDown(event) {\n    // Support Space or Enter key operation to fire a click event. Also,\n    // prevent the event from propagating through the DOM and triggering\n    // Player hotkeys.\n    if (keycode.isEventKey(event, 'Space') || keycode.isEventKey(event, 'Enter')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.trigger('click');\n    } else {\n      // Pass keypress handling up for unsupported keys\n      super.handleKeyDown(event);\n    }\n  }\n}\nComponent$1.registerComponent('ClickableComponent', ClickableComponent);\n\n/**\n * @file poster-image.js\n */\n\n/**\n * A `ClickableComponent` that handles showing the poster image for the player.\n *\n * @extends ClickableComponent\n */\nclass PosterImage extends ClickableComponent {\n  /**\n   * Create an instance of this class.\n   *\n   * @param { import('./player').default } player\n   *        The `Player` that this class should attach to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.update();\n    this.update_ = e => this.update(e);\n    player.on('posterchange', this.update_);\n  }\n\n  /**\n   * Clean up and dispose of the `PosterImage`.\n   */\n  dispose() {\n    this.player().off('posterchange', this.update_);\n    super.dispose();\n  }\n\n  /**\n   * Create the `PosterImage`s DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  createEl() {\n    // The el is an empty div to keep position in the DOM\n    // A picture and img el will be inserted when a source is set\n    return createEl('div', {\n      className: 'vjs-poster'\n    });\n  }\n\n  /**\n   * Get or set the `PosterImage`'s crossOrigin option.\n   *\n   * @param {string|null} [value]\n   *        The value to set the crossOrigin to. If an argument is\n   *        given, must be one of `'anonymous'` or `'use-credentials'`, or 'null'.\n   *\n   * @return {string|null}\n   *         - The current crossOrigin value of the `Player` when getting.\n   *         - undefined when setting\n   */\n  crossOrigin(value) {\n    // `null` can be set to unset a value\n    if (typeof value === 'undefined') {\n      if (this.$('img')) {\n        // If the poster's element exists, give its value\n        return this.$('img').crossOrigin;\n      } else if (this.player_.tech_ && this.player_.tech_.isReady_) {\n        // If not but the tech is ready, query the tech\n        return this.player_.crossOrigin();\n      }\n      // Otherwise check options as the  poster is usually set before the state of crossorigin\n      // can be retrieved by the getter\n      return this.player_.options_.crossOrigin || this.player_.options_.crossorigin || null;\n    }\n    if (value !== null && value !== 'anonymous' && value !== 'use-credentials') {\n      this.player_.log.warn(`crossOrigin must be null,  \"anonymous\" or \"use-credentials\", given \"${value}\"`);\n      return;\n    }\n    if (this.$('img')) {\n      this.$('img').crossOrigin = value;\n    }\n    return;\n  }\n\n  /**\n   * An {@link EventTarget~EventListener} for {@link Player#posterchange} events.\n   *\n   * @listens Player#posterchange\n   *\n   * @param {Event} [event]\n   *        The `Player#posterchange` event that triggered this function.\n   */\n  update(event) {\n    const url = this.player().poster();\n    this.setSrc(url);\n\n    // If there's no poster source we should display:none on this component\n    // so it's not still clickable or right-clickable\n    if (url) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  }\n\n  /**\n   * Set the source of the `PosterImage` depending on the display method. (Re)creates\n   * the inner picture and img elementss when needed.\n   *\n   * @param {string} [url]\n   *        The URL to the source for the `PosterImage`. If not specified or falsy,\n   *        any source and ant inner picture/img are removed.\n   */\n  setSrc(url) {\n    if (!url) {\n      this.el_.textContent = '';\n      return;\n    }\n    if (!this.$('img')) {\n      this.el_.appendChild(createEl('picture', {\n        className: 'vjs-poster',\n        // Don't want poster to be tabbable.\n        tabIndex: -1\n      }, {}, createEl('img', {\n        loading: 'lazy',\n        crossOrigin: this.crossOrigin()\n      }, {\n        alt: ''\n      })));\n    }\n    this.$('img').src = url;\n  }\n\n  /**\n   * An {@link EventTarget~EventListener} for clicks on the `PosterImage`. See\n   * {@link ClickableComponent#handleClick} for instances where this will be triggered.\n   *\n   * @listens tap\n   * @listens click\n   * @listens keydown\n   *\n   * @param {Event} event\n   +        The `click`, `tap` or `keydown` event that caused this function to be called.\n   */\n  handleClick(event) {\n    // We don't want a click to trigger playback when controls are disabled\n    if (!this.player_.controls()) {\n      return;\n    }\n    if (this.player_.tech(true)) {\n      this.player_.tech(true).focus();\n    }\n    if (this.player_.paused()) {\n      silencePromise(this.player_.play());\n    } else {\n      this.player_.pause();\n    }\n  }\n}\n\n/**\n * Get or set the `PosterImage`'s crossorigin option. For the HTML5 player, this\n * sets the `crossOrigin` property on the `<img>` tag to control the CORS\n * behavior.\n *\n * @param {string|null} [value]\n *        The value to set the `PosterImages`'s crossorigin to. If an argument is\n *        given, must be one of `anonymous` or `use-credentials`.\n *\n * @return {string|null|undefined}\n *         - The current crossorigin value of the `Player` when getting.\n *         - undefined when setting\n */\nPosterImage.prototype.crossorigin = PosterImage.prototype.crossOrigin;\nComponent$1.registerComponent('PosterImage', PosterImage);\n\n/**\n * @file text-track-display.js\n */\nconst darkGray = '#222';\nconst lightGray = '#ccc';\nconst fontMap = {\n  monospace: 'monospace',\n  sansSerif: 'sans-serif',\n  serif: 'serif',\n  monospaceSansSerif: '\"Andale Mono\", \"Lucida Console\", monospace',\n  monospaceSerif: '\"Courier New\", monospace',\n  proportionalSansSerif: 'sans-serif',\n  proportionalSerif: 'serif',\n  casual: '\"Comic Sans MS\", Impact, fantasy',\n  script: '\"Monotype Corsiva\", cursive',\n  smallcaps: '\"Andale Mono\", \"Lucida Console\", monospace, sans-serif'\n};\n\n/**\n * Construct an rgba color from a given hex color code.\n *\n * @param {number} color\n *        Hex number for color, like #f0e or #f604e2.\n *\n * @param {number} opacity\n *        Value for opacity, 0.0 - 1.0.\n *\n * @return {string}\n *         The rgba color that was created, like 'rgba(255, 0, 0, 0.3)'.\n */\nfunction constructColor(color, opacity) {\n  let hex;\n  if (color.length === 4) {\n    // color looks like \"#f0e\"\n    hex = color[1] + color[1] + color[2] + color[2] + color[3] + color[3];\n  } else if (color.length === 7) {\n    // color looks like \"#f604e2\"\n    hex = color.slice(1);\n  } else {\n    throw new Error('Invalid color code provided, ' + color + '; must be formatted as e.g. #f0e or #f604e2.');\n  }\n  return 'rgba(' + parseInt(hex.slice(0, 2), 16) + ',' + parseInt(hex.slice(2, 4), 16) + ',' + parseInt(hex.slice(4, 6), 16) + ',' + opacity + ')';\n}\n\n/**\n * Try to update the style of a DOM element. Some style changes will throw an error,\n * particularly in IE8. Those should be noops.\n *\n * @param {Element} el\n *        The DOM element to be styled.\n *\n * @param {string} style\n *        The CSS property on the element that should be styled.\n *\n * @param {string} rule\n *        The style rule that should be applied to the property.\n *\n * @private\n */\nfunction tryUpdateStyle(el, style, rule) {\n  try {\n    el.style[style] = rule;\n  } catch (e) {\n    // Satisfies linter.\n    return;\n  }\n}\n\n/**\n * The component for displaying text track cues.\n *\n * @extends Component\n */\nclass TextTrackDisplay extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Function} [ready]\n   *        The function to call when `TextTrackDisplay` is ready.\n   */\n  constructor(player, options, ready) {\n    super(player, options, ready);\n    const updateDisplayHandler = e => this.updateDisplay(e);\n    player.on('loadstart', e => this.toggleDisplay(e));\n    player.on('texttrackchange', updateDisplayHandler);\n    player.on('loadedmetadata', e => this.preselectTrack(e));\n\n    // This used to be called during player init, but was causing an error\n    // if a track should show by default and the display hadn't loaded yet.\n    // Should probably be moved to an external track loader when we support\n    // tracks that don't need a display.\n    player.ready(bind_(this, function () {\n      if (player.tech_ && player.tech_.featuresNativeTextTracks) {\n        this.hide();\n        return;\n      }\n      player.on('fullscreenchange', updateDisplayHandler);\n      player.on('playerresize', updateDisplayHandler);\n      const screenOrientation = window$1.screen.orientation || window$1;\n      const changeOrientationEvent = window$1.screen.orientation ? 'change' : 'orientationchange';\n      screenOrientation.addEventListener(changeOrientationEvent, updateDisplayHandler);\n      player.on('dispose', () => screenOrientation.removeEventListener(changeOrientationEvent, updateDisplayHandler));\n      const tracks = this.options_.playerOptions.tracks || [];\n      for (let i = 0; i < tracks.length; i++) {\n        this.player_.addRemoteTextTrack(tracks[i], true);\n      }\n      this.preselectTrack();\n    }));\n  }\n\n  /**\n  * Preselect a track following this precedence:\n  * - matches the previously selected {@link TextTrack}'s language and kind\n  * - matches the previously selected {@link TextTrack}'s language only\n  * - is the first default captions track\n  * - is the first default descriptions track\n  *\n  * @listens Player#loadstart\n  */\n  preselectTrack() {\n    const modes = {\n      captions: 1,\n      subtitles: 1\n    };\n    const trackList = this.player_.textTracks();\n    const userPref = this.player_.cache_.selectedLanguage;\n    let firstDesc;\n    let firstCaptions;\n    let preferredTrack;\n    for (let i = 0; i < trackList.length; i++) {\n      const track = trackList[i];\n      if (userPref && userPref.enabled && userPref.language && userPref.language === track.language && track.kind in modes) {\n        // Always choose the track that matches both language and kind\n        if (track.kind === userPref.kind) {\n          preferredTrack = track;\n          // or choose the first track that matches language\n        } else if (!preferredTrack) {\n          preferredTrack = track;\n        }\n\n        // clear everything if offTextTrackMenuItem was clicked\n      } else if (userPref && !userPref.enabled) {\n        preferredTrack = null;\n        firstDesc = null;\n        firstCaptions = null;\n      } else if (track.default) {\n        if (track.kind === 'descriptions' && !firstDesc) {\n          firstDesc = track;\n        } else if (track.kind in modes && !firstCaptions) {\n          firstCaptions = track;\n        }\n      }\n    }\n\n    // The preferredTrack matches the user preference and takes\n    // precedence over all the other tracks.\n    // So, display the preferredTrack before the first default track\n    // and the subtitles/captions track before the descriptions track\n    if (preferredTrack) {\n      preferredTrack.mode = 'showing';\n    } else if (firstCaptions) {\n      firstCaptions.mode = 'showing';\n    } else if (firstDesc) {\n      firstDesc.mode = 'showing';\n    }\n  }\n\n  /**\n   * Turn display of {@link TextTrack}'s from the current state into the other state.\n   * There are only two states:\n   * - 'shown'\n   * - 'hidden'\n   *\n   * @listens Player#loadstart\n   */\n  toggleDisplay() {\n    if (this.player_.tech_ && this.player_.tech_.featuresNativeTextTracks) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  }\n\n  /**\n   * Create the {@link Component}'s DOM element.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: 'vjs-text-track-display'\n    }, {\n      'translate': 'yes',\n      'aria-live': 'off',\n      'aria-atomic': 'true'\n    });\n  }\n\n  /**\n   * Clear all displayed {@link TextTrack}s.\n   */\n  clearDisplay() {\n    if (typeof window$1.WebVTT === 'function') {\n      window$1.WebVTT.processCues(window$1, [], this.el_);\n    }\n  }\n\n  /**\n   * Update the displayed TextTrack when a either a {@link Player#texttrackchange} or\n   * a {@link Player#fullscreenchange} is fired.\n   *\n   * @listens Player#texttrackchange\n   * @listens Player#fullscreenchange\n   */\n  updateDisplay() {\n    const tracks = this.player_.textTracks();\n    const allowMultipleShowingTracks = this.options_.allowMultipleShowingTracks;\n    this.clearDisplay();\n    if (allowMultipleShowingTracks) {\n      const showingTracks = [];\n      for (let i = 0; i < tracks.length; ++i) {\n        const track = tracks[i];\n        if (track.mode !== 'showing') {\n          continue;\n        }\n        showingTracks.push(track);\n      }\n      this.updateForTrack(showingTracks);\n      return;\n    }\n\n    //  Track display prioritization model: if multiple tracks are 'showing',\n    //  display the first 'subtitles' or 'captions' track which is 'showing',\n    //  otherwise display the first 'descriptions' track which is 'showing'\n\n    let descriptionsTrack = null;\n    let captionsSubtitlesTrack = null;\n    let i = tracks.length;\n    while (i--) {\n      const track = tracks[i];\n      if (track.mode === 'showing') {\n        if (track.kind === 'descriptions') {\n          descriptionsTrack = track;\n        } else {\n          captionsSubtitlesTrack = track;\n        }\n      }\n    }\n    if (captionsSubtitlesTrack) {\n      if (this.getAttribute('aria-live') !== 'off') {\n        this.setAttribute('aria-live', 'off');\n      }\n      this.updateForTrack(captionsSubtitlesTrack);\n    } else if (descriptionsTrack) {\n      if (this.getAttribute('aria-live') !== 'assertive') {\n        this.setAttribute('aria-live', 'assertive');\n      }\n      this.updateForTrack(descriptionsTrack);\n    }\n  }\n\n  /**\n   * Style {@Link TextTrack} activeCues according to {@Link TextTrackSettings}.\n   *\n   * @param {TextTrack} track\n   *        Text track object containing active cues to style.\n   */\n  updateDisplayState(track) {\n    const overrides = this.player_.textTrackSettings.getValues();\n    const cues = track.activeCues;\n    let i = cues.length;\n    while (i--) {\n      const cue = cues[i];\n      if (!cue) {\n        continue;\n      }\n      const cueDiv = cue.displayState;\n      if (overrides.color) {\n        cueDiv.firstChild.style.color = overrides.color;\n      }\n      if (overrides.textOpacity) {\n        tryUpdateStyle(cueDiv.firstChild, 'color', constructColor(overrides.color || '#fff', overrides.textOpacity));\n      }\n      if (overrides.backgroundColor) {\n        cueDiv.firstChild.style.backgroundColor = overrides.backgroundColor;\n      }\n      if (overrides.backgroundOpacity) {\n        tryUpdateStyle(cueDiv.firstChild, 'backgroundColor', constructColor(overrides.backgroundColor || '#000', overrides.backgroundOpacity));\n      }\n      if (overrides.windowColor) {\n        if (overrides.windowOpacity) {\n          tryUpdateStyle(cueDiv, 'backgroundColor', constructColor(overrides.windowColor, overrides.windowOpacity));\n        } else {\n          cueDiv.style.backgroundColor = overrides.windowColor;\n        }\n      }\n      if (overrides.edgeStyle) {\n        if (overrides.edgeStyle === 'dropshadow') {\n          cueDiv.firstChild.style.textShadow = `2px 2px 3px ${darkGray}, 2px 2px 4px ${darkGray}, 2px 2px 5px ${darkGray}`;\n        } else if (overrides.edgeStyle === 'raised') {\n          cueDiv.firstChild.style.textShadow = `1px 1px ${darkGray}, 2px 2px ${darkGray}, 3px 3px ${darkGray}`;\n        } else if (overrides.edgeStyle === 'depressed') {\n          cueDiv.firstChild.style.textShadow = `1px 1px ${lightGray}, 0 1px ${lightGray}, -1px -1px ${darkGray}, 0 -1px ${darkGray}`;\n        } else if (overrides.edgeStyle === 'uniform') {\n          cueDiv.firstChild.style.textShadow = `0 0 4px ${darkGray}, 0 0 4px ${darkGray}, 0 0 4px ${darkGray}, 0 0 4px ${darkGray}`;\n        }\n      }\n      if (overrides.fontPercent && overrides.fontPercent !== 1) {\n        const fontSize = window$1.parseFloat(cueDiv.style.fontSize);\n        cueDiv.style.fontSize = fontSize * overrides.fontPercent + 'px';\n        cueDiv.style.height = 'auto';\n        cueDiv.style.top = 'auto';\n      }\n      if (overrides.fontFamily && overrides.fontFamily !== 'default') {\n        if (overrides.fontFamily === 'small-caps') {\n          cueDiv.firstChild.style.fontVariant = 'small-caps';\n        } else {\n          cueDiv.firstChild.style.fontFamily = fontMap[overrides.fontFamily];\n        }\n      }\n    }\n  }\n\n  /**\n   * Add an {@link TextTrack} to to the {@link Tech}s {@link TextTrackList}.\n   *\n   * @param {TextTrack|TextTrack[]} tracks\n   *        Text track object or text track array to be added to the list.\n   */\n  updateForTrack(tracks) {\n    if (!Array.isArray(tracks)) {\n      tracks = [tracks];\n    }\n    if (typeof window$1.WebVTT !== 'function' || tracks.every(track => {\n      return !track.activeCues;\n    })) {\n      return;\n    }\n    const cues = [];\n\n    // push all active track cues\n    for (let i = 0; i < tracks.length; ++i) {\n      const track = tracks[i];\n      for (let j = 0; j < track.activeCues.length; ++j) {\n        cues.push(track.activeCues[j]);\n      }\n    }\n\n    // removes all cues before it processes new ones\n    window$1.WebVTT.processCues(window$1, cues, this.el_);\n\n    // add unique class to each language text track & add settings styling if necessary\n    for (let i = 0; i < tracks.length; ++i) {\n      const track = tracks[i];\n      for (let j = 0; j < track.activeCues.length; ++j) {\n        const cueEl = track.activeCues[j].displayState;\n        addClass(cueEl, 'vjs-text-track-cue', 'vjs-text-track-cue-' + (track.language ? track.language : i));\n        if (track.language) {\n          setAttribute(cueEl, 'lang', track.language);\n        }\n      }\n      if (this.player_.textTrackSettings) {\n        this.updateDisplayState(track);\n      }\n    }\n  }\n}\nComponent$1.registerComponent('TextTrackDisplay', TextTrackDisplay);\n\n/**\n * @file loading-spinner.js\n */\n\n/**\n * A loading spinner for use during waiting/loading events.\n *\n * @extends Component\n */\nclass LoadingSpinner extends Component$1 {\n  /**\n   * Create the `LoadingSpinner`s DOM element.\n   *\n   * @return {Element}\n   *         The dom element that gets created.\n   */\n  createEl() {\n    const isAudio = this.player_.isAudio();\n    const playerType = this.localize(isAudio ? 'Audio Player' : 'Video Player');\n    const controlText = createEl('span', {\n      className: 'vjs-control-text',\n      textContent: this.localize('{1} is loading.', [playerType])\n    });\n    const el = super.createEl('div', {\n      className: 'vjs-loading-spinner',\n      dir: 'ltr'\n    });\n    el.appendChild(controlText);\n    return el;\n  }\n\n  /**\n   * Update control text on languagechange\n   */\n  handleLanguagechange() {\n    this.$('.vjs-control-text').textContent = this.localize('{1} is loading.', [this.player_.isAudio() ? 'Audio Player' : 'Video Player']);\n  }\n}\nComponent$1.registerComponent('LoadingSpinner', LoadingSpinner);\n\n/**\n * @file button.js\n */\n\n/**\n * Base class for all buttons.\n *\n * @extends ClickableComponent\n */\nclass Button extends ClickableComponent {\n  /**\n   * Create the `Button`s DOM element.\n   *\n   * @param {string} [tag=\"button\"]\n   *        The element's node type. This argument is IGNORED: no matter what\n   *        is passed, it will always create a `button` element.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element.\n   *\n   * @param {Object} [attributes={}]\n   *        An object of attributes that should be set on the element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  createEl(tag, props = {}, attributes = {}) {\n    tag = 'button';\n    props = Object.assign({\n      className: this.buildCSSClass()\n    }, props);\n\n    // Add attributes for button element\n    attributes = Object.assign({\n      // Necessary since the default button type is \"submit\"\n      type: 'button'\n    }, attributes);\n    const el = createEl(tag, props, attributes);\n    el.appendChild(createEl('span', {\n      className: 'vjs-icon-placeholder'\n    }, {\n      'aria-hidden': true\n    }));\n    this.createControlTextEl(el);\n    return el;\n  }\n\n  /**\n   * Add a child `Component` inside of this `Button`.\n   *\n   * @param {string|Component} child\n   *        The name or instance of a child to add.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of options that will get passed to children of\n   *        the child.\n   *\n   * @return {Component}\n   *         The `Component` that gets added as a child. When using a string the\n   *         `Component` will get created by this process.\n   *\n   * @deprecated since version 5\n   */\n  addChild(child, options = {}) {\n    const className = this.constructor.name;\n    log$1.warn(`Adding an actionable (user controllable) child to a Button (${className}) is not supported; use a ClickableComponent instead.`);\n\n    // Avoid the error message generated by ClickableComponent's addChild method\n    return Component$1.prototype.addChild.call(this, child, options);\n  }\n\n  /**\n   * Enable the `Button` element so that it can be activated or clicked. Use this with\n   * {@link Button#disable}.\n   */\n  enable() {\n    super.enable();\n    this.el_.removeAttribute('disabled');\n  }\n\n  /**\n   * Disable the `Button` element so that it cannot be activated or clicked. Use this with\n   * {@link Button#enable}.\n   */\n  disable() {\n    super.disable();\n    this.el_.setAttribute('disabled', 'disabled');\n  }\n\n  /**\n   * This gets called when a `Button` has focus and `keydown` is triggered via a key\n   * press.\n   *\n   * @param {Event} event\n   *        The event that caused this function to get called.\n   *\n   * @listens keydown\n   */\n  handleKeyDown(event) {\n    // Ignore Space or Enter key operation, which is handled by the browser for\n    // a button - though not for its super class, ClickableComponent. Also,\n    // prevent the event from propagating through the DOM and triggering Player\n    // hotkeys. We do not preventDefault here because we _want_ the browser to\n    // handle it.\n    if (keycode.isEventKey(event, 'Space') || keycode.isEventKey(event, 'Enter')) {\n      event.stopPropagation();\n      return;\n    }\n\n    // Pass keypress handling up for unsupported keys\n    super.handleKeyDown(event);\n  }\n}\nComponent$1.registerComponent('Button', Button);\n\n/**\n * @file big-play-button.js\n */\n\n/**\n * The initial play button that shows before the video has played. The hiding of the\n * `BigPlayButton` get done via CSS and `Player` states.\n *\n * @extends Button\n */\nclass BigPlayButton extends Button {\n  constructor(player, options) {\n    super(player, options);\n    this.mouseused_ = false;\n    this.on('mousedown', e => this.handleMouseDown(e));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object. Always returns 'vjs-big-play-button'.\n   */\n  buildCSSClass() {\n    return 'vjs-big-play-button';\n  }\n\n  /**\n   * This gets called when a `BigPlayButton` \"clicked\". See {@link ClickableComponent}\n   * for more detailed information on what a click can be.\n   *\n   * @param {KeyboardEvent} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  handleClick(event) {\n    const playPromise = this.player_.play();\n\n    // exit early if clicked via the mouse\n    if (this.mouseused_ && event.clientX && event.clientY) {\n      silencePromise(playPromise);\n      if (this.player_.tech(true)) {\n        this.player_.tech(true).focus();\n      }\n      return;\n    }\n    const cb = this.player_.getChild('controlBar');\n    const playToggle = cb && cb.getChild('playToggle');\n    if (!playToggle) {\n      this.player_.tech(true).focus();\n      return;\n    }\n    const playFocus = () => playToggle.focus();\n    if (isPromise(playPromise)) {\n      playPromise.then(playFocus, () => {});\n    } else {\n      this.setTimeout(playFocus, 1);\n    }\n  }\n  handleKeyDown(event) {\n    this.mouseused_ = false;\n    super.handleKeyDown(event);\n  }\n  handleMouseDown(event) {\n    this.mouseused_ = true;\n  }\n}\n\n/**\n * The text that should display over the `BigPlayButton`s controls. Added to for localization.\n *\n * @type {string}\n * @protected\n */\nBigPlayButton.prototype.controlText_ = 'Play Video';\nComponent$1.registerComponent('BigPlayButton', BigPlayButton);\n\n/**\n * @file close-button.js\n */\n\n/**\n * The `CloseButton` is a `{@link Button}` that fires a `close` event when\n * it gets clicked.\n *\n * @extends Button\n */\nclass CloseButton extends Button {\n  /**\n  * Creates an instance of the this class.\n  *\n  * @param  { import('./player').default } player\n  *         The `Player` that this class should be attached to.\n  *\n  * @param  {Object} [options]\n  *         The key/value store of player options.\n  */\n  constructor(player, options) {\n    super(player, options);\n    this.controlText(options && options.controlText || this.localize('Close'));\n  }\n\n  /**\n  * Builds the default DOM `className`.\n  *\n  * @return {string}\n  *         The DOM `className` for this object.\n  */\n  buildCSSClass() {\n    return `vjs-close-button ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * This gets called when a `CloseButton` gets clicked. See\n   * {@link ClickableComponent#handleClick} for more information on when\n   * this will be triggered\n   *\n   * @param {Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   * @fires CloseButton#close\n   */\n  handleClick(event) {\n    /**\n     * Triggered when the a `CloseButton` is clicked.\n     *\n     * @event CloseButton#close\n     * @type {Event}\n     *\n     * @property {boolean} [bubbles=false]\n     *           set to false so that the close event does not\n     *           bubble up to parents if there is no listener\n     */\n    this.trigger({\n      type: 'close',\n      bubbles: false\n    });\n  }\n  /**\n   * Event handler that is called when a `CloseButton` receives a\n   * `keydown` event.\n   *\n   * By default, if the key is Esc, it will trigger a `click` event.\n   *\n   * @param {Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  handleKeyDown(event) {\n    // Esc button will trigger `click` event\n    if (keycode.isEventKey(event, 'Esc')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.trigger('click');\n    } else {\n      // Pass keypress handling up for unsupported keys\n      super.handleKeyDown(event);\n    }\n  }\n}\nComponent$1.registerComponent('CloseButton', CloseButton);\n\n/**\n * @file play-toggle.js\n */\n\n/**\n * Button to toggle between play and pause.\n *\n * @extends Button\n */\nclass PlayToggle extends Button {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('./player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  constructor(player, options = {}) {\n    super(player, options);\n\n    // show or hide replay icon\n    options.replay = options.replay === undefined || options.replay;\n    this.on(player, 'play', e => this.handlePlay(e));\n    this.on(player, 'pause', e => this.handlePause(e));\n    if (options.replay) {\n      this.on(player, 'ended', e => this.handleEnded(e));\n    }\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-play-control ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * This gets called when an `PlayToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  handleClick(event) {\n    if (this.player_.paused()) {\n      silencePromise(this.player_.play());\n    } else {\n      this.player_.pause();\n    }\n  }\n\n  /**\n   * This gets called once after the video has ended and the user seeks so that\n   * we can change the replay button back to a play button.\n   *\n   * @param {Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#seeked\n   */\n  handleSeeked(event) {\n    this.removeClass('vjs-ended');\n    if (this.player_.paused()) {\n      this.handlePause(event);\n    } else {\n      this.handlePlay(event);\n    }\n  }\n\n  /**\n   * Add the vjs-playing class to the element so it can change appearance.\n   *\n   * @param {Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#play\n   */\n  handlePlay(event) {\n    this.removeClass('vjs-ended', 'vjs-paused');\n    this.addClass('vjs-playing');\n    // change the button text to \"Pause\"\n    this.controlText('Pause');\n  }\n\n  /**\n   * Add the vjs-paused class to the element so it can change appearance.\n   *\n   * @param {Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#pause\n   */\n  handlePause(event) {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-paused');\n    // change the button text to \"Play\"\n    this.controlText('Play');\n  }\n\n  /**\n   * Add the vjs-ended class to the element so it can change appearance\n   *\n   * @param {Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#ended\n   */\n  handleEnded(event) {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-ended');\n    // change the button text to \"Replay\"\n    this.controlText('Replay');\n\n    // on the next seek remove the replay button\n    this.one(this.player_, 'seeked', e => this.handleSeeked(e));\n  }\n}\n\n/**\n * The text that should display over the `PlayToggle`s controls. Added for localization.\n *\n * @type {string}\n * @protected\n */\nPlayToggle.prototype.controlText_ = 'Play';\nComponent$1.registerComponent('PlayToggle', PlayToggle);\n\n/**\n * @file time-display.js\n */\n\n/**\n * Displays time information about the video\n *\n * @extends Component\n */\nclass TimeDisplay extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.on(player, ['timeupdate', 'ended'], e => this.updateContent(e));\n    this.updateTextNode_();\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    const className = this.buildCSSClass();\n    const el = super.createEl('div', {\n      className: `${className} vjs-time-control vjs-control`\n    });\n    const span = createEl('span', {\n      className: 'vjs-control-text',\n      textContent: `${this.localize(this.labelText_)}\\u00a0`\n    }, {\n      role: 'presentation'\n    });\n    el.appendChild(span);\n    this.contentEl_ = createEl('span', {\n      className: `${className}-display`\n    }, {\n      // span elements have no implicit role, but some screen readers (notably VoiceOver)\n      // treat them as a break between items in the DOM when using arrow keys\n      // (or left-to-right swipes on iOS) to read contents of a page. Using\n      // role='presentation' causes VoiceOver to NOT treat this span as a break.\n      role: 'presentation'\n    });\n    el.appendChild(this.contentEl_);\n    return el;\n  }\n  dispose() {\n    this.contentEl_ = null;\n    this.textNode_ = null;\n    super.dispose();\n  }\n\n  /**\n   * Updates the time display text node with a new time\n   *\n   * @param {number} [time=0] the time to update to\n   *\n   * @private\n   */\n  updateTextNode_(time = 0) {\n    time = formatTime(time);\n    if (this.formattedTime_ === time) {\n      return;\n    }\n    this.formattedTime_ = time;\n    this.requestNamedAnimationFrame('TimeDisplay#updateTextNode_', () => {\n      if (!this.contentEl_) {\n        return;\n      }\n      let oldNode = this.textNode_;\n      if (oldNode && this.contentEl_.firstChild !== oldNode) {\n        oldNode = null;\n        log$1.warn('TimeDisplay#updateTextnode_: Prevented replacement of text node element since it was no longer a child of this node. Appending a new node instead.');\n      }\n      this.textNode_ = document.createTextNode(this.formattedTime_);\n      if (!this.textNode_) {\n        return;\n      }\n      if (oldNode) {\n        this.contentEl_.replaceChild(this.textNode_, oldNode);\n      } else {\n        this.contentEl_.appendChild(this.textNode_);\n      }\n    });\n  }\n\n  /**\n   * To be filled out in the child class, should update the displayed time\n   * in accordance with the fact that the current time has changed.\n   *\n   * @param {Event} [event]\n   *        The `timeupdate`  event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   */\n  updateContent(event) {}\n}\n\n/**\n * The text that is added to the `TimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\nTimeDisplay.prototype.labelText_ = 'Time';\n\n/**\n * The text that should display over the `TimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @protected\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\nTimeDisplay.prototype.controlText_ = 'Time';\nComponent$1.registerComponent('TimeDisplay', TimeDisplay);\n\n/**\n * @file current-time-display.js\n */\n\n/**\n * Displays the current time\n *\n * @extends Component\n */\nclass CurrentTimeDisplay extends TimeDisplay {\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return 'vjs-current-time';\n  }\n\n  /**\n   * Update current time display\n   *\n   * @param {Event} [event]\n   *        The `timeupdate` event that caused this function to run.\n   *\n   * @listens Player#timeupdate\n   */\n  updateContent(event) {\n    // Allows for smooth scrubbing, when player can't keep up.\n    let time;\n    if (this.player_.ended()) {\n      time = this.player_.duration();\n    } else {\n      time = this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n    }\n    this.updateTextNode_(time);\n  }\n}\n\n/**\n * The text that is added to the `CurrentTimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\nCurrentTimeDisplay.prototype.labelText_ = 'Current Time';\n\n/**\n * The text that should display over the `CurrentTimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @protected\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\nCurrentTimeDisplay.prototype.controlText_ = 'Current Time';\nComponent$1.registerComponent('CurrentTimeDisplay', CurrentTimeDisplay);\n\n/**\n * @file duration-display.js\n */\n\n/**\n * Displays the duration\n *\n * @extends Component\n */\nclass DurationDisplay extends TimeDisplay {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    const updateContent = e => this.updateContent(e);\n\n    // we do not want to/need to throttle duration changes,\n    // as they should always display the changed duration as\n    // it has changed\n    this.on(player, 'durationchange', updateContent);\n\n    // Listen to loadstart because the player duration is reset when a new media element is loaded,\n    // but the durationchange on the user agent will not fire.\n    // @see [Spec]{@link https://www.w3.org/TR/2011/WD-html5-20110113/video.html#media-element-load-algorithm}\n    this.on(player, 'loadstart', updateContent);\n\n    // Also listen for timeupdate (in the parent) and loadedmetadata because removing those\n    // listeners could have broken dependent applications/libraries. These\n    // can likely be removed for 7.0.\n    this.on(player, 'loadedmetadata', updateContent);\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return 'vjs-duration';\n  }\n\n  /**\n   * Update duration time display.\n   *\n   * @param {Event} [event]\n   *        The `durationchange`, `timeupdate`, or `loadedmetadata` event that caused\n   *        this function to be called.\n   *\n   * @listens Player#durationchange\n   * @listens Player#timeupdate\n   * @listens Player#loadedmetadata\n   */\n  updateContent(event) {\n    const duration = this.player_.duration();\n    this.updateTextNode_(duration);\n  }\n}\n\n/**\n * The text that is added to the `DurationDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\nDurationDisplay.prototype.labelText_ = 'Duration';\n\n/**\n * The text that should display over the `DurationDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @protected\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\nDurationDisplay.prototype.controlText_ = 'Duration';\nComponent$1.registerComponent('DurationDisplay', DurationDisplay);\n\n/**\n * @file time-divider.js\n */\n\n/**\n * The separator between the current time and duration.\n * Can be hidden if it's not needed in the design.\n *\n * @extends Component\n */\nclass TimeDivider extends Component$1 {\n  /**\n   * Create the component's DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    const el = super.createEl('div', {\n      className: 'vjs-time-control vjs-time-divider'\n    }, {\n      // this element and its contents can be hidden from assistive techs since\n      // it is made extraneous by the announcement of the control text\n      // for the current time and duration displays\n      'aria-hidden': true\n    });\n    const div = super.createEl('div');\n    const span = super.createEl('span', {\n      textContent: '/'\n    });\n    div.appendChild(span);\n    el.appendChild(div);\n    return el;\n  }\n}\nComponent$1.registerComponent('TimeDivider', TimeDivider);\n\n/**\n * @file remaining-time-display.js\n */\n\n/**\n * Displays the time left in the video\n *\n * @extends Component\n */\nclass RemainingTimeDisplay extends TimeDisplay {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.on(player, 'durationchange', e => this.updateContent(e));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return 'vjs-remaining-time';\n  }\n\n  /**\n   * Create the `Component`'s DOM element with the \"minus\" character prepend to the time\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    const el = super.createEl();\n    if (this.options_.displayNegative !== false) {\n      el.insertBefore(createEl('span', {}, {\n        'aria-hidden': true\n      }, '-'), this.contentEl_);\n    }\n    return el;\n  }\n\n  /**\n   * Update remaining time display.\n   *\n   * @param {Event} [event]\n   *        The `timeupdate` or `durationchange` event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   * @listens Player#durationchange\n   */\n  updateContent(event) {\n    if (typeof this.player_.duration() !== 'number') {\n      return;\n    }\n    let time;\n\n    // @deprecated We should only use remainingTimeDisplay\n    // as of video.js 7\n    if (this.player_.ended()) {\n      time = 0;\n    } else if (this.player_.remainingTimeDisplay) {\n      time = this.player_.remainingTimeDisplay();\n    } else {\n      time = this.player_.remainingTime();\n    }\n    this.updateTextNode_(time);\n  }\n}\n\n/**\n * The text that is added to the `RemainingTimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\nRemainingTimeDisplay.prototype.labelText_ = 'Remaining Time';\n\n/**\n * The text that should display over the `RemainingTimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @protected\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\nRemainingTimeDisplay.prototype.controlText_ = 'Remaining Time';\nComponent$1.registerComponent('RemainingTimeDisplay', RemainingTimeDisplay);\n\n/**\n * @file live-display.js\n */\n\n// TODO - Future make it click to snap to live\n\n/**\n * Displays the live indicator when duration is Infinity.\n *\n * @extends Component\n */\nclass LiveDisplay extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('./player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.updateShowing();\n    this.on(this.player(), 'durationchange', e => this.updateShowing(e));\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    const el = super.createEl('div', {\n      className: 'vjs-live-control vjs-control'\n    });\n    this.contentEl_ = createEl('div', {\n      className: 'vjs-live-display'\n    }, {\n      'aria-live': 'off'\n    });\n    this.contentEl_.appendChild(createEl('span', {\n      className: 'vjs-control-text',\n      textContent: `${this.localize('Stream Type')}\\u00a0`\n    }));\n    this.contentEl_.appendChild(document.createTextNode(this.localize('LIVE')));\n    el.appendChild(this.contentEl_);\n    return el;\n  }\n  dispose() {\n    this.contentEl_ = null;\n    super.dispose();\n  }\n\n  /**\n   * Check the duration to see if the LiveDisplay should be showing or not. Then show/hide\n   * it accordingly\n   *\n   * @param {Event} [event]\n   *        The {@link Player#durationchange} event that caused this function to run.\n   *\n   * @listens Player#durationchange\n   */\n  updateShowing(event) {\n    if (this.player().duration() === Infinity) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  }\n}\nComponent$1.registerComponent('LiveDisplay', LiveDisplay);\n\n/**\n * @file seek-to-live.js\n */\n\n/**\n * Displays the live indicator when duration is Infinity.\n *\n * @extends Component\n */\nclass SeekToLive extends Button {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('./player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.updateLiveEdgeStatus();\n    if (this.player_.liveTracker) {\n      this.updateLiveEdgeStatusHandler_ = e => this.updateLiveEdgeStatus(e);\n      this.on(this.player_.liveTracker, 'liveedgechange', this.updateLiveEdgeStatusHandler_);\n    }\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    const el = super.createEl('button', {\n      className: 'vjs-seek-to-live-control vjs-control'\n    });\n    this.textEl_ = createEl('span', {\n      className: 'vjs-seek-to-live-text',\n      textContent: this.localize('LIVE')\n    }, {\n      'aria-hidden': 'true'\n    });\n    el.appendChild(this.textEl_);\n    return el;\n  }\n\n  /**\n   * Update the state of this button if we are at the live edge\n   * or not\n   */\n  updateLiveEdgeStatus() {\n    // default to live edge\n    if (!this.player_.liveTracker || this.player_.liveTracker.atLiveEdge()) {\n      this.setAttribute('aria-disabled', true);\n      this.addClass('vjs-at-live-edge');\n      this.controlText('Seek to live, currently playing live');\n    } else {\n      this.setAttribute('aria-disabled', false);\n      this.removeClass('vjs-at-live-edge');\n      this.controlText('Seek to live, currently behind live');\n    }\n  }\n\n  /**\n   * On click bring us as near to the live point as possible.\n   * This requires that we wait for the next `live-seekable-change`\n   * event which will happen every segment length seconds.\n   */\n  handleClick() {\n    this.player_.liveTracker.seekToLiveEdge();\n  }\n\n  /**\n   * Dispose of the element and stop tracking\n   */\n  dispose() {\n    if (this.player_.liveTracker) {\n      this.off(this.player_.liveTracker, 'liveedgechange', this.updateLiveEdgeStatusHandler_);\n    }\n    this.textEl_ = null;\n    super.dispose();\n  }\n}\n/**\n * The text that should display over the `SeekToLive`s control. Added for localization.\n *\n * @type {string}\n * @protected\n */\nSeekToLive.prototype.controlText_ = 'Seek to live, currently playing live';\nComponent$1.registerComponent('SeekToLive', SeekToLive);\n\n/**\n * @file num.js\n * @module num\n */\n\n/**\n * Keep a number between a min and a max value\n *\n * @param {number} number\n *        The number to clamp\n *\n * @param {number} min\n *        The minimum value\n * @param {number} max\n *        The maximum value\n *\n * @return {number}\n *         the clamped number\n */\nfunction clamp(number, min, max) {\n  number = Number(number);\n  return Math.min(max, Math.max(min, isNaN(number) ? min : number));\n}\n\nvar Num = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  clamp: clamp\n});\n\n/**\n * @file slider.js\n */\n\n/**\n * The base functionality for a slider. Can be vertical or horizontal.\n * For instance the volume bar or the seek bar on a video is a slider.\n *\n * @extends Component\n */\nclass Slider extends Component$1 {\n  /**\n  * Create an instance of this class\n  *\n  * @param { import('../player').default } player\n  *        The `Player` that this class should be attached to.\n  *\n  * @param {Object} [options]\n  *        The key/value store of player options.\n  */\n  constructor(player, options) {\n    super(player, options);\n    this.handleMouseDown_ = e => this.handleMouseDown(e);\n    this.handleMouseUp_ = e => this.handleMouseUp(e);\n    this.handleKeyDown_ = e => this.handleKeyDown(e);\n    this.handleClick_ = e => this.handleClick(e);\n    this.handleMouseMove_ = e => this.handleMouseMove(e);\n    this.update_ = e => this.update(e);\n\n    // Set property names to bar to match with the child Slider class is looking for\n    this.bar = this.getChild(this.options_.barName);\n\n    // Set a horizontal or vertical class on the slider depending on the slider type\n    this.vertical(!!this.options_.vertical);\n    this.enable();\n  }\n\n  /**\n   * Are controls are currently enabled for this slider or not.\n   *\n   * @return {boolean}\n   *         true if controls are enabled, false otherwise\n   */\n  enabled() {\n    return this.enabled_;\n  }\n\n  /**\n   * Enable controls for this slider if they are disabled\n   */\n  enable() {\n    if (this.enabled()) {\n      return;\n    }\n    this.on('mousedown', this.handleMouseDown_);\n    this.on('touchstart', this.handleMouseDown_);\n    this.on('keydown', this.handleKeyDown_);\n    this.on('click', this.handleClick_);\n\n    // TODO: deprecated, controlsvisible does not seem to be fired\n    this.on(this.player_, 'controlsvisible', this.update);\n    if (this.playerEvent) {\n      this.on(this.player_, this.playerEvent, this.update);\n    }\n    this.removeClass('disabled');\n    this.setAttribute('tabindex', 0);\n    this.enabled_ = true;\n  }\n\n  /**\n   * Disable controls for this slider if they are enabled\n   */\n  disable() {\n    if (!this.enabled()) {\n      return;\n    }\n    const doc = this.bar.el_.ownerDocument;\n    this.off('mousedown', this.handleMouseDown_);\n    this.off('touchstart', this.handleMouseDown_);\n    this.off('keydown', this.handleKeyDown_);\n    this.off('click', this.handleClick_);\n    this.off(this.player_, 'controlsvisible', this.update_);\n    this.off(doc, 'mousemove', this.handleMouseMove_);\n    this.off(doc, 'mouseup', this.handleMouseUp_);\n    this.off(doc, 'touchmove', this.handleMouseMove_);\n    this.off(doc, 'touchend', this.handleMouseUp_);\n    this.removeAttribute('tabindex');\n    this.addClass('disabled');\n    if (this.playerEvent) {\n      this.off(this.player_, this.playerEvent, this.update);\n    }\n    this.enabled_ = false;\n  }\n\n  /**\n   * Create the `Slider`s DOM element.\n   *\n   * @param {string} type\n   *        Type of element to create.\n   *\n   * @param {Object} [props={}]\n   *        List of properties in Object form.\n   *\n   * @param {Object} [attributes={}]\n   *        list of attributes in Object form.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  createEl(type, props = {}, attributes = {}) {\n    // Add the slider element class to all sub classes\n    props.className = props.className + ' vjs-slider';\n    props = Object.assign({\n      tabIndex: 0\n    }, props);\n    attributes = Object.assign({\n      'role': 'slider',\n      'aria-valuenow': 0,\n      'aria-valuemin': 0,\n      'aria-valuemax': 100\n    }, attributes);\n    return super.createEl(type, props, attributes);\n  }\n\n  /**\n   * Handle `mousedown` or `touchstart` events on the `Slider`.\n   *\n   * @param {MouseEvent} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   * @fires Slider#slideractive\n   */\n  handleMouseDown(event) {\n    const doc = this.bar.el_.ownerDocument;\n    if (event.type === 'mousedown') {\n      event.preventDefault();\n    }\n    // Do not call preventDefault() on touchstart in Chrome\n    // to avoid console warnings. Use a 'touch-action: none' style\n    // instead to prevent unintended scrolling.\n    // https://developers.google.com/web/updates/2017/01/scrolling-intervention\n    if (event.type === 'touchstart' && !IS_CHROME) {\n      event.preventDefault();\n    }\n    blockTextSelection();\n    this.addClass('vjs-sliding');\n    /**\n     * Triggered when the slider is in an active state\n     *\n     * @event Slider#slideractive\n     * @type {MouseEvent}\n     */\n    this.trigger('slideractive');\n    this.on(doc, 'mousemove', this.handleMouseMove_);\n    this.on(doc, 'mouseup', this.handleMouseUp_);\n    this.on(doc, 'touchmove', this.handleMouseMove_);\n    this.on(doc, 'touchend', this.handleMouseUp_);\n    this.handleMouseMove(event, true);\n  }\n\n  /**\n   * Handle the `mousemove`, `touchmove`, and `mousedown` events on this `Slider`.\n   * The `mousemove` and `touchmove` events will only only trigger this function during\n   * `mousedown` and `touchstart`. This is due to {@link Slider#handleMouseDown} and\n   * {@link Slider#handleMouseUp}.\n   *\n   * @param {MouseEvent} event\n   *        `mousedown`, `mousemove`, `touchstart`, or `touchmove` event that triggered\n   *        this function\n   * @param {boolean} mouseDown this is a flag that should be set to true if `handleMouseMove` is called directly. It allows us to skip things that should not happen if coming from mouse down but should happen on regular mouse move handler. Defaults to false.\n   *\n   * @listens mousemove\n   * @listens touchmove\n   */\n  handleMouseMove(event) {}\n\n  /**\n   * Handle `mouseup` or `touchend` events on the `Slider`.\n   *\n   * @param {MouseEvent} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   * @fires Slider#sliderinactive\n   */\n  handleMouseUp(event) {\n    const doc = this.bar.el_.ownerDocument;\n    unblockTextSelection();\n    this.removeClass('vjs-sliding');\n    /**\n     * Triggered when the slider is no longer in an active state.\n     *\n     * @event Slider#sliderinactive\n     * @type {Event}\n     */\n    this.trigger('sliderinactive');\n    this.off(doc, 'mousemove', this.handleMouseMove_);\n    this.off(doc, 'mouseup', this.handleMouseUp_);\n    this.off(doc, 'touchmove', this.handleMouseMove_);\n    this.off(doc, 'touchend', this.handleMouseUp_);\n    this.update();\n  }\n\n  /**\n   * Update the progress bar of the `Slider`.\n   *\n   * @return {number}\n   *          The percentage of progress the progress bar represents as a\n   *          number from 0 to 1.\n   */\n  update() {\n    // In VolumeBar init we have a setTimeout for update that pops and update\n    // to the end of the execution stack. The player is destroyed before then\n    // update will cause an error\n    // If there's no bar...\n    if (!this.el_ || !this.bar) {\n      return;\n    }\n\n    // clamp progress between 0 and 1\n    // and only round to four decimal places, as we round to two below\n    const progress = this.getProgress();\n    if (progress === this.progress_) {\n      return progress;\n    }\n    this.progress_ = progress;\n    this.requestNamedAnimationFrame('Slider#update', () => {\n      // Set the new bar width or height\n      const sizeKey = this.vertical() ? 'height' : 'width';\n\n      // Convert to a percentage for css value\n      this.bar.el().style[sizeKey] = (progress * 100).toFixed(2) + '%';\n    });\n    return progress;\n  }\n\n  /**\n   * Get the percentage of the bar that should be filled\n   * but clamped and rounded.\n   *\n   * @return {number}\n   *         percentage filled that the slider is\n   */\n  getProgress() {\n    return Number(clamp(this.getPercent(), 0, 1).toFixed(4));\n  }\n\n  /**\n   * Calculate distance for slider\n   *\n   * @param {Event} event\n   *        The event that caused this function to run.\n   *\n   * @return {number}\n   *         The current position of the Slider.\n   *         - position.x for vertical `Slider`s\n   *         - position.y for horizontal `Slider`s\n   */\n  calculateDistance(event) {\n    const position = getPointerPosition(this.el_, event);\n    if (this.vertical()) {\n      return position.y;\n    }\n    return position.x;\n  }\n\n  /**\n   * Handle a `keydown` event on the `Slider`. Watches for left, right, up, and down\n   * arrow keys. This function will only be called when the slider has focus. See\n   * {@link Slider#handleFocus} and {@link Slider#handleBlur}.\n   *\n   * @param {KeyboardEvent} event\n   *        the `keydown` event that caused this function to run.\n   *\n   * @listens keydown\n   */\n  handleKeyDown(event) {\n    // Left and Down Arrows\n    if (keycode.isEventKey(event, 'Left') || keycode.isEventKey(event, 'Down')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.stepBack();\n\n      // Up and Right Arrows\n    } else if (keycode.isEventKey(event, 'Right') || keycode.isEventKey(event, 'Up')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.stepForward();\n    } else {\n      // Pass keydown handling up for unsupported keys\n      super.handleKeyDown(event);\n    }\n  }\n\n  /**\n   * Listener for click events on slider, used to prevent clicks\n   *   from bubbling up to parent elements like button menus.\n   *\n   * @param {Object} event\n   *        Event that caused this object to run\n   */\n  handleClick(event) {\n    event.stopPropagation();\n    event.preventDefault();\n  }\n\n  /**\n   * Get/set if slider is horizontal for vertical\n   *\n   * @param {boolean} [bool]\n   *        - true if slider is vertical,\n   *        - false is horizontal\n   *\n   * @return {boolean}\n   *         - true if slider is vertical, and getting\n   *         - false if the slider is horizontal, and getting\n   */\n  vertical(bool) {\n    if (bool === undefined) {\n      return this.vertical_ || false;\n    }\n    this.vertical_ = !!bool;\n    if (this.vertical_) {\n      this.addClass('vjs-slider-vertical');\n    } else {\n      this.addClass('vjs-slider-horizontal');\n    }\n  }\n}\nComponent$1.registerComponent('Slider', Slider);\n\n/**\n * @file load-progress-bar.js\n */\n\n// get the percent width of a time compared to the total end\nconst percentify = (time, end) => clamp(time / end * 100, 0, 100).toFixed(2) + '%';\n\n/**\n * Shows loading progress\n *\n * @extends Component\n */\nclass LoadProgressBar extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.partEls_ = [];\n    this.on(player, 'progress', e => this.update(e));\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    const el = super.createEl('div', {\n      className: 'vjs-load-progress'\n    });\n    const wrapper = createEl('span', {\n      className: 'vjs-control-text'\n    });\n    const loadedText = createEl('span', {\n      textContent: this.localize('Loaded')\n    });\n    const separator = document.createTextNode(': ');\n    this.percentageEl_ = createEl('span', {\n      className: 'vjs-control-text-loaded-percentage',\n      textContent: '0%'\n    });\n    el.appendChild(wrapper);\n    wrapper.appendChild(loadedText);\n    wrapper.appendChild(separator);\n    wrapper.appendChild(this.percentageEl_);\n    return el;\n  }\n  dispose() {\n    this.partEls_ = null;\n    this.percentageEl_ = null;\n    super.dispose();\n  }\n\n  /**\n   * Update progress bar\n   *\n   * @param {Event} [event]\n   *        The `progress` event that caused this function to run.\n   *\n   * @listens Player#progress\n   */\n  update(event) {\n    this.requestNamedAnimationFrame('LoadProgressBar#update', () => {\n      const liveTracker = this.player_.liveTracker;\n      const buffered = this.player_.buffered();\n      const duration = liveTracker && liveTracker.isLive() ? liveTracker.seekableEnd() : this.player_.duration();\n      const bufferedEnd = this.player_.bufferedEnd();\n      const children = this.partEls_;\n      const percent = percentify(bufferedEnd, duration);\n      if (this.percent_ !== percent) {\n        // update the width of the progress bar\n        this.el_.style.width = percent;\n        // update the control-text\n        textContent(this.percentageEl_, percent);\n        this.percent_ = percent;\n      }\n\n      // add child elements to represent the individual buffered time ranges\n      for (let i = 0; i < buffered.length; i++) {\n        const start = buffered.start(i);\n        const end = buffered.end(i);\n        let part = children[i];\n        if (!part) {\n          part = this.el_.appendChild(createEl());\n          children[i] = part;\n        }\n\n        //  only update if changed\n        if (part.dataset.start === start && part.dataset.end === end) {\n          continue;\n        }\n        part.dataset.start = start;\n        part.dataset.end = end;\n\n        // set the percent based on the width of the progress bar (bufferedEnd)\n        part.style.left = percentify(start, bufferedEnd);\n        part.style.width = percentify(end - start, bufferedEnd);\n      }\n\n      // remove unused buffered range elements\n      for (let i = children.length; i > buffered.length; i--) {\n        this.el_.removeChild(children[i - 1]);\n      }\n      children.length = buffered.length;\n    });\n  }\n}\nComponent$1.registerComponent('LoadProgressBar', LoadProgressBar);\n\n/**\n * @file time-tooltip.js\n */\n\n/**\n * Time tooltips display a time above the progress bar.\n *\n * @extends Component\n */\nclass TimeTooltip extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The {@link Player} that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.update = throttle(bind_(this, this.update), UPDATE_REFRESH_INTERVAL);\n  }\n\n  /**\n   * Create the time tooltip DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: 'vjs-time-tooltip'\n    }, {\n      'aria-hidden': 'true'\n    });\n  }\n\n  /**\n   * Updates the position of the time tooltip relative to the `SeekBar`.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n  update(seekBarRect, seekBarPoint, content) {\n    const tooltipRect = findPosition(this.el_);\n    const playerRect = getBoundingClientRect(this.player_.el());\n    const seekBarPointPx = seekBarRect.width * seekBarPoint;\n\n    // do nothing if either rect isn't available\n    // for example, if the player isn't in the DOM for testing\n    if (!playerRect || !tooltipRect) {\n      return;\n    }\n\n    // This is the space left of the `seekBarPoint` available within the bounds\n    // of the player. We calculate any gap between the left edge of the player\n    // and the left edge of the `SeekBar` and add the number of pixels in the\n    // `SeekBar` before hitting the `seekBarPoint`\n    const spaceLeftOfPoint = seekBarRect.left - playerRect.left + seekBarPointPx;\n\n    // This is the space right of the `seekBarPoint` available within the bounds\n    // of the player. We calculate the number of pixels from the `seekBarPoint`\n    // to the right edge of the `SeekBar` and add to that any gap between the\n    // right edge of the `SeekBar` and the player.\n    const spaceRightOfPoint = seekBarRect.width - seekBarPointPx + (playerRect.right - seekBarRect.right);\n\n    // This is the number of pixels by which the tooltip will need to be pulled\n    // further to the right to center it over the `seekBarPoint`.\n    let pullTooltipBy = tooltipRect.width / 2;\n\n    // Adjust the `pullTooltipBy` distance to the left or right depending on\n    // the results of the space calculations above.\n    if (spaceLeftOfPoint < pullTooltipBy) {\n      pullTooltipBy += pullTooltipBy - spaceLeftOfPoint;\n    } else if (spaceRightOfPoint < pullTooltipBy) {\n      pullTooltipBy = spaceRightOfPoint;\n    }\n\n    // Due to the imprecision of decimal/ratio based calculations and varying\n    // rounding behaviors, there are cases where the spacing adjustment is off\n    // by a pixel or two. This adds insurance to these calculations.\n    if (pullTooltipBy < 0) {\n      pullTooltipBy = 0;\n    } else if (pullTooltipBy > tooltipRect.width) {\n      pullTooltipBy = tooltipRect.width;\n    }\n\n    // prevent small width fluctuations within 0.4px from\n    // changing the value below.\n    // This really helps for live to prevent the play\n    // progress time tooltip from jittering\n    pullTooltipBy = Math.round(pullTooltipBy);\n    this.el_.style.right = `-${pullTooltipBy}px`;\n    this.write(content);\n  }\n\n  /**\n   * Write the time to the tooltip DOM element.\n   *\n   * @param {string} content\n   *        The formatted time for the tooltip.\n   */\n  write(content) {\n    textContent(this.el_, content);\n  }\n\n  /**\n   * Updates the position of the time tooltip relative to the `SeekBar`.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   *\n   * @param {number} time\n   *        The time to update the tooltip to, not used during live playback\n   *\n   * @param {Function} cb\n   *        A function that will be called during the request animation frame\n   *        for tooltips that need to do additional animations from the default\n   */\n  updateTime(seekBarRect, seekBarPoint, time, cb) {\n    this.requestNamedAnimationFrame('TimeTooltip#updateTime', () => {\n      let content;\n      const duration = this.player_.duration();\n      if (this.player_.liveTracker && this.player_.liveTracker.isLive()) {\n        const liveWindow = this.player_.liveTracker.liveWindow();\n        const secondsBehind = liveWindow - seekBarPoint * liveWindow;\n        content = (secondsBehind < 1 ? '' : '-') + formatTime(secondsBehind, liveWindow);\n      } else {\n        content = formatTime(time, duration);\n      }\n      this.update(seekBarRect, seekBarPoint, content);\n      if (cb) {\n        cb();\n      }\n    });\n  }\n}\nComponent$1.registerComponent('TimeTooltip', TimeTooltip);\n\n/**\n * @file play-progress-bar.js\n */\n\n/**\n * Used by {@link SeekBar} to display media playback progress as part of the\n * {@link ProgressControl}.\n *\n * @extends Component\n */\nclass PlayProgressBar extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The {@link Player} that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.update = throttle(bind_(this, this.update), UPDATE_REFRESH_INTERVAL);\n  }\n\n  /**\n   * Create the the DOM element for this class.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: 'vjs-play-progress vjs-slider-bar'\n    }, {\n      'aria-hidden': 'true'\n    });\n  }\n\n  /**\n   * Enqueues updates to its own DOM as well as the DOM of its\n   * {@link TimeTooltip} child.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n  update(seekBarRect, seekBarPoint) {\n    const timeTooltip = this.getChild('timeTooltip');\n    if (!timeTooltip) {\n      return;\n    }\n    const time = this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n    timeTooltip.updateTime(seekBarRect, seekBarPoint, time);\n  }\n}\n\n/**\n * Default options for {@link PlayProgressBar}.\n *\n * @type {Object}\n * @private\n */\nPlayProgressBar.prototype.options_ = {\n  children: []\n};\n\n// Time tooltips should not be added to a player on mobile devices\nif (!IS_IOS && !IS_ANDROID) {\n  PlayProgressBar.prototype.options_.children.push('timeTooltip');\n}\nComponent$1.registerComponent('PlayProgressBar', PlayProgressBar);\n\n/**\n * @file mouse-time-display.js\n */\n\n/**\n * The {@link MouseTimeDisplay} component tracks mouse movement over the\n * {@link ProgressControl}. It displays an indicator and a {@link TimeTooltip}\n * indicating the time which is represented by a given point in the\n * {@link ProgressControl}.\n *\n * @extends Component\n */\nclass MouseTimeDisplay extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The {@link Player} that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.update = throttle(bind_(this, this.update), UPDATE_REFRESH_INTERVAL);\n  }\n\n  /**\n   * Create the DOM element for this class.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: 'vjs-mouse-display'\n    });\n  }\n\n  /**\n   * Enqueues updates to its own DOM as well as the DOM of its\n   * {@link TimeTooltip} child.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n  update(seekBarRect, seekBarPoint) {\n    const time = seekBarPoint * this.player_.duration();\n    this.getChild('timeTooltip').updateTime(seekBarRect, seekBarPoint, time, () => {\n      this.el_.style.left = `${seekBarRect.width * seekBarPoint}px`;\n    });\n  }\n}\n\n/**\n * Default options for `MouseTimeDisplay`\n *\n * @type {Object}\n * @private\n */\nMouseTimeDisplay.prototype.options_ = {\n  children: ['timeTooltip']\n};\nComponent$1.registerComponent('MouseTimeDisplay', MouseTimeDisplay);\n\n/**\n * @file seek-bar.js\n */\n\n// The number of seconds the `step*` functions move the timeline.\nconst STEP_SECONDS = 5;\n\n// The multiplier of STEP_SECONDS that PgUp/PgDown move the timeline.\nconst PAGE_KEY_MULTIPLIER = 12;\n\n/**\n * Seek bar and container for the progress bars. Uses {@link PlayProgressBar}\n * as its `bar`.\n *\n * @extends Slider\n */\nclass SeekBar extends Slider {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.setEventHandlers_();\n  }\n\n  /**\n   * Sets the event handlers\n   *\n   * @private\n   */\n  setEventHandlers_() {\n    this.update_ = bind_(this, this.update);\n    this.update = throttle(this.update_, UPDATE_REFRESH_INTERVAL);\n    this.on(this.player_, ['ended', 'durationchange', 'timeupdate'], this.update);\n    if (this.player_.liveTracker) {\n      this.on(this.player_.liveTracker, 'liveedgechange', this.update);\n    }\n\n    // when playing, let's ensure we smoothly update the play progress bar\n    // via an interval\n    this.updateInterval = null;\n    this.enableIntervalHandler_ = e => this.enableInterval_(e);\n    this.disableIntervalHandler_ = e => this.disableInterval_(e);\n    this.on(this.player_, ['playing'], this.enableIntervalHandler_);\n    this.on(this.player_, ['ended', 'pause', 'waiting'], this.disableIntervalHandler_);\n\n    // we don't need to update the play progress if the document is hidden,\n    // also, this causes the CPU to spike and eventually crash the page on IE11.\n    if ('hidden' in document && 'visibilityState' in document) {\n      this.on(document, 'visibilitychange', this.toggleVisibility_);\n    }\n  }\n  toggleVisibility_(e) {\n    if (document.visibilityState === 'hidden') {\n      this.cancelNamedAnimationFrame('SeekBar#update');\n      this.cancelNamedAnimationFrame('Slider#update');\n      this.disableInterval_(e);\n    } else {\n      if (!this.player_.ended() && !this.player_.paused()) {\n        this.enableInterval_();\n      }\n\n      // we just switched back to the page and someone may be looking, so, update ASAP\n      this.update();\n    }\n  }\n  enableInterval_() {\n    if (this.updateInterval) {\n      return;\n    }\n    this.updateInterval = this.setInterval(this.update, UPDATE_REFRESH_INTERVAL);\n  }\n  disableInterval_(e) {\n    if (this.player_.liveTracker && this.player_.liveTracker.isLive() && e && e.type !== 'ended') {\n      return;\n    }\n    if (!this.updateInterval) {\n      return;\n    }\n    this.clearInterval(this.updateInterval);\n    this.updateInterval = null;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: 'vjs-progress-holder'\n    }, {\n      'aria-label': this.localize('Progress Bar')\n    });\n  }\n\n  /**\n   * This function updates the play progress bar and accessibility\n   * attributes to whatever is passed in.\n   *\n   * @param {Event} [event]\n   *        The `timeupdate` or `ended` event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   *\n   * @return {number}\n   *          The current percent at a number from 0-1\n   */\n  update(event) {\n    // ignore updates while the tab is hidden\n    if (document.visibilityState === 'hidden') {\n      return;\n    }\n    const percent = super.update();\n    this.requestNamedAnimationFrame('SeekBar#update', () => {\n      const currentTime = this.player_.ended() ? this.player_.duration() : this.getCurrentTime_();\n      const liveTracker = this.player_.liveTracker;\n      let duration = this.player_.duration();\n      if (liveTracker && liveTracker.isLive()) {\n        duration = this.player_.liveTracker.liveCurrentTime();\n      }\n      if (this.percent_ !== percent) {\n        // machine readable value of progress bar (percentage complete)\n        this.el_.setAttribute('aria-valuenow', (percent * 100).toFixed(2));\n        this.percent_ = percent;\n      }\n      if (this.currentTime_ !== currentTime || this.duration_ !== duration) {\n        // human readable value of progress bar (time complete)\n        this.el_.setAttribute('aria-valuetext', this.localize('progress bar timing: currentTime={1} duration={2}', [formatTime(currentTime, duration), formatTime(duration, duration)], '{1} of {2}'));\n        this.currentTime_ = currentTime;\n        this.duration_ = duration;\n      }\n\n      // update the progress bar time tooltip with the current time\n      if (this.bar) {\n        this.bar.update(getBoundingClientRect(this.el()), this.getProgress());\n      }\n    });\n    return percent;\n  }\n\n  /**\n   * Prevent liveThreshold from causing seeks to seem like they\n   * are not happening from a user perspective.\n   *\n   * @param {number} ct\n   *        current time to seek to\n   */\n  userSeek_(ct) {\n    if (this.player_.liveTracker && this.player_.liveTracker.isLive()) {\n      this.player_.liveTracker.nextSeekedFromUser();\n    }\n    this.player_.currentTime(ct);\n  }\n\n  /**\n   * Get the value of current time but allows for smooth scrubbing,\n   * when player can't keep up.\n   *\n   * @return {number}\n   *         The current time value to display\n   *\n   * @private\n   */\n  getCurrentTime_() {\n    return this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n  }\n\n  /**\n   * Get the percentage of media played so far.\n   *\n   * @return {number}\n   *         The percentage of media played so far (0 to 1).\n   */\n  getPercent() {\n    const currentTime = this.getCurrentTime_();\n    let percent;\n    const liveTracker = this.player_.liveTracker;\n    if (liveTracker && liveTracker.isLive()) {\n      percent = (currentTime - liveTracker.seekableStart()) / liveTracker.liveWindow();\n\n      // prevent the percent from changing at the live edge\n      if (liveTracker.atLiveEdge()) {\n        percent = 1;\n      }\n    } else {\n      percent = currentTime / this.player_.duration();\n    }\n    return percent;\n  }\n\n  /**\n   * Handle mouse down on seek bar\n   *\n   * @param {MouseEvent} event\n   *        The `mousedown` event that caused this to run.\n   *\n   * @listens mousedown\n   */\n  handleMouseDown(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    // Stop event propagation to prevent double fire in progress-control.js\n    event.stopPropagation();\n    this.videoWasPlaying = !this.player_.paused();\n    this.player_.pause();\n    super.handleMouseDown(event);\n  }\n\n  /**\n   * Handle mouse move on seek bar\n   *\n   * @param {MouseEvent} event\n   *        The `mousemove` event that caused this to run.\n   * @param {boolean} mouseDown this is a flag that should be set to true if `handleMouseMove` is called directly. It allows us to skip things that should not happen if coming from mouse down but should happen on regular mouse move handler. Defaults to false\n   *\n   * @listens mousemove\n   */\n  handleMouseMove(event, mouseDown = false) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n    if (!mouseDown && !this.player_.scrubbing()) {\n      this.player_.scrubbing(true);\n    }\n    let newTime;\n    const distance = this.calculateDistance(event);\n    const liveTracker = this.player_.liveTracker;\n    if (!liveTracker || !liveTracker.isLive()) {\n      newTime = distance * this.player_.duration();\n\n      // Don't let video end while scrubbing.\n      if (newTime === this.player_.duration()) {\n        newTime = newTime - 0.1;\n      }\n    } else {\n      if (distance >= 0.99) {\n        liveTracker.seekToLiveEdge();\n        return;\n      }\n      const seekableStart = liveTracker.seekableStart();\n      const seekableEnd = liveTracker.liveCurrentTime();\n      newTime = seekableStart + distance * liveTracker.liveWindow();\n\n      // Don't let video end while scrubbing.\n      if (newTime >= seekableEnd) {\n        newTime = seekableEnd;\n      }\n\n      // Compensate for precision differences so that currentTime is not less\n      // than seekable start\n      if (newTime <= seekableStart) {\n        newTime = seekableStart + 0.1;\n      }\n\n      // On android seekableEnd can be Infinity sometimes,\n      // this will cause newTime to be Infinity, which is\n      // not a valid currentTime.\n      if (newTime === Infinity) {\n        return;\n      }\n    }\n\n    // Set new time (tell player to seek to new time)\n    this.userSeek_(newTime);\n  }\n  enable() {\n    super.enable();\n    const mouseTimeDisplay = this.getChild('mouseTimeDisplay');\n    if (!mouseTimeDisplay) {\n      return;\n    }\n    mouseTimeDisplay.show();\n  }\n  disable() {\n    super.disable();\n    const mouseTimeDisplay = this.getChild('mouseTimeDisplay');\n    if (!mouseTimeDisplay) {\n      return;\n    }\n    mouseTimeDisplay.hide();\n  }\n\n  /**\n   * Handle mouse up on seek bar\n   *\n   * @param {MouseEvent} event\n   *        The `mouseup` event that caused this to run.\n   *\n   * @listens mouseup\n   */\n  handleMouseUp(event) {\n    super.handleMouseUp(event);\n\n    // Stop event propagation to prevent double fire in progress-control.js\n    if (event) {\n      event.stopPropagation();\n    }\n    this.player_.scrubbing(false);\n\n    /**\n     * Trigger timeupdate because we're done seeking and the time has changed.\n     * This is particularly useful for if the player is paused to time the time displays.\n     *\n     * @event Tech#timeupdate\n     * @type {Event}\n     */\n    this.player_.trigger({\n      type: 'timeupdate',\n      target: this,\n      manuallyTriggered: true\n    });\n    if (this.videoWasPlaying) {\n      silencePromise(this.player_.play());\n    } else {\n      // We're done seeking and the time has changed.\n      // If the player is paused, make sure we display the correct time on the seek bar.\n      this.update_();\n    }\n  }\n\n  /**\n   * Move more quickly fast forward for keyboard-only users\n   */\n  stepForward() {\n    this.userSeek_(this.player_.currentTime() + STEP_SECONDS);\n  }\n\n  /**\n   * Move more quickly rewind for keyboard-only users\n   */\n  stepBack() {\n    this.userSeek_(this.player_.currentTime() - STEP_SECONDS);\n  }\n\n  /**\n   * Toggles the playback state of the player\n   * This gets called when enter or space is used on the seekbar\n   *\n   * @param {KeyboardEvent} event\n   *        The `keydown` event that caused this function to be called\n   *\n   */\n  handleAction(event) {\n    if (this.player_.paused()) {\n      this.player_.play();\n    } else {\n      this.player_.pause();\n    }\n  }\n\n  /**\n   * Called when this SeekBar has focus and a key gets pressed down.\n   * Supports the following keys:\n   *\n   *   Space or Enter key fire a click event\n   *   Home key moves to start of the timeline\n   *   End key moves to end of the timeline\n   *   Digit \"0\" through \"9\" keys move to 0%, 10% ... 80%, 90% of the timeline\n   *   PageDown key moves back a larger step than ArrowDown\n   *   PageUp key moves forward a large step\n   *\n   * @param {KeyboardEvent} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  handleKeyDown(event) {\n    const liveTracker = this.player_.liveTracker;\n    if (keycode.isEventKey(event, 'Space') || keycode.isEventKey(event, 'Enter')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.handleAction(event);\n    } else if (keycode.isEventKey(event, 'Home')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.userSeek_(0);\n    } else if (keycode.isEventKey(event, 'End')) {\n      event.preventDefault();\n      event.stopPropagation();\n      if (liveTracker && liveTracker.isLive()) {\n        this.userSeek_(liveTracker.liveCurrentTime());\n      } else {\n        this.userSeek_(this.player_.duration());\n      }\n    } else if (/^[0-9]$/.test(keycode(event))) {\n      event.preventDefault();\n      event.stopPropagation();\n      const gotoFraction = (keycode.codes[keycode(event)] - keycode.codes['0']) * 10.0 / 100.0;\n      if (liveTracker && liveTracker.isLive()) {\n        this.userSeek_(liveTracker.seekableStart() + liveTracker.liveWindow() * gotoFraction);\n      } else {\n        this.userSeek_(this.player_.duration() * gotoFraction);\n      }\n    } else if (keycode.isEventKey(event, 'PgDn')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.userSeek_(this.player_.currentTime() - STEP_SECONDS * PAGE_KEY_MULTIPLIER);\n    } else if (keycode.isEventKey(event, 'PgUp')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.userSeek_(this.player_.currentTime() + STEP_SECONDS * PAGE_KEY_MULTIPLIER);\n    } else {\n      // Pass keydown handling up for unsupported keys\n      super.handleKeyDown(event);\n    }\n  }\n  dispose() {\n    this.disableInterval_();\n    this.off(this.player_, ['ended', 'durationchange', 'timeupdate'], this.update);\n    if (this.player_.liveTracker) {\n      this.off(this.player_.liveTracker, 'liveedgechange', this.update);\n    }\n    this.off(this.player_, ['playing'], this.enableIntervalHandler_);\n    this.off(this.player_, ['ended', 'pause', 'waiting'], this.disableIntervalHandler_);\n\n    // we don't need to update the play progress if the document is hidden,\n    // also, this causes the CPU to spike and eventually crash the page on IE11.\n    if ('hidden' in document && 'visibilityState' in document) {\n      this.off(document, 'visibilitychange', this.toggleVisibility_);\n    }\n    super.dispose();\n  }\n}\n\n/**\n * Default options for the `SeekBar`\n *\n * @type {Object}\n * @private\n */\nSeekBar.prototype.options_ = {\n  children: ['loadProgressBar', 'playProgressBar'],\n  barName: 'playProgressBar'\n};\n\n// MouseTimeDisplay tooltips should not be added to a player on mobile devices\nif (!IS_IOS && !IS_ANDROID) {\n  SeekBar.prototype.options_.children.splice(1, 0, 'mouseTimeDisplay');\n}\nComponent$1.registerComponent('SeekBar', SeekBar);\n\n/**\n * @file progress-control.js\n */\n\n/**\n * The Progress Control component contains the seek bar, load progress,\n * and play progress.\n *\n * @extends Component\n */\nclass ProgressControl extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.handleMouseMove = throttle(bind_(this, this.handleMouseMove), UPDATE_REFRESH_INTERVAL);\n    this.throttledHandleMouseSeek = throttle(bind_(this, this.handleMouseSeek), UPDATE_REFRESH_INTERVAL);\n    this.handleMouseUpHandler_ = e => this.handleMouseUp(e);\n    this.handleMouseDownHandler_ = e => this.handleMouseDown(e);\n    this.enable();\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: 'vjs-progress-control vjs-control'\n    });\n  }\n\n  /**\n   * When the mouse moves over the `ProgressControl`, the pointer position\n   * gets passed down to the `MouseTimeDisplay` component.\n   *\n   * @param {Event} event\n   *        The `mousemove` event that caused this function to run.\n   *\n   * @listen mousemove\n   */\n  handleMouseMove(event) {\n    const seekBar = this.getChild('seekBar');\n    if (!seekBar) {\n      return;\n    }\n    const playProgressBar = seekBar.getChild('playProgressBar');\n    const mouseTimeDisplay = seekBar.getChild('mouseTimeDisplay');\n    if (!playProgressBar && !mouseTimeDisplay) {\n      return;\n    }\n    const seekBarEl = seekBar.el();\n    const seekBarRect = findPosition(seekBarEl);\n    let seekBarPoint = getPointerPosition(seekBarEl, event).x;\n\n    // The default skin has a gap on either side of the `SeekBar`. This means\n    // that it's possible to trigger this behavior outside the boundaries of\n    // the `SeekBar`. This ensures we stay within it at all times.\n    seekBarPoint = clamp(seekBarPoint, 0, 1);\n    if (mouseTimeDisplay) {\n      mouseTimeDisplay.update(seekBarRect, seekBarPoint);\n    }\n    if (playProgressBar) {\n      playProgressBar.update(seekBarRect, seekBar.getProgress());\n    }\n  }\n\n  /**\n   * A throttled version of the {@link ProgressControl#handleMouseSeek} listener.\n   *\n   * @method ProgressControl#throttledHandleMouseSeek\n   * @param {Event} event\n   *        The `mousemove` event that caused this function to run.\n   *\n   * @listen mousemove\n   * @listen touchmove\n   */\n\n  /**\n   * Handle `mousemove` or `touchmove` events on the `ProgressControl`.\n   *\n   * @param {Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousemove\n   * @listens touchmove\n   */\n  handleMouseSeek(event) {\n    const seekBar = this.getChild('seekBar');\n    if (seekBar) {\n      seekBar.handleMouseMove(event);\n    }\n  }\n\n  /**\n   * Are controls are currently enabled for this progress control.\n   *\n   * @return {boolean}\n   *         true if controls are enabled, false otherwise\n   */\n  enabled() {\n    return this.enabled_;\n  }\n\n  /**\n   * Disable all controls on the progress control and its children\n   */\n  disable() {\n    this.children().forEach(child => child.disable && child.disable());\n    if (!this.enabled()) {\n      return;\n    }\n    this.off(['mousedown', 'touchstart'], this.handleMouseDownHandler_);\n    this.off(this.el_, 'mousemove', this.handleMouseMove);\n    this.removeListenersAddedOnMousedownAndTouchstart();\n    this.addClass('disabled');\n    this.enabled_ = false;\n\n    // Restore normal playback state if controls are disabled while scrubbing\n    if (this.player_.scrubbing()) {\n      const seekBar = this.getChild('seekBar');\n      this.player_.scrubbing(false);\n      if (seekBar.videoWasPlaying) {\n        silencePromise(this.player_.play());\n      }\n    }\n  }\n\n  /**\n   * Enable all controls on the progress control and its children\n   */\n  enable() {\n    this.children().forEach(child => child.enable && child.enable());\n    if (this.enabled()) {\n      return;\n    }\n    this.on(['mousedown', 'touchstart'], this.handleMouseDownHandler_);\n    this.on(this.el_, 'mousemove', this.handleMouseMove);\n    this.removeClass('disabled');\n    this.enabled_ = true;\n  }\n\n  /**\n   * Cleanup listeners after the user finishes interacting with the progress controls\n   */\n  removeListenersAddedOnMousedownAndTouchstart() {\n    const doc = this.el_.ownerDocument;\n    this.off(doc, 'mousemove', this.throttledHandleMouseSeek);\n    this.off(doc, 'touchmove', this.throttledHandleMouseSeek);\n    this.off(doc, 'mouseup', this.handleMouseUpHandler_);\n    this.off(doc, 'touchend', this.handleMouseUpHandler_);\n  }\n\n  /**\n   * Handle `mousedown` or `touchstart` events on the `ProgressControl`.\n   *\n   * @param {Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n  handleMouseDown(event) {\n    const doc = this.el_.ownerDocument;\n    const seekBar = this.getChild('seekBar');\n    if (seekBar) {\n      seekBar.handleMouseDown(event);\n    }\n    this.on(doc, 'mousemove', this.throttledHandleMouseSeek);\n    this.on(doc, 'touchmove', this.throttledHandleMouseSeek);\n    this.on(doc, 'mouseup', this.handleMouseUpHandler_);\n    this.on(doc, 'touchend', this.handleMouseUpHandler_);\n  }\n\n  /**\n   * Handle `mouseup` or `touchend` events on the `ProgressControl`.\n   *\n   * @param {Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   */\n  handleMouseUp(event) {\n    const seekBar = this.getChild('seekBar');\n    if (seekBar) {\n      seekBar.handleMouseUp(event);\n    }\n    this.removeListenersAddedOnMousedownAndTouchstart();\n  }\n}\n\n/**\n * Default options for `ProgressControl`\n *\n * @type {Object}\n * @private\n */\nProgressControl.prototype.options_ = {\n  children: ['seekBar']\n};\nComponent$1.registerComponent('ProgressControl', ProgressControl);\n\n/**\n * @file picture-in-picture-toggle.js\n */\n\n/**\n * Toggle Picture-in-Picture mode\n *\n * @extends Button\n */\nclass PictureInPictureToggle extends Button {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('./player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @listens Player#enterpictureinpicture\n   * @listens Player#leavepictureinpicture\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.on(player, ['enterpictureinpicture', 'leavepictureinpicture'], e => this.handlePictureInPictureChange(e));\n    this.on(player, ['disablepictureinpicturechanged', 'loadedmetadata'], e => this.handlePictureInPictureEnabledChange(e));\n    this.on(player, ['loadedmetadata', 'audioonlymodechange', 'audiopostermodechange'], () => {\n      // This audio detection will not detect HLS or DASH audio-only streams because there was no reliable way to detect them at the time\n      const isSourceAudio = player.currentType().substring(0, 5) === 'audio';\n      if (isSourceAudio || player.audioPosterMode() || player.audioOnlyMode()) {\n        if (player.isInPictureInPicture()) {\n          player.exitPictureInPicture();\n        }\n        this.hide();\n      } else {\n        this.show();\n      }\n    });\n\n    // TODO: Deactivate button on player emptied event.\n    this.disable();\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-picture-in-picture-control ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * Enables or disables button based on availability of a Picture-In-Picture mode.\n   *\n   * Enabled if\n   * - `player.options().enableDocumentPictureInPicture` is true and\n   *   window.documentPictureInPicture is available; or\n   * - `player.disablePictureInPicture()` is false and\n   *   element.requestPictureInPicture is available\n   */\n  handlePictureInPictureEnabledChange() {\n    if (document.pictureInPictureEnabled && this.player_.disablePictureInPicture() === false || this.player_.options_.enableDocumentPictureInPicture && 'documentPictureInPicture' in window$1) {\n      this.enable();\n    } else {\n      this.disable();\n    }\n  }\n\n  /**\n   * Handles enterpictureinpicture and leavepictureinpicture on the player and change control text accordingly.\n   *\n   * @param {Event} [event]\n   *        The {@link Player#enterpictureinpicture} or {@link Player#leavepictureinpicture} event that caused this function to be\n   *        called.\n   *\n   * @listens Player#enterpictureinpicture\n   * @listens Player#leavepictureinpicture\n   */\n  handlePictureInPictureChange(event) {\n    if (this.player_.isInPictureInPicture()) {\n      this.controlText('Exit Picture-in-Picture');\n    } else {\n      this.controlText('Picture-in-Picture');\n    }\n    this.handlePictureInPictureEnabledChange();\n  }\n\n  /**\n   * This gets called when an `PictureInPictureToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  handleClick(event) {\n    if (!this.player_.isInPictureInPicture()) {\n      this.player_.requestPictureInPicture();\n    } else {\n      this.player_.exitPictureInPicture();\n    }\n  }\n}\n\n/**\n * The text that should display over the `PictureInPictureToggle`s controls. Added for localization.\n *\n * @type {string}\n * @protected\n */\nPictureInPictureToggle.prototype.controlText_ = 'Picture-in-Picture';\nComponent$1.registerComponent('PictureInPictureToggle', PictureInPictureToggle);\n\n/**\n * @file fullscreen-toggle.js\n */\n\n/**\n * Toggle fullscreen video\n *\n * @extends Button\n */\nclass FullscreenToggle extends Button {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('./player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.on(player, 'fullscreenchange', e => this.handleFullscreenChange(e));\n    if (document[player.fsApi_.fullscreenEnabled] === false) {\n      this.disable();\n    }\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-fullscreen-control ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * Handles fullscreenchange on the player and change control text accordingly.\n   *\n   * @param {Event} [event]\n   *        The {@link Player#fullscreenchange} event that caused this function to be\n   *        called.\n   *\n   * @listens Player#fullscreenchange\n   */\n  handleFullscreenChange(event) {\n    if (this.player_.isFullscreen()) {\n      this.controlText('Exit Fullscreen');\n    } else {\n      this.controlText('Fullscreen');\n    }\n  }\n\n  /**\n   * This gets called when an `FullscreenToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  handleClick(event) {\n    if (!this.player_.isFullscreen()) {\n      this.player_.requestFullscreen();\n    } else {\n      this.player_.exitFullscreen();\n    }\n  }\n}\n\n/**\n * The text that should display over the `FullscreenToggle`s controls. Added for localization.\n *\n * @type {string}\n * @protected\n */\nFullscreenToggle.prototype.controlText_ = 'Fullscreen';\nComponent$1.registerComponent('FullscreenToggle', FullscreenToggle);\n\n/**\n * Check if volume control is supported and if it isn't hide the\n * `Component` that was passed  using the `vjs-hidden` class.\n *\n * @param { import('../../component').default } self\n *        The component that should be hidden if volume is unsupported\n *\n * @param { import('../../player').default } player\n *        A reference to the player\n *\n * @private\n */\nconst checkVolumeSupport = function (self, player) {\n  // hide volume controls when they're not supported by the current tech\n  if (player.tech_ && !player.tech_.featuresVolumeControl) {\n    self.addClass('vjs-hidden');\n  }\n  self.on(player, 'loadstart', function () {\n    if (!player.tech_.featuresVolumeControl) {\n      self.addClass('vjs-hidden');\n    } else {\n      self.removeClass('vjs-hidden');\n    }\n  });\n};\n\n/**\n * @file volume-level.js\n */\n\n/**\n * Shows volume level\n *\n * @extends Component\n */\nclass VolumeLevel extends Component$1 {\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    const el = super.createEl('div', {\n      className: 'vjs-volume-level'\n    });\n    el.appendChild(super.createEl('span', {\n      className: 'vjs-control-text'\n    }));\n    return el;\n  }\n}\nComponent$1.registerComponent('VolumeLevel', VolumeLevel);\n\n/**\n * @file volume-level-tooltip.js\n */\n\n/**\n * Volume level tooltips display a volume above or side by side the volume bar.\n *\n * @extends Component\n */\nclass VolumeLevelTooltip extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The {@link Player} that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.update = throttle(bind_(this, this.update), UPDATE_REFRESH_INTERVAL);\n  }\n\n  /**\n   * Create the volume tooltip DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: 'vjs-volume-tooltip'\n    }, {\n      'aria-hidden': 'true'\n    });\n  }\n\n  /**\n   * Updates the position of the tooltip relative to the `VolumeBar` and\n   * its content text.\n   *\n   * @param {Object} rangeBarRect\n   *        The `ClientRect` for the {@link VolumeBar} element.\n   *\n   * @param {number} rangeBarPoint\n   *        A number from 0 to 1, representing a horizontal/vertical reference point\n   *        from the left edge of the {@link VolumeBar}\n   *\n   * @param {boolean} vertical\n   *        Referees to the Volume control position\n   *        in the control bar{@link VolumeControl}\n   *\n   */\n  update(rangeBarRect, rangeBarPoint, vertical, content) {\n    if (!vertical) {\n      const tooltipRect = getBoundingClientRect(this.el_);\n      const playerRect = getBoundingClientRect(this.player_.el());\n      const volumeBarPointPx = rangeBarRect.width * rangeBarPoint;\n      if (!playerRect || !tooltipRect) {\n        return;\n      }\n      const spaceLeftOfPoint = rangeBarRect.left - playerRect.left + volumeBarPointPx;\n      const spaceRightOfPoint = rangeBarRect.width - volumeBarPointPx + (playerRect.right - rangeBarRect.right);\n      let pullTooltipBy = tooltipRect.width / 2;\n      if (spaceLeftOfPoint < pullTooltipBy) {\n        pullTooltipBy += pullTooltipBy - spaceLeftOfPoint;\n      } else if (spaceRightOfPoint < pullTooltipBy) {\n        pullTooltipBy = spaceRightOfPoint;\n      }\n      if (pullTooltipBy < 0) {\n        pullTooltipBy = 0;\n      } else if (pullTooltipBy > tooltipRect.width) {\n        pullTooltipBy = tooltipRect.width;\n      }\n      this.el_.style.right = `-${pullTooltipBy}px`;\n    }\n    this.write(`${content}%`);\n  }\n\n  /**\n   * Write the volume to the tooltip DOM element.\n   *\n   * @param {string} content\n   *        The formatted volume for the tooltip.\n   */\n  write(content) {\n    textContent(this.el_, content);\n  }\n\n  /**\n   * Updates the position of the volume tooltip relative to the `VolumeBar`.\n   *\n   * @param {Object} rangeBarRect\n   *        The `ClientRect` for the {@link VolumeBar} element.\n   *\n   * @param {number} rangeBarPoint\n   *        A number from 0 to 1, representing a horizontal/vertical reference point\n   *        from the left edge of the {@link VolumeBar}\n   *\n   * @param {boolean} vertical\n   *        Referees to the Volume control position\n   *        in the control bar{@link VolumeControl}\n   *\n   * @param {number} volume\n   *        The volume level to update the tooltip to\n   *\n   * @param {Function} cb\n   *        A function that will be called during the request animation frame\n   *        for tooltips that need to do additional animations from the default\n   */\n  updateVolume(rangeBarRect, rangeBarPoint, vertical, volume, cb) {\n    this.requestNamedAnimationFrame('VolumeLevelTooltip#updateVolume', () => {\n      this.update(rangeBarRect, rangeBarPoint, vertical, volume.toFixed(0));\n      if (cb) {\n        cb();\n      }\n    });\n  }\n}\nComponent$1.registerComponent('VolumeLevelTooltip', VolumeLevelTooltip);\n\n/**\n * @file mouse-volume-level-display.js\n */\n\n/**\n * The {@link MouseVolumeLevelDisplay} component tracks mouse movement over the\n * {@link VolumeControl}. It displays an indicator and a {@link VolumeLevelTooltip}\n * indicating the volume level which is represented by a given point in the\n * {@link VolumeBar}.\n *\n * @extends Component\n */\nclass MouseVolumeLevelDisplay extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The {@link Player} that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.update = throttle(bind_(this, this.update), UPDATE_REFRESH_INTERVAL);\n  }\n\n  /**\n   * Create the DOM element for this class.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: 'vjs-mouse-display'\n    });\n  }\n\n  /**\n   * Enquires updates to its own DOM as well as the DOM of its\n   * {@link VolumeLevelTooltip} child.\n   *\n   * @param {Object} rangeBarRect\n   *        The `ClientRect` for the {@link VolumeBar} element.\n   *\n   * @param {number} rangeBarPoint\n   *        A number from 0 to 1, representing a horizontal/vertical reference point\n   *        from the left edge of the {@link VolumeBar}\n   *\n   * @param {boolean} vertical\n   *        Referees to the Volume control position\n   *        in the control bar{@link VolumeControl}\n   *\n   */\n  update(rangeBarRect, rangeBarPoint, vertical) {\n    const volume = 100 * rangeBarPoint;\n    this.getChild('volumeLevelTooltip').updateVolume(rangeBarRect, rangeBarPoint, vertical, volume, () => {\n      if (vertical) {\n        this.el_.style.bottom = `${rangeBarRect.height * rangeBarPoint}px`;\n      } else {\n        this.el_.style.left = `${rangeBarRect.width * rangeBarPoint}px`;\n      }\n    });\n  }\n}\n\n/**\n * Default options for `MouseVolumeLevelDisplay`\n *\n * @type {Object}\n * @private\n */\nMouseVolumeLevelDisplay.prototype.options_ = {\n  children: ['volumeLevelTooltip']\n};\nComponent$1.registerComponent('MouseVolumeLevelDisplay', MouseVolumeLevelDisplay);\n\n/**\n * @file volume-bar.js\n */\n\n/**\n * The bar that contains the volume level and can be clicked on to adjust the level\n *\n * @extends Slider\n */\nclass VolumeBar extends Slider {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.on('slideractive', e => this.updateLastVolume_(e));\n    this.on(player, 'volumechange', e => this.updateARIAAttributes(e));\n    player.ready(() => this.updateARIAAttributes());\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: 'vjs-volume-bar vjs-slider-bar'\n    }, {\n      'aria-label': this.localize('Volume Level'),\n      'aria-live': 'polite'\n    });\n  }\n\n  /**\n   * Handle mouse down on volume bar\n   *\n   * @param {Event} event\n   *        The `mousedown` event that caused this to run.\n   *\n   * @listens mousedown\n   */\n  handleMouseDown(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n    super.handleMouseDown(event);\n  }\n\n  /**\n   * Handle movement events on the {@link VolumeMenuButton}.\n   *\n   * @param {Event} event\n   *        The event that caused this function to run.\n   *\n   * @listens mousemove\n   */\n  handleMouseMove(event) {\n    const mouseVolumeLevelDisplay = this.getChild('mouseVolumeLevelDisplay');\n    if (mouseVolumeLevelDisplay) {\n      const volumeBarEl = this.el();\n      const volumeBarRect = getBoundingClientRect(volumeBarEl);\n      const vertical = this.vertical();\n      let volumeBarPoint = getPointerPosition(volumeBarEl, event);\n      volumeBarPoint = vertical ? volumeBarPoint.y : volumeBarPoint.x;\n      // The default skin has a gap on either side of the `VolumeBar`. This means\n      // that it's possible to trigger this behavior outside the boundaries of\n      // the `VolumeBar`. This ensures we stay within it at all times.\n      volumeBarPoint = clamp(volumeBarPoint, 0, 1);\n      mouseVolumeLevelDisplay.update(volumeBarRect, volumeBarPoint, vertical);\n    }\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n    this.checkMuted();\n    this.player_.volume(this.calculateDistance(event));\n  }\n\n  /**\n   * If the player is muted unmute it.\n   */\n  checkMuted() {\n    if (this.player_.muted()) {\n      this.player_.muted(false);\n    }\n  }\n\n  /**\n   * Get percent of volume level\n   *\n   * @return {number}\n   *         Volume level percent as a decimal number.\n   */\n  getPercent() {\n    if (this.player_.muted()) {\n      return 0;\n    }\n    return this.player_.volume();\n  }\n\n  /**\n   * Increase volume level for keyboard users\n   */\n  stepForward() {\n    this.checkMuted();\n    this.player_.volume(this.player_.volume() + 0.1);\n  }\n\n  /**\n   * Decrease volume level for keyboard users\n   */\n  stepBack() {\n    this.checkMuted();\n    this.player_.volume(this.player_.volume() - 0.1);\n  }\n\n  /**\n   * Update ARIA accessibility attributes\n   *\n   * @param {Event} [event]\n   *        The `volumechange` event that caused this function to run.\n   *\n   * @listens Player#volumechange\n   */\n  updateARIAAttributes(event) {\n    const ariaValue = this.player_.muted() ? 0 : this.volumeAsPercentage_();\n    this.el_.setAttribute('aria-valuenow', ariaValue);\n    this.el_.setAttribute('aria-valuetext', ariaValue + '%');\n  }\n\n  /**\n   * Returns the current value of the player volume as a percentage\n   *\n   * @private\n   */\n  volumeAsPercentage_() {\n    return Math.round(this.player_.volume() * 100);\n  }\n\n  /**\n   * When user starts dragging the VolumeBar, store the volume and listen for\n   * the end of the drag. When the drag ends, if the volume was set to zero,\n   * set lastVolume to the stored volume.\n   *\n   * @listens slideractive\n   * @private\n   */\n  updateLastVolume_() {\n    const volumeBeforeDrag = this.player_.volume();\n    this.one('sliderinactive', () => {\n      if (this.player_.volume() === 0) {\n        this.player_.lastVolume_(volumeBeforeDrag);\n      }\n    });\n  }\n}\n\n/**\n * Default options for the `VolumeBar`\n *\n * @type {Object}\n * @private\n */\nVolumeBar.prototype.options_ = {\n  children: ['volumeLevel'],\n  barName: 'volumeLevel'\n};\n\n// MouseVolumeLevelDisplay tooltip should not be added to a player on mobile devices\nif (!IS_IOS && !IS_ANDROID) {\n  VolumeBar.prototype.options_.children.splice(0, 0, 'mouseVolumeLevelDisplay');\n}\n\n/**\n * Call the update event for this Slider when this event happens on the player.\n *\n * @type {string}\n */\nVolumeBar.prototype.playerEvent = 'volumechange';\nComponent$1.registerComponent('VolumeBar', VolumeBar);\n\n/**\n * @file volume-control.js\n */\n\n/**\n * The component for controlling the volume level\n *\n * @extends Component\n */\nclass VolumeControl extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  constructor(player, options = {}) {\n    options.vertical = options.vertical || false;\n\n    // Pass the vertical option down to the VolumeBar if\n    // the VolumeBar is turned on.\n    if (typeof options.volumeBar === 'undefined' || isPlain(options.volumeBar)) {\n      options.volumeBar = options.volumeBar || {};\n      options.volumeBar.vertical = options.vertical;\n    }\n    super(player, options);\n\n    // hide this control if volume support is missing\n    checkVolumeSupport(this, player);\n    this.throttledHandleMouseMove = throttle(bind_(this, this.handleMouseMove), UPDATE_REFRESH_INTERVAL);\n    this.handleMouseUpHandler_ = e => this.handleMouseUp(e);\n    this.on('mousedown', e => this.handleMouseDown(e));\n    this.on('touchstart', e => this.handleMouseDown(e));\n    this.on('mousemove', e => this.handleMouseMove(e));\n\n    // while the slider is active (the mouse has been pressed down and\n    // is dragging) or in focus we do not want to hide the VolumeBar\n    this.on(this.volumeBar, ['focus', 'slideractive'], () => {\n      this.volumeBar.addClass('vjs-slider-active');\n      this.addClass('vjs-slider-active');\n      this.trigger('slideractive');\n    });\n    this.on(this.volumeBar, ['blur', 'sliderinactive'], () => {\n      this.volumeBar.removeClass('vjs-slider-active');\n      this.removeClass('vjs-slider-active');\n      this.trigger('sliderinactive');\n    });\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    let orientationClass = 'vjs-volume-horizontal';\n    if (this.options_.vertical) {\n      orientationClass = 'vjs-volume-vertical';\n    }\n    return super.createEl('div', {\n      className: `vjs-volume-control vjs-control ${orientationClass}`\n    });\n  }\n\n  /**\n   * Handle `mousedown` or `touchstart` events on the `VolumeControl`.\n   *\n   * @param {Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n  handleMouseDown(event) {\n    const doc = this.el_.ownerDocument;\n    this.on(doc, 'mousemove', this.throttledHandleMouseMove);\n    this.on(doc, 'touchmove', this.throttledHandleMouseMove);\n    this.on(doc, 'mouseup', this.handleMouseUpHandler_);\n    this.on(doc, 'touchend', this.handleMouseUpHandler_);\n  }\n\n  /**\n   * Handle `mouseup` or `touchend` events on the `VolumeControl`.\n   *\n   * @param {Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   */\n  handleMouseUp(event) {\n    const doc = this.el_.ownerDocument;\n    this.off(doc, 'mousemove', this.throttledHandleMouseMove);\n    this.off(doc, 'touchmove', this.throttledHandleMouseMove);\n    this.off(doc, 'mouseup', this.handleMouseUpHandler_);\n    this.off(doc, 'touchend', this.handleMouseUpHandler_);\n  }\n\n  /**\n   * Handle `mousedown` or `touchstart` events on the `VolumeControl`.\n   *\n   * @param {Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n  handleMouseMove(event) {\n    this.volumeBar.handleMouseMove(event);\n  }\n}\n\n/**\n * Default options for the `VolumeControl`\n *\n * @type {Object}\n * @private\n */\nVolumeControl.prototype.options_ = {\n  children: ['volumeBar']\n};\nComponent$1.registerComponent('VolumeControl', VolumeControl);\n\n/**\n * Check if muting volume is supported and if it isn't hide the mute toggle\n * button.\n *\n * @param { import('../../component').default } self\n *        A reference to the mute toggle button\n *\n * @param { import('../../player').default } player\n *        A reference to the player\n *\n * @private\n */\nconst checkMuteSupport = function (self, player) {\n  // hide mute toggle button if it's not supported by the current tech\n  if (player.tech_ && !player.tech_.featuresMuteControl) {\n    self.addClass('vjs-hidden');\n  }\n  self.on(player, 'loadstart', function () {\n    if (!player.tech_.featuresMuteControl) {\n      self.addClass('vjs-hidden');\n    } else {\n      self.removeClass('vjs-hidden');\n    }\n  });\n};\n\n/**\n * @file mute-toggle.js\n */\n\n/**\n * A button component for muting the audio.\n *\n * @extends Button\n */\nclass MuteToggle extends Button {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('./player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n\n    // hide this control if volume support is missing\n    checkMuteSupport(this, player);\n    this.on(player, ['loadstart', 'volumechange'], e => this.update(e));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-mute-control ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * This gets called when an `MuteToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  handleClick(event) {\n    const vol = this.player_.volume();\n    const lastVolume = this.player_.lastVolume_();\n    if (vol === 0) {\n      const volumeToSet = lastVolume < 0.1 ? 0.1 : lastVolume;\n      this.player_.volume(volumeToSet);\n      this.player_.muted(false);\n    } else {\n      this.player_.muted(this.player_.muted() ? false : true);\n    }\n  }\n\n  /**\n   * Update the `MuteToggle` button based on the state of `volume` and `muted`\n   * on the player.\n   *\n   * @param {Event} [event]\n   *        The {@link Player#loadstart} event if this function was called\n   *        through an event.\n   *\n   * @listens Player#loadstart\n   * @listens Player#volumechange\n   */\n  update(event) {\n    this.updateIcon_();\n    this.updateControlText_();\n  }\n\n  /**\n   * Update the appearance of the `MuteToggle` icon.\n   *\n   * Possible states (given `level` variable below):\n   * - 0: crossed out\n   * - 1: zero bars of volume\n   * - 2: one bar of volume\n   * - 3: two bars of volume\n   *\n   * @private\n   */\n  updateIcon_() {\n    const vol = this.player_.volume();\n    let level = 3;\n\n    // in iOS when a player is loaded with muted attribute\n    // and volume is changed with a native mute button\n    // we want to make sure muted state is updated\n    if (IS_IOS && this.player_.tech_ && this.player_.tech_.el_) {\n      this.player_.muted(this.player_.tech_.el_.muted);\n    }\n    if (vol === 0 || this.player_.muted()) {\n      level = 0;\n    } else if (vol < 0.33) {\n      level = 1;\n    } else if (vol < 0.67) {\n      level = 2;\n    }\n    removeClass(this.el_, [0, 1, 2, 3].reduce((str, i) => str + `${i ? ' ' : ''}vjs-vol-${i}`, ''));\n    addClass(this.el_, `vjs-vol-${level}`);\n  }\n\n  /**\n   * If `muted` has changed on the player, update the control text\n   * (`title` attribute on `vjs-mute-control` element and content of\n   * `vjs-control-text` element).\n   *\n   * @private\n   */\n  updateControlText_() {\n    const soundOff = this.player_.muted() || this.player_.volume() === 0;\n    const text = soundOff ? 'Unmute' : 'Mute';\n    if (this.controlText() !== text) {\n      this.controlText(text);\n    }\n  }\n}\n\n/**\n * The text that should display over the `MuteToggle`s controls. Added for localization.\n *\n * @type {string}\n * @protected\n */\nMuteToggle.prototype.controlText_ = 'Mute';\nComponent$1.registerComponent('MuteToggle', MuteToggle);\n\n/**\n * @file volume-control.js\n */\n\n/**\n * A Component to contain the MuteToggle and VolumeControl so that\n * they can work together.\n *\n * @extends Component\n */\nclass VolumePanel extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('./player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  constructor(player, options = {}) {\n    if (typeof options.inline !== 'undefined') {\n      options.inline = options.inline;\n    } else {\n      options.inline = true;\n    }\n\n    // pass the inline option down to the VolumeControl as vertical if\n    // the VolumeControl is on.\n    if (typeof options.volumeControl === 'undefined' || isPlain(options.volumeControl)) {\n      options.volumeControl = options.volumeControl || {};\n      options.volumeControl.vertical = !options.inline;\n    }\n    super(player, options);\n\n    // this handler is used by mouse handler methods below\n    this.handleKeyPressHandler_ = e => this.handleKeyPress(e);\n    this.on(player, ['loadstart'], e => this.volumePanelState_(e));\n    this.on(this.muteToggle, 'keyup', e => this.handleKeyPress(e));\n    this.on(this.volumeControl, 'keyup', e => this.handleVolumeControlKeyUp(e));\n    this.on('keydown', e => this.handleKeyPress(e));\n    this.on('mouseover', e => this.handleMouseOver(e));\n    this.on('mouseout', e => this.handleMouseOut(e));\n\n    // while the slider is active (the mouse has been pressed down and\n    // is dragging) we do not want to hide the VolumeBar\n    this.on(this.volumeControl, ['slideractive'], this.sliderActive_);\n    this.on(this.volumeControl, ['sliderinactive'], this.sliderInactive_);\n  }\n\n  /**\n   * Add vjs-slider-active class to the VolumePanel\n   *\n   * @listens VolumeControl#slideractive\n   * @private\n   */\n  sliderActive_() {\n    this.addClass('vjs-slider-active');\n  }\n\n  /**\n   * Removes vjs-slider-active class to the VolumePanel\n   *\n   * @listens VolumeControl#sliderinactive\n   * @private\n   */\n  sliderInactive_() {\n    this.removeClass('vjs-slider-active');\n  }\n\n  /**\n   * Adds vjs-hidden or vjs-mute-toggle-only to the VolumePanel\n   * depending on MuteToggle and VolumeControl state\n   *\n   * @listens Player#loadstart\n   * @private\n   */\n  volumePanelState_() {\n    // hide volume panel if neither volume control or mute toggle\n    // are displayed\n    if (this.volumeControl.hasClass('vjs-hidden') && this.muteToggle.hasClass('vjs-hidden')) {\n      this.addClass('vjs-hidden');\n    }\n\n    // if only mute toggle is visible we don't want\n    // volume panel expanding when hovered or active\n    if (this.volumeControl.hasClass('vjs-hidden') && !this.muteToggle.hasClass('vjs-hidden')) {\n      this.addClass('vjs-mute-toggle-only');\n    }\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    let orientationClass = 'vjs-volume-panel-horizontal';\n    if (!this.options_.inline) {\n      orientationClass = 'vjs-volume-panel-vertical';\n    }\n    return super.createEl('div', {\n      className: `vjs-volume-panel vjs-control ${orientationClass}`\n    });\n  }\n\n  /**\n   * Dispose of the `volume-panel` and all child components.\n   */\n  dispose() {\n    this.handleMouseOut();\n    super.dispose();\n  }\n\n  /**\n   * Handles `keyup` events on the `VolumeControl`, looking for ESC, which closes\n   * the volume panel and sets focus on `MuteToggle`.\n   *\n   * @param {Event} event\n   *        The `keyup` event that caused this function to be called.\n   *\n   * @listens keyup\n   */\n  handleVolumeControlKeyUp(event) {\n    if (keycode.isEventKey(event, 'Esc')) {\n      this.muteToggle.focus();\n    }\n  }\n\n  /**\n   * This gets called when a `VolumePanel` gains hover via a `mouseover` event.\n   * Turns on listening for `mouseover` event. When they happen it\n   * calls `this.handleMouseOver`.\n   *\n   * @param {Event} event\n   *        The `mouseover` event that caused this function to be called.\n   *\n   * @listens mouseover\n   */\n  handleMouseOver(event) {\n    this.addClass('vjs-hover');\n    on(document, 'keyup', this.handleKeyPressHandler_);\n  }\n\n  /**\n   * This gets called when a `VolumePanel` gains hover via a `mouseout` event.\n   * Turns on listening for `mouseout` event. When they happen it\n   * calls `this.handleMouseOut`.\n   *\n   * @param {Event} event\n   *        The `mouseout` event that caused this function to be called.\n   *\n   * @listens mouseout\n   */\n  handleMouseOut(event) {\n    this.removeClass('vjs-hover');\n    off(document, 'keyup', this.handleKeyPressHandler_);\n  }\n\n  /**\n   * Handles `keyup` event on the document or `keydown` event on the `VolumePanel`,\n   * looking for ESC, which hides the `VolumeControl`.\n   *\n   * @param {Event} event\n   *        The keypress that triggered this event.\n   *\n   * @listens keydown | keyup\n   */\n  handleKeyPress(event) {\n    if (keycode.isEventKey(event, 'Esc')) {\n      this.handleMouseOut();\n    }\n  }\n}\n\n/**\n * Default options for the `VolumeControl`\n *\n * @type {Object}\n * @private\n */\nVolumePanel.prototype.options_ = {\n  children: ['muteToggle', 'volumeControl']\n};\nComponent$1.registerComponent('VolumePanel', VolumePanel);\n\n/**\n * Button to skip forward a configurable amount of time\n * through a video. Renders in the control bar.\n *\n * e.g. options: {controlBar: {skipButtons: forward: 5}}\n *\n * @extends Button\n */\nclass SkipForward extends Button {\n  constructor(player, options) {\n    super(player, options);\n    this.validOptions = [5, 10, 30];\n    this.skipTime = this.getSkipForwardTime();\n    if (this.skipTime && this.validOptions.includes(this.skipTime)) {\n      this.controlText(this.localize('Skip forward {1} seconds', [this.skipTime]));\n      this.show();\n    } else {\n      this.hide();\n    }\n  }\n  getSkipForwardTime() {\n    const playerOptions = this.options_.playerOptions;\n    return playerOptions.controlBar && playerOptions.controlBar.skipButtons && playerOptions.controlBar.skipButtons.forward;\n  }\n  buildCSSClass() {\n    return `vjs-skip-forward-${this.getSkipForwardTime()} ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * On click, skips forward in the duration/seekable range by a configurable amount of seconds.\n   * If the time left in the duration/seekable range is less than the configured 'skip forward' time,\n   * skips to end of duration/seekable range.\n   *\n   * Handle a click on a `SkipForward` button\n   *\n   * @param {EventTarget~Event} event\n   *        The `click` event that caused this function\n   *        to be called\n   */\n  handleClick(event) {\n    const currentVideoTime = this.player_.currentTime();\n    const liveTracker = this.player_.liveTracker;\n    const duration = liveTracker && liveTracker.isLive() ? liveTracker.seekableEnd() : this.player_.duration();\n    let newTime;\n    if (currentVideoTime + this.skipTime <= duration) {\n      newTime = currentVideoTime + this.skipTime;\n    } else {\n      newTime = duration;\n    }\n    this.player_.currentTime(newTime);\n  }\n\n  /**\n   * Update control text on languagechange\n   */\n  handleLanguagechange() {\n    this.controlText(this.localize('Skip forward {1} seconds', [this.skipTime]));\n  }\n}\nComponent$1.registerComponent('SkipForward', SkipForward);\n\n/**\n * Button to skip backward a configurable amount of time\n * through a video. Renders in the control bar.\n *\n *  * e.g. options: {controlBar: {skipButtons: backward: 5}}\n *\n * @extends Button\n */\nclass SkipBackward extends Button {\n  constructor(player, options) {\n    super(player, options);\n    this.validOptions = [5, 10, 30];\n    this.skipTime = this.getSkipBackwardTime();\n    if (this.skipTime && this.validOptions.includes(this.skipTime)) {\n      this.controlText(this.localize('Skip backward {1} seconds', [this.skipTime]));\n      this.show();\n    } else {\n      this.hide();\n    }\n  }\n  getSkipBackwardTime() {\n    const playerOptions = this.options_.playerOptions;\n    return playerOptions.controlBar && playerOptions.controlBar.skipButtons && playerOptions.controlBar.skipButtons.backward;\n  }\n  buildCSSClass() {\n    return `vjs-skip-backward-${this.getSkipBackwardTime()} ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * On click, skips backward in the video by a configurable amount of seconds.\n   * If the current time in the video is less than the configured 'skip backward' time,\n   * skips to beginning of video or seekable range.\n   *\n   * Handle a click on a `SkipBackward` button\n   *\n   * @param {EventTarget~Event} event\n   *        The `click` event that caused this function\n   *        to be called\n   */\n  handleClick(event) {\n    const currentVideoTime = this.player_.currentTime();\n    const liveTracker = this.player_.liveTracker;\n    const seekableStart = liveTracker && liveTracker.isLive() && liveTracker.seekableStart();\n    let newTime;\n    if (seekableStart && currentVideoTime - this.skipTime <= seekableStart) {\n      newTime = seekableStart;\n    } else if (currentVideoTime >= this.skipTime) {\n      newTime = currentVideoTime - this.skipTime;\n    } else {\n      newTime = 0;\n    }\n    this.player_.currentTime(newTime);\n  }\n\n  /**\n   * Update control text on languagechange\n   */\n  handleLanguagechange() {\n    this.controlText(this.localize('Skip backward {1} seconds', [this.skipTime]));\n  }\n}\nSkipBackward.prototype.controlText_ = 'Skip Backward';\nComponent$1.registerComponent('SkipBackward', SkipBackward);\n\n/**\n * @file menu.js\n */\n\n/**\n * The Menu component is used to build popup menus, including subtitle and\n * captions selection menus.\n *\n * @extends Component\n */\nclass Menu extends Component$1 {\n  /**\n   * Create an instance of this class.\n   *\n   * @param { import('../player').default } player\n   *        the player that this component should attach to\n   *\n   * @param {Object} [options]\n   *        Object of option names and values\n   *\n   */\n  constructor(player, options) {\n    super(player, options);\n    if (options) {\n      this.menuButton_ = options.menuButton;\n    }\n    this.focusedChild_ = -1;\n    this.on('keydown', e => this.handleKeyDown(e));\n\n    // All the menu item instances share the same blur handler provided by the menu container.\n    this.boundHandleBlur_ = e => this.handleBlur(e);\n    this.boundHandleTapClick_ = e => this.handleTapClick(e);\n  }\n\n  /**\n   * Add event listeners to the {@link MenuItem}.\n   *\n   * @param {Object} component\n   *        The instance of the `MenuItem` to add listeners to.\n   *\n   */\n  addEventListenerForItem(component) {\n    if (!(component instanceof Component$1)) {\n      return;\n    }\n    this.on(component, 'blur', this.boundHandleBlur_);\n    this.on(component, ['tap', 'click'], this.boundHandleTapClick_);\n  }\n\n  /**\n   * Remove event listeners from the {@link MenuItem}.\n   *\n   * @param {Object} component\n   *        The instance of the `MenuItem` to remove listeners.\n   *\n   */\n  removeEventListenerForItem(component) {\n    if (!(component instanceof Component$1)) {\n      return;\n    }\n    this.off(component, 'blur', this.boundHandleBlur_);\n    this.off(component, ['tap', 'click'], this.boundHandleTapClick_);\n  }\n\n  /**\n   * This method will be called indirectly when the component has been added\n   * before the component adds to the new menu instance by `addItem`.\n   * In this case, the original menu instance will remove the component\n   * by calling `removeChild`.\n   *\n   * @param {Object} component\n   *        The instance of the `MenuItem`\n   */\n  removeChild(component) {\n    if (typeof component === 'string') {\n      component = this.getChild(component);\n    }\n    this.removeEventListenerForItem(component);\n    super.removeChild(component);\n  }\n\n  /**\n   * Add a {@link MenuItem} to the menu.\n   *\n   * @param {Object|string} component\n   *        The name or instance of the `MenuItem` to add.\n   *\n   */\n  addItem(component) {\n    const childComponent = this.addChild(component);\n    if (childComponent) {\n      this.addEventListenerForItem(childComponent);\n    }\n  }\n\n  /**\n   * Create the `Menu`s DOM element.\n   *\n   * @return {Element}\n   *         the element that was created\n   */\n  createEl() {\n    const contentElType = this.options_.contentElType || 'ul';\n    this.contentEl_ = createEl(contentElType, {\n      className: 'vjs-menu-content'\n    });\n    this.contentEl_.setAttribute('role', 'menu');\n    const el = super.createEl('div', {\n      append: this.contentEl_,\n      className: 'vjs-menu'\n    });\n    el.appendChild(this.contentEl_);\n\n    // Prevent clicks from bubbling up. Needed for Menu Buttons,\n    // where a click on the parent is significant\n    on(el, 'click', function (event) {\n      event.preventDefault();\n      event.stopImmediatePropagation();\n    });\n    return el;\n  }\n  dispose() {\n    this.contentEl_ = null;\n    this.boundHandleBlur_ = null;\n    this.boundHandleTapClick_ = null;\n    super.dispose();\n  }\n\n  /**\n   * Called when a `MenuItem` loses focus.\n   *\n   * @param {Event} event\n   *        The `blur` event that caused this function to be called.\n   *\n   * @listens blur\n   */\n  handleBlur(event) {\n    const relatedTarget = event.relatedTarget || document.activeElement;\n\n    // Close menu popup when a user clicks outside the menu\n    if (!this.children().some(element => {\n      return element.el() === relatedTarget;\n    })) {\n      const btn = this.menuButton_;\n      if (btn && btn.buttonPressed_ && relatedTarget !== btn.el().firstChild) {\n        btn.unpressButton();\n      }\n    }\n  }\n\n  /**\n   * Called when a `MenuItem` gets clicked or tapped.\n   *\n   * @param {Event} event\n   *        The `click` or `tap` event that caused this function to be called.\n   *\n   * @listens click,tap\n   */\n  handleTapClick(event) {\n    // Unpress the associated MenuButton, and move focus back to it\n    if (this.menuButton_) {\n      this.menuButton_.unpressButton();\n      const childComponents = this.children();\n      if (!Array.isArray(childComponents)) {\n        return;\n      }\n      const foundComponent = childComponents.filter(component => component.el() === event.target)[0];\n      if (!foundComponent) {\n        return;\n      }\n\n      // don't focus menu button if item is a caption settings item\n      // because focus will move elsewhere\n      if (foundComponent.name() !== 'CaptionSettingsMenuItem') {\n        this.menuButton_.focus();\n      }\n    }\n  }\n\n  /**\n   * Handle a `keydown` event on this menu. This listener is added in the constructor.\n   *\n   * @param {Event} event\n   *        A `keydown` event that happened on the menu.\n   *\n   * @listens keydown\n   */\n  handleKeyDown(event) {\n    // Left and Down Arrows\n    if (keycode.isEventKey(event, 'Left') || keycode.isEventKey(event, 'Down')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.stepForward();\n\n      // Up and Right Arrows\n    } else if (keycode.isEventKey(event, 'Right') || keycode.isEventKey(event, 'Up')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.stepBack();\n    }\n  }\n\n  /**\n   * Move to next (lower) menu item for keyboard users.\n   */\n  stepForward() {\n    let stepChild = 0;\n    if (this.focusedChild_ !== undefined) {\n      stepChild = this.focusedChild_ + 1;\n    }\n    this.focus(stepChild);\n  }\n\n  /**\n   * Move to previous (higher) menu item for keyboard users.\n   */\n  stepBack() {\n    let stepChild = 0;\n    if (this.focusedChild_ !== undefined) {\n      stepChild = this.focusedChild_ - 1;\n    }\n    this.focus(stepChild);\n  }\n\n  /**\n   * Set focus on a {@link MenuItem} in the `Menu`.\n   *\n   * @param {Object|string} [item=0]\n   *        Index of child item set focus on.\n   */\n  focus(item = 0) {\n    const children = this.children().slice();\n    const haveTitle = children.length && children[0].hasClass('vjs-menu-title');\n    if (haveTitle) {\n      children.shift();\n    }\n    if (children.length > 0) {\n      if (item < 0) {\n        item = 0;\n      } else if (item >= children.length) {\n        item = children.length - 1;\n      }\n      this.focusedChild_ = item;\n      children[item].el_.focus();\n    }\n  }\n}\nComponent$1.registerComponent('Menu', Menu);\n\n/**\n * @file menu-button.js\n */\n\n/**\n * A `MenuButton` class for any popup {@link Menu}.\n *\n * @extends Component\n */\nclass MenuButton extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  constructor(player, options = {}) {\n    super(player, options);\n    this.menuButton_ = new Button(player, options);\n    this.menuButton_.controlText(this.controlText_);\n    this.menuButton_.el_.setAttribute('aria-haspopup', 'true');\n\n    // Add buildCSSClass values to the button, not the wrapper\n    const buttonClass = Button.prototype.buildCSSClass();\n    this.menuButton_.el_.className = this.buildCSSClass() + ' ' + buttonClass;\n    this.menuButton_.removeClass('vjs-control');\n    this.addChild(this.menuButton_);\n    this.update();\n    this.enabled_ = true;\n    const handleClick = e => this.handleClick(e);\n    this.handleMenuKeyUp_ = e => this.handleMenuKeyUp(e);\n    this.on(this.menuButton_, 'tap', handleClick);\n    this.on(this.menuButton_, 'click', handleClick);\n    this.on(this.menuButton_, 'keydown', e => this.handleKeyDown(e));\n    this.on(this.menuButton_, 'mouseenter', () => {\n      this.addClass('vjs-hover');\n      this.menu.show();\n      on(document, 'keyup', this.handleMenuKeyUp_);\n    });\n    this.on('mouseleave', e => this.handleMouseLeave(e));\n    this.on('keydown', e => this.handleSubmenuKeyDown(e));\n  }\n\n  /**\n   * Update the menu based on the current state of its items.\n   */\n  update() {\n    const menu = this.createMenu();\n    if (this.menu) {\n      this.menu.dispose();\n      this.removeChild(this.menu);\n    }\n    this.menu = menu;\n    this.addChild(menu);\n\n    /**\n     * Track the state of the menu button\n     *\n     * @type {Boolean}\n     * @private\n     */\n    this.buttonPressed_ = false;\n    this.menuButton_.el_.setAttribute('aria-expanded', 'false');\n    if (this.items && this.items.length <= this.hideThreshold_) {\n      this.hide();\n      this.menu.contentEl_.removeAttribute('role');\n    } else {\n      this.show();\n      this.menu.contentEl_.setAttribute('role', 'menu');\n    }\n  }\n\n  /**\n   * Create the menu and add all items to it.\n   *\n   * @return {Menu}\n   *         The constructed menu\n   */\n  createMenu() {\n    const menu = new Menu(this.player_, {\n      menuButton: this\n    });\n\n    /**\n     * Hide the menu if the number of items is less than or equal to this threshold. This defaults\n     * to 0 and whenever we add items which can be hidden to the menu we'll increment it. We list\n     * it here because every time we run `createMenu` we need to reset the value.\n     *\n     * @protected\n     * @type {Number}\n     */\n    this.hideThreshold_ = 0;\n\n    // Add a title list item to the top\n    if (this.options_.title) {\n      const titleEl = createEl('li', {\n        className: 'vjs-menu-title',\n        textContent: toTitleCase$1(this.options_.title),\n        tabIndex: -1\n      });\n      const titleComponent = new Component$1(this.player_, {\n        el: titleEl\n      });\n      menu.addItem(titleComponent);\n    }\n    this.items = this.createItems();\n    if (this.items) {\n      // Add menu items to the menu\n      for (let i = 0; i < this.items.length; i++) {\n        menu.addItem(this.items[i]);\n      }\n    }\n    return menu;\n  }\n\n  /**\n   * Create the list of menu items. Specific to each subclass.\n   *\n   * @abstract\n   */\n  createItems() {}\n\n  /**\n   * Create the `MenuButtons`s DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: this.buildWrapperCSSClass()\n    }, {});\n  }\n\n  /**\n   * Allow sub components to stack CSS class names for the wrapper element\n   *\n   * @return {string}\n   *         The constructed wrapper DOM `className`\n   */\n  buildWrapperCSSClass() {\n    let menuButtonClass = 'vjs-menu-button';\n\n    // If the inline option is passed, we want to use different styles altogether.\n    if (this.options_.inline === true) {\n      menuButtonClass += '-inline';\n    } else {\n      menuButtonClass += '-popup';\n    }\n\n    // TODO: Fix the CSS so that this isn't necessary\n    const buttonClass = Button.prototype.buildCSSClass();\n    return `vjs-menu-button ${menuButtonClass} ${buttonClass} ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    let menuButtonClass = 'vjs-menu-button';\n\n    // If the inline option is passed, we want to use different styles altogether.\n    if (this.options_.inline === true) {\n      menuButtonClass += '-inline';\n    } else {\n      menuButtonClass += '-popup';\n    }\n    return `vjs-menu-button ${menuButtonClass} ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * Get or set the localized control text that will be used for accessibility.\n   *\n   * > NOTE: This will come from the internal `menuButton_` element.\n   *\n   * @param {string} [text]\n   *        Control text for element.\n   *\n   * @param {Element} [el=this.menuButton_.el()]\n   *        Element to set the title on.\n   *\n   * @return {string}\n   *         - The control text when getting\n   */\n  controlText(text, el = this.menuButton_.el()) {\n    return this.menuButton_.controlText(text, el);\n  }\n\n  /**\n   * Dispose of the `menu-button` and all child components.\n   */\n  dispose() {\n    this.handleMouseLeave();\n    super.dispose();\n  }\n\n  /**\n   * Handle a click on a `MenuButton`.\n   * See {@link ClickableComponent#handleClick} for instances where this is called.\n   *\n   * @param {Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  handleClick(event) {\n    if (this.buttonPressed_) {\n      this.unpressButton();\n    } else {\n      this.pressButton();\n    }\n  }\n\n  /**\n   * Handle `mouseleave` for `MenuButton`.\n   *\n   * @param {Event} event\n   *        The `mouseleave` event that caused this function to be called.\n   *\n   * @listens mouseleave\n   */\n  handleMouseLeave(event) {\n    this.removeClass('vjs-hover');\n    off(document, 'keyup', this.handleMenuKeyUp_);\n  }\n\n  /**\n   * Set the focus to the actual button, not to this element\n   */\n  focus() {\n    this.menuButton_.focus();\n  }\n\n  /**\n   * Remove the focus from the actual button, not this element\n   */\n  blur() {\n    this.menuButton_.blur();\n  }\n\n  /**\n   * Handle tab, escape, down arrow, and up arrow keys for `MenuButton`. See\n   * {@link ClickableComponent#handleKeyDown} for instances where this is called.\n   *\n   * @param {Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  handleKeyDown(event) {\n    // Escape or Tab unpress the 'button'\n    if (keycode.isEventKey(event, 'Esc') || keycode.isEventKey(event, 'Tab')) {\n      if (this.buttonPressed_) {\n        this.unpressButton();\n      }\n\n      // Don't preventDefault for Tab key - we still want to lose focus\n      if (!keycode.isEventKey(event, 'Tab')) {\n        event.preventDefault();\n        // Set focus back to the menu button's button\n        this.menuButton_.focus();\n      }\n      // Up Arrow or Down Arrow also 'press' the button to open the menu\n    } else if (keycode.isEventKey(event, 'Up') || keycode.isEventKey(event, 'Down')) {\n      if (!this.buttonPressed_) {\n        event.preventDefault();\n        this.pressButton();\n      }\n    }\n  }\n\n  /**\n   * Handle a `keyup` event on a `MenuButton`. The listener for this is added in\n   * the constructor.\n   *\n   * @param {Event} event\n   *        Key press event\n   *\n   * @listens keyup\n   */\n  handleMenuKeyUp(event) {\n    // Escape hides popup menu\n    if (keycode.isEventKey(event, 'Esc') || keycode.isEventKey(event, 'Tab')) {\n      this.removeClass('vjs-hover');\n    }\n  }\n\n  /**\n   * This method name now delegates to `handleSubmenuKeyDown`. This means\n   * anyone calling `handleSubmenuKeyPress` will not see their method calls\n   * stop working.\n   *\n   * @param {Event} event\n   *        The event that caused this function to be called.\n   */\n  handleSubmenuKeyPress(event) {\n    this.handleSubmenuKeyDown(event);\n  }\n\n  /**\n   * Handle a `keydown` event on a sub-menu. The listener for this is added in\n   * the constructor.\n   *\n   * @param {Event} event\n   *        Key press event\n   *\n   * @listens keydown\n   */\n  handleSubmenuKeyDown(event) {\n    // Escape or Tab unpress the 'button'\n    if (keycode.isEventKey(event, 'Esc') || keycode.isEventKey(event, 'Tab')) {\n      if (this.buttonPressed_) {\n        this.unpressButton();\n      }\n      // Don't preventDefault for Tab key - we still want to lose focus\n      if (!keycode.isEventKey(event, 'Tab')) {\n        event.preventDefault();\n        // Set focus back to the menu button's button\n        this.menuButton_.focus();\n      }\n    }\n  }\n\n  /**\n   * Put the current `MenuButton` into a pressed state.\n   */\n  pressButton() {\n    if (this.enabled_) {\n      this.buttonPressed_ = true;\n      this.menu.show();\n      this.menu.lockShowing();\n      this.menuButton_.el_.setAttribute('aria-expanded', 'true');\n\n      // set the focus into the submenu, except on iOS where it is resulting in\n      // undesired scrolling behavior when the player is in an iframe\n      if (IS_IOS && isInFrame()) {\n        // Return early so that the menu isn't focused\n        return;\n      }\n      this.menu.focus();\n    }\n  }\n\n  /**\n   * Take the current `MenuButton` out of a pressed state.\n   */\n  unpressButton() {\n    if (this.enabled_) {\n      this.buttonPressed_ = false;\n      this.menu.unlockShowing();\n      this.menu.hide();\n      this.menuButton_.el_.setAttribute('aria-expanded', 'false');\n    }\n  }\n\n  /**\n   * Disable the `MenuButton`. Don't allow it to be clicked.\n   */\n  disable() {\n    this.unpressButton();\n    this.enabled_ = false;\n    this.addClass('vjs-disabled');\n    this.menuButton_.disable();\n  }\n\n  /**\n   * Enable the `MenuButton`. Allow it to be clicked.\n   */\n  enable() {\n    this.enabled_ = true;\n    this.removeClass('vjs-disabled');\n    this.menuButton_.enable();\n  }\n}\nComponent$1.registerComponent('MenuButton', MenuButton);\n\n/**\n * @file track-button.js\n */\n\n/**\n * The base class for buttons that toggle specific  track types (e.g. subtitles).\n *\n * @extends MenuButton\n */\nclass TrackButton extends MenuButton {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('./player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    const tracks = options.tracks;\n    super(player, options);\n    if (this.items.length <= 1) {\n      this.hide();\n    }\n    if (!tracks) {\n      return;\n    }\n    const updateHandler = bind_(this, this.update);\n    tracks.addEventListener('removetrack', updateHandler);\n    tracks.addEventListener('addtrack', updateHandler);\n    tracks.addEventListener('labelchange', updateHandler);\n    this.player_.on('ready', updateHandler);\n    this.player_.on('dispose', function () {\n      tracks.removeEventListener('removetrack', updateHandler);\n      tracks.removeEventListener('addtrack', updateHandler);\n      tracks.removeEventListener('labelchange', updateHandler);\n    });\n  }\n}\nComponent$1.registerComponent('TrackButton', TrackButton);\n\n/**\n * @file menu-keys.js\n */\n\n/**\n  * All keys used for operation of a menu (`MenuButton`, `Menu`, and `MenuItem`)\n  * Note that 'Enter' and 'Space' are not included here (otherwise they would\n  * prevent the `MenuButton` and `MenuItem` from being keyboard-clickable)\n *\n  * @typedef MenuKeys\n  * @array\n  */\nconst MenuKeys = ['Tab', 'Esc', 'Up', 'Down', 'Right', 'Left'];\n\n/**\n * @file menu-item.js\n */\n\n/**\n * The component for a menu item. `<li>`\n *\n * @extends ClickableComponent\n */\nclass MenuItem extends ClickableComponent {\n  /**\n   * Creates an instance of the this class.\n   *\n   * @param { import('../player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   *\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.selectable = options.selectable;\n    this.isSelected_ = options.selected || false;\n    this.multiSelectable = options.multiSelectable;\n    this.selected(this.isSelected_);\n    if (this.selectable) {\n      if (this.multiSelectable) {\n        this.el_.setAttribute('role', 'menuitemcheckbox');\n      } else {\n        this.el_.setAttribute('role', 'menuitemradio');\n      }\n    } else {\n      this.el_.setAttribute('role', 'menuitem');\n    }\n  }\n\n  /**\n   * Create the `MenuItem's DOM element\n   *\n   * @param {string} [type=li]\n   *        Element's node type, not actually used, always set to `li`.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element\n   *\n   * @param {Object} [attrs={}]\n   *        An object of attributes that should be set on the element\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  createEl(type, props, attrs) {\n    // The control is textual, not just an icon\n    this.nonIconControl = true;\n    const el = super.createEl('li', Object.assign({\n      className: 'vjs-menu-item',\n      tabIndex: -1\n    }, props), attrs);\n\n    // swap icon with menu item text.\n    el.replaceChild(createEl('span', {\n      className: 'vjs-menu-item-text',\n      textContent: this.localize(this.options_.label)\n    }), el.querySelector('.vjs-icon-placeholder'));\n    return el;\n  }\n\n  /**\n   * Ignore keys which are used by the menu, but pass any other ones up. See\n   * {@link ClickableComponent#handleKeyDown} for instances where this is called.\n   *\n   * @param {Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  handleKeyDown(event) {\n    if (!MenuKeys.some(key => keycode.isEventKey(event, key))) {\n      // Pass keydown handling up for unused keys\n      super.handleKeyDown(event);\n    }\n  }\n\n  /**\n   * Any click on a `MenuItem` puts it into the selected state.\n   * See {@link ClickableComponent#handleClick} for instances where this is called.\n   *\n   * @param {Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  handleClick(event) {\n    this.selected(true);\n  }\n\n  /**\n   * Set the state for this menu item as selected or not.\n   *\n   * @param {boolean} selected\n   *        if the menu item is selected or not\n   */\n  selected(selected) {\n    if (this.selectable) {\n      if (selected) {\n        this.addClass('vjs-selected');\n        this.el_.setAttribute('aria-checked', 'true');\n        // aria-checked isn't fully supported by browsers/screen readers,\n        // so indicate selected state to screen reader in the control text.\n        this.controlText(', selected');\n        this.isSelected_ = true;\n      } else {\n        this.removeClass('vjs-selected');\n        this.el_.setAttribute('aria-checked', 'false');\n        // Indicate un-selected state to screen reader\n        this.controlText('');\n        this.isSelected_ = false;\n      }\n    }\n  }\n}\nComponent$1.registerComponent('MenuItem', MenuItem);\n\n/**\n * @file text-track-menu-item.js\n */\n\n/**\n * The specific menu item type for selecting a language within a text track kind\n *\n * @extends MenuItem\n */\nclass TextTrackMenuItem extends MenuItem {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    const track = options.track;\n    const tracks = player.textTracks();\n\n    // Modify options for parent MenuItem class's init.\n    options.label = track.label || track.language || 'Unknown';\n    options.selected = track.mode === 'showing';\n    super(player, options);\n    this.track = track;\n    // Determine the relevant kind(s) of tracks for this component and filter\n    // out empty kinds.\n    this.kinds = (options.kinds || [options.kind || this.track.kind]).filter(Boolean);\n    const changeHandler = (...args) => {\n      this.handleTracksChange.apply(this, args);\n    };\n    const selectedLanguageChangeHandler = (...args) => {\n      this.handleSelectedLanguageChange.apply(this, args);\n    };\n    player.on(['loadstart', 'texttrackchange'], changeHandler);\n    tracks.addEventListener('change', changeHandler);\n    tracks.addEventListener('selectedlanguagechange', selectedLanguageChangeHandler);\n    this.on('dispose', function () {\n      player.off(['loadstart', 'texttrackchange'], changeHandler);\n      tracks.removeEventListener('change', changeHandler);\n      tracks.removeEventListener('selectedlanguagechange', selectedLanguageChangeHandler);\n    });\n\n    // iOS7 doesn't dispatch change events to TextTrackLists when an\n    // associated track's mode changes. Without something like\n    // Object.observe() (also not present on iOS7), it's not\n    // possible to detect changes to the mode attribute and polyfill\n    // the change event. As a poor substitute, we manually dispatch\n    // change events whenever the controls modify the mode.\n    if (tracks.onchange === undefined) {\n      let event;\n      this.on(['tap', 'click'], function () {\n        if (typeof window$1.Event !== 'object') {\n          // Android 2.3 throws an Illegal Constructor error for window.Event\n          try {\n            event = new window$1.Event('change');\n          } catch (err) {\n            // continue regardless of error\n          }\n        }\n        if (!event) {\n          event = document.createEvent('Event');\n          event.initEvent('change', true, true);\n        }\n        tracks.dispatchEvent(event);\n      });\n    }\n\n    // set the default state based on current tracks\n    this.handleTracksChange();\n  }\n\n  /**\n   * This gets called when an `TextTrackMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  handleClick(event) {\n    const referenceTrack = this.track;\n    const tracks = this.player_.textTracks();\n    super.handleClick(event);\n    if (!tracks) {\n      return;\n    }\n    for (let i = 0; i < tracks.length; i++) {\n      const track = tracks[i];\n\n      // If the track from the text tracks list is not of the right kind,\n      // skip it. We do not want to affect tracks of incompatible kind(s).\n      if (this.kinds.indexOf(track.kind) === -1) {\n        continue;\n      }\n\n      // If this text track is the component's track and it is not showing,\n      // set it to showing.\n      if (track === referenceTrack) {\n        if (track.mode !== 'showing') {\n          track.mode = 'showing';\n        }\n\n        // If this text track is not the component's track and it is not\n        // disabled, set it to disabled.\n      } else if (track.mode !== 'disabled') {\n        track.mode = 'disabled';\n      }\n    }\n  }\n\n  /**\n   * Handle text track list change\n   *\n   * @param {Event} event\n   *        The `change` event that caused this function to be called.\n   *\n   * @listens TextTrackList#change\n   */\n  handleTracksChange(event) {\n    const shouldBeSelected = this.track.mode === 'showing';\n\n    // Prevent redundant selected() calls because they may cause\n    // screen readers to read the appended control text unnecessarily\n    if (shouldBeSelected !== this.isSelected_) {\n      this.selected(shouldBeSelected);\n    }\n  }\n  handleSelectedLanguageChange(event) {\n    if (this.track.mode === 'showing') {\n      const selectedLanguage = this.player_.cache_.selectedLanguage;\n\n      // Don't replace the kind of track across the same language\n      if (selectedLanguage && selectedLanguage.enabled && selectedLanguage.language === this.track.language && selectedLanguage.kind !== this.track.kind) {\n        return;\n      }\n      this.player_.cache_.selectedLanguage = {\n        enabled: true,\n        language: this.track.language,\n        kind: this.track.kind\n      };\n    }\n  }\n  dispose() {\n    // remove reference to track object on dispose\n    this.track = null;\n    super.dispose();\n  }\n}\nComponent$1.registerComponent('TextTrackMenuItem', TextTrackMenuItem);\n\n/**\n * @file off-text-track-menu-item.js\n */\n\n/**\n * A special menu item for turning of a specific type of text track\n *\n * @extends TextTrackMenuItem\n */\nclass OffTextTrackMenuItem extends TextTrackMenuItem {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    // Create pseudo track info\n    // Requires options['kind']\n    options.track = {\n      player,\n      // it is no longer necessary to store `kind` or `kinds` on the track itself\n      // since they are now stored in the `kinds` property of all instances of\n      // TextTrackMenuItem, but this will remain for backwards compatibility\n      kind: options.kind,\n      kinds: options.kinds,\n      default: false,\n      mode: 'disabled'\n    };\n    if (!options.kinds) {\n      options.kinds = [options.kind];\n    }\n    if (options.label) {\n      options.track.label = options.label;\n    } else {\n      options.track.label = options.kinds.join(' and ') + ' off';\n    }\n\n    // MenuItem is selectable\n    options.selectable = true;\n    // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n    options.multiSelectable = false;\n    super(player, options);\n  }\n\n  /**\n   * Handle text track change\n   *\n   * @param {Event} event\n   *        The event that caused this function to run\n   */\n  handleTracksChange(event) {\n    const tracks = this.player().textTracks();\n    let shouldBeSelected = true;\n    for (let i = 0, l = tracks.length; i < l; i++) {\n      const track = tracks[i];\n      if (this.options_.kinds.indexOf(track.kind) > -1 && track.mode === 'showing') {\n        shouldBeSelected = false;\n        break;\n      }\n    }\n\n    // Prevent redundant selected() calls because they may cause\n    // screen readers to read the appended control text unnecessarily\n    if (shouldBeSelected !== this.isSelected_) {\n      this.selected(shouldBeSelected);\n    }\n  }\n  handleSelectedLanguageChange(event) {\n    const tracks = this.player().textTracks();\n    let allHidden = true;\n    for (let i = 0, l = tracks.length; i < l; i++) {\n      const track = tracks[i];\n      if (['captions', 'descriptions', 'subtitles'].indexOf(track.kind) > -1 && track.mode === 'showing') {\n        allHidden = false;\n        break;\n      }\n    }\n    if (allHidden) {\n      this.player_.cache_.selectedLanguage = {\n        enabled: false\n      };\n    }\n  }\n\n  /**\n   * Update control text and label on languagechange\n   */\n  handleLanguagechange() {\n    this.$('.vjs-menu-item-text').textContent = this.player_.localize(this.options_.label);\n    super.handleLanguagechange();\n  }\n}\nComponent$1.registerComponent('OffTextTrackMenuItem', OffTextTrackMenuItem);\n\n/**\n * @file text-track-button.js\n */\n\n/**\n * The base class for buttons that toggle specific text track types (e.g. subtitles)\n *\n * @extends MenuButton\n */\nclass TextTrackButton extends TrackButton {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  constructor(player, options = {}) {\n    options.tracks = player.textTracks();\n    super(player, options);\n  }\n\n  /**\n   * Create a menu item for each text track\n   *\n   * @param {TextTrackMenuItem[]} [items=[]]\n   *        Existing array of items to use during creation\n   *\n   * @return {TextTrackMenuItem[]}\n   *         Array of menu items that were created\n   */\n  createItems(items = [], TrackMenuItem = TextTrackMenuItem) {\n    // Label is an override for the [track] off label\n    // USed to localise captions/subtitles\n    let label;\n    if (this.label_) {\n      label = `${this.label_} off`;\n    }\n    // Add an OFF menu item to turn all tracks off\n    items.push(new OffTextTrackMenuItem(this.player_, {\n      kinds: this.kinds_,\n      kind: this.kind_,\n      label\n    }));\n    this.hideThreshold_ += 1;\n    const tracks = this.player_.textTracks();\n    if (!Array.isArray(this.kinds_)) {\n      this.kinds_ = [this.kind_];\n    }\n    for (let i = 0; i < tracks.length; i++) {\n      const track = tracks[i];\n\n      // only add tracks that are of an appropriate kind and have a label\n      if (this.kinds_.indexOf(track.kind) > -1) {\n        const item = new TrackMenuItem(this.player_, {\n          track,\n          kinds: this.kinds_,\n          kind: this.kind_,\n          // MenuItem is selectable\n          selectable: true,\n          // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n          multiSelectable: false\n        });\n        item.addClass(`vjs-${track.kind}-menu-item`);\n        items.push(item);\n      }\n    }\n    return items;\n  }\n}\nComponent$1.registerComponent('TextTrackButton', TextTrackButton);\n\n/**\n * @file chapters-track-menu-item.js\n */\n\n/**\n * The chapter track menu item\n *\n * @extends MenuItem\n */\nclass ChaptersTrackMenuItem extends MenuItem {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    const track = options.track;\n    const cue = options.cue;\n    const currentTime = player.currentTime();\n\n    // Modify options for parent MenuItem class's init.\n    options.selectable = true;\n    options.multiSelectable = false;\n    options.label = cue.text;\n    options.selected = cue.startTime <= currentTime && currentTime < cue.endTime;\n    super(player, options);\n    this.track = track;\n    this.cue = cue;\n  }\n\n  /**\n   * This gets called when an `ChaptersTrackMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  handleClick(event) {\n    super.handleClick();\n    this.player_.currentTime(this.cue.startTime);\n  }\n}\nComponent$1.registerComponent('ChaptersTrackMenuItem', ChaptersTrackMenuItem);\n\n/**\n * @file chapters-button.js\n */\n\n/**\n * The button component for toggling and selecting chapters\n * Chapters act much differently than other text tracks\n * Cues are navigation vs. other tracks of alternative languages\n *\n * @extends TextTrackButton\n */\nclass ChaptersButton extends TextTrackButton {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Function} [ready]\n   *        The function to call when this function is ready.\n   */\n  constructor(player, options, ready) {\n    super(player, options, ready);\n    this.selectCurrentItem_ = () => {\n      this.items.forEach(item => {\n        item.selected(this.track_.activeCues[0] === item.cue);\n      });\n    };\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-chapters-button ${super.buildCSSClass()}`;\n  }\n  buildWrapperCSSClass() {\n    return `vjs-chapters-button ${super.buildWrapperCSSClass()}`;\n  }\n\n  /**\n   * Update the menu based on the current state of its items.\n   *\n   * @param {Event} [event]\n   *        An event that triggered this function to run.\n   *\n   * @listens TextTrackList#addtrack\n   * @listens TextTrackList#removetrack\n   * @listens TextTrackList#change\n   */\n  update(event) {\n    if (event && event.track && event.track.kind !== 'chapters') {\n      return;\n    }\n    const track = this.findChaptersTrack();\n    if (track !== this.track_) {\n      this.setTrack(track);\n      super.update();\n    } else if (!this.items || track && track.cues && track.cues.length !== this.items.length) {\n      // Update the menu initially or if the number of cues has changed since set\n      super.update();\n    }\n  }\n\n  /**\n   * Set the currently selected track for the chapters button.\n   *\n   * @param {TextTrack} track\n   *        The new track to select. Nothing will change if this is the currently selected\n   *        track.\n   */\n  setTrack(track) {\n    if (this.track_ === track) {\n      return;\n    }\n    if (!this.updateHandler_) {\n      this.updateHandler_ = this.update.bind(this);\n    }\n\n    // here this.track_ refers to the old track instance\n    if (this.track_) {\n      const remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\n      if (remoteTextTrackEl) {\n        remoteTextTrackEl.removeEventListener('load', this.updateHandler_);\n      }\n      this.track_.removeEventListener('cuechange', this.selectCurrentItem_);\n      this.track_ = null;\n    }\n    this.track_ = track;\n\n    // here this.track_ refers to the new track instance\n    if (this.track_) {\n      this.track_.mode = 'hidden';\n      const remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\n      if (remoteTextTrackEl) {\n        remoteTextTrackEl.addEventListener('load', this.updateHandler_);\n      }\n      this.track_.addEventListener('cuechange', this.selectCurrentItem_);\n    }\n  }\n\n  /**\n   * Find the track object that is currently in use by this ChaptersButton\n   *\n   * @return {TextTrack|undefined}\n   *         The current track or undefined if none was found.\n   */\n  findChaptersTrack() {\n    const tracks = this.player_.textTracks() || [];\n    for (let i = tracks.length - 1; i >= 0; i--) {\n      // We will always choose the last track as our chaptersTrack\n      const track = tracks[i];\n      if (track.kind === this.kind_) {\n        return track;\n      }\n    }\n  }\n\n  /**\n   * Get the caption for the ChaptersButton based on the track label. This will also\n   * use the current tracks localized kind as a fallback if a label does not exist.\n   *\n   * @return {string}\n   *         The tracks current label or the localized track kind.\n   */\n  getMenuCaption() {\n    if (this.track_ && this.track_.label) {\n      return this.track_.label;\n    }\n    return this.localize(toTitleCase$1(this.kind_));\n  }\n\n  /**\n   * Create menu from chapter track\n   *\n   * @return { import('../../menu/menu').default }\n   *         New menu for the chapter buttons\n   */\n  createMenu() {\n    this.options_.title = this.getMenuCaption();\n    return super.createMenu();\n  }\n\n  /**\n   * Create a menu item for each text track\n   *\n   * @return  { import('./text-track-menu-item').default[] }\n   *         Array of menu items\n   */\n  createItems() {\n    const items = [];\n    if (!this.track_) {\n      return items;\n    }\n    const cues = this.track_.cues;\n    if (!cues) {\n      return items;\n    }\n    for (let i = 0, l = cues.length; i < l; i++) {\n      const cue = cues[i];\n      const mi = new ChaptersTrackMenuItem(this.player_, {\n        track: this.track_,\n        cue\n      });\n      items.push(mi);\n    }\n    return items;\n  }\n}\n\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\nChaptersButton.prototype.kind_ = 'chapters';\n\n/**\n * The text that should display over the `ChaptersButton`s controls. Added for localization.\n *\n * @type {string}\n * @protected\n */\nChaptersButton.prototype.controlText_ = 'Chapters';\nComponent$1.registerComponent('ChaptersButton', ChaptersButton);\n\n/**\n * @file descriptions-button.js\n */\n\n/**\n * The button component for toggling and selecting descriptions\n *\n * @extends TextTrackButton\n */\nclass DescriptionsButton extends TextTrackButton {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Function} [ready]\n   *        The function to call when this component is ready.\n   */\n  constructor(player, options, ready) {\n    super(player, options, ready);\n    const tracks = player.textTracks();\n    const changeHandler = bind_(this, this.handleTracksChange);\n    tracks.addEventListener('change', changeHandler);\n    this.on('dispose', function () {\n      tracks.removeEventListener('change', changeHandler);\n    });\n  }\n\n  /**\n   * Handle text track change\n   *\n   * @param {Event} event\n   *        The event that caused this function to run\n   *\n   * @listens TextTrackList#change\n   */\n  handleTracksChange(event) {\n    const tracks = this.player().textTracks();\n    let disabled = false;\n\n    // Check whether a track of a different kind is showing\n    for (let i = 0, l = tracks.length; i < l; i++) {\n      const track = tracks[i];\n      if (track.kind !== this.kind_ && track.mode === 'showing') {\n        disabled = true;\n        break;\n      }\n    }\n\n    // If another track is showing, disable this menu button\n    if (disabled) {\n      this.disable();\n    } else {\n      this.enable();\n    }\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-descriptions-button ${super.buildCSSClass()}`;\n  }\n  buildWrapperCSSClass() {\n    return `vjs-descriptions-button ${super.buildWrapperCSSClass()}`;\n  }\n}\n\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\nDescriptionsButton.prototype.kind_ = 'descriptions';\n\n/**\n * The text that should display over the `DescriptionsButton`s controls. Added for localization.\n *\n * @type {string}\n * @protected\n */\nDescriptionsButton.prototype.controlText_ = 'Descriptions';\nComponent$1.registerComponent('DescriptionsButton', DescriptionsButton);\n\n/**\n * @file subtitles-button.js\n */\n\n/**\n * The button component for toggling and selecting subtitles\n *\n * @extends TextTrackButton\n */\nclass SubtitlesButton extends TextTrackButton {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Function} [ready]\n   *        The function to call when this component is ready.\n   */\n  constructor(player, options, ready) {\n    super(player, options, ready);\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-subtitles-button ${super.buildCSSClass()}`;\n  }\n  buildWrapperCSSClass() {\n    return `vjs-subtitles-button ${super.buildWrapperCSSClass()}`;\n  }\n}\n\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\nSubtitlesButton.prototype.kind_ = 'subtitles';\n\n/**\n * The text that should display over the `SubtitlesButton`s controls. Added for localization.\n *\n * @type {string}\n * @protected\n */\nSubtitlesButton.prototype.controlText_ = 'Subtitles';\nComponent$1.registerComponent('SubtitlesButton', SubtitlesButton);\n\n/**\n * @file caption-settings-menu-item.js\n */\n\n/**\n * The menu item for caption track settings menu\n *\n * @extends TextTrackMenuItem\n */\nclass CaptionSettingsMenuItem extends TextTrackMenuItem {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    options.track = {\n      player,\n      kind: options.kind,\n      label: options.kind + ' settings',\n      selectable: false,\n      default: false,\n      mode: 'disabled'\n    };\n\n    // CaptionSettingsMenuItem has no concept of 'selected'\n    options.selectable = false;\n    options.name = 'CaptionSettingsMenuItem';\n    super(player, options);\n    this.addClass('vjs-texttrack-settings');\n    this.controlText(', opens ' + options.kind + ' settings dialog');\n  }\n\n  /**\n   * This gets called when an `CaptionSettingsMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  handleClick(event) {\n    this.player().getChild('textTrackSettings').open();\n  }\n\n  /**\n   * Update control text and label on languagechange\n   */\n  handleLanguagechange() {\n    this.$('.vjs-menu-item-text').textContent = this.player_.localize(this.options_.kind + ' settings');\n    super.handleLanguagechange();\n  }\n}\nComponent$1.registerComponent('CaptionSettingsMenuItem', CaptionSettingsMenuItem);\n\n/**\n * @file captions-button.js\n */\n\n/**\n * The button component for toggling and selecting captions\n *\n * @extends TextTrackButton\n */\nclass CaptionsButton extends TextTrackButton {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Function} [ready]\n   *        The function to call when this component is ready.\n   */\n  constructor(player, options, ready) {\n    super(player, options, ready);\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-captions-button ${super.buildCSSClass()}`;\n  }\n  buildWrapperCSSClass() {\n    return `vjs-captions-button ${super.buildWrapperCSSClass()}`;\n  }\n\n  /**\n   * Create caption menu items\n   *\n   * @return {CaptionSettingsMenuItem[]}\n   *         The array of current menu items.\n   */\n  createItems() {\n    const items = [];\n    if (!(this.player().tech_ && this.player().tech_.featuresNativeTextTracks) && this.player().getChild('textTrackSettings')) {\n      items.push(new CaptionSettingsMenuItem(this.player_, {\n        kind: this.kind_\n      }));\n      this.hideThreshold_ += 1;\n    }\n    return super.createItems(items);\n  }\n}\n\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\nCaptionsButton.prototype.kind_ = 'captions';\n\n/**\n * The text that should display over the `CaptionsButton`s controls. Added for localization.\n *\n * @type {string}\n * @protected\n */\nCaptionsButton.prototype.controlText_ = 'Captions';\nComponent$1.registerComponent('CaptionsButton', CaptionsButton);\n\n/**\n * @file subs-caps-menu-item.js\n */\n\n/**\n * SubsCapsMenuItem has an [cc] icon to distinguish captions from subtitles\n * in the SubsCapsMenu.\n *\n * @extends TextTrackMenuItem\n */\nclass SubsCapsMenuItem extends TextTrackMenuItem {\n  createEl(type, props, attrs) {\n    const el = super.createEl(type, props, attrs);\n    const parentSpan = el.querySelector('.vjs-menu-item-text');\n    if (this.options_.track.kind === 'captions') {\n      parentSpan.appendChild(createEl('span', {\n        className: 'vjs-icon-placeholder'\n      }, {\n        'aria-hidden': true\n      }));\n      parentSpan.appendChild(createEl('span', {\n        className: 'vjs-control-text',\n        // space added as the text will visually flow with the\n        // label\n        textContent: ` ${this.localize('Captions')}`\n      }));\n    }\n    return el;\n  }\n}\nComponent$1.registerComponent('SubsCapsMenuItem', SubsCapsMenuItem);\n\n/**\n * @file sub-caps-button.js\n */\n\n/**\n * The button component for toggling and selecting captions and/or subtitles\n *\n * @extends TextTrackButton\n */\nclass SubsCapsButton extends TextTrackButton {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Function} [ready]\n   *        The function to call when this component is ready.\n   */\n  constructor(player, options = {}) {\n    super(player, options);\n\n    // Although North America uses \"captions\" in most cases for\n    // \"captions and subtitles\" other locales use \"subtitles\"\n    this.label_ = 'subtitles';\n    if (['en', 'en-us', 'en-ca', 'fr-ca'].indexOf(this.player_.language_) > -1) {\n      this.label_ = 'captions';\n    }\n    this.menuButton_.controlText(toTitleCase$1(this.label_));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-subs-caps-button ${super.buildCSSClass()}`;\n  }\n  buildWrapperCSSClass() {\n    return `vjs-subs-caps-button ${super.buildWrapperCSSClass()}`;\n  }\n\n  /**\n   * Create caption/subtitles menu items\n   *\n   * @return {CaptionSettingsMenuItem[]}\n   *         The array of current menu items.\n   */\n  createItems() {\n    let items = [];\n    if (!(this.player().tech_ && this.player().tech_.featuresNativeTextTracks) && this.player().getChild('textTrackSettings')) {\n      items.push(new CaptionSettingsMenuItem(this.player_, {\n        kind: this.label_\n      }));\n      this.hideThreshold_ += 1;\n    }\n    items = super.createItems(items, SubsCapsMenuItem);\n    return items;\n  }\n}\n\n/**\n * `kind`s of TextTrack to look for to associate it with this menu.\n *\n * @type {array}\n * @private\n */\nSubsCapsButton.prototype.kinds_ = ['captions', 'subtitles'];\n\n/**\n * The text that should display over the `SubsCapsButton`s controls.\n *\n *\n * @type {string}\n * @protected\n */\nSubsCapsButton.prototype.controlText_ = 'Subtitles';\nComponent$1.registerComponent('SubsCapsButton', SubsCapsButton);\n\n/**\n * @file audio-track-menu-item.js\n */\n\n/**\n * An {@link AudioTrack} {@link MenuItem}\n *\n * @extends MenuItem\n */\nclass AudioTrackMenuItem extends MenuItem {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    const track = options.track;\n    const tracks = player.audioTracks();\n\n    // Modify options for parent MenuItem class's init.\n    options.label = track.label || track.language || 'Unknown';\n    options.selected = track.enabled;\n    super(player, options);\n    this.track = track;\n    this.addClass(`vjs-${track.kind}-menu-item`);\n    const changeHandler = (...args) => {\n      this.handleTracksChange.apply(this, args);\n    };\n    tracks.addEventListener('change', changeHandler);\n    this.on('dispose', () => {\n      tracks.removeEventListener('change', changeHandler);\n    });\n  }\n  createEl(type, props, attrs) {\n    const el = super.createEl(type, props, attrs);\n    const parentSpan = el.querySelector('.vjs-menu-item-text');\n    if (this.options_.track.kind === 'main-desc') {\n      parentSpan.appendChild(createEl('span', {\n        className: 'vjs-icon-placeholder'\n      }, {\n        'aria-hidden': true\n      }));\n      parentSpan.appendChild(createEl('span', {\n        className: 'vjs-control-text',\n        textContent: ' ' + this.localize('Descriptions')\n      }));\n    }\n    return el;\n  }\n\n  /**\n   * This gets called when an `AudioTrackMenuItem is \"clicked\". See {@link ClickableComponent}\n   * for more detailed information on what a click can be.\n   *\n   * @param {Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  handleClick(event) {\n    super.handleClick(event);\n\n    // the audio track list will automatically toggle other tracks\n    // off for us.\n    this.track.enabled = true;\n\n    // when native audio tracks are used, we want to make sure that other tracks are turned off\n    if (this.player_.tech_.featuresNativeAudioTracks) {\n      const tracks = this.player_.audioTracks();\n      for (let i = 0; i < tracks.length; i++) {\n        const track = tracks[i];\n\n        // skip the current track since we enabled it above\n        if (track === this.track) {\n          continue;\n        }\n        track.enabled = track === this.track;\n      }\n    }\n  }\n\n  /**\n   * Handle any {@link AudioTrack} change.\n   *\n   * @param {Event} [event]\n   *        The {@link AudioTrackList#change} event that caused this to run.\n   *\n   * @listens AudioTrackList#change\n   */\n  handleTracksChange(event) {\n    this.selected(this.track.enabled);\n  }\n}\nComponent$1.registerComponent('AudioTrackMenuItem', AudioTrackMenuItem);\n\n/**\n * @file audio-track-button.js\n */\n\n/**\n * The base class for buttons that toggle specific {@link AudioTrack} types.\n *\n * @extends TrackButton\n */\nclass AudioTrackButton extends TrackButton {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  constructor(player, options = {}) {\n    options.tracks = player.audioTracks();\n    super(player, options);\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-audio-button ${super.buildCSSClass()}`;\n  }\n  buildWrapperCSSClass() {\n    return `vjs-audio-button ${super.buildWrapperCSSClass()}`;\n  }\n\n  /**\n   * Create a menu item for each audio track\n   *\n   * @param {AudioTrackMenuItem[]} [items=[]]\n   *        An array of existing menu items to use.\n   *\n   * @return {AudioTrackMenuItem[]}\n   *         An array of menu items\n   */\n  createItems(items = []) {\n    // if there's only one audio track, there no point in showing it\n    this.hideThreshold_ = 1;\n    const tracks = this.player_.audioTracks();\n    for (let i = 0; i < tracks.length; i++) {\n      const track = tracks[i];\n      items.push(new AudioTrackMenuItem(this.player_, {\n        track,\n        // MenuItem is selectable\n        selectable: true,\n        // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n        multiSelectable: false\n      }));\n    }\n    return items;\n  }\n}\n\n/**\n * The text that should display over the `AudioTrackButton`s controls. Added for localization.\n *\n * @type {string}\n * @protected\n */\nAudioTrackButton.prototype.controlText_ = 'Audio Track';\nComponent$1.registerComponent('AudioTrackButton', AudioTrackButton);\n\n/**\n * @file playback-rate-menu-item.js\n */\n\n/**\n * The specific menu item type for selecting a playback rate.\n *\n * @extends MenuItem\n */\nclass PlaybackRateMenuItem extends MenuItem {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    const label = options.rate;\n    const rate = parseFloat(label, 10);\n\n    // Modify options for parent MenuItem class's init.\n    options.label = label;\n    options.selected = rate === player.playbackRate();\n    options.selectable = true;\n    options.multiSelectable = false;\n    super(player, options);\n    this.label = label;\n    this.rate = rate;\n    this.on(player, 'ratechange', e => this.update(e));\n  }\n\n  /**\n   * This gets called when an `PlaybackRateMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  handleClick(event) {\n    super.handleClick();\n    this.player().playbackRate(this.rate);\n  }\n\n  /**\n   * Update the PlaybackRateMenuItem when the playbackrate changes.\n   *\n   * @param {Event} [event]\n   *        The `ratechange` event that caused this function to run.\n   *\n   * @listens Player#ratechange\n   */\n  update(event) {\n    this.selected(this.player().playbackRate() === this.rate);\n  }\n}\n\n/**\n * The text that should display over the `PlaybackRateMenuItem`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\nPlaybackRateMenuItem.prototype.contentElType = 'button';\nComponent$1.registerComponent('PlaybackRateMenuItem', PlaybackRateMenuItem);\n\n/**\n * @file playback-rate-menu-button.js\n */\n\n/**\n * The component for controlling the playback rate.\n *\n * @extends MenuButton\n */\nclass PlaybackRateMenuButton extends MenuButton {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.menuButton_.el_.setAttribute('aria-describedby', this.labelElId_);\n    this.updateVisibility();\n    this.updateLabel();\n    this.on(player, 'loadstart', e => this.updateVisibility(e));\n    this.on(player, 'ratechange', e => this.updateLabel(e));\n    this.on(player, 'playbackrateschange', e => this.handlePlaybackRateschange(e));\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    const el = super.createEl();\n    this.labelElId_ = 'vjs-playback-rate-value-label-' + this.id_;\n    this.labelEl_ = createEl('div', {\n      className: 'vjs-playback-rate-value',\n      id: this.labelElId_,\n      textContent: '1x'\n    });\n    el.appendChild(this.labelEl_);\n    return el;\n  }\n  dispose() {\n    this.labelEl_ = null;\n    super.dispose();\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-playback-rate ${super.buildCSSClass()}`;\n  }\n  buildWrapperCSSClass() {\n    return `vjs-playback-rate ${super.buildWrapperCSSClass()}`;\n  }\n\n  /**\n   * Create the list of menu items. Specific to each subclass.\n   *\n   */\n  createItems() {\n    const rates = this.playbackRates();\n    const items = [];\n    for (let i = rates.length - 1; i >= 0; i--) {\n      items.push(new PlaybackRateMenuItem(this.player(), {\n        rate: rates[i] + 'x'\n      }));\n    }\n    return items;\n  }\n\n  /**\n   * On playbackrateschange, update the menu to account for the new items.\n   *\n   * @listens Player#playbackrateschange\n   */\n  handlePlaybackRateschange(event) {\n    this.update();\n  }\n\n  /**\n   * Get possible playback rates\n   *\n   * @return {Array}\n   *         All possible playback rates\n   */\n  playbackRates() {\n    const player = this.player();\n    return player.playbackRates && player.playbackRates() || [];\n  }\n\n  /**\n   * Get whether playback rates is supported by the tech\n   * and an array of playback rates exists\n   *\n   * @return {boolean}\n   *         Whether changing playback rate is supported\n   */\n  playbackRateSupported() {\n    return this.player().tech_ && this.player().tech_.featuresPlaybackRate && this.playbackRates() && this.playbackRates().length > 0;\n  }\n\n  /**\n   * Hide playback rate controls when they're no playback rate options to select\n   *\n   * @param {Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#loadstart\n   */\n  updateVisibility(event) {\n    if (this.playbackRateSupported()) {\n      this.removeClass('vjs-hidden');\n    } else {\n      this.addClass('vjs-hidden');\n    }\n  }\n\n  /**\n   * Update button label when rate changed\n   *\n   * @param {Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#ratechange\n   */\n  updateLabel(event) {\n    if (this.playbackRateSupported()) {\n      this.labelEl_.textContent = this.player().playbackRate() + 'x';\n    }\n  }\n}\n\n/**\n * The text that should display over the `PlaybackRateMenuButton`s controls.\n *\n * Added for localization.\n *\n * @type {string}\n * @protected\n */\nPlaybackRateMenuButton.prototype.controlText_ = 'Playback Rate';\nComponent$1.registerComponent('PlaybackRateMenuButton', PlaybackRateMenuButton);\n\n/**\n * @file spacer.js\n */\n\n/**\n * Just an empty spacer element that can be used as an append point for plugins, etc.\n * Also can be used to create space between elements when necessary.\n *\n * @extends Component\n */\nclass Spacer extends Component$1 {\n  /**\n  * Builds the default DOM `className`.\n  *\n  * @return {string}\n  *         The DOM `className` for this object.\n  */\n  buildCSSClass() {\n    return `vjs-spacer ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl(tag = 'div', props = {}, attributes = {}) {\n    if (!props.className) {\n      props.className = this.buildCSSClass();\n    }\n    return super.createEl(tag, props, attributes);\n  }\n}\nComponent$1.registerComponent('Spacer', Spacer);\n\n/**\n * @file custom-control-spacer.js\n */\n\n/**\n * Spacer specifically meant to be used as an insertion point for new plugins, etc.\n *\n * @extends Spacer\n */\nclass CustomControlSpacer extends Spacer {\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-custom-control-spacer ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: this.buildCSSClass(),\n      // No-flex/table-cell mode requires there be some content\n      // in the cell to fill the remaining space of the table.\n      textContent: '\\u00a0'\n    });\n  }\n}\nComponent$1.registerComponent('CustomControlSpacer', CustomControlSpacer);\n\n/**\n * @file control-bar.js\n */\n\n/**\n * Container of main controls.\n *\n * @extends Component\n */\nclass ControlBar extends Component$1 {\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: 'vjs-control-bar',\n      dir: 'ltr'\n    });\n  }\n}\n\n/**\n * Default options for `ControlBar`\n *\n * @type {Object}\n * @private\n */\nControlBar.prototype.options_ = {\n  children: ['playToggle', 'skipBackward', 'skipForward', 'volumePanel', 'currentTimeDisplay', 'timeDivider', 'durationDisplay', 'progressControl', 'liveDisplay', 'seekToLive', 'remainingTimeDisplay', 'customControlSpacer', 'playbackRateMenuButton', 'chaptersButton', 'descriptionsButton', 'subsCapsButton', 'audioTrackButton', 'fullscreenToggle']\n};\nif ('exitPictureInPicture' in document) {\n  ControlBar.prototype.options_.children.splice(ControlBar.prototype.options_.children.length - 1, 0, 'pictureInPictureToggle');\n}\nComponent$1.registerComponent('ControlBar', ControlBar);\n\n/**\n * @file error-display.js\n */\n\n/**\n * A display that indicates an error has occurred. This means that the video\n * is unplayable.\n *\n * @extends ModalDialog\n */\nclass ErrorDisplay extends ModalDialog {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param  { import('./player').default } player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param  {Object} [options]\n   *         The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.on(player, 'error', e => this.open(e));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   *\n   * @deprecated Since version 5.\n   */\n  buildCSSClass() {\n    return `vjs-error-display ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * Gets the localized error message based on the `Player`s error.\n   *\n   * @return {string}\n   *         The `Player`s error message localized or an empty string.\n   */\n  content() {\n    const error = this.player().error();\n    return error ? this.localize(error.message) : '';\n  }\n}\n\n/**\n * The default options for an `ErrorDisplay`.\n *\n * @private\n */\nErrorDisplay.prototype.options_ = Object.assign({}, ModalDialog.prototype.options_, {\n  pauseOnOpen: false,\n  fillAlways: true,\n  temporary: false,\n  uncloseable: true\n});\nComponent$1.registerComponent('ErrorDisplay', ErrorDisplay);\n\n/**\n * @file text-track-settings.js\n */\nconst LOCAL_STORAGE_KEY$1 = 'vjs-text-track-settings';\nconst COLOR_BLACK = ['#000', 'Black'];\nconst COLOR_BLUE = ['#00F', 'Blue'];\nconst COLOR_CYAN = ['#0FF', 'Cyan'];\nconst COLOR_GREEN = ['#0F0', 'Green'];\nconst COLOR_MAGENTA = ['#F0F', 'Magenta'];\nconst COLOR_RED = ['#F00', 'Red'];\nconst COLOR_WHITE = ['#FFF', 'White'];\nconst COLOR_YELLOW = ['#FF0', 'Yellow'];\nconst OPACITY_OPAQUE = ['1', 'Opaque'];\nconst OPACITY_SEMI = ['0.5', 'Semi-Transparent'];\nconst OPACITY_TRANS = ['0', 'Transparent'];\n\n// Configuration for the various <select> elements in the DOM of this component.\n//\n// Possible keys include:\n//\n// `default`:\n//   The default option index. Only needs to be provided if not zero.\n// `parser`:\n//   A function which is used to parse the value from the selected option in\n//   a customized way.\n// `selector`:\n//   The selector used to find the associated <select> element.\nconst selectConfigs = {\n  backgroundColor: {\n    selector: '.vjs-bg-color > select',\n    id: 'captions-background-color-%s',\n    label: 'Color',\n    options: [COLOR_BLACK, COLOR_WHITE, COLOR_RED, COLOR_GREEN, COLOR_BLUE, COLOR_YELLOW, COLOR_MAGENTA, COLOR_CYAN]\n  },\n  backgroundOpacity: {\n    selector: '.vjs-bg-opacity > select',\n    id: 'captions-background-opacity-%s',\n    label: 'Opacity',\n    options: [OPACITY_OPAQUE, OPACITY_SEMI, OPACITY_TRANS]\n  },\n  color: {\n    selector: '.vjs-text-color > select',\n    id: 'captions-foreground-color-%s',\n    label: 'Color',\n    options: [COLOR_WHITE, COLOR_BLACK, COLOR_RED, COLOR_GREEN, COLOR_BLUE, COLOR_YELLOW, COLOR_MAGENTA, COLOR_CYAN]\n  },\n  edgeStyle: {\n    selector: '.vjs-edge-style > select',\n    id: '%s',\n    label: 'Text Edge Style',\n    options: [['none', 'None'], ['raised', 'Raised'], ['depressed', 'Depressed'], ['uniform', 'Uniform'], ['dropshadow', 'Dropshadow']]\n  },\n  fontFamily: {\n    selector: '.vjs-font-family > select',\n    id: 'captions-font-family-%s',\n    label: 'Font Family',\n    options: [['proportionalSansSerif', 'Proportional Sans-Serif'], ['monospaceSansSerif', 'Monospace Sans-Serif'], ['proportionalSerif', 'Proportional Serif'], ['monospaceSerif', 'Monospace Serif'], ['casual', 'Casual'], ['script', 'Script'], ['small-caps', 'Small Caps']]\n  },\n  fontPercent: {\n    selector: '.vjs-font-percent > select',\n    id: 'captions-font-size-%s',\n    label: 'Font Size',\n    options: [['0.50', '50%'], ['0.75', '75%'], ['1.00', '100%'], ['1.25', '125%'], ['1.50', '150%'], ['1.75', '175%'], ['2.00', '200%'], ['3.00', '300%'], ['4.00', '400%']],\n    default: 2,\n    parser: v => v === '1.00' ? null : Number(v)\n  },\n  textOpacity: {\n    selector: '.vjs-text-opacity > select',\n    id: 'captions-foreground-opacity-%s',\n    label: 'Opacity',\n    options: [OPACITY_OPAQUE, OPACITY_SEMI]\n  },\n  // Options for this object are defined below.\n  windowColor: {\n    selector: '.vjs-window-color > select',\n    id: 'captions-window-color-%s',\n    label: 'Color'\n  },\n  // Options for this object are defined below.\n  windowOpacity: {\n    selector: '.vjs-window-opacity > select',\n    id: 'captions-window-opacity-%s',\n    label: 'Opacity',\n    options: [OPACITY_TRANS, OPACITY_SEMI, OPACITY_OPAQUE]\n  }\n};\nselectConfigs.windowColor.options = selectConfigs.backgroundColor.options;\n\n/**\n * Get the actual value of an option.\n *\n * @param  {string} value\n *         The value to get\n *\n * @param  {Function} [parser]\n *         Optional function to adjust the value.\n *\n * @return {*}\n *         - Will be `undefined` if no value exists\n *         - Will be `undefined` if the given value is \"none\".\n *         - Will be the actual value otherwise.\n *\n * @private\n */\nfunction parseOptionValue(value, parser) {\n  if (parser) {\n    value = parser(value);\n  }\n  if (value && value !== 'none') {\n    return value;\n  }\n}\n\n/**\n * Gets the value of the selected <option> element within a <select> element.\n *\n * @param  {Element} el\n *         the element to look in\n *\n * @param  {Function} [parser]\n *         Optional function to adjust the value.\n *\n * @return {*}\n *         - Will be `undefined` if no value exists\n *         - Will be `undefined` if the given value is \"none\".\n *         - Will be the actual value otherwise.\n *\n * @private\n */\nfunction getSelectedOptionValue(el, parser) {\n  const value = el.options[el.options.selectedIndex].value;\n  return parseOptionValue(value, parser);\n}\n\n/**\n * Sets the selected <option> element within a <select> element based on a\n * given value.\n *\n * @param {Element} el\n *        The element to look in.\n *\n * @param {string} value\n *        the property to look on.\n *\n * @param {Function} [parser]\n *        Optional function to adjust the value before comparing.\n *\n * @private\n */\nfunction setSelectedOption(el, value, parser) {\n  if (!value) {\n    return;\n  }\n  for (let i = 0; i < el.options.length; i++) {\n    if (parseOptionValue(el.options[i].value, parser) === value) {\n      el.selectedIndex = i;\n      break;\n    }\n  }\n}\n\n/**\n * Manipulate Text Tracks settings.\n *\n * @extends ModalDialog\n */\nclass TextTrackSettings extends ModalDialog {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../player').default } player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *         The key/value store of player options.\n   */\n  constructor(player, options) {\n    options.temporary = false;\n    super(player, options);\n    this.updateDisplay = this.updateDisplay.bind(this);\n\n    // fill the modal and pretend we have opened it\n    this.fill();\n    this.hasBeenOpened_ = this.hasBeenFilled_ = true;\n    this.endDialog = createEl('p', {\n      className: 'vjs-control-text',\n      textContent: this.localize('End of dialog window.')\n    });\n    this.el().appendChild(this.endDialog);\n    this.setDefaults();\n\n    // Grab `persistTextTrackSettings` from the player options if not passed in child options\n    if (options.persistTextTrackSettings === undefined) {\n      this.options_.persistTextTrackSettings = this.options_.playerOptions.persistTextTrackSettings;\n    }\n    this.on(this.$('.vjs-done-button'), 'click', () => {\n      this.saveSettings();\n      this.close();\n    });\n    this.on(this.$('.vjs-default-button'), 'click', () => {\n      this.setDefaults();\n      this.updateDisplay();\n    });\n    each(selectConfigs, config => {\n      this.on(this.$(config.selector), 'change', this.updateDisplay);\n    });\n    if (this.options_.persistTextTrackSettings) {\n      this.restoreSettings();\n    }\n  }\n  dispose() {\n    this.endDialog = null;\n    super.dispose();\n  }\n\n  /**\n   * Create a <select> element with configured options.\n   *\n   * @param {string} key\n   *        Configuration key to use during creation.\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n  createElSelect_(key, legendId = '', type = 'label') {\n    const config = selectConfigs[key];\n    const id = config.id.replace('%s', this.id_);\n    const selectLabelledbyIds = [legendId, id].join(' ').trim();\n    return [`<${type} id=\"${id}\" class=\"${type === 'label' ? 'vjs-label' : ''}\">`, this.localize(config.label), `</${type}>`, `<select aria-labelledby=\"${selectLabelledbyIds}\">`].concat(config.options.map(o => {\n      const optionId = id + '-' + o[1].replace(/\\W+/g, '');\n      return [`<option id=\"${optionId}\" value=\"${o[0]}\" `, `aria-labelledby=\"${selectLabelledbyIds} ${optionId}\">`, this.localize(o[1]), '</option>'].join('');\n    })).concat('</select>').join('');\n  }\n\n  /**\n   * Create foreground color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n  createElFgColor_() {\n    const legendId = `captions-text-legend-${this.id_}`;\n    return ['<fieldset class=\"vjs-fg vjs-track-setting\">', `<legend id=\"${legendId}\">`, this.localize('Text'), '</legend>', '<span class=\"vjs-text-color\">', this.createElSelect_('color', legendId), '</span>', '<span class=\"vjs-text-opacity vjs-opacity\">', this.createElSelect_('textOpacity', legendId), '</span>', '</fieldset>'].join('');\n  }\n\n  /**\n   * Create background color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n  createElBgColor_() {\n    const legendId = `captions-background-${this.id_}`;\n    return ['<fieldset class=\"vjs-bg vjs-track-setting\">', `<legend id=\"${legendId}\">`, this.localize('Text Background'), '</legend>', '<span class=\"vjs-bg-color\">', this.createElSelect_('backgroundColor', legendId), '</span>', '<span class=\"vjs-bg-opacity vjs-opacity\">', this.createElSelect_('backgroundOpacity', legendId), '</span>', '</fieldset>'].join('');\n  }\n\n  /**\n   * Create window color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n  createElWinColor_() {\n    const legendId = `captions-window-${this.id_}`;\n    return ['<fieldset class=\"vjs-window vjs-track-setting\">', `<legend id=\"${legendId}\">`, this.localize('Caption Area Background'), '</legend>', '<span class=\"vjs-window-color\">', this.createElSelect_('windowColor', legendId), '</span>', '<span class=\"vjs-window-opacity vjs-opacity\">', this.createElSelect_('windowOpacity', legendId), '</span>', '</fieldset>'].join('');\n  }\n\n  /**\n   * Create color elements for the component\n   *\n   * @return {Element}\n   *         The element that was created\n   *\n   * @private\n   */\n  createElColors_() {\n    return createEl('div', {\n      className: 'vjs-track-settings-colors',\n      innerHTML: [this.createElFgColor_(), this.createElBgColor_(), this.createElWinColor_()].join('')\n    });\n  }\n\n  /**\n   * Create font elements for the component\n   *\n   * @return {Element}\n   *         The element that was created.\n   *\n   * @private\n   */\n  createElFont_() {\n    return createEl('div', {\n      className: 'vjs-track-settings-font',\n      innerHTML: ['<fieldset class=\"vjs-font-percent vjs-track-setting\">', this.createElSelect_('fontPercent', '', 'legend'), '</fieldset>', '<fieldset class=\"vjs-edge-style vjs-track-setting\">', this.createElSelect_('edgeStyle', '', 'legend'), '</fieldset>', '<fieldset class=\"vjs-font-family vjs-track-setting\">', this.createElSelect_('fontFamily', '', 'legend'), '</fieldset>'].join('')\n    });\n  }\n\n  /**\n   * Create controls for the component\n   *\n   * @return {Element}\n   *         The element that was created.\n   *\n   * @private\n   */\n  createElControls_() {\n    const defaultsDescription = this.localize('restore all settings to the default values');\n    return createEl('div', {\n      className: 'vjs-track-settings-controls',\n      innerHTML: [`<button type=\"button\" class=\"vjs-default-button\" title=\"${defaultsDescription}\">`, this.localize('Reset'), `<span class=\"vjs-control-text\"> ${defaultsDescription}</span>`, '</button>', `<button type=\"button\" class=\"vjs-done-button\">${this.localize('Done')}</button>`].join('')\n    });\n  }\n  content() {\n    return [this.createElColors_(), this.createElFont_(), this.createElControls_()];\n  }\n  label() {\n    return this.localize('Caption Settings Dialog');\n  }\n  description() {\n    return this.localize('Beginning of dialog window. Escape will cancel and close the window.');\n  }\n  buildCSSClass() {\n    return super.buildCSSClass() + ' vjs-text-track-settings';\n  }\n\n  /**\n   * Gets an object of text track settings (or null).\n   *\n   * @return {Object}\n   *         An object with config values parsed from the DOM or localStorage.\n   */\n  getValues() {\n    return reduce(selectConfigs, (accum, config, key) => {\n      const value = getSelectedOptionValue(this.$(config.selector), config.parser);\n      if (value !== undefined) {\n        accum[key] = value;\n      }\n      return accum;\n    }, {});\n  }\n\n  /**\n   * Sets text track settings from an object of values.\n   *\n   * @param {Object} values\n   *        An object with config values parsed from the DOM or localStorage.\n   */\n  setValues(values) {\n    each(selectConfigs, (config, key) => {\n      setSelectedOption(this.$(config.selector), values[key], config.parser);\n    });\n  }\n\n  /**\n   * Sets all `<select>` elements to their default values.\n   */\n  setDefaults() {\n    each(selectConfigs, config => {\n      const index = config.hasOwnProperty('default') ? config.default : 0;\n      this.$(config.selector).selectedIndex = index;\n    });\n  }\n\n  /**\n   * Restore texttrack settings from localStorage\n   */\n  restoreSettings() {\n    let values;\n    try {\n      values = JSON.parse(window$1.localStorage.getItem(LOCAL_STORAGE_KEY$1));\n    } catch (err) {\n      log$1.warn(err);\n    }\n    if (values) {\n      this.setValues(values);\n    }\n  }\n\n  /**\n   * Save text track settings to localStorage\n   */\n  saveSettings() {\n    if (!this.options_.persistTextTrackSettings) {\n      return;\n    }\n    const values = this.getValues();\n    try {\n      if (Object.keys(values).length) {\n        window$1.localStorage.setItem(LOCAL_STORAGE_KEY$1, JSON.stringify(values));\n      } else {\n        window$1.localStorage.removeItem(LOCAL_STORAGE_KEY$1);\n      }\n    } catch (err) {\n      log$1.warn(err);\n    }\n  }\n\n  /**\n   * Update display of text track settings\n   */\n  updateDisplay() {\n    const ttDisplay = this.player_.getChild('textTrackDisplay');\n    if (ttDisplay) {\n      ttDisplay.updateDisplay();\n    }\n  }\n\n  /**\n   * conditionally blur the element and refocus the captions button\n   *\n   * @private\n   */\n  conditionalBlur_() {\n    this.previouslyActiveEl_ = null;\n    const cb = this.player_.controlBar;\n    const subsCapsBtn = cb && cb.subsCapsButton;\n    const ccBtn = cb && cb.captionsButton;\n    if (subsCapsBtn) {\n      subsCapsBtn.focus();\n    } else if (ccBtn) {\n      ccBtn.focus();\n    }\n  }\n\n  /**\n   * Repopulate dialog with new localizations on languagechange\n   */\n  handleLanguagechange() {\n    this.fill();\n  }\n}\nComponent$1.registerComponent('TextTrackSettings', TextTrackSettings);\n\n/**\n * @file resize-manager.js\n */\n\n/**\n * A Resize Manager. It is in charge of triggering `playerresize` on the player in the right conditions.\n *\n * It'll either create an iframe and use a debounced resize handler on it or use the new {@link https://wicg.github.io/ResizeObserver/|ResizeObserver}.\n *\n * If the ResizeObserver is available natively, it will be used. A polyfill can be passed in as an option.\n * If a `playerresize` event is not needed, the ResizeManager component can be removed from the player, see the example below.\n *\n * @example <caption>How to disable the resize manager</caption>\n * const player = videojs('#vid', {\n *   resizeManager: false\n * });\n *\n * @see {@link https://wicg.github.io/ResizeObserver/|ResizeObserver specification}\n *\n * @extends Component\n */\nclass ResizeManager extends Component$1 {\n  /**\n   * Create the ResizeManager.\n   *\n   * @param {Object} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of ResizeManager options.\n   *\n   * @param {Object} [options.ResizeObserver]\n   *        A polyfill for ResizeObserver can be passed in here.\n   *        If this is set to null it will ignore the native ResizeObserver and fall back to the iframe fallback.\n   */\n  constructor(player, options) {\n    let RESIZE_OBSERVER_AVAILABLE = options.ResizeObserver || window$1.ResizeObserver;\n\n    // if `null` was passed, we want to disable the ResizeObserver\n    if (options.ResizeObserver === null) {\n      RESIZE_OBSERVER_AVAILABLE = false;\n    }\n\n    // Only create an element when ResizeObserver isn't available\n    const options_ = merge$1({\n      createEl: !RESIZE_OBSERVER_AVAILABLE,\n      reportTouchActivity: false\n    }, options);\n    super(player, options_);\n    this.ResizeObserver = options.ResizeObserver || window$1.ResizeObserver;\n    this.loadListener_ = null;\n    this.resizeObserver_ = null;\n    this.debouncedHandler_ = debounce(() => {\n      this.resizeHandler();\n    }, 100, false, this);\n    if (RESIZE_OBSERVER_AVAILABLE) {\n      this.resizeObserver_ = new this.ResizeObserver(this.debouncedHandler_);\n      this.resizeObserver_.observe(player.el());\n    } else {\n      this.loadListener_ = () => {\n        if (!this.el_ || !this.el_.contentWindow) {\n          return;\n        }\n        const debouncedHandler_ = this.debouncedHandler_;\n        let unloadListener_ = this.unloadListener_ = function () {\n          off(this, 'resize', debouncedHandler_);\n          off(this, 'unload', unloadListener_);\n          unloadListener_ = null;\n        };\n\n        // safari and edge can unload the iframe before resizemanager dispose\n        // we have to dispose of event handlers correctly before that happens\n        on(this.el_.contentWindow, 'unload', unloadListener_);\n        on(this.el_.contentWindow, 'resize', debouncedHandler_);\n      };\n      this.one('load', this.loadListener_);\n    }\n  }\n  createEl() {\n    return super.createEl('iframe', {\n      className: 'vjs-resize-manager',\n      tabIndex: -1,\n      title: this.localize('No content')\n    }, {\n      'aria-hidden': 'true'\n    });\n  }\n\n  /**\n   * Called when a resize is triggered on the iframe or a resize is observed via the ResizeObserver\n   *\n   * @fires Player#playerresize\n   */\n  resizeHandler() {\n    /**\n     * Called when the player size has changed\n     *\n     * @event Player#playerresize\n     * @type {Event}\n     */\n    // make sure player is still around to trigger\n    // prevents this from causing an error after dispose\n    if (!this.player_ || !this.player_.trigger) {\n      return;\n    }\n    this.player_.trigger('playerresize');\n  }\n  dispose() {\n    if (this.debouncedHandler_) {\n      this.debouncedHandler_.cancel();\n    }\n    if (this.resizeObserver_) {\n      if (this.player_.el()) {\n        this.resizeObserver_.unobserve(this.player_.el());\n      }\n      this.resizeObserver_.disconnect();\n    }\n    if (this.loadListener_) {\n      this.off('load', this.loadListener_);\n    }\n    if (this.el_ && this.el_.contentWindow && this.unloadListener_) {\n      this.unloadListener_.call(this.el_.contentWindow);\n    }\n    this.ResizeObserver = null;\n    this.resizeObserver = null;\n    this.debouncedHandler_ = null;\n    this.loadListener_ = null;\n    super.dispose();\n  }\n}\nComponent$1.registerComponent('ResizeManager', ResizeManager);\n\nconst defaults = {\n  trackingThreshold: 20,\n  liveTolerance: 15\n};\n\n/*\n  track when we are at the live edge, and other helpers for live playback */\n\n/**\n * A class for checking live current time and determining when the player\n * is at or behind the live edge.\n */\nclass LiveTracker extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('./player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {number} [options.trackingThreshold=20]\n   *        Number of seconds of live window (seekableEnd - seekableStart) that\n   *        media needs to have before the liveui will be shown.\n   *\n   * @param {number} [options.liveTolerance=15]\n   *        Number of seconds behind live that we have to be\n   *        before we will be considered non-live. Note that this will only\n   *        be used when playing at the live edge. This allows large seekable end\n   *        changes to not effect whether we are live or not.\n   */\n  constructor(player, options) {\n    // LiveTracker does not need an element\n    const options_ = merge$1(defaults, options, {\n      createEl: false\n    });\n    super(player, options_);\n    this.trackLiveHandler_ = () => this.trackLive_();\n    this.handlePlay_ = e => this.handlePlay(e);\n    this.handleFirstTimeupdate_ = e => this.handleFirstTimeupdate(e);\n    this.handleSeeked_ = e => this.handleSeeked(e);\n    this.seekToLiveEdge_ = e => this.seekToLiveEdge(e);\n    this.reset_();\n    this.on(this.player_, 'durationchange', e => this.handleDurationchange(e));\n    // we should try to toggle tracking on canplay as native playback engines, like Safari\n    // may not have the proper values for things like seekableEnd until then\n    this.on(this.player_, 'canplay', () => this.toggleTracking());\n  }\n\n  /**\n   * all the functionality for tracking when seek end changes\n   * and for tracking how far past seek end we should be\n   */\n  trackLive_() {\n    const seekable = this.player_.seekable();\n\n    // skip undefined seekable\n    if (!seekable || !seekable.length) {\n      return;\n    }\n    const newTime = Number(window$1.performance.now().toFixed(4));\n    const deltaTime = this.lastTime_ === -1 ? 0 : (newTime - this.lastTime_) / 1000;\n    this.lastTime_ = newTime;\n    this.pastSeekEnd_ = this.pastSeekEnd() + deltaTime;\n    const liveCurrentTime = this.liveCurrentTime();\n    const currentTime = this.player_.currentTime();\n\n    // we are behind live if any are true\n    // 1. the player is paused\n    // 2. the user seeked to a location 2 seconds away from live\n    // 3. the difference between live and current time is greater\n    //    liveTolerance which defaults to 15s\n    let isBehind = this.player_.paused() || this.seekedBehindLive_ || Math.abs(liveCurrentTime - currentTime) > this.options_.liveTolerance;\n\n    // we cannot be behind if\n    // 1. until we have not seen a timeupdate yet\n    // 2. liveCurrentTime is Infinity, which happens on Android and Native Safari\n    if (!this.timeupdateSeen_ || liveCurrentTime === Infinity) {\n      isBehind = false;\n    }\n    if (isBehind !== this.behindLiveEdge_) {\n      this.behindLiveEdge_ = isBehind;\n      this.trigger('liveedgechange');\n    }\n  }\n\n  /**\n   * handle a durationchange event on the player\n   * and start/stop tracking accordingly.\n   */\n  handleDurationchange() {\n    this.toggleTracking();\n  }\n\n  /**\n   * start/stop tracking\n   */\n  toggleTracking() {\n    if (this.player_.duration() === Infinity && this.liveWindow() >= this.options_.trackingThreshold) {\n      if (this.player_.options_.liveui) {\n        this.player_.addClass('vjs-liveui');\n      }\n      this.startTracking();\n    } else {\n      this.player_.removeClass('vjs-liveui');\n      this.stopTracking();\n    }\n  }\n\n  /**\n   * start tracking live playback\n   */\n  startTracking() {\n    if (this.isTracking()) {\n      return;\n    }\n\n    // If we haven't seen a timeupdate, we need to check whether playback\n    // began before this component started tracking. This can happen commonly\n    // when using autoplay.\n    if (!this.timeupdateSeen_) {\n      this.timeupdateSeen_ = this.player_.hasStarted();\n    }\n    this.trackingInterval_ = this.setInterval(this.trackLiveHandler_, UPDATE_REFRESH_INTERVAL);\n    this.trackLive_();\n    this.on(this.player_, ['play', 'pause'], this.trackLiveHandler_);\n    if (!this.timeupdateSeen_) {\n      this.one(this.player_, 'play', this.handlePlay_);\n      this.one(this.player_, 'timeupdate', this.handleFirstTimeupdate_);\n    } else {\n      this.on(this.player_, 'seeked', this.handleSeeked_);\n    }\n  }\n\n  /**\n   * handle the first timeupdate on the player if it wasn't already playing\n   * when live tracker started tracking.\n   */\n  handleFirstTimeupdate() {\n    this.timeupdateSeen_ = true;\n    this.on(this.player_, 'seeked', this.handleSeeked_);\n  }\n\n  /**\n   * Keep track of what time a seek starts, and listen for seeked\n   * to find where a seek ends.\n   */\n  handleSeeked() {\n    const timeDiff = Math.abs(this.liveCurrentTime() - this.player_.currentTime());\n    this.seekedBehindLive_ = this.nextSeekedFromUser_ && timeDiff > 2;\n    this.nextSeekedFromUser_ = false;\n    this.trackLive_();\n  }\n\n  /**\n   * handle the first play on the player, and make sure that we seek\n   * right to the live edge.\n   */\n  handlePlay() {\n    this.one(this.player_, 'timeupdate', this.seekToLiveEdge_);\n  }\n\n  /**\n   * Stop tracking, and set all internal variables to\n   * their initial value.\n   */\n  reset_() {\n    this.lastTime_ = -1;\n    this.pastSeekEnd_ = 0;\n    this.lastSeekEnd_ = -1;\n    this.behindLiveEdge_ = true;\n    this.timeupdateSeen_ = false;\n    this.seekedBehindLive_ = false;\n    this.nextSeekedFromUser_ = false;\n    this.clearInterval(this.trackingInterval_);\n    this.trackingInterval_ = null;\n    this.off(this.player_, ['play', 'pause'], this.trackLiveHandler_);\n    this.off(this.player_, 'seeked', this.handleSeeked_);\n    this.off(this.player_, 'play', this.handlePlay_);\n    this.off(this.player_, 'timeupdate', this.handleFirstTimeupdate_);\n    this.off(this.player_, 'timeupdate', this.seekToLiveEdge_);\n  }\n\n  /**\n   * The next seeked event is from the user. Meaning that any seek\n   * > 2s behind live will be considered behind live for real and\n   * liveTolerance will be ignored.\n   */\n  nextSeekedFromUser() {\n    this.nextSeekedFromUser_ = true;\n  }\n\n  /**\n   * stop tracking live playback\n   */\n  stopTracking() {\n    if (!this.isTracking()) {\n      return;\n    }\n    this.reset_();\n    this.trigger('liveedgechange');\n  }\n\n  /**\n   * A helper to get the player seekable end\n   * so that we don't have to null check everywhere\n   *\n   * @return {number}\n   *         The furthest seekable end or Infinity.\n   */\n  seekableEnd() {\n    const seekable = this.player_.seekable();\n    const seekableEnds = [];\n    let i = seekable ? seekable.length : 0;\n    while (i--) {\n      seekableEnds.push(seekable.end(i));\n    }\n\n    // grab the furthest seekable end after sorting, or if there are none\n    // default to Infinity\n    return seekableEnds.length ? seekableEnds.sort()[seekableEnds.length - 1] : Infinity;\n  }\n\n  /**\n   * A helper to get the player seekable start\n   * so that we don't have to null check everywhere\n   *\n   * @return {number}\n   *         The earliest seekable start or 0.\n   */\n  seekableStart() {\n    const seekable = this.player_.seekable();\n    const seekableStarts = [];\n    let i = seekable ? seekable.length : 0;\n    while (i--) {\n      seekableStarts.push(seekable.start(i));\n    }\n\n    // grab the first seekable start after sorting, or if there are none\n    // default to 0\n    return seekableStarts.length ? seekableStarts.sort()[0] : 0;\n  }\n\n  /**\n   * Get the live time window aka\n   * the amount of time between seekable start and\n   * live current time.\n   *\n   * @return {number}\n   *         The amount of seconds that are seekable in\n   *         the live video.\n   */\n  liveWindow() {\n    const liveCurrentTime = this.liveCurrentTime();\n\n    // if liveCurrenTime is Infinity then we don't have a liveWindow at all\n    if (liveCurrentTime === Infinity) {\n      return 0;\n    }\n    return liveCurrentTime - this.seekableStart();\n  }\n\n  /**\n   * Determines if the player is live, only checks if this component\n   * is tracking live playback or not\n   *\n   * @return {boolean}\n   *         Whether liveTracker is tracking\n   */\n  isLive() {\n    return this.isTracking();\n  }\n\n  /**\n   * Determines if currentTime is at the live edge and won't fall behind\n   * on each seekableendchange\n   *\n   * @return {boolean}\n   *         Whether playback is at the live edge\n   */\n  atLiveEdge() {\n    return !this.behindLiveEdge();\n  }\n\n  /**\n   * get what we expect the live current time to be\n   *\n   * @return {number}\n   *         The expected live current time\n   */\n  liveCurrentTime() {\n    return this.pastSeekEnd() + this.seekableEnd();\n  }\n\n  /**\n   * The number of seconds that have occurred after seekable end\n   * changed. This will be reset to 0 once seekable end changes.\n   *\n   * @return {number}\n   *         Seconds past the current seekable end\n   */\n  pastSeekEnd() {\n    const seekableEnd = this.seekableEnd();\n    if (this.lastSeekEnd_ !== -1 && seekableEnd !== this.lastSeekEnd_) {\n      this.pastSeekEnd_ = 0;\n    }\n    this.lastSeekEnd_ = seekableEnd;\n    return this.pastSeekEnd_;\n  }\n\n  /**\n   * If we are currently behind the live edge, aka currentTime will be\n   * behind on a seekableendchange\n   *\n   * @return {boolean}\n   *         If we are behind the live edge\n   */\n  behindLiveEdge() {\n    return this.behindLiveEdge_;\n  }\n\n  /**\n   * Whether live tracker is currently tracking or not.\n   */\n  isTracking() {\n    return typeof this.trackingInterval_ === 'number';\n  }\n\n  /**\n   * Seek to the live edge if we are behind the live edge\n   */\n  seekToLiveEdge() {\n    this.seekedBehindLive_ = false;\n    if (this.atLiveEdge()) {\n      return;\n    }\n    this.nextSeekedFromUser_ = false;\n    this.player_.currentTime(this.liveCurrentTime());\n  }\n\n  /**\n   * Dispose of liveTracker\n   */\n  dispose() {\n    this.stopTracking();\n    super.dispose();\n  }\n}\nComponent$1.registerComponent('LiveTracker', LiveTracker);\n\n/**\n * Displays an element over the player which contains an optional title and\n * description for the current content.\n *\n * Much of the code for this component originated in the now obsolete\n * videojs-dock plugin: https://github.com/brightcove/videojs-dock/\n *\n * @extends Component\n */\nclass TitleBar extends Component$1 {\n  constructor(player, options) {\n    super(player, options);\n    this.on('statechanged', e => this.updateDom_());\n    this.updateDom_();\n  }\n\n  /**\n   * Create the `TitleBar`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    this.els = {\n      title: createEl('div', {\n        className: 'vjs-title-bar-title',\n        id: `vjs-title-bar-title-${newGUID()}`\n      }),\n      description: createEl('div', {\n        className: 'vjs-title-bar-description',\n        id: `vjs-title-bar-description-${newGUID()}`\n      })\n    };\n    return createEl('div', {\n      className: 'vjs-title-bar'\n    }, {}, Object.values(this.els));\n  }\n\n  /**\n   * Updates the DOM based on the component's state object.\n   */\n  updateDom_() {\n    const tech = this.player_.tech_;\n    const techEl = tech && tech.el_;\n    const techAriaAttrs = {\n      title: 'aria-labelledby',\n      description: 'aria-describedby'\n    };\n    ['title', 'description'].forEach(k => {\n      const value = this.state[k];\n      const el = this.els[k];\n      const techAriaAttr = techAriaAttrs[k];\n      emptyEl(el);\n      if (value) {\n        textContent(el, value);\n      }\n\n      // If there is a tech element available, update its ARIA attributes\n      // according to whether a title and/or description have been provided.\n      if (techEl) {\n        techEl.removeAttribute(techAriaAttr);\n        if (value) {\n          techEl.setAttribute(techAriaAttr, el.id);\n        }\n      }\n    });\n    if (this.state.title || this.state.description) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  }\n\n  /**\n   * Update the contents of the title bar component with new title and\n   * description text.\n   *\n   * If both title and description are missing, the title bar will be hidden.\n   *\n   * If either title or description are present, the title bar will be visible.\n   *\n   * NOTE: Any previously set value will be preserved. To unset a previously\n   * set value, you must pass an empty string or null.\n   *\n   * For example:\n   *\n   * ```\n   * update({title: 'foo', description: 'bar'}) // title: 'foo', description: 'bar'\n   * update({description: 'bar2'}) // title: 'foo', description: 'bar2'\n   * update({title: ''}) // title: '', description: 'bar2'\n   * update({title: 'foo', description: null}) // title: 'foo', description: null\n   * ```\n   *\n   * @param  {Object} [options={}]\n   *         An options object. When empty, the title bar will be hidden.\n   *\n   * @param  {string} [options.title]\n   *         A title to display in the title bar.\n   *\n   * @param  {string} [options.description]\n   *         A description to display in the title bar.\n   */\n  update(options) {\n    this.setState(options);\n  }\n\n  /**\n   * Dispose the component.\n   */\n  dispose() {\n    const tech = this.player_.tech_;\n    const techEl = tech && tech.el_;\n    if (techEl) {\n      techEl.removeAttribute('aria-labelledby');\n      techEl.removeAttribute('aria-describedby');\n    }\n    super.dispose();\n    this.els = null;\n  }\n}\nComponent$1.registerComponent('TitleBar', TitleBar);\n\n/**\n * This function is used to fire a sourceset when there is something\n * similar to `mediaEl.load()` being called. It will try to find the source via\n * the `src` attribute and then the `<source>` elements. It will then fire `sourceset`\n * with the source that was found or empty string if we cannot know. If it cannot\n * find a source then `sourceset` will not be fired.\n *\n * @param { import('./html5').default } tech\n *        The tech object that sourceset was setup on\n *\n * @return {boolean}\n *         returns false if the sourceset was not fired and true otherwise.\n */\nconst sourcesetLoad = tech => {\n  const el = tech.el();\n\n  // if `el.src` is set, that source will be loaded.\n  if (el.hasAttribute('src')) {\n    tech.triggerSourceset(el.src);\n    return true;\n  }\n\n  /**\n   * Since there isn't a src property on the media element, source elements will be used for\n   * implementing the source selection algorithm. This happens asynchronously and\n   * for most cases were there is more than one source we cannot tell what source will\n   * be loaded, without re-implementing the source selection algorithm. At this time we are not\n   * going to do that. There are three special cases that we do handle here though:\n   *\n   * 1. If there are no sources, do not fire `sourceset`.\n   * 2. If there is only one `<source>` with a `src` property/attribute that is our `src`\n   * 3. If there is more than one `<source>` but all of them have the same `src` url.\n   *    That will be our src.\n   */\n  const sources = tech.$$('source');\n  const srcUrls = [];\n  let src = '';\n\n  // if there are no sources, do not fire sourceset\n  if (!sources.length) {\n    return false;\n  }\n\n  // only count valid/non-duplicate source elements\n  for (let i = 0; i < sources.length; i++) {\n    const url = sources[i].src;\n    if (url && srcUrls.indexOf(url) === -1) {\n      srcUrls.push(url);\n    }\n  }\n\n  // there were no valid sources\n  if (!srcUrls.length) {\n    return false;\n  }\n\n  // there is only one valid source element url\n  // use that\n  if (srcUrls.length === 1) {\n    src = srcUrls[0];\n  }\n  tech.triggerSourceset(src);\n  return true;\n};\n\n/**\n * our implementation of an `innerHTML` descriptor for browsers\n * that do not have one.\n */\nconst innerHTMLDescriptorPolyfill = Object.defineProperty({}, 'innerHTML', {\n  get() {\n    return this.cloneNode(true).innerHTML;\n  },\n  set(v) {\n    // make a dummy node to use innerHTML on\n    const dummy = document.createElement(this.nodeName.toLowerCase());\n\n    // set innerHTML to the value provided\n    dummy.innerHTML = v;\n\n    // make a document fragment to hold the nodes from dummy\n    const docFrag = document.createDocumentFragment();\n\n    // copy all of the nodes created by the innerHTML on dummy\n    // to the document fragment\n    while (dummy.childNodes.length) {\n      docFrag.appendChild(dummy.childNodes[0]);\n    }\n\n    // remove content\n    this.innerText = '';\n\n    // now we add all of that html in one by appending the\n    // document fragment. This is how innerHTML does it.\n    window$1.Element.prototype.appendChild.call(this, docFrag);\n\n    // then return the result that innerHTML's setter would\n    return this.innerHTML;\n  }\n});\n\n/**\n * Get a property descriptor given a list of priorities and the\n * property to get.\n */\nconst getDescriptor = (priority, prop) => {\n  let descriptor = {};\n  for (let i = 0; i < priority.length; i++) {\n    descriptor = Object.getOwnPropertyDescriptor(priority[i], prop);\n    if (descriptor && descriptor.set && descriptor.get) {\n      break;\n    }\n  }\n  descriptor.enumerable = true;\n  descriptor.configurable = true;\n  return descriptor;\n};\nconst getInnerHTMLDescriptor = tech => getDescriptor([tech.el(), window$1.HTMLMediaElement.prototype, window$1.Element.prototype, innerHTMLDescriptorPolyfill], 'innerHTML');\n\n/**\n * Patches browser internal functions so that we can tell synchronously\n * if a `<source>` was appended to the media element. For some reason this\n * causes a `sourceset` if the the media element is ready and has no source.\n * This happens when:\n * - The page has just loaded and the media element does not have a source.\n * - The media element was emptied of all sources, then `load()` was called.\n *\n * It does this by patching the following functions/properties when they are supported:\n *\n * - `append()` - can be used to add a `<source>` element to the media element\n * - `appendChild()` - can be used to add a `<source>` element to the media element\n * - `insertAdjacentHTML()` -  can be used to add a `<source>` element to the media element\n * - `innerHTML` -  can be used to add a `<source>` element to the media element\n *\n * @param {Html5} tech\n *        The tech object that sourceset is being setup on.\n */\nconst firstSourceWatch = function (tech) {\n  const el = tech.el();\n\n  // make sure firstSourceWatch isn't setup twice.\n  if (el.resetSourceWatch_) {\n    return;\n  }\n  const old = {};\n  const innerDescriptor = getInnerHTMLDescriptor(tech);\n  const appendWrapper = appendFn => (...args) => {\n    const retval = appendFn.apply(el, args);\n    sourcesetLoad(tech);\n    return retval;\n  };\n  ['append', 'appendChild', 'insertAdjacentHTML'].forEach(k => {\n    if (!el[k]) {\n      return;\n    }\n\n    // store the old function\n    old[k] = el[k];\n\n    // call the old function with a sourceset if a source\n    // was loaded\n    el[k] = appendWrapper(old[k]);\n  });\n  Object.defineProperty(el, 'innerHTML', merge$1(innerDescriptor, {\n    set: appendWrapper(innerDescriptor.set)\n  }));\n  el.resetSourceWatch_ = () => {\n    el.resetSourceWatch_ = null;\n    Object.keys(old).forEach(k => {\n      el[k] = old[k];\n    });\n    Object.defineProperty(el, 'innerHTML', innerDescriptor);\n  };\n\n  // on the first sourceset, we need to revert our changes\n  tech.one('sourceset', el.resetSourceWatch_);\n};\n\n/**\n * our implementation of a `src` descriptor for browsers\n * that do not have one\n */\nconst srcDescriptorPolyfill = Object.defineProperty({}, 'src', {\n  get() {\n    if (this.hasAttribute('src')) {\n      return getAbsoluteURL(window$1.Element.prototype.getAttribute.call(this, 'src'));\n    }\n    return '';\n  },\n  set(v) {\n    window$1.Element.prototype.setAttribute.call(this, 'src', v);\n    return v;\n  }\n});\nconst getSrcDescriptor = tech => getDescriptor([tech.el(), window$1.HTMLMediaElement.prototype, srcDescriptorPolyfill], 'src');\n\n/**\n * setup `sourceset` handling on the `Html5` tech. This function\n * patches the following element properties/functions:\n *\n * - `src` - to determine when `src` is set\n * - `setAttribute()` - to determine when `src` is set\n * - `load()` - this re-triggers the source selection algorithm, and can\n *              cause a sourceset.\n *\n * If there is no source when we are adding `sourceset` support or during a `load()`\n * we also patch the functions listed in `firstSourceWatch`.\n *\n * @param {Html5} tech\n *        The tech to patch\n */\nconst setupSourceset = function (tech) {\n  if (!tech.featuresSourceset) {\n    return;\n  }\n  const el = tech.el();\n\n  // make sure sourceset isn't setup twice.\n  if (el.resetSourceset_) {\n    return;\n  }\n  const srcDescriptor = getSrcDescriptor(tech);\n  const oldSetAttribute = el.setAttribute;\n  const oldLoad = el.load;\n  Object.defineProperty(el, 'src', merge$1(srcDescriptor, {\n    set: v => {\n      const retval = srcDescriptor.set.call(el, v);\n\n      // we use the getter here to get the actual value set on src\n      tech.triggerSourceset(el.src);\n      return retval;\n    }\n  }));\n  el.setAttribute = (n, v) => {\n    const retval = oldSetAttribute.call(el, n, v);\n    if (/src/i.test(n)) {\n      tech.triggerSourceset(el.src);\n    }\n    return retval;\n  };\n  el.load = () => {\n    const retval = oldLoad.call(el);\n\n    // if load was called, but there was no source to fire\n    // sourceset on. We have to watch for a source append\n    // as that can trigger a `sourceset` when the media element\n    // has no source\n    if (!sourcesetLoad(tech)) {\n      tech.triggerSourceset('');\n      firstSourceWatch(tech);\n    }\n    return retval;\n  };\n  if (el.currentSrc) {\n    tech.triggerSourceset(el.currentSrc);\n  } else if (!sourcesetLoad(tech)) {\n    firstSourceWatch(tech);\n  }\n  el.resetSourceset_ = () => {\n    el.resetSourceset_ = null;\n    el.load = oldLoad;\n    el.setAttribute = oldSetAttribute;\n    Object.defineProperty(el, 'src', srcDescriptor);\n    if (el.resetSourceWatch_) {\n      el.resetSourceWatch_();\n    }\n  };\n};\n\n/**\n * @file html5.js\n */\n\n/**\n * HTML5 Media Controller - Wrapper for HTML5 Media API\n *\n * @mixes Tech~SourceHandlerAdditions\n * @extends Tech\n */\nclass Html5 extends Tech {\n  /**\n  * Create an instance of this Tech.\n  *\n  * @param {Object} [options]\n  *        The key/value store of player options.\n  *\n  * @param {Function} [ready]\n  *        Callback function to call when the `HTML5` Tech is ready.\n  */\n  constructor(options, ready) {\n    super(options, ready);\n    const source = options.source;\n    let crossoriginTracks = false;\n    this.featuresVideoFrameCallback = this.featuresVideoFrameCallback && this.el_.tagName === 'VIDEO';\n\n    // Set the source if one is provided\n    // 1) Check if the source is new (if not, we want to keep the original so playback isn't interrupted)\n    // 2) Check to see if the network state of the tag was failed at init, and if so, reset the source\n    // anyway so the error gets fired.\n    if (source && (this.el_.currentSrc !== source.src || options.tag && options.tag.initNetworkState_ === 3)) {\n      this.setSource(source);\n    } else {\n      this.handleLateInit_(this.el_);\n    }\n\n    // setup sourceset after late sourceset/init\n    if (options.enableSourceset) {\n      this.setupSourcesetHandling_();\n    }\n    this.isScrubbing_ = false;\n    if (this.el_.hasChildNodes()) {\n      const nodes = this.el_.childNodes;\n      let nodesLength = nodes.length;\n      const removeNodes = [];\n      while (nodesLength--) {\n        const node = nodes[nodesLength];\n        const nodeName = node.nodeName.toLowerCase();\n        if (nodeName === 'track') {\n          if (!this.featuresNativeTextTracks) {\n            // Empty video tag tracks so the built-in player doesn't use them also.\n            // This may not be fast enough to stop HTML5 browsers from reading the tags\n            // so we'll need to turn off any default tracks if we're manually doing\n            // captions and subtitles. videoElement.textTracks\n            removeNodes.push(node);\n          } else {\n            // store HTMLTrackElement and TextTrack to remote list\n            this.remoteTextTrackEls().addTrackElement_(node);\n            this.remoteTextTracks().addTrack(node.track);\n            this.textTracks().addTrack(node.track);\n            if (!crossoriginTracks && !this.el_.hasAttribute('crossorigin') && isCrossOrigin(node.src)) {\n              crossoriginTracks = true;\n            }\n          }\n        }\n      }\n      for (let i = 0; i < removeNodes.length; i++) {\n        this.el_.removeChild(removeNodes[i]);\n      }\n    }\n    this.proxyNativeTracks_();\n    if (this.featuresNativeTextTracks && crossoriginTracks) {\n      log$1.warn('Text Tracks are being loaded from another origin but the crossorigin attribute isn\\'t used.\\n' + 'This may prevent text tracks from loading.');\n    }\n\n    // prevent iOS Safari from disabling metadata text tracks during native playback\n    this.restoreMetadataTracksInIOSNativePlayer_();\n\n    // Determine if native controls should be used\n    // Our goal should be to get the custom controls on mobile solid everywhere\n    // so we can remove this all together. Right now this will block custom\n    // controls on touch enabled laptops like the Chrome Pixel\n    if ((TOUCH_ENABLED || IS_IPHONE) && options.nativeControlsForTouch === true) {\n      this.setControls(true);\n    }\n\n    // on iOS, we want to proxy `webkitbeginfullscreen` and `webkitendfullscreen`\n    // into a `fullscreenchange` event\n    this.proxyWebkitFullscreen_();\n    this.triggerReady();\n  }\n\n  /**\n   * Dispose of `HTML5` media element and remove all tracks.\n   */\n  dispose() {\n    if (this.el_ && this.el_.resetSourceset_) {\n      this.el_.resetSourceset_();\n    }\n    Html5.disposeMediaElement(this.el_);\n    this.options_ = null;\n\n    // tech will handle clearing of the emulated track list\n    super.dispose();\n  }\n\n  /**\n   * Modify the media element so that we can detect when\n   * the source is changed. Fires `sourceset` just after the source has changed\n   */\n  setupSourcesetHandling_() {\n    setupSourceset(this);\n  }\n\n  /**\n   * When a captions track is enabled in the iOS Safari native player, all other\n   * tracks are disabled (including metadata tracks), which nulls all of their\n   * associated cue points. This will restore metadata tracks to their pre-fullscreen\n   * state in those cases so that cue points are not needlessly lost.\n   *\n   * @private\n   */\n  restoreMetadataTracksInIOSNativePlayer_() {\n    const textTracks = this.textTracks();\n    let metadataTracksPreFullscreenState;\n\n    // captures a snapshot of every metadata track's current state\n    const takeMetadataTrackSnapshot = () => {\n      metadataTracksPreFullscreenState = [];\n      for (let i = 0; i < textTracks.length; i++) {\n        const track = textTracks[i];\n        if (track.kind === 'metadata') {\n          metadataTracksPreFullscreenState.push({\n            track,\n            storedMode: track.mode\n          });\n        }\n      }\n    };\n\n    // snapshot each metadata track's initial state, and update the snapshot\n    // each time there is a track 'change' event\n    takeMetadataTrackSnapshot();\n    textTracks.addEventListener('change', takeMetadataTrackSnapshot);\n    this.on('dispose', () => textTracks.removeEventListener('change', takeMetadataTrackSnapshot));\n    const restoreTrackMode = () => {\n      for (let i = 0; i < metadataTracksPreFullscreenState.length; i++) {\n        const storedTrack = metadataTracksPreFullscreenState[i];\n        if (storedTrack.track.mode === 'disabled' && storedTrack.track.mode !== storedTrack.storedMode) {\n          storedTrack.track.mode = storedTrack.storedMode;\n        }\n      }\n      // we only want this handler to be executed on the first 'change' event\n      textTracks.removeEventListener('change', restoreTrackMode);\n    };\n\n    // when we enter fullscreen playback, stop updating the snapshot and\n    // restore all track modes to their pre-fullscreen state\n    this.on('webkitbeginfullscreen', () => {\n      textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n\n      // remove the listener before adding it just in case it wasn't previously removed\n      textTracks.removeEventListener('change', restoreTrackMode);\n      textTracks.addEventListener('change', restoreTrackMode);\n    });\n\n    // start updating the snapshot again after leaving fullscreen\n    this.on('webkitendfullscreen', () => {\n      // remove the listener before adding it just in case it wasn't previously removed\n      textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n      textTracks.addEventListener('change', takeMetadataTrackSnapshot);\n\n      // remove the restoreTrackMode handler in case it wasn't triggered during fullscreen playback\n      textTracks.removeEventListener('change', restoreTrackMode);\n    });\n  }\n\n  /**\n   * Attempt to force override of tracks for the given type\n   *\n   * @param {string} type - Track type to override, possible values include 'Audio',\n   * 'Video', and 'Text'.\n   * @param {boolean} override - If set to true native audio/video will be overridden,\n   * otherwise native audio/video will potentially be used.\n   * @private\n   */\n  overrideNative_(type, override) {\n    // If there is no behavioral change don't add/remove listeners\n    if (override !== this[`featuresNative${type}Tracks`]) {\n      return;\n    }\n    const lowerCaseType = type.toLowerCase();\n    if (this[`${lowerCaseType}TracksListeners_`]) {\n      Object.keys(this[`${lowerCaseType}TracksListeners_`]).forEach(eventName => {\n        const elTracks = this.el()[`${lowerCaseType}Tracks`];\n        elTracks.removeEventListener(eventName, this[`${lowerCaseType}TracksListeners_`][eventName]);\n      });\n    }\n    this[`featuresNative${type}Tracks`] = !override;\n    this[`${lowerCaseType}TracksListeners_`] = null;\n    this.proxyNativeTracksForType_(lowerCaseType);\n  }\n\n  /**\n   * Attempt to force override of native audio tracks.\n   *\n   * @param {boolean} override - If set to true native audio will be overridden,\n   * otherwise native audio will potentially be used.\n   */\n  overrideNativeAudioTracks(override) {\n    this.overrideNative_('Audio', override);\n  }\n\n  /**\n   * Attempt to force override of native video tracks.\n   *\n   * @param {boolean} override - If set to true native video will be overridden,\n   * otherwise native video will potentially be used.\n   */\n  overrideNativeVideoTracks(override) {\n    this.overrideNative_('Video', override);\n  }\n\n  /**\n   * Proxy native track list events for the given type to our track\n   * lists if the browser we are playing in supports that type of track list.\n   *\n   * @param {string} name - Track type; values include 'audio', 'video', and 'text'\n   * @private\n   */\n  proxyNativeTracksForType_(name) {\n    const props = NORMAL[name];\n    const elTracks = this.el()[props.getterName];\n    const techTracks = this[props.getterName]();\n    if (!this[`featuresNative${props.capitalName}Tracks`] || !elTracks || !elTracks.addEventListener) {\n      return;\n    }\n    const listeners = {\n      change: e => {\n        const event = {\n          type: 'change',\n          target: techTracks,\n          currentTarget: techTracks,\n          srcElement: techTracks\n        };\n        techTracks.trigger(event);\n\n        // if we are a text track change event, we should also notify the\n        // remote text track list. This can potentially cause a false positive\n        // if we were to get a change event on a non-remote track and\n        // we triggered the event on the remote text track list which doesn't\n        // contain that track. However, best practices mean looping through the\n        // list of tracks and searching for the appropriate mode value, so,\n        // this shouldn't pose an issue\n        if (name === 'text') {\n          this[REMOTE.remoteText.getterName]().trigger(event);\n        }\n      },\n      addtrack(e) {\n        techTracks.addTrack(e.track);\n      },\n      removetrack(e) {\n        techTracks.removeTrack(e.track);\n      }\n    };\n    const removeOldTracks = function () {\n      const removeTracks = [];\n      for (let i = 0; i < techTracks.length; i++) {\n        let found = false;\n        for (let j = 0; j < elTracks.length; j++) {\n          if (elTracks[j] === techTracks[i]) {\n            found = true;\n            break;\n          }\n        }\n        if (!found) {\n          removeTracks.push(techTracks[i]);\n        }\n      }\n      while (removeTracks.length) {\n        techTracks.removeTrack(removeTracks.shift());\n      }\n    };\n    this[props.getterName + 'Listeners_'] = listeners;\n    Object.keys(listeners).forEach(eventName => {\n      const listener = listeners[eventName];\n      elTracks.addEventListener(eventName, listener);\n      this.on('dispose', e => elTracks.removeEventListener(eventName, listener));\n    });\n\n    // Remove (native) tracks that are not used anymore\n    this.on('loadstart', removeOldTracks);\n    this.on('dispose', e => this.off('loadstart', removeOldTracks));\n  }\n\n  /**\n   * Proxy all native track list events to our track lists if the browser we are playing\n   * in supports that type of track list.\n   *\n   * @private\n   */\n  proxyNativeTracks_() {\n    NORMAL.names.forEach(name => {\n      this.proxyNativeTracksForType_(name);\n    });\n  }\n\n  /**\n   * Create the `Html5` Tech's DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  createEl() {\n    let el = this.options_.tag;\n\n    // Check if this browser supports moving the element into the box.\n    // On the iPhone video will break if you move the element,\n    // So we have to create a brand new element.\n    // If we ingested the player div, we do not need to move the media element.\n    if (!el || !(this.options_.playerElIngest || this.movingMediaElementInDOM)) {\n      // If the original tag is still there, clone and remove it.\n      if (el) {\n        const clone = el.cloneNode(true);\n        if (el.parentNode) {\n          el.parentNode.insertBefore(clone, el);\n        }\n        Html5.disposeMediaElement(el);\n        el = clone;\n      } else {\n        el = document.createElement('video');\n\n        // determine if native controls should be used\n        const tagAttributes = this.options_.tag && getAttributes(this.options_.tag);\n        const attributes = merge$1({}, tagAttributes);\n        if (!TOUCH_ENABLED || this.options_.nativeControlsForTouch !== true) {\n          delete attributes.controls;\n        }\n        setAttributes(el, Object.assign(attributes, {\n          id: this.options_.techId,\n          class: 'vjs-tech'\n        }));\n      }\n      el.playerId = this.options_.playerId;\n    }\n    if (typeof this.options_.preload !== 'undefined') {\n      setAttribute(el, 'preload', this.options_.preload);\n    }\n    if (this.options_.disablePictureInPicture !== undefined) {\n      el.disablePictureInPicture = this.options_.disablePictureInPicture;\n    }\n\n    // Update specific tag settings, in case they were overridden\n    // `autoplay` has to be *last* so that `muted` and `playsinline` are present\n    // when iOS/Safari or other browsers attempt to autoplay.\n    const settingsAttrs = ['loop', 'muted', 'playsinline', 'autoplay'];\n    for (let i = 0; i < settingsAttrs.length; i++) {\n      const attr = settingsAttrs[i];\n      const value = this.options_[attr];\n      if (typeof value !== 'undefined') {\n        if (value) {\n          setAttribute(el, attr, attr);\n        } else {\n          removeAttribute(el, attr);\n        }\n        el[attr] = value;\n      }\n    }\n    return el;\n  }\n\n  /**\n   * This will be triggered if the loadstart event has already fired, before videojs was\n   * ready. Two known examples of when this can happen are:\n   * 1. If we're loading the playback object after it has started loading\n   * 2. The media is already playing the (often with autoplay on) then\n   *\n   * This function will fire another loadstart so that videojs can catchup.\n   *\n   * @fires Tech#loadstart\n   *\n   * @return {undefined}\n   *         returns nothing.\n   */\n  handleLateInit_(el) {\n    if (el.networkState === 0 || el.networkState === 3) {\n      // The video element hasn't started loading the source yet\n      // or didn't find a source\n      return;\n    }\n    if (el.readyState === 0) {\n      // NetworkState is set synchronously BUT loadstart is fired at the\n      // end of the current stack, usually before setInterval(fn, 0).\n      // So at this point we know loadstart may have already fired or is\n      // about to fire, and either way the player hasn't seen it yet.\n      // We don't want to fire loadstart prematurely here and cause a\n      // double loadstart so we'll wait and see if it happens between now\n      // and the next loop, and fire it if not.\n      // HOWEVER, we also want to make sure it fires before loadedmetadata\n      // which could also happen between now and the next loop, so we'll\n      // watch for that also.\n      let loadstartFired = false;\n      const setLoadstartFired = function () {\n        loadstartFired = true;\n      };\n      this.on('loadstart', setLoadstartFired);\n      const triggerLoadstart = function () {\n        // We did miss the original loadstart. Make sure the player\n        // sees loadstart before loadedmetadata\n        if (!loadstartFired) {\n          this.trigger('loadstart');\n        }\n      };\n      this.on('loadedmetadata', triggerLoadstart);\n      this.ready(function () {\n        this.off('loadstart', setLoadstartFired);\n        this.off('loadedmetadata', triggerLoadstart);\n        if (!loadstartFired) {\n          // We did miss the original native loadstart. Fire it now.\n          this.trigger('loadstart');\n        }\n      });\n      return;\n    }\n\n    // From here on we know that loadstart already fired and we missed it.\n    // The other readyState events aren't as much of a problem if we double\n    // them, so not going to go to as much trouble as loadstart to prevent\n    // that unless we find reason to.\n    const eventsToTrigger = ['loadstart'];\n\n    // loadedmetadata: newly equal to HAVE_METADATA (1) or greater\n    eventsToTrigger.push('loadedmetadata');\n\n    // loadeddata: newly increased to HAVE_CURRENT_DATA (2) or greater\n    if (el.readyState >= 2) {\n      eventsToTrigger.push('loadeddata');\n    }\n\n    // canplay: newly increased to HAVE_FUTURE_DATA (3) or greater\n    if (el.readyState >= 3) {\n      eventsToTrigger.push('canplay');\n    }\n\n    // canplaythrough: newly equal to HAVE_ENOUGH_DATA (4)\n    if (el.readyState >= 4) {\n      eventsToTrigger.push('canplaythrough');\n    }\n\n    // We still need to give the player time to add event listeners\n    this.ready(function () {\n      eventsToTrigger.forEach(function (type) {\n        this.trigger(type);\n      }, this);\n    });\n  }\n\n  /**\n   * Set whether we are scrubbing or not.\n   * This is used to decide whether we should use `fastSeek` or not.\n   * `fastSeek` is used to provide trick play on Safari browsers.\n   *\n   * @param {boolean} isScrubbing\n   *                  - true for we are currently scrubbing\n   *                  - false for we are no longer scrubbing\n   */\n  setScrubbing(isScrubbing) {\n    this.isScrubbing_ = isScrubbing;\n  }\n\n  /**\n   * Get whether we are scrubbing or not.\n   *\n   * @return {boolean} isScrubbing\n   *                  - true for we are currently scrubbing\n   *                  - false for we are no longer scrubbing\n   */\n  scrubbing() {\n    return this.isScrubbing_;\n  }\n\n  /**\n   * Set current time for the `HTML5` tech.\n   *\n   * @param {number} seconds\n   *        Set the current time of the media to this.\n   */\n  setCurrentTime(seconds) {\n    try {\n      if (this.isScrubbing_ && this.el_.fastSeek && IS_ANY_SAFARI) {\n        this.el_.fastSeek(seconds);\n      } else {\n        this.el_.currentTime = seconds;\n      }\n    } catch (e) {\n      log$1(e, 'Video is not ready. (Video.js)');\n      // this.warning(VideoJS.warnings.videoNotReady);\n    }\n  }\n\n  /**\n   * Get the current duration of the HTML5 media element.\n   *\n   * @return {number}\n   *         The duration of the media or 0 if there is no duration.\n   */\n  duration() {\n    // Android Chrome will report duration as Infinity for VOD HLS until after\n    // playback has started, which triggers the live display erroneously.\n    // Return NaN if playback has not started and trigger a durationupdate once\n    // the duration can be reliably known.\n    if (this.el_.duration === Infinity && IS_ANDROID && IS_CHROME && this.el_.currentTime === 0) {\n      // Wait for the first `timeupdate` with currentTime > 0 - there may be\n      // several with 0\n      const checkProgress = () => {\n        if (this.el_.currentTime > 0) {\n          // Trigger durationchange for genuinely live video\n          if (this.el_.duration === Infinity) {\n            this.trigger('durationchange');\n          }\n          this.off('timeupdate', checkProgress);\n        }\n      };\n      this.on('timeupdate', checkProgress);\n      return NaN;\n    }\n    return this.el_.duration || NaN;\n  }\n\n  /**\n   * Get the current width of the HTML5 media element.\n   *\n   * @return {number}\n   *         The width of the HTML5 media element.\n   */\n  width() {\n    return this.el_.offsetWidth;\n  }\n\n  /**\n   * Get the current height of the HTML5 media element.\n   *\n   * @return {number}\n   *         The height of the HTML5 media element.\n   */\n  height() {\n    return this.el_.offsetHeight;\n  }\n\n  /**\n   * Proxy iOS `webkitbeginfullscreen` and `webkitendfullscreen` into\n   * `fullscreenchange` event.\n   *\n   * @private\n   * @fires fullscreenchange\n   * @listens webkitendfullscreen\n   * @listens webkitbeginfullscreen\n   * @listens webkitbeginfullscreen\n   */\n  proxyWebkitFullscreen_() {\n    if (!('webkitDisplayingFullscreen' in this.el_)) {\n      return;\n    }\n    const endFn = function () {\n      this.trigger('fullscreenchange', {\n        isFullscreen: false\n      });\n      // Safari will sometimes set controls on the videoelement when existing fullscreen.\n      if (this.el_.controls && !this.options_.nativeControlsForTouch && this.controls()) {\n        this.el_.controls = false;\n      }\n    };\n    const beginFn = function () {\n      if ('webkitPresentationMode' in this.el_ && this.el_.webkitPresentationMode !== 'picture-in-picture') {\n        this.one('webkitendfullscreen', endFn);\n        this.trigger('fullscreenchange', {\n          isFullscreen: true,\n          // set a flag in case another tech triggers fullscreenchange\n          nativeIOSFullscreen: true\n        });\n      }\n    };\n    this.on('webkitbeginfullscreen', beginFn);\n    this.on('dispose', () => {\n      this.off('webkitbeginfullscreen', beginFn);\n      this.off('webkitendfullscreen', endFn);\n    });\n  }\n\n  /**\n   * Check if fullscreen is supported on the video el.\n   *\n   * @return {boolean}\n   *         - True if fullscreen is supported.\n   *         - False if fullscreen is not supported.\n   */\n  supportsFullScreen() {\n    return typeof this.el_.webkitEnterFullScreen === 'function';\n  }\n\n  /**\n   * Request that the `HTML5` Tech enter fullscreen.\n   */\n  enterFullScreen() {\n    const video = this.el_;\n    if (video.paused && video.networkState <= video.HAVE_METADATA) {\n      // attempt to prime the video element for programmatic access\n      // this isn't necessary on the desktop but shouldn't hurt\n      silencePromise(this.el_.play());\n\n      // playing and pausing synchronously during the transition to fullscreen\n      // can get iOS ~6.1 devices into a play/pause loop\n      this.setTimeout(function () {\n        video.pause();\n        try {\n          video.webkitEnterFullScreen();\n        } catch (e) {\n          this.trigger('fullscreenerror', e);\n        }\n      }, 0);\n    } else {\n      try {\n        video.webkitEnterFullScreen();\n      } catch (e) {\n        this.trigger('fullscreenerror', e);\n      }\n    }\n  }\n\n  /**\n   * Request that the `HTML5` Tech exit fullscreen.\n   */\n  exitFullScreen() {\n    if (!this.el_.webkitDisplayingFullscreen) {\n      this.trigger('fullscreenerror', new Error('The video is not fullscreen'));\n      return;\n    }\n    this.el_.webkitExitFullScreen();\n  }\n\n  /**\n   * Create a floating video window always on top of other windows so that users may\n   * continue consuming media while they interact with other content sites, or\n   * applications on their device.\n   *\n   * @see [Spec]{@link https://wicg.github.io/picture-in-picture}\n   *\n   * @return {Promise}\n   *         A promise with a Picture-in-Picture window.\n   */\n  requestPictureInPicture() {\n    return this.el_.requestPictureInPicture();\n  }\n\n  /**\n   * Native requestVideoFrameCallback if supported by browser/tech, or fallback\n   * Don't use rVCF on Safari when DRM is playing, as it doesn't fire\n   * Needs to be checked later than the constructor\n   * This will be a false positive for clear sources loaded after a Fairplay source\n   *\n   * @param {function} cb function to call\n   * @return {number} id of request\n   */\n  requestVideoFrameCallback(cb) {\n    if (this.featuresVideoFrameCallback && !this.el_.webkitKeys) {\n      return this.el_.requestVideoFrameCallback(cb);\n    }\n    return super.requestVideoFrameCallback(cb);\n  }\n\n  /**\n   * Native or fallback requestVideoFrameCallback\n   *\n   * @param {number} id request id to cancel\n   */\n  cancelVideoFrameCallback(id) {\n    if (this.featuresVideoFrameCallback && !this.el_.webkitKeys) {\n      this.el_.cancelVideoFrameCallback(id);\n    } else {\n      super.cancelVideoFrameCallback(id);\n    }\n  }\n\n  /**\n   * A getter/setter for the `Html5` Tech's source object.\n   * > Note: Please use {@link Html5#setSource}\n   *\n   * @param {Tech~SourceObject} [src]\n   *        The source object you want to set on the `HTML5` techs element.\n   *\n   * @return {Tech~SourceObject|undefined}\n   *         - The current source object when a source is not passed in.\n   *         - undefined when setting\n   *\n   * @deprecated Since version 5.\n   */\n  src(src) {\n    if (src === undefined) {\n      return this.el_.src;\n    }\n\n    // Setting src through `src` instead of `setSrc` will be deprecated\n    this.setSrc(src);\n  }\n\n  /**\n   * Reset the tech by removing all sources and then calling\n   * {@link Html5.resetMediaElement}.\n   */\n  reset() {\n    Html5.resetMediaElement(this.el_);\n  }\n\n  /**\n   * Get the current source on the `HTML5` Tech. Falls back to returning the source from\n   * the HTML5 media element.\n   *\n   * @return {Tech~SourceObject}\n   *         The current source object from the HTML5 tech. With a fallback to the\n   *         elements source.\n   */\n  currentSrc() {\n    if (this.currentSource_) {\n      return this.currentSource_.src;\n    }\n    return this.el_.currentSrc;\n  }\n\n  /**\n   * Set controls attribute for the HTML5 media Element.\n   *\n   * @param {string} val\n   *        Value to set the controls attribute to\n   */\n  setControls(val) {\n    this.el_.controls = !!val;\n  }\n\n  /**\n   * Create and returns a remote {@link TextTrack} object.\n   *\n   * @param {string} kind\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n   *\n   * @param {string} [label]\n   *        Label to identify the text track\n   *\n   * @param {string} [language]\n   *        Two letter language abbreviation\n   *\n   * @return {TextTrack}\n   *         The TextTrack that gets created.\n   */\n  addTextTrack(kind, label, language) {\n    if (!this.featuresNativeTextTracks) {\n      return super.addTextTrack(kind, label, language);\n    }\n    return this.el_.addTextTrack(kind, label, language);\n  }\n\n  /**\n   * Creates either native TextTrack or an emulated TextTrack depending\n   * on the value of `featuresNativeTextTracks`\n   *\n   * @param {Object} options\n   *        The object should contain the options to initialize the TextTrack with.\n   *\n   * @param {string} [options.kind]\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata).\n   *\n   * @param {string} [options.label]\n   *        Label to identify the text track\n   *\n   * @param {string} [options.language]\n   *        Two letter language abbreviation.\n   *\n   * @param {boolean} [options.default]\n   *        Default this track to on.\n   *\n   * @param {string} [options.id]\n   *        The internal id to assign this track.\n   *\n   * @param {string} [options.src]\n   *        A source url for the track.\n   *\n   * @return {HTMLTrackElement}\n   *         The track element that gets created.\n   */\n  createRemoteTextTrack(options) {\n    if (!this.featuresNativeTextTracks) {\n      return super.createRemoteTextTrack(options);\n    }\n    const htmlTrackElement = document.createElement('track');\n    if (options.kind) {\n      htmlTrackElement.kind = options.kind;\n    }\n    if (options.label) {\n      htmlTrackElement.label = options.label;\n    }\n    if (options.language || options.srclang) {\n      htmlTrackElement.srclang = options.language || options.srclang;\n    }\n    if (options.default) {\n      htmlTrackElement.default = options.default;\n    }\n    if (options.id) {\n      htmlTrackElement.id = options.id;\n    }\n    if (options.src) {\n      htmlTrackElement.src = options.src;\n    }\n    return htmlTrackElement;\n  }\n\n  /**\n   * Creates a remote text track object and returns an html track element.\n   *\n   * @param {Object} options The object should contain values for\n   * kind, language, label, and src (location of the WebVTT file)\n   * @param {boolean} [manualCleanup=false] if set to true, the TextTrack\n   * will not be removed from the TextTrackList and HtmlTrackElementList\n   * after a source change\n   * @return {HTMLTrackElement} An Html Track Element.\n   * This can be an emulated {@link HTMLTrackElement} or a native one.\n   *\n   */\n  addRemoteTextTrack(options, manualCleanup) {\n    const htmlTrackElement = super.addRemoteTextTrack(options, manualCleanup);\n    if (this.featuresNativeTextTracks) {\n      this.el().appendChild(htmlTrackElement);\n    }\n    return htmlTrackElement;\n  }\n\n  /**\n   * Remove remote `TextTrack` from `TextTrackList` object\n   *\n   * @param {TextTrack} track\n   *        `TextTrack` object to remove\n   */\n  removeRemoteTextTrack(track) {\n    super.removeRemoteTextTrack(track);\n    if (this.featuresNativeTextTracks) {\n      const tracks = this.$$('track');\n      let i = tracks.length;\n      while (i--) {\n        if (track === tracks[i] || track === tracks[i].track) {\n          this.el().removeChild(tracks[i]);\n        }\n      }\n    }\n  }\n\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object}\n   *         An object with supported media playback quality metrics\n   */\n  getVideoPlaybackQuality() {\n    if (typeof this.el().getVideoPlaybackQuality === 'function') {\n      return this.el().getVideoPlaybackQuality();\n    }\n    const videoPlaybackQuality = {};\n    if (typeof this.el().webkitDroppedFrameCount !== 'undefined' && typeof this.el().webkitDecodedFrameCount !== 'undefined') {\n      videoPlaybackQuality.droppedVideoFrames = this.el().webkitDroppedFrameCount;\n      videoPlaybackQuality.totalVideoFrames = this.el().webkitDecodedFrameCount;\n    }\n    if (window$1.performance) {\n      videoPlaybackQuality.creationTime = window$1.performance.now();\n    }\n    return videoPlaybackQuality;\n  }\n}\n\n/* HTML5 Support Testing ---------------------------------------------------- */\n\n/**\n * Element for testing browser HTML5 media capabilities\n *\n * @type {Element}\n * @constant\n * @private\n */\ndefineLazyProperty(Html5, 'TEST_VID', function () {\n  if (!isReal()) {\n    return;\n  }\n  const video = document.createElement('video');\n  const track = document.createElement('track');\n  track.kind = 'captions';\n  track.srclang = 'en';\n  track.label = 'English';\n  video.appendChild(track);\n  return video;\n});\n\n/**\n * Check if HTML5 media is supported by this browser/device.\n *\n * @return {boolean}\n *         - True if HTML5 media is supported.\n *         - False if HTML5 media is not supported.\n */\nHtml5.isSupported = function () {\n  // IE with no Media Player is a LIAR! (#984)\n  try {\n    Html5.TEST_VID.volume = 0.5;\n  } catch (e) {\n    return false;\n  }\n  return !!(Html5.TEST_VID && Html5.TEST_VID.canPlayType);\n};\n\n/**\n * Check if the tech can support the given type\n *\n * @param {string} type\n *        The mimetype to check\n * @return {string} 'probably', 'maybe', or '' (empty string)\n */\nHtml5.canPlayType = function (type) {\n  return Html5.TEST_VID.canPlayType(type);\n};\n\n/**\n * Check if the tech can support the given source\n *\n * @param {Object} srcObj\n *        The source object\n * @param {Object} options\n *        The options passed to the tech\n * @return {string} 'probably', 'maybe', or '' (empty string)\n */\nHtml5.canPlaySource = function (srcObj, options) {\n  return Html5.canPlayType(srcObj.type);\n};\n\n/**\n * Check if the volume can be changed in this browser/device.\n * Volume cannot be changed in a lot of mobile devices.\n * Specifically, it can't be changed from 1 on iOS.\n *\n * @return {boolean}\n *         - True if volume can be controlled\n *         - False otherwise\n */\nHtml5.canControlVolume = function () {\n  // IE will error if Windows Media Player not installed #3315\n  try {\n    const volume = Html5.TEST_VID.volume;\n    Html5.TEST_VID.volume = volume / 2 + 0.1;\n    const canControl = volume !== Html5.TEST_VID.volume;\n\n    // With the introduction of iOS 15, there are cases where the volume is read as\n    // changed but reverts back to its original state at the start of the next tick.\n    // To determine whether volume can be controlled on iOS,\n    // a timeout is set and the volume is checked asynchronously.\n    // Since `features` doesn't currently work asynchronously, the value is manually set.\n    if (canControl && IS_IOS) {\n      window$1.setTimeout(() => {\n        if (Html5 && Html5.prototype) {\n          Html5.prototype.featuresVolumeControl = volume !== Html5.TEST_VID.volume;\n        }\n      });\n\n      // default iOS to false, which will be updated in the timeout above.\n      return false;\n    }\n    return canControl;\n  } catch (e) {\n    return false;\n  }\n};\n\n/**\n * Check if the volume can be muted in this browser/device.\n * Some devices, e.g. iOS, don't allow changing volume\n * but permits muting/unmuting.\n *\n * @return {boolean}\n *      - True if volume can be muted\n *      - False otherwise\n */\nHtml5.canMuteVolume = function () {\n  try {\n    const muted = Html5.TEST_VID.muted;\n\n    // in some versions of iOS muted property doesn't always\n    // work, so we want to set both property and attribute\n    Html5.TEST_VID.muted = !muted;\n    if (Html5.TEST_VID.muted) {\n      setAttribute(Html5.TEST_VID, 'muted', 'muted');\n    } else {\n      removeAttribute(Html5.TEST_VID, 'muted', 'muted');\n    }\n    return muted !== Html5.TEST_VID.muted;\n  } catch (e) {\n    return false;\n  }\n};\n\n/**\n * Check if the playback rate can be changed in this browser/device.\n *\n * @return {boolean}\n *         - True if playback rate can be controlled\n *         - False otherwise\n */\nHtml5.canControlPlaybackRate = function () {\n  // Playback rate API is implemented in Android Chrome, but doesn't do anything\n  // https://github.com/videojs/video.js/issues/3180\n  if (IS_ANDROID && IS_CHROME && CHROME_VERSION < 58) {\n    return false;\n  }\n  // IE will error if Windows Media Player not installed #3315\n  try {\n    const playbackRate = Html5.TEST_VID.playbackRate;\n    Html5.TEST_VID.playbackRate = playbackRate / 2 + 0.1;\n    return playbackRate !== Html5.TEST_VID.playbackRate;\n  } catch (e) {\n    return false;\n  }\n};\n\n/**\n * Check if we can override a video/audio elements attributes, with\n * Object.defineProperty.\n *\n * @return {boolean}\n *         - True if builtin attributes can be overridden\n *         - False otherwise\n */\nHtml5.canOverrideAttributes = function () {\n  // if we cannot overwrite the src/innerHTML property, there is no support\n  // iOS 7 safari for instance cannot do this.\n  try {\n    const noop = () => {};\n    Object.defineProperty(document.createElement('video'), 'src', {\n      get: noop,\n      set: noop\n    });\n    Object.defineProperty(document.createElement('audio'), 'src', {\n      get: noop,\n      set: noop\n    });\n    Object.defineProperty(document.createElement('video'), 'innerHTML', {\n      get: noop,\n      set: noop\n    });\n    Object.defineProperty(document.createElement('audio'), 'innerHTML', {\n      get: noop,\n      set: noop\n    });\n  } catch (e) {\n    return false;\n  }\n  return true;\n};\n\n/**\n * Check to see if native `TextTrack`s are supported by this browser/device.\n *\n * @return {boolean}\n *         - True if native `TextTrack`s are supported.\n *         - False otherwise\n */\nHtml5.supportsNativeTextTracks = function () {\n  return IS_ANY_SAFARI || IS_IOS && IS_CHROME;\n};\n\n/**\n * Check to see if native `VideoTrack`s are supported by this browser/device\n *\n * @return {boolean}\n *        - True if native `VideoTrack`s are supported.\n *        - False otherwise\n */\nHtml5.supportsNativeVideoTracks = function () {\n  return !!(Html5.TEST_VID && Html5.TEST_VID.videoTracks);\n};\n\n/**\n * Check to see if native `AudioTrack`s are supported by this browser/device\n *\n * @return {boolean}\n *        - True if native `AudioTrack`s are supported.\n *        - False otherwise\n */\nHtml5.supportsNativeAudioTracks = function () {\n  return !!(Html5.TEST_VID && Html5.TEST_VID.audioTracks);\n};\n\n/**\n * An array of events available on the Html5 tech.\n *\n * @private\n * @type {Array}\n */\nHtml5.Events = ['loadstart', 'suspend', 'abort', 'error', 'emptied', 'stalled', 'loadedmetadata', 'loadeddata', 'canplay', 'canplaythrough', 'playing', 'waiting', 'seeking', 'seeked', 'ended', 'durationchange', 'timeupdate', 'progress', 'play', 'pause', 'ratechange', 'resize', 'volumechange'];\n\n/**\n * Boolean indicating whether the `Tech` supports volume control.\n *\n * @type {boolean}\n * @default {@link Html5.canControlVolume}\n */\n/**\n * Boolean indicating whether the `Tech` supports muting volume.\n *\n * @type {boolean}\n * @default {@link Html5.canMuteVolume}\n */\n\n/**\n * Boolean indicating whether the `Tech` supports changing the speed at which the media\n * plays. Examples:\n *   - Set player to play 2x (twice) as fast\n *   - Set player to play 0.5x (half) as fast\n *\n * @type {boolean}\n * @default {@link Html5.canControlPlaybackRate}\n */\n\n/**\n * Boolean indicating whether the `Tech` supports the `sourceset` event.\n *\n * @type {boolean}\n * @default\n */\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `TextTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeTextTracks}\n */\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `VideoTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeVideoTracks}\n */\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `AudioTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeAudioTracks}\n */\n[['featuresMuteControl', 'canMuteVolume'], ['featuresPlaybackRate', 'canControlPlaybackRate'], ['featuresSourceset', 'canOverrideAttributes'], ['featuresNativeTextTracks', 'supportsNativeTextTracks'], ['featuresNativeVideoTracks', 'supportsNativeVideoTracks'], ['featuresNativeAudioTracks', 'supportsNativeAudioTracks']].forEach(function ([key, fn]) {\n  defineLazyProperty(Html5.prototype, key, () => Html5[fn](), true);\n});\nHtml5.prototype.featuresVolumeControl = Html5.canControlVolume();\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the media element\n * moving in the DOM. iOS breaks if you move the media element, so this is set this to\n * false there. Everywhere else this should be true.\n *\n * @type {boolean}\n * @default\n */\nHtml5.prototype.movingMediaElementInDOM = !IS_IOS;\n\n// TODO: Previous comment: No longer appears to be used. Can probably be removed.\n//       Is this true?\n/**\n * Boolean indicating whether the `HTML5` tech currently supports automatic media resize\n * when going into fullscreen.\n *\n * @type {boolean}\n * @default\n */\nHtml5.prototype.featuresFullscreenResize = true;\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the progress event.\n * If this is false, manual `progress` events will be triggered instead.\n *\n * @type {boolean}\n * @default\n */\nHtml5.prototype.featuresProgressEvents = true;\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the timeupdate event.\n * If this is false, manual `timeupdate` events will be triggered instead.\n *\n * @default\n */\nHtml5.prototype.featuresTimeupdateEvents = true;\n\n/**\n * Whether the HTML5 el supports `requestVideoFrameCallback`\n *\n * @type {boolean}\n */\nHtml5.prototype.featuresVideoFrameCallback = !!(Html5.TEST_VID && Html5.TEST_VID.requestVideoFrameCallback);\nHtml5.disposeMediaElement = function (el) {\n  if (!el) {\n    return;\n  }\n  if (el.parentNode) {\n    el.parentNode.removeChild(el);\n  }\n\n  // remove any child track or source nodes to prevent their loading\n  while (el.hasChildNodes()) {\n    el.removeChild(el.firstChild);\n  }\n\n  // remove any src reference. not setting `src=''` because that causes a warning\n  // in firefox\n  el.removeAttribute('src');\n\n  // force the media element to update its loading state by calling load()\n  // however IE on Windows 7N has a bug that throws an error so need a try/catch (#793)\n  if (typeof el.load === 'function') {\n    // wrapping in an iife so it's not deoptimized (#1060#discussion_r10324473)\n    (function () {\n      try {\n        el.load();\n      } catch (e) {\n        // not supported\n      }\n    })();\n  }\n};\nHtml5.resetMediaElement = function (el) {\n  if (!el) {\n    return;\n  }\n  const sources = el.querySelectorAll('source');\n  let i = sources.length;\n  while (i--) {\n    el.removeChild(sources[i]);\n  }\n\n  // remove any src reference.\n  // not setting `src=''` because that throws an error\n  el.removeAttribute('src');\n  if (typeof el.load === 'function') {\n    // wrapping in an iife so it's not deoptimized (#1060#discussion_r10324473)\n    (function () {\n      try {\n        el.load();\n      } catch (e) {\n        // satisfy linter\n      }\n    })();\n  }\n};\n\n/* Native HTML5 element property wrapping ----------------------------------- */\n// Wrap native boolean attributes with getters that check both property and attribute\n// The list is as followed:\n// muted, defaultMuted, autoplay, controls, loop, playsinline\n[\n/**\n * Get the value of `muted` from the media element. `muted` indicates\n * that the volume for the media should be set to silent. This does not actually change\n * the `volume` attribute.\n *\n * @method Html5#muted\n * @return {boolean}\n *         - True if the value of `volume` should be ignored and the audio set to silent.\n *         - False if the value of `volume` should be used.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-muted}\n */\n'muted',\n/**\n * Get the value of `defaultMuted` from the media element. `defaultMuted` indicates\n * whether the media should start muted or not. Only changes the default state of the\n * media. `muted` and `defaultMuted` can have different values. {@link Html5#muted} indicates the\n * current state.\n *\n * @method Html5#defaultMuted\n * @return {boolean}\n *         - The value of `defaultMuted` from the media element.\n *         - True indicates that the media should start muted.\n *         - False indicates that the media should not start muted\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultmuted}\n */\n'defaultMuted',\n/**\n * Get the value of `autoplay` from the media element. `autoplay` indicates\n * that the media should start to play as soon as the page is ready.\n *\n * @method Html5#autoplay\n * @return {boolean}\n *         - The value of `autoplay` from the media element.\n *         - True indicates that the media should start as soon as the page loads.\n *         - False indicates that the media should not start as soon as the page loads.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-autoplay}\n */\n'autoplay',\n/**\n * Get the value of `controls` from the media element. `controls` indicates\n * whether the native media controls should be shown or hidden.\n *\n * @method Html5#controls\n * @return {boolean}\n *         - The value of `controls` from the media element.\n *         - True indicates that native controls should be showing.\n *         - False indicates that native controls should be hidden.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-controls}\n */\n'controls',\n/**\n * Get the value of `loop` from the media element. `loop` indicates\n * that the media should return to the start of the media and continue playing once\n * it reaches the end.\n *\n * @method Html5#loop\n * @return {boolean}\n *         - The value of `loop` from the media element.\n *         - True indicates that playback should seek back to start once\n *           the end of a media is reached.\n *         - False indicates that playback should not loop back to the start when the\n *           end of the media is reached.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-loop}\n */\n'loop',\n/**\n * Get the value of `playsinline` from the media element. `playsinline` indicates\n * to the browser that non-fullscreen playback is preferred when fullscreen\n * playback is the native default, such as in iOS Safari.\n *\n * @method Html5#playsinline\n * @return {boolean}\n *         - The value of `playsinline` from the media element.\n *         - True indicates that the media should play inline.\n *         - False indicates that the media should not play inline.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n */\n'playsinline'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop] || this.el_.hasAttribute(prop);\n  };\n});\n\n// Wrap native boolean attributes with setters that set both property and attribute\n// The list is as followed:\n// setMuted, setDefaultMuted, setAutoplay, setLoop, setPlaysinline\n// setControls is special-cased above\n[\n/**\n * Set the value of `muted` on the media element. `muted` indicates that the current\n * audio level should be silent.\n *\n * @method Html5#setMuted\n * @param {boolean} muted\n *        - True if the audio should be set to silent\n *        - False otherwise\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-muted}\n */\n'muted',\n/**\n * Set the value of `defaultMuted` on the media element. `defaultMuted` indicates that the current\n * audio level should be silent, but will only effect the muted level on initial playback..\n *\n * @method Html5.prototype.setDefaultMuted\n * @param {boolean} defaultMuted\n *        - True if the audio should be set to silent\n *        - False otherwise\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultmuted}\n */\n'defaultMuted',\n/**\n * Set the value of `autoplay` on the media element. `autoplay` indicates\n * that the media should start to play as soon as the page is ready.\n *\n * @method Html5#setAutoplay\n * @param {boolean} autoplay\n *         - True indicates that the media should start as soon as the page loads.\n *         - False indicates that the media should not start as soon as the page loads.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-autoplay}\n */\n'autoplay',\n/**\n * Set the value of `loop` on the media element. `loop` indicates\n * that the media should return to the start of the media and continue playing once\n * it reaches the end.\n *\n * @method Html5#setLoop\n * @param {boolean} loop\n *         - True indicates that playback should seek back to start once\n *           the end of a media is reached.\n *         - False indicates that playback should not loop back to the start when the\n *           end of the media is reached.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-loop}\n */\n'loop',\n/**\n * Set the value of `playsinline` from the media element. `playsinline` indicates\n * to the browser that non-fullscreen playback is preferred when fullscreen\n * playback is the native default, such as in iOS Safari.\n *\n * @method Html5#setPlaysinline\n * @param {boolean} playsinline\n *         - True indicates that the media should play inline.\n *         - False indicates that the media should not play inline.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n */\n'playsinline'].forEach(function (prop) {\n  Html5.prototype['set' + toTitleCase$1(prop)] = function (v) {\n    this.el_[prop] = v;\n    if (v) {\n      this.el_.setAttribute(prop, prop);\n    } else {\n      this.el_.removeAttribute(prop);\n    }\n  };\n});\n\n// Wrap native properties with a getter\n// The list is as followed\n// paused, currentTime, buffered, volume, poster, preload, error, seeking\n// seekable, ended, playbackRate, defaultPlaybackRate, disablePictureInPicture\n// played, networkState, readyState, videoWidth, videoHeight, crossOrigin\n[\n/**\n * Get the value of `paused` from the media element. `paused` indicates whether the media element\n * is currently paused or not.\n *\n * @method Html5#paused\n * @return {boolean}\n *         The value of `paused` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-paused}\n */\n'paused',\n/**\n * Get the value of `currentTime` from the media element. `currentTime` indicates\n * the current second that the media is at in playback.\n *\n * @method Html5#currentTime\n * @return {number}\n *         The value of `currentTime` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-currenttime}\n */\n'currentTime',\n/**\n * Get the value of `buffered` from the media element. `buffered` is a `TimeRange`\n * object that represents the parts of the media that are already downloaded and\n * available for playback.\n *\n * @method Html5#buffered\n * @return {TimeRange}\n *         The value of `buffered` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-buffered}\n */\n'buffered',\n/**\n * Get the value of `volume` from the media element. `volume` indicates\n * the current playback volume of audio for a media. `volume` will be a value from 0\n * (silent) to 1 (loudest and default).\n *\n * @method Html5#volume\n * @return {number}\n *         The value of `volume` from the media element. Value will be between 0-1.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-a-volume}\n */\n'volume',\n/**\n * Get the value of `poster` from the media element. `poster` indicates\n * that the url of an image file that can/will be shown when no media data is available.\n *\n * @method Html5#poster\n * @return {string}\n *         The value of `poster` from the media element. Value will be a url to an\n *         image.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-video-poster}\n */\n'poster',\n/**\n * Get the value of `preload` from the media element. `preload` indicates\n * what should download before the media is interacted with. It can have the following\n * values:\n * - none: nothing should be downloaded\n * - metadata: poster and the first few frames of the media may be downloaded to get\n *   media dimensions and other metadata\n * - auto: allow the media and metadata for the media to be downloaded before\n *    interaction\n *\n * @method Html5#preload\n * @return {string}\n *         The value of `preload` from the media element. Will be 'none', 'metadata',\n *         or 'auto'.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-preload}\n */\n'preload',\n/**\n * Get the value of the `error` from the media element. `error` indicates any\n * MediaError that may have occurred during playback. If error returns null there is no\n * current error.\n *\n * @method Html5#error\n * @return {MediaError|null}\n *         The value of `error` from the media element. Will be `MediaError` if there\n *         is a current error and null otherwise.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-error}\n */\n'error',\n/**\n * Get the value of `seeking` from the media element. `seeking` indicates whether the\n * media is currently seeking to a new position or not.\n *\n * @method Html5#seeking\n * @return {boolean}\n *         - The value of `seeking` from the media element.\n *         - True indicates that the media is currently seeking to a new position.\n *         - False indicates that the media is not seeking to a new position at this time.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-seeking}\n */\n'seeking',\n/**\n * Get the value of `seekable` from the media element. `seekable` returns a\n * `TimeRange` object indicating ranges of time that can currently be `seeked` to.\n *\n * @method Html5#seekable\n * @return {TimeRange}\n *         The value of `seekable` from the media element. A `TimeRange` object\n *         indicating the current ranges of time that can be seeked to.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-seekable}\n */\n'seekable',\n/**\n * Get the value of `ended` from the media element. `ended` indicates whether\n * the media has reached the end or not.\n *\n * @method Html5#ended\n * @return {boolean}\n *         - The value of `ended` from the media element.\n *         - True indicates that the media has ended.\n *         - False indicates that the media has not ended.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-ended}\n */\n'ended',\n/**\n * Get the value of `playbackRate` from the media element. `playbackRate` indicates\n * the rate at which the media is currently playing back. Examples:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5#playbackRate\n * @return {number}\n *         The value of `playbackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'playbackRate',\n/**\n * Get the value of `defaultPlaybackRate` from the media element. `defaultPlaybackRate` indicates\n * the rate at which the media is currently playing back. This value will not indicate the current\n * `playbackRate` after playback has started, use {@link Html5#playbackRate} for that.\n *\n * Examples:\n *   - if defaultPlaybackRate is set to 2, media will play twice as fast.\n *   - if defaultPlaybackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5.prototype.defaultPlaybackRate\n * @return {number}\n *         The value of `defaultPlaybackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'defaultPlaybackRate',\n/**\n * Get the value of 'disablePictureInPicture' from the video element.\n *\n * @method Html5#disablePictureInPicture\n * @return {boolean} value\n *         - The value of `disablePictureInPicture` from the video element.\n *         - True indicates that the video can't be played in Picture-In-Picture mode\n *         - False indicates that the video can be played in Picture-In-Picture mode\n *\n * @see [Spec]{@link https://w3c.github.io/picture-in-picture/#disable-pip}\n */\n'disablePictureInPicture',\n/**\n * Get the value of `played` from the media element. `played` returns a `TimeRange`\n * object representing points in the media timeline that have been played.\n *\n * @method Html5#played\n * @return {TimeRange}\n *         The value of `played` from the media element. A `TimeRange` object indicating\n *         the ranges of time that have been played.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-played}\n */\n'played',\n/**\n * Get the value of `networkState` from the media element. `networkState` indicates\n * the current network state. It returns an enumeration from the following list:\n * - 0: NETWORK_EMPTY\n * - 1: NETWORK_IDLE\n * - 2: NETWORK_LOADING\n * - 3: NETWORK_NO_SOURCE\n *\n * @method Html5#networkState\n * @return {number}\n *         The value of `networkState` from the media element. This will be a number\n *         from the list in the description.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-networkstate}\n */\n'networkState',\n/**\n * Get the value of `readyState` from the media element. `readyState` indicates\n * the current state of the media element. It returns an enumeration from the\n * following list:\n * - 0: HAVE_NOTHING\n * - 1: HAVE_METADATA\n * - 2: HAVE_CURRENT_DATA\n * - 3: HAVE_FUTURE_DATA\n * - 4: HAVE_ENOUGH_DATA\n *\n * @method Html5#readyState\n * @return {number}\n *         The value of `readyState` from the media element. This will be a number\n *         from the list in the description.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#ready-states}\n */\n'readyState',\n/**\n * Get the value of `videoWidth` from the video element. `videoWidth` indicates\n * the current width of the video in css pixels.\n *\n * @method Html5#videoWidth\n * @return {number}\n *         The value of `videoWidth` from the video element. This will be a number\n *         in css pixels.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-video-videowidth}\n */\n'videoWidth',\n/**\n * Get the value of `videoHeight` from the video element. `videoHeight` indicates\n * the current height of the video in css pixels.\n *\n * @method Html5#videoHeight\n * @return {number}\n *         The value of `videoHeight` from the video element. This will be a number\n *         in css pixels.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-video-videowidth}\n */\n'videoHeight',\n/**\n * Get the value of `crossOrigin` from the media element. `crossOrigin` indicates\n * to the browser that should sent the cookies along with the requests for the\n * different assets/playlists\n *\n * @method Html5#crossOrigin\n * @return {string}\n *         - anonymous indicates that the media should not sent cookies.\n *         - use-credentials indicates that the media should sent cookies along the requests.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-media-crossorigin}\n */\n'crossOrigin'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop];\n  };\n});\n\n// Wrap native properties with a setter in this format:\n// set + toTitleCase(name)\n// The list is as follows:\n// setVolume, setSrc, setPoster, setPreload, setPlaybackRate, setDefaultPlaybackRate,\n// setDisablePictureInPicture, setCrossOrigin\n[\n/**\n * Set the value of `volume` on the media element. `volume` indicates the current\n * audio level as a percentage in decimal form. This means that 1 is 100%, 0.5 is 50%, and\n * so on.\n *\n * @method Html5#setVolume\n * @param {number} percentAsDecimal\n *        The volume percent as a decimal. Valid range is from 0-1.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-a-volume}\n */\n'volume',\n/**\n * Set the value of `src` on the media element. `src` indicates the current\n * {@link Tech~SourceObject} for the media.\n *\n * @method Html5#setSrc\n * @param {Tech~SourceObject} src\n *        The source object to set as the current source.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-src}\n */\n'src',\n/**\n * Set the value of `poster` on the media element. `poster` is the url to\n * an image file that can/will be shown when no media data is available.\n *\n * @method Html5#setPoster\n * @param {string} poster\n *        The url to an image that should be used as the `poster` for the media\n *        element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-poster}\n */\n'poster',\n/**\n * Set the value of `preload` on the media element. `preload` indicates\n * what should download before the media is interacted with. It can have the following\n * values:\n * - none: nothing should be downloaded\n * - metadata: poster and the first few frames of the media may be downloaded to get\n *   media dimensions and other metadata\n * - auto: allow the media and metadata for the media to be downloaded before\n *    interaction\n *\n * @method Html5#setPreload\n * @param {string} preload\n *         The value of `preload` to set on the media element. Must be 'none', 'metadata',\n *         or 'auto'.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-preload}\n */\n'preload',\n/**\n * Set the value of `playbackRate` on the media element. `playbackRate` indicates\n * the rate at which the media should play back. Examples:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5#setPlaybackRate\n * @return {number}\n *         The value of `playbackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'playbackRate',\n/**\n * Set the value of `defaultPlaybackRate` on the media element. `defaultPlaybackRate` indicates\n * the rate at which the media should play back upon initial startup. Changing this value\n * after a video has started will do nothing. Instead you should used {@link Html5#setPlaybackRate}.\n *\n * Example Values:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5.prototype.setDefaultPlaybackRate\n * @return {number}\n *         The value of `defaultPlaybackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultplaybackrate}\n */\n'defaultPlaybackRate',\n/**\n * Prevents the browser from suggesting a Picture-in-Picture context menu\n * or to request Picture-in-Picture automatically in some cases.\n *\n * @method Html5#setDisablePictureInPicture\n * @param {boolean} value\n *         The true value will disable Picture-in-Picture mode.\n *\n * @see [Spec]{@link https://w3c.github.io/picture-in-picture/#disable-pip}\n */\n'disablePictureInPicture',\n/**\n * Set the value of `crossOrigin` from the media element. `crossOrigin` indicates\n * to the browser that should sent the cookies along with the requests for the\n * different assets/playlists\n *\n * @method Html5#setCrossOrigin\n * @param {string} crossOrigin\n *         - anonymous indicates that the media should not sent cookies.\n *         - use-credentials indicates that the media should sent cookies along the requests.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-media-crossorigin}\n */\n'crossOrigin'].forEach(function (prop) {\n  Html5.prototype['set' + toTitleCase$1(prop)] = function (v) {\n    this.el_[prop] = v;\n  };\n});\n\n// wrap native functions with a function\n// The list is as follows:\n// pause, load, play\n[\n/**\n * A wrapper around the media elements `pause` function. This will call the `HTML5`\n * media elements `pause` function.\n *\n * @method Html5#pause\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-pause}\n */\n'pause',\n/**\n * A wrapper around the media elements `load` function. This will call the `HTML5`s\n * media element `load` function.\n *\n * @method Html5#load\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-load}\n */\n'load',\n/**\n * A wrapper around the media elements `play` function. This will call the `HTML5`s\n * media element `play` function.\n *\n * @method Html5#play\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-play}\n */\n'play'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop]();\n  };\n});\nTech.withSourceHandlers(Html5);\n\n/**\n * Native source handler for Html5, simply passes the source to the media element.\n *\n * @property {Tech~SourceObject} source\n *        The source object\n *\n * @property {Html5} tech\n *        The instance of the HTML5 tech.\n */\nHtml5.nativeSourceHandler = {};\n\n/**\n * Check if the media element can play the given mime type.\n *\n * @param {string} type\n *        The mimetype to check\n *\n * @return {string}\n *         'probably', 'maybe', or '' (empty string)\n */\nHtml5.nativeSourceHandler.canPlayType = function (type) {\n  // IE without MediaPlayer throws an error (#519)\n  try {\n    return Html5.TEST_VID.canPlayType(type);\n  } catch (e) {\n    return '';\n  }\n};\n\n/**\n * Check if the media element can handle a source natively.\n *\n * @param {Tech~SourceObject} source\n *         The source object\n *\n * @param {Object} [options]\n *         Options to be passed to the tech.\n *\n * @return {string}\n *         'probably', 'maybe', or '' (empty string).\n */\nHtml5.nativeSourceHandler.canHandleSource = function (source, options) {\n  // If a type was provided we should rely on that\n  if (source.type) {\n    return Html5.nativeSourceHandler.canPlayType(source.type);\n\n    // If no type, fall back to checking 'video/[EXTENSION]'\n  } else if (source.src) {\n    const ext = getFileExtension(source.src);\n    return Html5.nativeSourceHandler.canPlayType(`video/${ext}`);\n  }\n  return '';\n};\n\n/**\n * Pass the source to the native media element.\n *\n * @param {Tech~SourceObject} source\n *        The source object\n *\n * @param {Html5} tech\n *        The instance of the Html5 tech\n *\n * @param {Object} [options]\n *        The options to pass to the source\n */\nHtml5.nativeSourceHandler.handleSource = function (source, tech, options) {\n  tech.setSrc(source.src);\n};\n\n/**\n * A noop for the native dispose function, as cleanup is not needed.\n */\nHtml5.nativeSourceHandler.dispose = function () {};\n\n// Register the native source handler\nHtml5.registerSourceHandler(Html5.nativeSourceHandler);\nTech.registerTech('Html5', Html5);\n\n/**\n * @file player.js\n */\n\n// The following tech events are simply re-triggered\n// on the player when they happen\nconst TECH_EVENTS_RETRIGGER = [\n/**\n * Fired while the user agent is downloading media data.\n *\n * @event Player#progress\n * @type {Event}\n */\n/**\n * Retrigger the `progress` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechProgress_\n * @fires Player#progress\n * @listens Tech#progress\n */\n'progress',\n/**\n * Fires when the loading of an audio/video is aborted.\n *\n * @event Player#abort\n * @type {Event}\n */\n/**\n * Retrigger the `abort` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechAbort_\n * @fires Player#abort\n * @listens Tech#abort\n */\n'abort',\n/**\n * Fires when the browser is intentionally not getting media data.\n *\n * @event Player#suspend\n * @type {Event}\n */\n/**\n * Retrigger the `suspend` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechSuspend_\n * @fires Player#suspend\n * @listens Tech#suspend\n */\n'suspend',\n/**\n * Fires when the current playlist is empty.\n *\n * @event Player#emptied\n * @type {Event}\n */\n/**\n * Retrigger the `emptied` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechEmptied_\n * @fires Player#emptied\n * @listens Tech#emptied\n */\n'emptied',\n/**\n * Fires when the browser is trying to get media data, but data is not available.\n *\n * @event Player#stalled\n * @type {Event}\n */\n/**\n * Retrigger the `stalled` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechStalled_\n * @fires Player#stalled\n * @listens Tech#stalled\n */\n'stalled',\n/**\n * Fires when the browser has loaded meta data for the audio/video.\n *\n * @event Player#loadedmetadata\n * @type {Event}\n */\n/**\n * Retrigger the `loadedmetadata` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechLoadedmetadata_\n * @fires Player#loadedmetadata\n * @listens Tech#loadedmetadata\n */\n'loadedmetadata',\n/**\n * Fires when the browser has loaded the current frame of the audio/video.\n *\n * @event Player#loadeddata\n * @type {event}\n */\n/**\n * Retrigger the `loadeddata` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechLoaddeddata_\n * @fires Player#loadeddata\n * @listens Tech#loadeddata\n */\n'loadeddata',\n/**\n * Fires when the current playback position has changed.\n *\n * @event Player#timeupdate\n * @type {event}\n */\n/**\n * Retrigger the `timeupdate` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechTimeUpdate_\n * @fires Player#timeupdate\n * @listens Tech#timeupdate\n */\n'timeupdate',\n/**\n * Fires when the video's intrinsic dimensions change\n *\n * @event Player#resize\n * @type {event}\n */\n/**\n * Retrigger the `resize` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechResize_\n * @fires Player#resize\n * @listens Tech#resize\n */\n'resize',\n/**\n * Fires when the volume has been changed\n *\n * @event Player#volumechange\n * @type {event}\n */\n/**\n * Retrigger the `volumechange` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechVolumechange_\n * @fires Player#volumechange\n * @listens Tech#volumechange\n */\n'volumechange',\n/**\n * Fires when the text track has been changed\n *\n * @event Player#texttrackchange\n * @type {event}\n */\n/**\n * Retrigger the `texttrackchange` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechTexttrackchange_\n * @fires Player#texttrackchange\n * @listens Tech#texttrackchange\n */\n'texttrackchange'];\n\n// events to queue when playback rate is zero\n// this is a hash for the sole purpose of mapping non-camel-cased event names\n// to camel-cased function names\nconst TECH_EVENTS_QUEUE = {\n  canplay: 'CanPlay',\n  canplaythrough: 'CanPlayThrough',\n  playing: 'Playing',\n  seeked: 'Seeked'\n};\nconst BREAKPOINT_ORDER = ['tiny', 'xsmall', 'small', 'medium', 'large', 'xlarge', 'huge'];\nconst BREAKPOINT_CLASSES = {};\n\n// grep: vjs-layout-tiny\n// grep: vjs-layout-x-small\n// grep: vjs-layout-small\n// grep: vjs-layout-medium\n// grep: vjs-layout-large\n// grep: vjs-layout-x-large\n// grep: vjs-layout-huge\nBREAKPOINT_ORDER.forEach(k => {\n  const v = k.charAt(0) === 'x' ? `x-${k.substring(1)}` : k;\n  BREAKPOINT_CLASSES[k] = `vjs-layout-${v}`;\n});\nconst DEFAULT_BREAKPOINTS = {\n  tiny: 210,\n  xsmall: 320,\n  small: 425,\n  medium: 768,\n  large: 1440,\n  xlarge: 2560,\n  huge: Infinity\n};\n\n/**\n * An instance of the `Player` class is created when any of the Video.js setup methods\n * are used to initialize a video.\n *\n * After an instance has been created it can be accessed globally in three ways:\n * 1. By calling `videojs.getPlayer('example_video_1');`\n * 2. By calling `videojs('example_video_1');` (not recomended)\n * 2. By using it directly via  `videojs.players.example_video_1;`\n *\n * @extends Component\n * @global\n */\nclass Player extends Component$1 {\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Element} tag\n   *        The original video DOM element used for configuring options.\n   *\n   * @param {Object} [options]\n   *        Object of option names and values.\n   *\n   * @param {Function} [ready]\n   *        Ready callback function.\n   */\n  constructor(tag, options, ready) {\n    // Make sure tag ID exists\n    tag.id = tag.id || options.id || `vjs_video_${newGUID()}`;\n\n    // Set Options\n    // The options argument overrides options set in the video tag\n    // which overrides globally set options.\n    // This latter part coincides with the load order\n    // (tag must exist before Player)\n    options = Object.assign(Player.getTagSettings(tag), options);\n\n    // Delay the initialization of children because we need to set up\n    // player properties first, and can't use `this` before `super()`\n    options.initChildren = false;\n\n    // Same with creating the element\n    options.createEl = false;\n\n    // don't auto mixin the evented mixin\n    options.evented = false;\n\n    // we don't want the player to report touch activity on itself\n    // see enableTouchActivity in Component\n    options.reportTouchActivity = false;\n\n    // If language is not set, get the closest lang attribute\n    if (!options.language) {\n      const closest = tag.closest('[lang]');\n      if (closest) {\n        options.language = closest.getAttribute('lang');\n      }\n    }\n\n    // Run base component initializing with new options\n    super(null, options, ready);\n\n    // Create bound methods for document listeners.\n    this.boundDocumentFullscreenChange_ = e => this.documentFullscreenChange_(e);\n    this.boundFullWindowOnEscKey_ = e => this.fullWindowOnEscKey(e);\n    this.boundUpdateStyleEl_ = e => this.updateStyleEl_(e);\n    this.boundApplyInitTime_ = e => this.applyInitTime_(e);\n    this.boundUpdateCurrentBreakpoint_ = e => this.updateCurrentBreakpoint_(e);\n    this.boundHandleTechClick_ = e => this.handleTechClick_(e);\n    this.boundHandleTechDoubleClick_ = e => this.handleTechDoubleClick_(e);\n    this.boundHandleTechTouchStart_ = e => this.handleTechTouchStart_(e);\n    this.boundHandleTechTouchMove_ = e => this.handleTechTouchMove_(e);\n    this.boundHandleTechTouchEnd_ = e => this.handleTechTouchEnd_(e);\n    this.boundHandleTechTap_ = e => this.handleTechTap_(e);\n\n    // default isFullscreen_ to false\n    this.isFullscreen_ = false;\n\n    // create logger\n    this.log = createLogger(this.id_);\n\n    // Hold our own reference to fullscreen api so it can be mocked in tests\n    this.fsApi_ = FullscreenApi;\n\n    // Tracks when a tech changes the poster\n    this.isPosterFromTech_ = false;\n\n    // Holds callback info that gets queued when playback rate is zero\n    // and a seek is happening\n    this.queuedCallbacks_ = [];\n\n    // Turn off API access because we're loading a new tech that might load asynchronously\n    this.isReady_ = false;\n\n    // Init state hasStarted_\n    this.hasStarted_ = false;\n\n    // Init state userActive_\n    this.userActive_ = false;\n\n    // Init debugEnabled_\n    this.debugEnabled_ = false;\n\n    // Init state audioOnlyMode_\n    this.audioOnlyMode_ = false;\n\n    // Init state audioPosterMode_\n    this.audioPosterMode_ = false;\n\n    // Init state audioOnlyCache_\n    this.audioOnlyCache_ = {\n      playerHeight: null,\n      hiddenChildren: []\n    };\n\n    // if the global option object was accidentally blown away by\n    // someone, bail early with an informative error\n    if (!this.options_ || !this.options_.techOrder || !this.options_.techOrder.length) {\n      throw new Error('No techOrder specified. Did you overwrite ' + 'videojs.options instead of just changing the ' + 'properties you want to override?');\n    }\n\n    // Store the original tag used to set options\n    this.tag = tag;\n\n    // Store the tag attributes used to restore html5 element\n    this.tagAttributes = tag && getAttributes(tag);\n\n    // Update current language\n    this.language(this.options_.language);\n\n    // Update Supported Languages\n    if (options.languages) {\n      // Normalise player option languages to lowercase\n      const languagesToLower = {};\n      Object.getOwnPropertyNames(options.languages).forEach(function (name) {\n        languagesToLower[name.toLowerCase()] = options.languages[name];\n      });\n      this.languages_ = languagesToLower;\n    } else {\n      this.languages_ = Player.prototype.options_.languages;\n    }\n    this.resetCache_();\n\n    // Set poster\n    this.poster_ = options.poster || '';\n\n    // Set controls\n    this.controls_ = !!options.controls;\n\n    // Original tag settings stored in options\n    // now remove immediately so native controls don't flash.\n    // May be turned back on by HTML5 tech if nativeControlsForTouch is true\n    tag.controls = false;\n    tag.removeAttribute('controls');\n    this.changingSrc_ = false;\n    this.playCallbacks_ = [];\n    this.playTerminatedQueue_ = [];\n\n    // the attribute overrides the option\n    if (tag.hasAttribute('autoplay')) {\n      this.autoplay(true);\n    } else {\n      // otherwise use the setter to validate and\n      // set the correct value.\n      this.autoplay(this.options_.autoplay);\n    }\n\n    // check plugins\n    if (options.plugins) {\n      Object.keys(options.plugins).forEach(name => {\n        if (typeof this[name] !== 'function') {\n          throw new Error(`plugin \"${name}\" does not exist`);\n        }\n      });\n    }\n\n    /*\n     * Store the internal state of scrubbing\n     *\n     * @private\n     * @return {Boolean} True if the user is scrubbing\n     */\n    this.scrubbing_ = false;\n    this.el_ = this.createEl();\n\n    // Make this an evented object and use `el_` as its event bus.\n    evented(this, {\n      eventBusKey: 'el_'\n    });\n\n    // listen to document and player fullscreenchange handlers so we receive those events\n    // before a user can receive them so we can update isFullscreen appropriately.\n    // make sure that we listen to fullscreenchange events before everything else to make sure that\n    // our isFullscreen method is updated properly for internal components as well as external.\n    if (this.fsApi_.requestFullscreen) {\n      on(document, this.fsApi_.fullscreenchange, this.boundDocumentFullscreenChange_);\n      this.on(this.fsApi_.fullscreenchange, this.boundDocumentFullscreenChange_);\n    }\n    if (this.fluid_) {\n      this.on(['playerreset', 'resize'], this.boundUpdateStyleEl_);\n    }\n    // We also want to pass the original player options to each component and plugin\n    // as well so they don't need to reach back into the player for options later.\n    // We also need to do another copy of this.options_ so we don't end up with\n    // an infinite loop.\n    const playerOptionsCopy = merge$1(this.options_);\n\n    // Load plugins\n    if (options.plugins) {\n      Object.keys(options.plugins).forEach(name => {\n        this[name](options.plugins[name]);\n      });\n    }\n\n    // Enable debug mode to fire debugon event for all plugins.\n    if (options.debug) {\n      this.debug(true);\n    }\n    this.options_.playerOptions = playerOptionsCopy;\n    this.middleware_ = [];\n    this.playbackRates(options.playbackRates);\n    this.initChildren();\n\n    // Set isAudio based on whether or not an audio tag was used\n    this.isAudio(tag.nodeName.toLowerCase() === 'audio');\n\n    // Update controls className. Can't do this when the controls are initially\n    // set because the element doesn't exist yet.\n    if (this.controls()) {\n      this.addClass('vjs-controls-enabled');\n    } else {\n      this.addClass('vjs-controls-disabled');\n    }\n\n    // Set ARIA label and region role depending on player type\n    this.el_.setAttribute('role', 'region');\n    if (this.isAudio()) {\n      this.el_.setAttribute('aria-label', this.localize('Audio Player'));\n    } else {\n      this.el_.setAttribute('aria-label', this.localize('Video Player'));\n    }\n    if (this.isAudio()) {\n      this.addClass('vjs-audio');\n    }\n\n    // TODO: Make this smarter. Toggle user state between touching/mousing\n    // using events, since devices can have both touch and mouse events.\n    // TODO: Make this check be performed again when the window switches between monitors\n    // (See https://github.com/videojs/video.js/issues/5683)\n    if (TOUCH_ENABLED) {\n      this.addClass('vjs-touch-enabled');\n    }\n\n    // iOS Safari has broken hover handling\n    if (!IS_IOS) {\n      this.addClass('vjs-workinghover');\n    }\n\n    // Make player easily findable by ID\n    Player.players[this.id_] = this;\n\n    // Add a major version class to aid css in plugins\n    const majorVersion = version$6.split('.')[0];\n    this.addClass(`vjs-v${majorVersion}`);\n\n    // When the player is first initialized, trigger activity so components\n    // like the control bar show themselves if needed\n    this.userActive(true);\n    this.reportUserActivity();\n    this.one('play', e => this.listenForUserActivity_(e));\n    this.on('keydown', e => this.handleKeyDown(e));\n    this.on('languagechange', e => this.handleLanguagechange(e));\n    this.breakpoints(this.options_.breakpoints);\n    this.responsive(this.options_.responsive);\n\n    // Calling both the audio mode methods after the player is fully\n    // setup to be able to listen to the events triggered by them\n    this.on('ready', () => {\n      // Calling the audioPosterMode method first so that\n      // the audioOnlyMode can take precedence when both options are set to true\n      this.audioPosterMode(this.options_.audioPosterMode);\n      this.audioOnlyMode(this.options_.audioOnlyMode);\n    });\n  }\n\n  /**\n   * Destroys the video player and does any necessary cleanup.\n   *\n   * This is especially helpful if you are dynamically adding and removing videos\n   * to/from the DOM.\n   *\n   * @fires Player#dispose\n   */\n  dispose() {\n    /**\n     * Called when the player is being disposed of.\n     *\n     * @event Player#dispose\n     * @type {Event}\n     */\n    this.trigger('dispose');\n    // prevent dispose from being called twice\n    this.off('dispose');\n\n    // Make sure all player-specific document listeners are unbound. This is\n    off(document, this.fsApi_.fullscreenchange, this.boundDocumentFullscreenChange_);\n    off(document, 'keydown', this.boundFullWindowOnEscKey_);\n    if (this.styleEl_ && this.styleEl_.parentNode) {\n      this.styleEl_.parentNode.removeChild(this.styleEl_);\n      this.styleEl_ = null;\n    }\n\n    // Kill reference to this player\n    Player.players[this.id_] = null;\n    if (this.tag && this.tag.player) {\n      this.tag.player = null;\n    }\n    if (this.el_ && this.el_.player) {\n      this.el_.player = null;\n    }\n    if (this.tech_) {\n      this.tech_.dispose();\n      this.isPosterFromTech_ = false;\n      this.poster_ = '';\n    }\n    if (this.playerElIngest_) {\n      this.playerElIngest_ = null;\n    }\n    if (this.tag) {\n      this.tag = null;\n    }\n    clearCacheForPlayer(this);\n\n    // remove all event handlers for track lists\n    // all tracks and track listeners are removed on\n    // tech dispose\n    ALL.names.forEach(name => {\n      const props = ALL[name];\n      const list = this[props.getterName]();\n\n      // if it is not a native list\n      // we have to manually remove event listeners\n      if (list && list.off) {\n        list.off();\n      }\n    });\n\n    // the actual .el_ is removed here, or replaced if\n    super.dispose({\n      restoreEl: this.options_.restoreEl\n    });\n  }\n\n  /**\n   * Create the `Player`'s DOM element.\n   *\n   * @return {Element}\n   *         The DOM element that gets created.\n   */\n  createEl() {\n    let tag = this.tag;\n    let el;\n    let playerElIngest = this.playerElIngest_ = tag.parentNode && tag.parentNode.hasAttribute && tag.parentNode.hasAttribute('data-vjs-player');\n    const divEmbed = this.tag.tagName.toLowerCase() === 'video-js';\n    if (playerElIngest) {\n      el = this.el_ = tag.parentNode;\n    } else if (!divEmbed) {\n      el = this.el_ = super.createEl('div');\n    }\n\n    // Copy over all the attributes from the tag, including ID and class\n    // ID will now reference player box, not the video tag\n    const attrs = getAttributes(tag);\n    if (divEmbed) {\n      el = this.el_ = tag;\n      tag = this.tag = document.createElement('video');\n      while (el.children.length) {\n        tag.appendChild(el.firstChild);\n      }\n      if (!hasClass(el, 'video-js')) {\n        addClass(el, 'video-js');\n      }\n      el.appendChild(tag);\n      playerElIngest = this.playerElIngest_ = el;\n      // move properties over from our custom `video-js` element\n      // to our new `video` element. This will move things like\n      // `src` or `controls` that were set via js before the player\n      // was initialized.\n      Object.keys(el).forEach(k => {\n        try {\n          tag[k] = el[k];\n        } catch (e) {\n          // we got a a property like outerHTML which we can't actually copy, ignore it\n        }\n      });\n    }\n\n    // set tabindex to -1 to remove the video element from the focus order\n    tag.setAttribute('tabindex', '-1');\n    attrs.tabindex = '-1';\n\n    // Workaround for #4583 on Chrome (on Windows) with JAWS.\n    // See https://github.com/FreedomScientific/VFO-standards-support/issues/78\n    // Note that we can't detect if JAWS is being used, but this ARIA attribute\n    // doesn't change behavior of Chrome if JAWS is not being used\n    if (IS_CHROME && IS_WINDOWS) {\n      tag.setAttribute('role', 'application');\n      attrs.role = 'application';\n    }\n\n    // Remove width/height attrs from tag so CSS can make it 100% width/height\n    tag.removeAttribute('width');\n    tag.removeAttribute('height');\n    if ('width' in attrs) {\n      delete attrs.width;\n    }\n    if ('height' in attrs) {\n      delete attrs.height;\n    }\n    Object.getOwnPropertyNames(attrs).forEach(function (attr) {\n      // don't copy over the class attribute to the player element when we're in a div embed\n      // the class is already set up properly in the divEmbed case\n      // and we want to make sure that the `video-js` class doesn't get lost\n      if (!(divEmbed && attr === 'class')) {\n        el.setAttribute(attr, attrs[attr]);\n      }\n      if (divEmbed) {\n        tag.setAttribute(attr, attrs[attr]);\n      }\n    });\n\n    // Update tag id/class for use as HTML5 playback tech\n    // Might think we should do this after embedding in container so .vjs-tech class\n    // doesn't flash 100% width/height, but class only applies with .video-js parent\n    tag.playerId = tag.id;\n    tag.id += '_html5_api';\n    tag.className = 'vjs-tech';\n\n    // Make player findable on elements\n    tag.player = el.player = this;\n    // Default state of video is paused\n    this.addClass('vjs-paused');\n\n    // Add a style element in the player that we'll use to set the width/height\n    // of the player in a way that's still overridable by CSS, just like the\n    // video element\n    if (window$1.VIDEOJS_NO_DYNAMIC_STYLE !== true) {\n      this.styleEl_ = createStyleElement('vjs-styles-dimensions');\n      const defaultsStyleEl = $('.vjs-styles-defaults');\n      const head = $('head');\n      head.insertBefore(this.styleEl_, defaultsStyleEl ? defaultsStyleEl.nextSibling : head.firstChild);\n    }\n    this.fill_ = false;\n    this.fluid_ = false;\n\n    // Pass in the width/height/aspectRatio options which will update the style el\n    this.width(this.options_.width);\n    this.height(this.options_.height);\n    this.fill(this.options_.fill);\n    this.fluid(this.options_.fluid);\n    this.aspectRatio(this.options_.aspectRatio);\n    // support both crossOrigin and crossorigin to reduce confusion and issues around the name\n    this.crossOrigin(this.options_.crossOrigin || this.options_.crossorigin);\n\n    // Hide any links within the video/audio tag,\n    // because IE doesn't hide them completely from screen readers.\n    const links = tag.getElementsByTagName('a');\n    for (let i = 0; i < links.length; i++) {\n      const linkEl = links.item(i);\n      addClass(linkEl, 'vjs-hidden');\n      linkEl.setAttribute('hidden', 'hidden');\n    }\n\n    // insertElFirst seems to cause the networkState to flicker from 3 to 2, so\n    // keep track of the original for later so we can know if the source originally failed\n    tag.initNetworkState_ = tag.networkState;\n\n    // Wrap video tag in div (el/box) container\n    if (tag.parentNode && !playerElIngest) {\n      tag.parentNode.insertBefore(el, tag);\n    }\n\n    // insert the tag as the first child of the player element\n    // then manually add it to the children array so that this.addChild\n    // will work properly for other components\n    //\n    // Breaks iPhone, fixed in HTML5 setup.\n    prependTo(tag, el);\n    this.children_.unshift(tag);\n\n    // Set lang attr on player to ensure CSS :lang() in consistent with player\n    // if it's been set to something different to the doc\n    this.el_.setAttribute('lang', this.language_);\n    this.el_.setAttribute('translate', 'no');\n    this.el_ = el;\n    return el;\n  }\n\n  /**\n   * Get or set the `Player`'s crossOrigin option. For the HTML5 player, this\n   * sets the `crossOrigin` property on the `<video>` tag to control the CORS\n   * behavior.\n   *\n   * @see [Video Element Attributes]{@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video#attr-crossorigin}\n   *\n   * @param {string|null} [value]\n   *        The value to set the `Player`'s crossOrigin to. If an argument is\n   *        given, must be one of `'anonymous'` or `'use-credentials'`, or 'null'.\n   *\n   * @return {string|null|undefined}\n   *         - The current crossOrigin value of the `Player` when getting.\n   *         - undefined when setting\n   */\n  crossOrigin(value) {\n    // `null` can be set to unset a value\n    if (typeof value === 'undefined') {\n      return this.techGet_('crossOrigin');\n    }\n    if (value !== null && value !== 'anonymous' && value !== 'use-credentials') {\n      log$1.warn(`crossOrigin must be null,  \"anonymous\" or \"use-credentials\", given \"${value}\"`);\n      return;\n    }\n    this.techCall_('setCrossOrigin', value);\n    if (this.posterImage) {\n      this.posterImage.crossOrigin(value);\n    }\n    return;\n  }\n\n  /**\n   * A getter/setter for the `Player`'s width. Returns the player's configured value.\n   * To get the current width use `currentWidth()`.\n   *\n   * @param {number} [value]\n   *        The value to set the `Player`'s width to.\n   *\n   * @return {number}\n   *         The current width of the `Player` when getting.\n   */\n  width(value) {\n    return this.dimension('width', value);\n  }\n\n  /**\n   * A getter/setter for the `Player`'s height. Returns the player's configured value.\n   * To get the current height use `currentheight()`.\n   *\n   * @param {number} [value]\n   *        The value to set the `Player`'s height to.\n   *\n   * @return {number}\n   *         The current height of the `Player` when getting.\n   */\n  height(value) {\n    return this.dimension('height', value);\n  }\n\n  /**\n   * A getter/setter for the `Player`'s width & height.\n   *\n   * @param {string} dimension\n   *        This string can be:\n   *        - 'width'\n   *        - 'height'\n   *\n   * @param {number} [value]\n   *        Value for dimension specified in the first argument.\n   *\n   * @return {number}\n   *         The dimension arguments value when getting (width/height).\n   */\n  dimension(dimension, value) {\n    const privDimension = dimension + '_';\n    if (value === undefined) {\n      return this[privDimension] || 0;\n    }\n    if (value === '' || value === 'auto') {\n      // If an empty string is given, reset the dimension to be automatic\n      this[privDimension] = undefined;\n      this.updateStyleEl_();\n      return;\n    }\n    const parsedVal = parseFloat(value);\n    if (isNaN(parsedVal)) {\n      log$1.error(`Improper value \"${value}\" supplied for for ${dimension}`);\n      return;\n    }\n    this[privDimension] = parsedVal;\n    this.updateStyleEl_();\n  }\n\n  /**\n   * A getter/setter/toggler for the vjs-fluid `className` on the `Player`.\n   *\n   * Turning this on will turn off fill mode.\n   *\n   * @param {boolean} [bool]\n   *        - A value of true adds the class.\n   *        - A value of false removes the class.\n   *        - No value will be a getter.\n   *\n   * @return {boolean|undefined}\n   *         - The value of fluid when getting.\n   *         - `undefined` when setting.\n   */\n  fluid(bool) {\n    if (bool === undefined) {\n      return !!this.fluid_;\n    }\n    this.fluid_ = !!bool;\n    if (isEvented(this)) {\n      this.off(['playerreset', 'resize'], this.boundUpdateStyleEl_);\n    }\n    if (bool) {\n      this.addClass('vjs-fluid');\n      this.fill(false);\n      addEventedCallback(this, () => {\n        this.on(['playerreset', 'resize'], this.boundUpdateStyleEl_);\n      });\n    } else {\n      this.removeClass('vjs-fluid');\n    }\n    this.updateStyleEl_();\n  }\n\n  /**\n   * A getter/setter/toggler for the vjs-fill `className` on the `Player`.\n   *\n   * Turning this on will turn off fluid mode.\n   *\n   * @param {boolean} [bool]\n   *        - A value of true adds the class.\n   *        - A value of false removes the class.\n   *        - No value will be a getter.\n   *\n   * @return {boolean|undefined}\n   *         - The value of fluid when getting.\n   *         - `undefined` when setting.\n   */\n  fill(bool) {\n    if (bool === undefined) {\n      return !!this.fill_;\n    }\n    this.fill_ = !!bool;\n    if (bool) {\n      this.addClass('vjs-fill');\n      this.fluid(false);\n    } else {\n      this.removeClass('vjs-fill');\n    }\n  }\n\n  /**\n   * Get/Set the aspect ratio\n   *\n   * @param {string} [ratio]\n   *        Aspect ratio for player\n   *\n   * @return {string|undefined}\n   *         returns the current aspect ratio when getting\n   */\n\n  /**\n   * A getter/setter for the `Player`'s aspect ratio.\n   *\n   * @param {string} [ratio]\n   *        The value to set the `Player`'s aspect ratio to.\n   *\n   * @return {string|undefined}\n   *         - The current aspect ratio of the `Player` when getting.\n   *         - undefined when setting\n   */\n  aspectRatio(ratio) {\n    if (ratio === undefined) {\n      return this.aspectRatio_;\n    }\n\n    // Check for width:height format\n    if (!/^\\d+\\:\\d+$/.test(ratio)) {\n      throw new Error('Improper value supplied for aspect ratio. The format should be width:height, for example 16:9.');\n    }\n    this.aspectRatio_ = ratio;\n\n    // We're assuming if you set an aspect ratio you want fluid mode,\n    // because in fixed mode you could calculate width and height yourself.\n    this.fluid(true);\n    this.updateStyleEl_();\n  }\n\n  /**\n   * Update styles of the `Player` element (height, width and aspect ratio).\n   *\n   * @private\n   * @listens Tech#loadedmetadata\n   */\n  updateStyleEl_() {\n    if (window$1.VIDEOJS_NO_DYNAMIC_STYLE === true) {\n      const width = typeof this.width_ === 'number' ? this.width_ : this.options_.width;\n      const height = typeof this.height_ === 'number' ? this.height_ : this.options_.height;\n      const techEl = this.tech_ && this.tech_.el();\n      if (techEl) {\n        if (width >= 0) {\n          techEl.width = width;\n        }\n        if (height >= 0) {\n          techEl.height = height;\n        }\n      }\n      return;\n    }\n    let width;\n    let height;\n    let aspectRatio;\n    let idClass;\n\n    // The aspect ratio is either used directly or to calculate width and height.\n    if (this.aspectRatio_ !== undefined && this.aspectRatio_ !== 'auto') {\n      // Use any aspectRatio that's been specifically set\n      aspectRatio = this.aspectRatio_;\n    } else if (this.videoWidth() > 0) {\n      // Otherwise try to get the aspect ratio from the video metadata\n      aspectRatio = this.videoWidth() + ':' + this.videoHeight();\n    } else {\n      // Or use a default. The video element's is 2:1, but 16:9 is more common.\n      aspectRatio = '16:9';\n    }\n\n    // Get the ratio as a decimal we can use to calculate dimensions\n    const ratioParts = aspectRatio.split(':');\n    const ratioMultiplier = ratioParts[1] / ratioParts[0];\n    if (this.width_ !== undefined) {\n      // Use any width that's been specifically set\n      width = this.width_;\n    } else if (this.height_ !== undefined) {\n      // Or calculate the width from the aspect ratio if a height has been set\n      width = this.height_ / ratioMultiplier;\n    } else {\n      // Or use the video's metadata, or use the video el's default of 300\n      width = this.videoWidth() || 300;\n    }\n    if (this.height_ !== undefined) {\n      // Use any height that's been specifically set\n      height = this.height_;\n    } else {\n      // Otherwise calculate the height from the ratio and the width\n      height = width * ratioMultiplier;\n    }\n\n    // Ensure the CSS class is valid by starting with an alpha character\n    if (/^[^a-zA-Z]/.test(this.id())) {\n      idClass = 'dimensions-' + this.id();\n    } else {\n      idClass = this.id() + '-dimensions';\n    }\n\n    // Ensure the right class is still on the player for the style element\n    this.addClass(idClass);\n    setTextContent(this.styleEl_, `\n      .${idClass} {\n        width: ${width}px;\n        height: ${height}px;\n      }\n\n      .${idClass}.vjs-fluid:not(.vjs-audio-only-mode) {\n        padding-top: ${ratioMultiplier * 100}%;\n      }\n    `);\n  }\n\n  /**\n   * Load/Create an instance of playback {@link Tech} including element\n   * and API methods. Then append the `Tech` element in `Player` as a child.\n   *\n   * @param {string} techName\n   *        name of the playback technology\n   *\n   * @param {string} source\n   *        video source\n   *\n   * @private\n   */\n  loadTech_(techName, source) {\n    // Pause and remove current playback technology\n    if (this.tech_) {\n      this.unloadTech_();\n    }\n    const titleTechName = toTitleCase$1(techName);\n    const camelTechName = techName.charAt(0).toLowerCase() + techName.slice(1);\n\n    // get rid of the HTML5 video tag as soon as we are using another tech\n    if (titleTechName !== 'Html5' && this.tag) {\n      Tech.getTech('Html5').disposeMediaElement(this.tag);\n      this.tag.player = null;\n      this.tag = null;\n    }\n    this.techName_ = titleTechName;\n\n    // Turn off API access because we're loading a new tech that might load asynchronously\n    this.isReady_ = false;\n    let autoplay = this.autoplay();\n\n    // if autoplay is a string (or `true` with normalizeAutoplay: true) we pass false to the tech\n    // because the player is going to handle autoplay on `loadstart`\n    if (typeof this.autoplay() === 'string' || this.autoplay() === true && this.options_.normalizeAutoplay) {\n      autoplay = false;\n    }\n\n    // Grab tech-specific options from player options and add source and parent element to use.\n    const techOptions = {\n      source,\n      autoplay,\n      'nativeControlsForTouch': this.options_.nativeControlsForTouch,\n      'playerId': this.id(),\n      'techId': `${this.id()}_${camelTechName}_api`,\n      'playsinline': this.options_.playsinline,\n      'preload': this.options_.preload,\n      'loop': this.options_.loop,\n      'disablePictureInPicture': this.options_.disablePictureInPicture,\n      'muted': this.options_.muted,\n      'poster': this.poster(),\n      'language': this.language(),\n      'playerElIngest': this.playerElIngest_ || false,\n      'vtt.js': this.options_['vtt.js'],\n      'canOverridePoster': !!this.options_.techCanOverridePoster,\n      'enableSourceset': this.options_.enableSourceset\n    };\n    ALL.names.forEach(name => {\n      const props = ALL[name];\n      techOptions[props.getterName] = this[props.privateName];\n    });\n    Object.assign(techOptions, this.options_[titleTechName]);\n    Object.assign(techOptions, this.options_[camelTechName]);\n    Object.assign(techOptions, this.options_[techName.toLowerCase()]);\n    if (this.tag) {\n      techOptions.tag = this.tag;\n    }\n    if (source && source.src === this.cache_.src && this.cache_.currentTime > 0) {\n      techOptions.startTime = this.cache_.currentTime;\n    }\n\n    // Initialize tech instance\n    const TechClass = Tech.getTech(techName);\n    if (!TechClass) {\n      throw new Error(`No Tech named '${titleTechName}' exists! '${titleTechName}' should be registered using videojs.registerTech()'`);\n    }\n    this.tech_ = new TechClass(techOptions);\n\n    // player.triggerReady is always async, so don't need this to be async\n    this.tech_.ready(bind_(this, this.handleTechReady_), true);\n    textTrackConverter.jsonToTextTracks(this.textTracksJson_ || [], this.tech_);\n\n    // Listen to all HTML5-defined events and trigger them on the player\n    TECH_EVENTS_RETRIGGER.forEach(event => {\n      this.on(this.tech_, event, e => this[`handleTech${toTitleCase$1(event)}_`](e));\n    });\n    Object.keys(TECH_EVENTS_QUEUE).forEach(event => {\n      this.on(this.tech_, event, eventObj => {\n        if (this.tech_.playbackRate() === 0 && this.tech_.seeking()) {\n          this.queuedCallbacks_.push({\n            callback: this[`handleTech${TECH_EVENTS_QUEUE[event]}_`].bind(this),\n            event: eventObj\n          });\n          return;\n        }\n        this[`handleTech${TECH_EVENTS_QUEUE[event]}_`](eventObj);\n      });\n    });\n    this.on(this.tech_, 'loadstart', e => this.handleTechLoadStart_(e));\n    this.on(this.tech_, 'sourceset', e => this.handleTechSourceset_(e));\n    this.on(this.tech_, 'waiting', e => this.handleTechWaiting_(e));\n    this.on(this.tech_, 'ended', e => this.handleTechEnded_(e));\n    this.on(this.tech_, 'seeking', e => this.handleTechSeeking_(e));\n    this.on(this.tech_, 'play', e => this.handleTechPlay_(e));\n    this.on(this.tech_, 'pause', e => this.handleTechPause_(e));\n    this.on(this.tech_, 'durationchange', e => this.handleTechDurationChange_(e));\n    this.on(this.tech_, 'fullscreenchange', (e, data) => this.handleTechFullscreenChange_(e, data));\n    this.on(this.tech_, 'fullscreenerror', (e, err) => this.handleTechFullscreenError_(e, err));\n    this.on(this.tech_, 'enterpictureinpicture', e => this.handleTechEnterPictureInPicture_(e));\n    this.on(this.tech_, 'leavepictureinpicture', e => this.handleTechLeavePictureInPicture_(e));\n    this.on(this.tech_, 'error', e => this.handleTechError_(e));\n    this.on(this.tech_, 'posterchange', e => this.handleTechPosterChange_(e));\n    this.on(this.tech_, 'textdata', e => this.handleTechTextData_(e));\n    this.on(this.tech_, 'ratechange', e => this.handleTechRateChange_(e));\n    this.on(this.tech_, 'loadedmetadata', this.boundUpdateStyleEl_);\n    this.usingNativeControls(this.techGet_('controls'));\n    if (this.controls() && !this.usingNativeControls()) {\n      this.addTechControlsListeners_();\n    }\n\n    // Add the tech element in the DOM if it was not already there\n    // Make sure to not insert the original video element if using Html5\n    if (this.tech_.el().parentNode !== this.el() && (titleTechName !== 'Html5' || !this.tag)) {\n      prependTo(this.tech_.el(), this.el());\n    }\n\n    // Get rid of the original video tag reference after the first tech is loaded\n    if (this.tag) {\n      this.tag.player = null;\n      this.tag = null;\n    }\n  }\n\n  /**\n   * Unload and dispose of the current playback {@link Tech}.\n   *\n   * @private\n   */\n  unloadTech_() {\n    // Save the current text tracks so that we can reuse the same text tracks with the next tech\n    ALL.names.forEach(name => {\n      const props = ALL[name];\n      this[props.privateName] = this[props.getterName]();\n    });\n    this.textTracksJson_ = textTrackConverter.textTracksToJson(this.tech_);\n    this.isReady_ = false;\n    this.tech_.dispose();\n    this.tech_ = false;\n    if (this.isPosterFromTech_) {\n      this.poster_ = '';\n      this.trigger('posterchange');\n    }\n    this.isPosterFromTech_ = false;\n  }\n\n  /**\n   * Return a reference to the current {@link Tech}.\n   * It will print a warning by default about the danger of using the tech directly\n   * but any argument that is passed in will silence the warning.\n   *\n   * @param {*} [safety]\n   *        Anything passed in to silence the warning\n   *\n   * @return {Tech}\n   *         The Tech\n   */\n  tech(safety) {\n    if (safety === undefined) {\n      log$1.warn('Using the tech directly can be dangerous. I hope you know what you\\'re doing.\\n' + 'See https://github.com/videojs/video.js/issues/2617 for more info.\\n');\n    }\n    return this.tech_;\n  }\n\n  /**\n   * Set up click and touch listeners for the playback element\n   *\n   * - On desktops: a click on the video itself will toggle playback\n   * - On mobile devices: a click on the video toggles controls\n   *   which is done by toggling the user state between active and\n   *   inactive\n   * - A tap can signal that a user has become active or has become inactive\n   *   e.g. a quick tap on an iPhone movie should reveal the controls. Another\n   *   quick tap should hide them again (signaling the user is in an inactive\n   *   viewing state)\n   * - In addition to this, we still want the user to be considered inactive after\n   *   a few seconds of inactivity.\n   *\n   * > Note: the only part of iOS interaction we can't mimic with this setup\n   * is a touch and hold on the video element counting as activity in order to\n   * keep the controls showing, but that shouldn't be an issue. A touch and hold\n   * on any controls will still keep the user active\n   *\n   * @private\n   */\n  addTechControlsListeners_() {\n    // Make sure to remove all the previous listeners in case we are called multiple times.\n    this.removeTechControlsListeners_();\n    this.on(this.tech_, 'click', this.boundHandleTechClick_);\n    this.on(this.tech_, 'dblclick', this.boundHandleTechDoubleClick_);\n\n    // If the controls were hidden we don't want that to change without a tap event\n    // so we'll check if the controls were already showing before reporting user\n    // activity\n    this.on(this.tech_, 'touchstart', this.boundHandleTechTouchStart_);\n    this.on(this.tech_, 'touchmove', this.boundHandleTechTouchMove_);\n    this.on(this.tech_, 'touchend', this.boundHandleTechTouchEnd_);\n\n    // The tap listener needs to come after the touchend listener because the tap\n    // listener cancels out any reportedUserActivity when setting userActive(false)\n    this.on(this.tech_, 'tap', this.boundHandleTechTap_);\n  }\n\n  /**\n   * Remove the listeners used for click and tap controls. This is needed for\n   * toggling to controls disabled, where a tap/touch should do nothing.\n   *\n   * @private\n   */\n  removeTechControlsListeners_() {\n    // We don't want to just use `this.off()` because there might be other needed\n    // listeners added by techs that extend this.\n    this.off(this.tech_, 'tap', this.boundHandleTechTap_);\n    this.off(this.tech_, 'touchstart', this.boundHandleTechTouchStart_);\n    this.off(this.tech_, 'touchmove', this.boundHandleTechTouchMove_);\n    this.off(this.tech_, 'touchend', this.boundHandleTechTouchEnd_);\n    this.off(this.tech_, 'click', this.boundHandleTechClick_);\n    this.off(this.tech_, 'dblclick', this.boundHandleTechDoubleClick_);\n  }\n\n  /**\n   * Player waits for the tech to be ready\n   *\n   * @private\n   */\n  handleTechReady_() {\n    this.triggerReady();\n\n    // Keep the same volume as before\n    if (this.cache_.volume) {\n      this.techCall_('setVolume', this.cache_.volume);\n    }\n\n    // Look if the tech found a higher resolution poster while loading\n    this.handleTechPosterChange_();\n\n    // Update the duration if available\n    this.handleTechDurationChange_();\n  }\n\n  /**\n   * Retrigger the `loadstart` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#loadstart\n   * @listens Tech#loadstart\n   * @private\n   */\n  handleTechLoadStart_() {\n    // TODO: Update to use `emptied` event instead. See #1277.\n\n    this.removeClass('vjs-ended', 'vjs-seeking');\n\n    // reset the error state\n    this.error(null);\n\n    // Update the duration\n    this.handleTechDurationChange_();\n    if (!this.paused()) {\n      /**\n       * Fired when the user agent begins looking for media data\n       *\n       * @event Player#loadstart\n       * @type {Event}\n       */\n      this.trigger('loadstart');\n    } else {\n      // reset the hasStarted state\n      this.hasStarted(false);\n      this.trigger('loadstart');\n    }\n\n    // autoplay happens after loadstart for the browser,\n    // so we mimic that behavior\n    this.manualAutoplay_(this.autoplay() === true && this.options_.normalizeAutoplay ? 'play' : this.autoplay());\n  }\n\n  /**\n   * Handle autoplay string values, rather than the typical boolean\n   * values that should be handled by the tech. Note that this is not\n   * part of any specification. Valid values and what they do can be\n   * found on the autoplay getter at Player#autoplay()\n   */\n  manualAutoplay_(type) {\n    if (!this.tech_ || typeof type !== 'string') {\n      return;\n    }\n\n    // Save original muted() value, set muted to true, and attempt to play().\n    // On promise rejection, restore muted from saved value\n    const resolveMuted = () => {\n      const previouslyMuted = this.muted();\n      this.muted(true);\n      const restoreMuted = () => {\n        this.muted(previouslyMuted);\n      };\n\n      // restore muted on play terminatation\n      this.playTerminatedQueue_.push(restoreMuted);\n      const mutedPromise = this.play();\n      if (!isPromise(mutedPromise)) {\n        return;\n      }\n      return mutedPromise.catch(err => {\n        restoreMuted();\n        throw new Error(`Rejection at manualAutoplay. Restoring muted value. ${err ? err : ''}`);\n      });\n    };\n    let promise;\n\n    // if muted defaults to true\n    // the only thing we can do is call play\n    if (type === 'any' && !this.muted()) {\n      promise = this.play();\n      if (isPromise(promise)) {\n        promise = promise.catch(resolveMuted);\n      }\n    } else if (type === 'muted' && !this.muted()) {\n      promise = resolveMuted();\n    } else {\n      promise = this.play();\n    }\n    if (!isPromise(promise)) {\n      return;\n    }\n    return promise.then(() => {\n      this.trigger({\n        type: 'autoplay-success',\n        autoplay: type\n      });\n    }).catch(() => {\n      this.trigger({\n        type: 'autoplay-failure',\n        autoplay: type\n      });\n    });\n  }\n\n  /**\n   * Update the internal source caches so that we return the correct source from\n   * `src()`, `currentSource()`, and `currentSources()`.\n   *\n   * > Note: `currentSources` will not be updated if the source that is passed in exists\n   *         in the current `currentSources` cache.\n   *\n   *\n   * @param {Tech~SourceObject} srcObj\n   *        A string or object source to update our caches to.\n   */\n  updateSourceCaches_(srcObj = '') {\n    let src = srcObj;\n    let type = '';\n    if (typeof src !== 'string') {\n      src = srcObj.src;\n      type = srcObj.type;\n    }\n\n    // make sure all the caches are set to default values\n    // to prevent null checking\n    this.cache_.source = this.cache_.source || {};\n    this.cache_.sources = this.cache_.sources || [];\n\n    // try to get the type of the src that was passed in\n    if (src && !type) {\n      type = findMimetype(this, src);\n    }\n\n    // update `currentSource` cache always\n    this.cache_.source = merge$1({}, srcObj, {\n      src,\n      type\n    });\n    const matchingSources = this.cache_.sources.filter(s => s.src && s.src === src);\n    const sourceElSources = [];\n    const sourceEls = this.$$('source');\n    const matchingSourceEls = [];\n    for (let i = 0; i < sourceEls.length; i++) {\n      const sourceObj = getAttributes(sourceEls[i]);\n      sourceElSources.push(sourceObj);\n      if (sourceObj.src && sourceObj.src === src) {\n        matchingSourceEls.push(sourceObj.src);\n      }\n    }\n\n    // if we have matching source els but not matching sources\n    // the current source cache is not up to date\n    if (matchingSourceEls.length && !matchingSources.length) {\n      this.cache_.sources = sourceElSources;\n      // if we don't have matching source or source els set the\n      // sources cache to the `currentSource` cache\n    } else if (!matchingSources.length) {\n      this.cache_.sources = [this.cache_.source];\n    }\n\n    // update the tech `src` cache\n    this.cache_.src = src;\n  }\n\n  /**\n   * *EXPERIMENTAL* Fired when the source is set or changed on the {@link Tech}\n   * causing the media element to reload.\n   *\n   * It will fire for the initial source and each subsequent source.\n   * This event is a custom event from Video.js and is triggered by the {@link Tech}.\n   *\n   * The event object for this event contains a `src` property that will contain the source\n   * that was available when the event was triggered. This is generally only necessary if Video.js\n   * is switching techs while the source was being changed.\n   *\n   * It is also fired when `load` is called on the player (or media element)\n   * because the {@link https://html.spec.whatwg.org/multipage/media.html#dom-media-load|specification for `load`}\n   * says that the resource selection algorithm needs to be aborted and restarted.\n   * In this case, it is very likely that the `src` property will be set to the\n   * empty string `\"\"` to indicate we do not know what the source will be but\n   * that it is changing.\n   *\n   * *This event is currently still experimental and may change in minor releases.*\n   * __To use this, pass `enableSourceset` option to the player.__\n   *\n   * @event Player#sourceset\n   * @type {Event}\n   * @prop {string} src\n   *                The source url available when the `sourceset` was triggered.\n   *                It will be an empty string if we cannot know what the source is\n   *                but know that the source will change.\n   */\n  /**\n   * Retrigger the `sourceset` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#sourceset\n   * @listens Tech#sourceset\n   * @private\n   */\n  handleTechSourceset_(event) {\n    // only update the source cache when the source\n    // was not updated using the player api\n    if (!this.changingSrc_) {\n      let updateSourceCaches = src => this.updateSourceCaches_(src);\n      const playerSrc = this.currentSource().src;\n      const eventSrc = event.src;\n\n      // if we have a playerSrc that is not a blob, and a tech src that is a blob\n      if (playerSrc && !/^blob:/.test(playerSrc) && /^blob:/.test(eventSrc)) {\n        // if both the tech source and the player source were updated we assume\n        // something like @videojs/http-streaming did the sourceset and skip updating the source cache.\n        if (!this.lastSource_ || this.lastSource_.tech !== eventSrc && this.lastSource_.player !== playerSrc) {\n          updateSourceCaches = () => {};\n        }\n      }\n\n      // update the source to the initial source right away\n      // in some cases this will be empty string\n      updateSourceCaches(eventSrc);\n\n      // if the `sourceset` `src` was an empty string\n      // wait for a `loadstart` to update the cache to `currentSrc`.\n      // If a sourceset happens before a `loadstart`, we reset the state\n      if (!event.src) {\n        this.tech_.any(['sourceset', 'loadstart'], e => {\n          // if a sourceset happens before a `loadstart` there\n          // is nothing to do as this `handleTechSourceset_`\n          // will be called again and this will be handled there.\n          if (e.type === 'sourceset') {\n            return;\n          }\n          const techSrc = this.techGet('currentSrc');\n          this.lastSource_.tech = techSrc;\n          this.updateSourceCaches_(techSrc);\n        });\n      }\n    }\n    this.lastSource_ = {\n      player: this.currentSource().src,\n      tech: event.src\n    };\n    this.trigger({\n      src: event.src,\n      type: 'sourceset'\n    });\n  }\n\n  /**\n   * Add/remove the vjs-has-started class\n   *\n   *\n   * @param {boolean} request\n   *        - true: adds the class\n   *        - false: remove the class\n   *\n   * @return {boolean}\n   *         the boolean value of hasStarted_\n   */\n  hasStarted(request) {\n    if (request === undefined) {\n      // act as getter, if we have no request to change\n      return this.hasStarted_;\n    }\n    if (request === this.hasStarted_) {\n      return;\n    }\n    this.hasStarted_ = request;\n    if (this.hasStarted_) {\n      this.addClass('vjs-has-started');\n    } else {\n      this.removeClass('vjs-has-started');\n    }\n  }\n\n  /**\n   * Fired whenever the media begins or resumes playback\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-play}\n   * @fires Player#play\n   * @listens Tech#play\n   * @private\n   */\n  handleTechPlay_() {\n    this.removeClass('vjs-ended', 'vjs-paused');\n    this.addClass('vjs-playing');\n\n    // hide the poster when the user hits play\n    this.hasStarted(true);\n    /**\n     * Triggered whenever an {@link Tech#play} event happens. Indicates that\n     * playback has started or resumed.\n     *\n     * @event Player#play\n     * @type {Event}\n     */\n    this.trigger('play');\n  }\n\n  /**\n   * Retrigger the `ratechange` event that was triggered by the {@link Tech}.\n   *\n   * If there were any events queued while the playback rate was zero, fire\n   * those events now.\n   *\n   * @private\n   * @method Player#handleTechRateChange_\n   * @fires Player#ratechange\n   * @listens Tech#ratechange\n   */\n  handleTechRateChange_() {\n    if (this.tech_.playbackRate() > 0 && this.cache_.lastPlaybackRate === 0) {\n      this.queuedCallbacks_.forEach(queued => queued.callback(queued.event));\n      this.queuedCallbacks_ = [];\n    }\n    this.cache_.lastPlaybackRate = this.tech_.playbackRate();\n    /**\n     * Fires when the playing speed of the audio/video is changed\n     *\n     * @event Player#ratechange\n     * @type {event}\n     */\n    this.trigger('ratechange');\n  }\n\n  /**\n   * Retrigger the `waiting` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#waiting\n   * @listens Tech#waiting\n   * @private\n   */\n  handleTechWaiting_() {\n    this.addClass('vjs-waiting');\n    /**\n     * A readyState change on the DOM element has caused playback to stop.\n     *\n     * @event Player#waiting\n     * @type {Event}\n     */\n    this.trigger('waiting');\n\n    // Browsers may emit a timeupdate event after a waiting event. In order to prevent\n    // premature removal of the waiting class, wait for the time to change.\n    const timeWhenWaiting = this.currentTime();\n    const timeUpdateListener = () => {\n      if (timeWhenWaiting !== this.currentTime()) {\n        this.removeClass('vjs-waiting');\n        this.off('timeupdate', timeUpdateListener);\n      }\n    };\n    this.on('timeupdate', timeUpdateListener);\n  }\n\n  /**\n   * Retrigger the `canplay` event that was triggered by the {@link Tech}.\n   * > Note: This is not consistent between browsers. See #1351\n   *\n   * @fires Player#canplay\n   * @listens Tech#canplay\n   * @private\n   */\n  handleTechCanPlay_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media has a readyState of HAVE_FUTURE_DATA or greater.\n     *\n     * @event Player#canplay\n     * @type {Event}\n     */\n    this.trigger('canplay');\n  }\n\n  /**\n   * Retrigger the `canplaythrough` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#canplaythrough\n   * @listens Tech#canplaythrough\n   * @private\n   */\n  handleTechCanPlayThrough_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media has a readyState of HAVE_ENOUGH_DATA or greater. This means that the\n     * entire media file can be played without buffering.\n     *\n     * @event Player#canplaythrough\n     * @type {Event}\n     */\n    this.trigger('canplaythrough');\n  }\n\n  /**\n   * Retrigger the `playing` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#playing\n   * @listens Tech#playing\n   * @private\n   */\n  handleTechPlaying_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media is no longer blocked from playback, and has started playing.\n     *\n     * @event Player#playing\n     * @type {Event}\n     */\n    this.trigger('playing');\n  }\n\n  /**\n   * Retrigger the `seeking` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#seeking\n   * @listens Tech#seeking\n   * @private\n   */\n  handleTechSeeking_() {\n    this.addClass('vjs-seeking');\n    /**\n     * Fired whenever the player is jumping to a new time\n     *\n     * @event Player#seeking\n     * @type {Event}\n     */\n    this.trigger('seeking');\n  }\n\n  /**\n   * Retrigger the `seeked` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#seeked\n   * @listens Tech#seeked\n   * @private\n   */\n  handleTechSeeked_() {\n    this.removeClass('vjs-seeking', 'vjs-ended');\n    /**\n     * Fired when the player has finished jumping to a new time\n     *\n     * @event Player#seeked\n     * @type {Event}\n     */\n    this.trigger('seeked');\n  }\n\n  /**\n   * Retrigger the `pause` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#pause\n   * @listens Tech#pause\n   * @private\n   */\n  handleTechPause_() {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-paused');\n    /**\n     * Fired whenever the media has been paused\n     *\n     * @event Player#pause\n     * @type {Event}\n     */\n    this.trigger('pause');\n  }\n\n  /**\n   * Retrigger the `ended` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#ended\n   * @listens Tech#ended\n   * @private\n   */\n  handleTechEnded_() {\n    this.addClass('vjs-ended');\n    this.removeClass('vjs-waiting');\n    if (this.options_.loop) {\n      this.currentTime(0);\n      this.play();\n    } else if (!this.paused()) {\n      this.pause();\n    }\n\n    /**\n     * Fired when the end of the media resource is reached (currentTime == duration)\n     *\n     * @event Player#ended\n     * @type {Event}\n     */\n    this.trigger('ended');\n  }\n\n  /**\n   * Fired when the duration of the media resource is first known or changed\n   *\n   * @listens Tech#durationchange\n   * @private\n   */\n  handleTechDurationChange_() {\n    this.duration(this.techGet_('duration'));\n  }\n\n  /**\n   * Handle a click on the media element to play/pause\n   *\n   * @param {Event} event\n   *        the event that caused this function to trigger\n   *\n   * @listens Tech#click\n   * @private\n   */\n  handleTechClick_(event) {\n    // When controls are disabled a click should not toggle playback because\n    // the click is considered a control\n    if (!this.controls_) {\n      return;\n    }\n    if (this.options_ === undefined || this.options_.userActions === undefined || this.options_.userActions.click === undefined || this.options_.userActions.click !== false) {\n      if (this.options_ !== undefined && this.options_.userActions !== undefined && typeof this.options_.userActions.click === 'function') {\n        this.options_.userActions.click.call(this, event);\n      } else if (this.paused()) {\n        silencePromise(this.play());\n      } else {\n        this.pause();\n      }\n    }\n  }\n\n  /**\n   * Handle a double-click on the media element to enter/exit fullscreen\n   *\n   * @param {Event} event\n   *        the event that caused this function to trigger\n   *\n   * @listens Tech#dblclick\n   * @private\n   */\n  handleTechDoubleClick_(event) {\n    if (!this.controls_) {\n      return;\n    }\n\n    // we do not want to toggle fullscreen state\n    // when double-clicking inside a control bar or a modal\n    const inAllowedEls = Array.prototype.some.call(this.$$('.vjs-control-bar, .vjs-modal-dialog'), el => el.contains(event.target));\n    if (!inAllowedEls) {\n      /*\n       * options.userActions.doubleClick\n       *\n       * If `undefined` or `true`, double-click toggles fullscreen if controls are present\n       * Set to `false` to disable double-click handling\n       * Set to a function to substitute an external double-click handler\n       */\n      if (this.options_ === undefined || this.options_.userActions === undefined || this.options_.userActions.doubleClick === undefined || this.options_.userActions.doubleClick !== false) {\n        if (this.options_ !== undefined && this.options_.userActions !== undefined && typeof this.options_.userActions.doubleClick === 'function') {\n          this.options_.userActions.doubleClick.call(this, event);\n        } else if (this.isFullscreen()) {\n          this.exitFullscreen();\n        } else {\n          this.requestFullscreen();\n        }\n      }\n    }\n  }\n\n  /**\n   * Handle a tap on the media element. It will toggle the user\n   * activity state, which hides and shows the controls.\n   *\n   * @listens Tech#tap\n   * @private\n   */\n  handleTechTap_() {\n    this.userActive(!this.userActive());\n  }\n\n  /**\n   * Handle touch to start\n   *\n   * @listens Tech#touchstart\n   * @private\n   */\n  handleTechTouchStart_() {\n    this.userWasActive = this.userActive();\n  }\n\n  /**\n   * Handle touch to move\n   *\n   * @listens Tech#touchmove\n   * @private\n   */\n  handleTechTouchMove_() {\n    if (this.userWasActive) {\n      this.reportUserActivity();\n    }\n  }\n\n  /**\n   * Handle touch to end\n   *\n   * @param {Event} event\n   *        the touchend event that triggered\n   *        this function\n   *\n   * @listens Tech#touchend\n   * @private\n   */\n  handleTechTouchEnd_(event) {\n    // Stop the mouse events from also happening\n    if (event.cancelable) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @private\n   */\n  toggleFullscreenClass_() {\n    if (this.isFullscreen()) {\n      this.addClass('vjs-fullscreen');\n    } else {\n      this.removeClass('vjs-fullscreen');\n    }\n  }\n\n  /**\n   * when the document fschange event triggers it calls this\n   */\n  documentFullscreenChange_(e) {\n    const targetPlayer = e.target.player;\n\n    // if another player was fullscreen\n    // do a null check for targetPlayer because older firefox's would put document as e.target\n    if (targetPlayer && targetPlayer !== this) {\n      return;\n    }\n    const el = this.el();\n    let isFs = document[this.fsApi_.fullscreenElement] === el;\n    if (!isFs && el.matches) {\n      isFs = el.matches(':' + this.fsApi_.fullscreen);\n    } else if (!isFs && el.msMatchesSelector) {\n      isFs = el.msMatchesSelector(':' + this.fsApi_.fullscreen);\n    }\n    this.isFullscreen(isFs);\n  }\n\n  /**\n   * Handle Tech Fullscreen Change\n   *\n   * @param {Event} event\n   *        the fullscreenchange event that triggered this function\n   *\n   * @param {Object} data\n   *        the data that was sent with the event\n   *\n   * @private\n   * @listens Tech#fullscreenchange\n   * @fires Player#fullscreenchange\n   */\n  handleTechFullscreenChange_(event, data) {\n    if (data) {\n      if (data.nativeIOSFullscreen) {\n        this.addClass('vjs-ios-native-fs');\n        this.tech_.one('webkitendfullscreen', () => {\n          this.removeClass('vjs-ios-native-fs');\n        });\n      }\n      this.isFullscreen(data.isFullscreen);\n    }\n  }\n  handleTechFullscreenError_(event, err) {\n    this.trigger('fullscreenerror', err);\n  }\n\n  /**\n   * @private\n   */\n  togglePictureInPictureClass_() {\n    if (this.isInPictureInPicture()) {\n      this.addClass('vjs-picture-in-picture');\n    } else {\n      this.removeClass('vjs-picture-in-picture');\n    }\n  }\n\n  /**\n   * Handle Tech Enter Picture-in-Picture.\n   *\n   * @param {Event} event\n   *        the enterpictureinpicture event that triggered this function\n   *\n   * @private\n   * @listens Tech#enterpictureinpicture\n   */\n  handleTechEnterPictureInPicture_(event) {\n    this.isInPictureInPicture(true);\n  }\n\n  /**\n   * Handle Tech Leave Picture-in-Picture.\n   *\n   * @param {Event} event\n   *        the leavepictureinpicture event that triggered this function\n   *\n   * @private\n   * @listens Tech#leavepictureinpicture\n   */\n  handleTechLeavePictureInPicture_(event) {\n    this.isInPictureInPicture(false);\n  }\n\n  /**\n   * Fires when an error occurred during the loading of an audio/video.\n   *\n   * @private\n   * @listens Tech#error\n   */\n  handleTechError_() {\n    const error = this.tech_.error();\n    this.error(error);\n  }\n\n  /**\n   * Retrigger the `textdata` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#textdata\n   * @listens Tech#textdata\n   * @private\n   */\n  handleTechTextData_() {\n    let data = null;\n    if (arguments.length > 1) {\n      data = arguments[1];\n    }\n\n    /**\n     * Fires when we get a textdata event from tech\n     *\n     * @event Player#textdata\n     * @type {Event}\n     */\n    this.trigger('textdata', data);\n  }\n\n  /**\n   * Get object for cached values.\n   *\n   * @return {Object}\n   *         get the current object cache\n   */\n  getCache() {\n    return this.cache_;\n  }\n\n  /**\n   * Resets the internal cache object.\n   *\n   * Using this function outside the player constructor or reset method may\n   * have unintended side-effects.\n   *\n   * @private\n   */\n  resetCache_() {\n    this.cache_ = {\n      // Right now, the currentTime is not _really_ cached because it is always\n      // retrieved from the tech (see: currentTime). However, for completeness,\n      // we set it to zero here to ensure that if we do start actually caching\n      // it, we reset it along with everything else.\n      currentTime: 0,\n      initTime: 0,\n      inactivityTimeout: this.options_.inactivityTimeout,\n      duration: NaN,\n      lastVolume: 1,\n      lastPlaybackRate: this.defaultPlaybackRate(),\n      media: null,\n      src: '',\n      source: {},\n      sources: [],\n      playbackRates: [],\n      volume: 1\n    };\n  }\n\n  /**\n   * Pass values to the playback tech\n   *\n   * @param {string} [method]\n   *        the method to call\n   *\n   * @param {Object} arg\n   *        the argument to pass\n   *\n   * @private\n   */\n  techCall_(method, arg) {\n    // If it's not ready yet, call method when it is\n\n    this.ready(function () {\n      if (method in allowedSetters) {\n        return set(this.middleware_, this.tech_, method, arg);\n      } else if (method in allowedMediators) {\n        return mediate(this.middleware_, this.tech_, method, arg);\n      }\n      try {\n        if (this.tech_) {\n          this.tech_[method](arg);\n        }\n      } catch (e) {\n        log$1(e);\n        throw e;\n      }\n    }, true);\n  }\n\n  /**\n   * Mediate attempt to call playback tech method\n   * and return the value of the method called.\n   *\n   * @param {string} method\n   *        Tech method\n   *\n   * @return {*}\n   *         Value returned by the tech method called, undefined if tech\n   *         is not ready or tech method is not present\n   *\n   * @private\n   */\n  techGet_(method) {\n    if (!this.tech_ || !this.tech_.isReady_) {\n      return;\n    }\n    if (method in allowedGetters) {\n      return get(this.middleware_, this.tech_, method);\n    } else if (method in allowedMediators) {\n      return mediate(this.middleware_, this.tech_, method);\n    }\n\n    // Log error when playback tech object is present but method\n    // is undefined or unavailable\n    try {\n      return this.tech_[method]();\n    } catch (e) {\n      // When building additional tech libs, an expected method may not be defined yet\n      if (this.tech_[method] === undefined) {\n        log$1(`Video.js: ${method} method not defined for ${this.techName_} playback technology.`, e);\n        throw e;\n      }\n\n      // When a method isn't available on the object it throws a TypeError\n      if (e.name === 'TypeError') {\n        log$1(`Video.js: ${method} unavailable on ${this.techName_} playback technology element.`, e);\n        this.tech_.isReady_ = false;\n        throw e;\n      }\n\n      // If error unknown, just log and throw\n      log$1(e);\n      throw e;\n    }\n  }\n\n  /**\n   * Attempt to begin playback at the first opportunity.\n   *\n   * @return {Promise|undefined}\n   *         Returns a promise if the browser supports Promises (or one\n   *         was passed in as an option). This promise will be resolved on\n   *         the return value of play. If this is undefined it will fulfill the\n   *         promise chain otherwise the promise chain will be fulfilled when\n   *         the promise from play is fulfilled.\n   */\n  play() {\n    return new Promise(resolve => {\n      this.play_(resolve);\n    });\n  }\n\n  /**\n   * The actual logic for play, takes a callback that will be resolved on the\n   * return value of play. This allows us to resolve to the play promise if there\n   * is one on modern browsers.\n   *\n   * @private\n   * @param {Function} [callback]\n   *        The callback that should be called when the techs play is actually called\n   */\n  play_(callback = silencePromise) {\n    this.playCallbacks_.push(callback);\n    const isSrcReady = Boolean(!this.changingSrc_ && (this.src() || this.currentSrc()));\n    const isSafariOrIOS = Boolean(IS_ANY_SAFARI || IS_IOS);\n\n    // treat calls to play_ somewhat like the `one` event function\n    if (this.waitToPlay_) {\n      this.off(['ready', 'loadstart'], this.waitToPlay_);\n      this.waitToPlay_ = null;\n    }\n\n    // if the player/tech is not ready or the src itself is not ready\n    // queue up a call to play on `ready` or `loadstart`\n    if (!this.isReady_ || !isSrcReady) {\n      this.waitToPlay_ = e => {\n        this.play_();\n      };\n      this.one(['ready', 'loadstart'], this.waitToPlay_);\n\n      // if we are in Safari, there is a high chance that loadstart will trigger after the gesture timeperiod\n      // in that case, we need to prime the video element by calling load so it'll be ready in time\n      if (!isSrcReady && isSafariOrIOS) {\n        this.load();\n      }\n      return;\n    }\n\n    // If the player/tech is ready and we have a source, we can attempt playback.\n    const val = this.techGet_('play');\n\n    // For native playback, reset the progress bar if we get a play call from a replay.\n    const isNativeReplay = isSafariOrIOS && this.hasClass('vjs-ended');\n    if (isNativeReplay) {\n      this.resetProgressBar_();\n    }\n    // play was terminated if the returned value is null\n    if (val === null) {\n      this.runPlayTerminatedQueue_();\n    } else {\n      this.runPlayCallbacks_(val);\n    }\n  }\n\n  /**\n   * These functions will be run when if play is terminated. If play\n   * runPlayCallbacks_ is run these function will not be run. This allows us\n   * to differentiate between a terminated play and an actual call to play.\n   */\n  runPlayTerminatedQueue_() {\n    const queue = this.playTerminatedQueue_.slice(0);\n    this.playTerminatedQueue_ = [];\n    queue.forEach(function (q) {\n      q();\n    });\n  }\n\n  /**\n   * When a callback to play is delayed we have to run these\n   * callbacks when play is actually called on the tech. This function\n   * runs the callbacks that were delayed and accepts the return value\n   * from the tech.\n   *\n   * @param {undefined|Promise} val\n   *        The return value from the tech.\n   */\n  runPlayCallbacks_(val) {\n    const callbacks = this.playCallbacks_.slice(0);\n    this.playCallbacks_ = [];\n    // clear play terminatedQueue since we finished a real play\n    this.playTerminatedQueue_ = [];\n    callbacks.forEach(function (cb) {\n      cb(val);\n    });\n  }\n\n  /**\n   * Pause the video playback\n   *\n   * @return {Player}\n   *         A reference to the player object this function was called on\n   */\n  pause() {\n    this.techCall_('pause');\n  }\n\n  /**\n   * Check if the player is paused or has yet to play\n   *\n   * @return {boolean}\n   *         - false: if the media is currently playing\n   *         - true: if media is not currently playing\n   */\n  paused() {\n    // The initial state of paused should be true (in Safari it's actually false)\n    return this.techGet_('paused') === false ? false : true;\n  }\n\n  /**\n   * Get a TimeRange object representing the current ranges of time that the user\n   * has played.\n   *\n   * @return { import('./utils/time').TimeRange }\n   *         A time range object that represents all the increments of time that have\n   *         been played.\n   */\n  played() {\n    return this.techGet_('played') || createTimeRanges$1(0, 0);\n  }\n\n  /**\n   * Returns whether or not the user is \"scrubbing\". Scrubbing is\n   * when the user has clicked the progress bar handle and is\n   * dragging it along the progress bar.\n   *\n   * @param {boolean} [isScrubbing]\n   *        whether the user is or is not scrubbing\n   *\n   * @return {boolean}\n   *         The value of scrubbing when getting\n   */\n  scrubbing(isScrubbing) {\n    if (typeof isScrubbing === 'undefined') {\n      return this.scrubbing_;\n    }\n    this.scrubbing_ = !!isScrubbing;\n    this.techCall_('setScrubbing', this.scrubbing_);\n    if (isScrubbing) {\n      this.addClass('vjs-scrubbing');\n    } else {\n      this.removeClass('vjs-scrubbing');\n    }\n  }\n\n  /**\n   * Get or set the current time (in seconds)\n   *\n   * @param {number|string} [seconds]\n   *        The time to seek to in seconds\n   *\n   * @return {number}\n   *         - the current time in seconds when getting\n   */\n  currentTime(seconds) {\n    if (typeof seconds !== 'undefined') {\n      if (seconds < 0) {\n        seconds = 0;\n      }\n      if (!this.isReady_ || this.changingSrc_ || !this.tech_ || !this.tech_.isReady_) {\n        this.cache_.initTime = seconds;\n        this.off('canplay', this.boundApplyInitTime_);\n        this.one('canplay', this.boundApplyInitTime_);\n        return;\n      }\n      this.techCall_('setCurrentTime', seconds);\n      this.cache_.initTime = 0;\n      return;\n    }\n\n    // cache last currentTime and return. default to 0 seconds\n    //\n    // Caching the currentTime is meant to prevent a massive amount of reads on the tech's\n    // currentTime when scrubbing, but may not provide much performance benefit after all.\n    // Should be tested. Also something has to read the actual current time or the cache will\n    // never get updated.\n    this.cache_.currentTime = this.techGet_('currentTime') || 0;\n    return this.cache_.currentTime;\n  }\n\n  /**\n   * Apply the value of initTime stored in cache as currentTime.\n   *\n   * @private\n   */\n  applyInitTime_() {\n    this.currentTime(this.cache_.initTime);\n  }\n\n  /**\n   * Normally gets the length in time of the video in seconds;\n   * in all but the rarest use cases an argument will NOT be passed to the method\n   *\n   * > **NOTE**: The video must have started loading before the duration can be\n   * known, and depending on preload behaviour may not be known until the video starts\n   * playing.\n   *\n   * @fires Player#durationchange\n   *\n   * @param {number} [seconds]\n   *        The duration of the video to set in seconds\n   *\n   * @return {number}\n   *         - The duration of the video in seconds when getting\n   */\n  duration(seconds) {\n    if (seconds === undefined) {\n      // return NaN if the duration is not known\n      return this.cache_.duration !== undefined ? this.cache_.duration : NaN;\n    }\n    seconds = parseFloat(seconds);\n\n    // Standardize on Infinity for signaling video is live\n    if (seconds < 0) {\n      seconds = Infinity;\n    }\n    if (seconds !== this.cache_.duration) {\n      // Cache the last set value for optimized scrubbing\n      this.cache_.duration = seconds;\n      if (seconds === Infinity) {\n        this.addClass('vjs-live');\n      } else {\n        this.removeClass('vjs-live');\n      }\n      if (!isNaN(seconds)) {\n        // Do not fire durationchange unless the duration value is known.\n        // @see [Spec]{@link https://www.w3.org/TR/2011/WD-html5-20110113/video.html#media-element-load-algorithm}\n\n        /**\n         * @event Player#durationchange\n         * @type {Event}\n         */\n        this.trigger('durationchange');\n      }\n    }\n  }\n\n  /**\n   * Calculates how much time is left in the video. Not part\n   * of the native video API.\n   *\n   * @return {number}\n   *         The time remaining in seconds\n   */\n  remainingTime() {\n    return this.duration() - this.currentTime();\n  }\n\n  /**\n   * A remaining time function that is intended to be used when\n   * the time is to be displayed directly to the user.\n   *\n   * @return {number}\n   *         The rounded time remaining in seconds\n   */\n  remainingTimeDisplay() {\n    return Math.floor(this.duration()) - Math.floor(this.currentTime());\n  }\n\n  //\n  // Kind of like an array of portions of the video that have been downloaded.\n\n  /**\n   * Get a TimeRange object with an array of the times of the video\n   * that have been downloaded. If you just want the percent of the\n   * video that's been downloaded, use bufferedPercent.\n   *\n   * @see [Buffered Spec]{@link http://dev.w3.org/html5/spec/video.html#dom-media-buffered}\n   *\n   * @return { import('./utils/time').TimeRange }\n   *         A mock {@link TimeRanges} object (following HTML spec)\n   */\n  buffered() {\n    let buffered = this.techGet_('buffered');\n    if (!buffered || !buffered.length) {\n      buffered = createTimeRanges$1(0, 0);\n    }\n    return buffered;\n  }\n\n  /**\n   * Get the percent (as a decimal) of the video that's been downloaded.\n   * This method is not a part of the native HTML video API.\n   *\n   * @return {number}\n   *         A decimal between 0 and 1 representing the percent\n   *         that is buffered 0 being 0% and 1 being 100%\n   */\n  bufferedPercent() {\n    return bufferedPercent(this.buffered(), this.duration());\n  }\n\n  /**\n   * Get the ending time of the last buffered time range\n   * This is used in the progress bar to encapsulate all time ranges.\n   *\n   * @return {number}\n   *         The end of the last buffered time range\n   */\n  bufferedEnd() {\n    const buffered = this.buffered();\n    const duration = this.duration();\n    let end = buffered.end(buffered.length - 1);\n    if (end > duration) {\n      end = duration;\n    }\n    return end;\n  }\n\n  /**\n   * Get or set the current volume of the media\n   *\n   * @param  {number} [percentAsDecimal]\n   *         The new volume as a decimal percent:\n   *         - 0 is muted/0%/off\n   *         - 1.0 is 100%/full\n   *         - 0.5 is half volume or 50%\n   *\n   * @return {number}\n   *         The current volume as a percent when getting\n   */\n  volume(percentAsDecimal) {\n    let vol;\n    if (percentAsDecimal !== undefined) {\n      // Force value to between 0 and 1\n      vol = Math.max(0, Math.min(1, parseFloat(percentAsDecimal)));\n      this.cache_.volume = vol;\n      this.techCall_('setVolume', vol);\n      if (vol > 0) {\n        this.lastVolume_(vol);\n      }\n      return;\n    }\n\n    // Default to 1 when returning current volume.\n    vol = parseFloat(this.techGet_('volume'));\n    return isNaN(vol) ? 1 : vol;\n  }\n\n  /**\n   * Get the current muted state, or turn mute on or off\n   *\n   * @param {boolean} [muted]\n   *        - true to mute\n   *        - false to unmute\n   *\n   * @return {boolean}\n   *         - true if mute is on and getting\n   *         - false if mute is off and getting\n   */\n  muted(muted) {\n    if (muted !== undefined) {\n      this.techCall_('setMuted', muted);\n      return;\n    }\n    return this.techGet_('muted') || false;\n  }\n\n  /**\n   * Get the current defaultMuted state, or turn defaultMuted on or off. defaultMuted\n   * indicates the state of muted on initial playback.\n   *\n   * ```js\n   *   var myPlayer = videojs('some-player-id');\n   *\n   *   myPlayer.src(\"http://www.example.com/path/to/video.mp4\");\n   *\n   *   // get, should be false\n   *   console.log(myPlayer.defaultMuted());\n   *   // set to true\n   *   myPlayer.defaultMuted(true);\n   *   // get should be true\n   *   console.log(myPlayer.defaultMuted());\n   * ```\n   *\n   * @param {boolean} [defaultMuted]\n   *        - true to mute\n   *        - false to unmute\n   *\n   * @return {boolean|Player}\n   *         - true if defaultMuted is on and getting\n   *         - false if defaultMuted is off and getting\n   *         - A reference to the current player when setting\n   */\n  defaultMuted(defaultMuted) {\n    if (defaultMuted !== undefined) {\n      return this.techCall_('setDefaultMuted', defaultMuted);\n    }\n    return this.techGet_('defaultMuted') || false;\n  }\n\n  /**\n   * Get the last volume, or set it\n   *\n   * @param  {number} [percentAsDecimal]\n   *         The new last volume as a decimal percent:\n   *         - 0 is muted/0%/off\n   *         - 1.0 is 100%/full\n   *         - 0.5 is half volume or 50%\n   *\n   * @return {number}\n   *         the current value of lastVolume as a percent when getting\n   *\n   * @private\n   */\n  lastVolume_(percentAsDecimal) {\n    if (percentAsDecimal !== undefined && percentAsDecimal !== 0) {\n      this.cache_.lastVolume = percentAsDecimal;\n      return;\n    }\n    return this.cache_.lastVolume;\n  }\n\n  /**\n   * Check if current tech can support native fullscreen\n   * (e.g. with built in controls like iOS)\n   *\n   * @return {boolean}\n   *         if native fullscreen is supported\n   */\n  supportsFullScreen() {\n    return this.techGet_('supportsFullScreen') || false;\n  }\n\n  /**\n   * Check if the player is in fullscreen mode or tell the player that it\n   * is or is not in fullscreen mode.\n   *\n   * > NOTE: As of the latest HTML5 spec, isFullscreen is no longer an official\n   * property and instead document.fullscreenElement is used. But isFullscreen is\n   * still a valuable property for internal player workings.\n   *\n   * @param  {boolean} [isFS]\n   *         Set the players current fullscreen state\n   *\n   * @return {boolean}\n   *         - true if fullscreen is on and getting\n   *         - false if fullscreen is off and getting\n   */\n  isFullscreen(isFS) {\n    if (isFS !== undefined) {\n      const oldValue = this.isFullscreen_;\n      this.isFullscreen_ = Boolean(isFS);\n\n      // if we changed fullscreen state and we're in prefixed mode, trigger fullscreenchange\n      // this is the only place where we trigger fullscreenchange events for older browsers\n      // fullWindow mode is treated as a prefixed event and will get a fullscreenchange event as well\n      if (this.isFullscreen_ !== oldValue && this.fsApi_.prefixed) {\n        /**\n           * @event Player#fullscreenchange\n           * @type {Event}\n           */\n        this.trigger('fullscreenchange');\n      }\n      this.toggleFullscreenClass_();\n      return;\n    }\n    return this.isFullscreen_;\n  }\n\n  /**\n   * Increase the size of the video to full screen\n   * In some browsers, full screen is not supported natively, so it enters\n   * \"full window mode\", where the video fills the browser window.\n   * In browsers and devices that support native full screen, sometimes the\n   * browser's default controls will be shown, and not the Video.js custom skin.\n   * This includes most mobile devices (iOS, Android) and older versions of\n   * Safari.\n   *\n   * @param  {Object} [fullscreenOptions]\n   *         Override the player fullscreen options\n   *\n   * @fires Player#fullscreenchange\n   */\n  requestFullscreen(fullscreenOptions) {\n    if (this.isInPictureInPicture()) {\n      this.exitPictureInPicture();\n    }\n    const self = this;\n    return new Promise((resolve, reject) => {\n      function offHandler() {\n        self.off('fullscreenerror', errorHandler);\n        self.off('fullscreenchange', changeHandler);\n      }\n      function changeHandler() {\n        offHandler();\n        resolve();\n      }\n      function errorHandler(e, err) {\n        offHandler();\n        reject(err);\n      }\n      self.one('fullscreenchange', changeHandler);\n      self.one('fullscreenerror', errorHandler);\n      const promise = self.requestFullscreenHelper_(fullscreenOptions);\n      if (promise) {\n        promise.then(offHandler, offHandler);\n        promise.then(resolve, reject);\n      }\n    });\n  }\n  requestFullscreenHelper_(fullscreenOptions) {\n    let fsOptions;\n\n    // Only pass fullscreen options to requestFullscreen in spec-compliant browsers.\n    // Use defaults or player configured option unless passed directly to this method.\n    if (!this.fsApi_.prefixed) {\n      fsOptions = this.options_.fullscreen && this.options_.fullscreen.options || {};\n      if (fullscreenOptions !== undefined) {\n        fsOptions = fullscreenOptions;\n      }\n    }\n\n    // This method works as follows:\n    // 1. if a fullscreen api is available, use it\n    //   1. call requestFullscreen with potential options\n    //   2. if we got a promise from above, use it to update isFullscreen()\n    // 2. otherwise, if the tech supports fullscreen, call `enterFullScreen` on it.\n    //   This is particularly used for iPhone, older iPads, and non-safari browser on iOS.\n    // 3. otherwise, use \"fullWindow\" mode\n    if (this.fsApi_.requestFullscreen) {\n      const promise = this.el_[this.fsApi_.requestFullscreen](fsOptions);\n\n      // Even on browsers with promise support this may not return a promise\n      if (promise) {\n        promise.then(() => this.isFullscreen(true), () => this.isFullscreen(false));\n      }\n      return promise;\n    } else if (this.tech_.supportsFullScreen() && !this.options_.preferFullWindow === true) {\n      // we can't take the video.js controls fullscreen but we can go fullscreen\n      // with native controls\n      this.techCall_('enterFullScreen');\n    } else {\n      // fullscreen isn't supported so we'll just stretch the video element to\n      // fill the viewport\n      this.enterFullWindow();\n    }\n  }\n\n  /**\n   * Return the video to its normal size after having been in full screen mode\n   *\n   * @fires Player#fullscreenchange\n   */\n  exitFullscreen() {\n    const self = this;\n    return new Promise((resolve, reject) => {\n      function offHandler() {\n        self.off('fullscreenerror', errorHandler);\n        self.off('fullscreenchange', changeHandler);\n      }\n      function changeHandler() {\n        offHandler();\n        resolve();\n      }\n      function errorHandler(e, err) {\n        offHandler();\n        reject(err);\n      }\n      self.one('fullscreenchange', changeHandler);\n      self.one('fullscreenerror', errorHandler);\n      const promise = self.exitFullscreenHelper_();\n      if (promise) {\n        promise.then(offHandler, offHandler);\n        // map the promise to our resolve/reject methods\n        promise.then(resolve, reject);\n      }\n    });\n  }\n  exitFullscreenHelper_() {\n    if (this.fsApi_.requestFullscreen) {\n      const promise = document[this.fsApi_.exitFullscreen]();\n\n      // Even on browsers with promise support this may not return a promise\n      if (promise) {\n        // we're splitting the promise here, so, we want to catch the\n        // potential error so that this chain doesn't have unhandled errors\n        silencePromise(promise.then(() => this.isFullscreen(false)));\n      }\n      return promise;\n    } else if (this.tech_.supportsFullScreen() && !this.options_.preferFullWindow === true) {\n      this.techCall_('exitFullScreen');\n    } else {\n      this.exitFullWindow();\n    }\n  }\n\n  /**\n   * When fullscreen isn't supported we can stretch the\n   * video container to as wide as the browser will let us.\n   *\n   * @fires Player#enterFullWindow\n   */\n  enterFullWindow() {\n    this.isFullscreen(true);\n    this.isFullWindow = true;\n\n    // Storing original doc overflow value to return to when fullscreen is off\n    this.docOrigOverflow = document.documentElement.style.overflow;\n\n    // Add listener for esc key to exit fullscreen\n    on(document, 'keydown', this.boundFullWindowOnEscKey_);\n\n    // Hide any scroll bars\n    document.documentElement.style.overflow = 'hidden';\n\n    // Apply fullscreen styles\n    addClass(document.body, 'vjs-full-window');\n\n    /**\n     * @event Player#enterFullWindow\n     * @type {Event}\n     */\n    this.trigger('enterFullWindow');\n  }\n\n  /**\n   * Check for call to either exit full window or\n   * full screen on ESC key\n   *\n   * @param {string} event\n   *        Event to check for key press\n   */\n  fullWindowOnEscKey(event) {\n    if (keycode.isEventKey(event, 'Esc')) {\n      if (this.isFullscreen() === true) {\n        if (!this.isFullWindow) {\n          this.exitFullscreen();\n        } else {\n          this.exitFullWindow();\n        }\n      }\n    }\n  }\n\n  /**\n   * Exit full window\n   *\n   * @fires Player#exitFullWindow\n   */\n  exitFullWindow() {\n    this.isFullscreen(false);\n    this.isFullWindow = false;\n    off(document, 'keydown', this.boundFullWindowOnEscKey_);\n\n    // Unhide scroll bars.\n    document.documentElement.style.overflow = this.docOrigOverflow;\n\n    // Remove fullscreen styles\n    removeClass(document.body, 'vjs-full-window');\n\n    // Resize the box, controller, and poster to original sizes\n    // this.positionAll();\n    /**\n     * @event Player#exitFullWindow\n     * @type {Event}\n     */\n    this.trigger('exitFullWindow');\n  }\n\n  /**\n   * Disable Picture-in-Picture mode.\n   *\n   * @param {boolean} value\n   *                  - true will disable Picture-in-Picture mode\n   *                  - false will enable Picture-in-Picture mode\n   */\n  disablePictureInPicture(value) {\n    if (value === undefined) {\n      return this.techGet_('disablePictureInPicture');\n    }\n    this.techCall_('setDisablePictureInPicture', value);\n    this.options_.disablePictureInPicture = value;\n    this.trigger('disablepictureinpicturechanged');\n  }\n\n  /**\n   * Check if the player is in Picture-in-Picture mode or tell the player that it\n   * is or is not in Picture-in-Picture mode.\n   *\n   * @param  {boolean} [isPiP]\n   *         Set the players current Picture-in-Picture state\n   *\n   * @return {boolean}\n   *         - true if Picture-in-Picture is on and getting\n   *         - false if Picture-in-Picture is off and getting\n   */\n  isInPictureInPicture(isPiP) {\n    if (isPiP !== undefined) {\n      this.isInPictureInPicture_ = !!isPiP;\n      this.togglePictureInPictureClass_();\n      return;\n    }\n    return !!this.isInPictureInPicture_;\n  }\n\n  /**\n   * Create a floating video window always on top of other windows so that users may\n   * continue consuming media while they interact with other content sites, or\n   * applications on their device.\n   *\n   * This can use document picture-in-picture or element picture in picture\n   *\n   * Set `enableDocumentPictureInPicture` to `true` to use docPiP on a supported browser\n   * Else set `disablePictureInPicture` to `false` to disable elPiP on a supported browser\n   *\n   *\n   * @see [Spec]{@link https://w3c.github.io/picture-in-picture/}\n   * @see [Spec]{@link https://wicg.github.io/document-picture-in-picture/}\n   *\n   * @fires Player#enterpictureinpicture\n   *\n   * @return {Promise}\n   *         A promise with a Picture-in-Picture window.\n   */\n  requestPictureInPicture() {\n    if (this.options_.enableDocumentPictureInPicture && window$1.documentPictureInPicture) {\n      const pipContainer = document.createElement(this.el().tagName);\n      pipContainer.classList = this.el().classList;\n      pipContainer.classList.add('vjs-pip-container');\n      if (this.posterImage) {\n        pipContainer.appendChild(this.posterImage.el().cloneNode(true));\n      }\n      if (this.titleBar) {\n        pipContainer.appendChild(this.titleBar.el().cloneNode(true));\n      }\n      pipContainer.appendChild(createEl('p', {\n        className: 'vjs-pip-text'\n      }, {}, this.localize('Playing in picture-in-picture')));\n      return window$1.documentPictureInPicture.requestWindow({\n        // The aspect ratio won't be correct, Chrome bug https://crbug.com/1407629\n        initialAspectRatio: this.videoWidth() / this.videoHeight(),\n        copyStyleSheets: true\n      }).then(pipWindow => {\n        this.el_.parentNode.insertBefore(pipContainer, this.el_);\n        pipWindow.document.body.append(this.el_);\n        pipWindow.document.body.classList.add('vjs-pip-window');\n        this.player_.isInPictureInPicture(true);\n        this.player_.trigger('enterpictureinpicture');\n\n        // Listen for the PiP closing event to move the video back.\n        pipWindow.addEventListener('unload', event => {\n          const pipVideo = event.target.querySelector('.video-js');\n          pipContainer.replaceWith(pipVideo);\n          this.player_.isInPictureInPicture(false);\n          this.player_.trigger('leavepictureinpicture');\n        });\n        return pipWindow;\n      });\n    }\n    if ('pictureInPictureEnabled' in document && this.disablePictureInPicture() === false) {\n      /**\n       * This event fires when the player enters picture in picture mode\n       *\n       * @event Player#enterpictureinpicture\n       * @type {Event}\n       */\n      return this.techGet_('requestPictureInPicture');\n    }\n    return Promise.reject('No PiP mode is available');\n  }\n\n  /**\n   * Exit Picture-in-Picture mode.\n   *\n   * @see [Spec]{@link https://wicg.github.io/picture-in-picture}\n   *\n   * @fires Player#leavepictureinpicture\n   *\n   * @return {Promise}\n   *         A promise.\n   */\n  exitPictureInPicture() {\n    if (window$1.documentPictureInPicture && window$1.documentPictureInPicture.window) {\n      // With documentPictureInPicture, Player#leavepictureinpicture is fired in the unload handler\n      window$1.documentPictureInPicture.window.close();\n      return Promise.resolve();\n    }\n    if ('pictureInPictureEnabled' in document) {\n      /**\n       * This event fires when the player leaves picture in picture mode\n       *\n       * @event Player#leavepictureinpicture\n       * @type {Event}\n       */\n      return document.exitPictureInPicture();\n    }\n  }\n\n  /**\n   * Called when this Player has focus and a key gets pressed down, or when\n   * any Component of this player receives a key press that it doesn't handle.\n   * This allows player-wide hotkeys (either as defined below, or optionally\n   * by an external function).\n   *\n   * @param {Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  handleKeyDown(event) {\n    const {\n      userActions\n    } = this.options_;\n\n    // Bail out if hotkeys are not configured.\n    if (!userActions || !userActions.hotkeys) {\n      return;\n    }\n\n    // Function that determines whether or not to exclude an element from\n    // hotkeys handling.\n    const excludeElement = el => {\n      const tagName = el.tagName.toLowerCase();\n\n      // The first and easiest test is for `contenteditable` elements.\n      if (el.isContentEditable) {\n        return true;\n      }\n\n      // Inputs matching these types will still trigger hotkey handling as\n      // they are not text inputs.\n      const allowedInputTypes = ['button', 'checkbox', 'hidden', 'radio', 'reset', 'submit'];\n      if (tagName === 'input') {\n        return allowedInputTypes.indexOf(el.type) === -1;\n      }\n\n      // The final test is by tag name. These tags will be excluded entirely.\n      const excludedTags = ['textarea'];\n      return excludedTags.indexOf(tagName) !== -1;\n    };\n\n    // Bail out if the user is focused on an interactive form element.\n    if (excludeElement(this.el_.ownerDocument.activeElement)) {\n      return;\n    }\n    if (typeof userActions.hotkeys === 'function') {\n      userActions.hotkeys.call(this, event);\n    } else {\n      this.handleHotkeys(event);\n    }\n  }\n\n  /**\n   * Called when this Player receives a hotkey keydown event.\n   * Supported player-wide hotkeys are:\n   *\n   *   f          - toggle fullscreen\n   *   m          - toggle mute\n   *   k or Space - toggle play/pause\n   *\n   * @param {Event} event\n   *        The `keydown` event that caused this function to be called.\n   */\n  handleHotkeys(event) {\n    const hotkeys = this.options_.userActions ? this.options_.userActions.hotkeys : {};\n\n    // set fullscreenKey, muteKey, playPauseKey from `hotkeys`, use defaults if not set\n    const {\n      fullscreenKey = keydownEvent => keycode.isEventKey(keydownEvent, 'f'),\n      muteKey = keydownEvent => keycode.isEventKey(keydownEvent, 'm'),\n      playPauseKey = keydownEvent => keycode.isEventKey(keydownEvent, 'k') || keycode.isEventKey(keydownEvent, 'Space')\n    } = hotkeys;\n    if (fullscreenKey.call(this, event)) {\n      event.preventDefault();\n      event.stopPropagation();\n      const FSToggle = Component$1.getComponent('FullscreenToggle');\n      if (document[this.fsApi_.fullscreenEnabled] !== false) {\n        FSToggle.prototype.handleClick.call(this, event);\n      }\n    } else if (muteKey.call(this, event)) {\n      event.preventDefault();\n      event.stopPropagation();\n      const MuteToggle = Component$1.getComponent('MuteToggle');\n      MuteToggle.prototype.handleClick.call(this, event);\n    } else if (playPauseKey.call(this, event)) {\n      event.preventDefault();\n      event.stopPropagation();\n      const PlayToggle = Component$1.getComponent('PlayToggle');\n      PlayToggle.prototype.handleClick.call(this, event);\n    }\n  }\n\n  /**\n   * Check whether the player can play a given mimetype\n   *\n   * @see https://www.w3.org/TR/2011/WD-html5-20110113/video.html#dom-navigator-canplaytype\n   *\n   * @param {string} type\n   *        The mimetype to check\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n  canPlayType(type) {\n    let can;\n\n    // Loop through each playback technology in the options order\n    for (let i = 0, j = this.options_.techOrder; i < j.length; i++) {\n      const techName = j[i];\n      let tech = Tech.getTech(techName);\n\n      // Support old behavior of techs being registered as components.\n      // Remove once that deprecated behavior is removed.\n      if (!tech) {\n        tech = Component$1.getComponent(techName);\n      }\n\n      // Check if the current tech is defined before continuing\n      if (!tech) {\n        log$1.error(`The \"${techName}\" tech is undefined. Skipped browser support check for that tech.`);\n        continue;\n      }\n\n      // Check if the browser supports this technology\n      if (tech.isSupported()) {\n        can = tech.canPlayType(type);\n        if (can) {\n          return can;\n        }\n      }\n    }\n    return '';\n  }\n\n  /**\n   * Select source based on tech-order or source-order\n   * Uses source-order selection if `options.sourceOrder` is truthy. Otherwise,\n   * defaults to tech-order selection\n   *\n   * @param {Array} sources\n   *        The sources for a media asset\n   *\n   * @return {Object|boolean}\n   *         Object of source and tech order or false\n   */\n  selectSource(sources) {\n    // Get only the techs specified in `techOrder` that exist and are supported by the\n    // current platform\n    const techs = this.options_.techOrder.map(techName => {\n      return [techName, Tech.getTech(techName)];\n    }).filter(([techName, tech]) => {\n      // Check if the current tech is defined before continuing\n      if (tech) {\n        // Check if the browser supports this technology\n        return tech.isSupported();\n      }\n      log$1.error(`The \"${techName}\" tech is undefined. Skipped browser support check for that tech.`);\n      return false;\n    });\n\n    // Iterate over each `innerArray` element once per `outerArray` element and execute\n    // `tester` with both. If `tester` returns a non-falsy value, exit early and return\n    // that value.\n    const findFirstPassingTechSourcePair = function (outerArray, innerArray, tester) {\n      let found;\n      outerArray.some(outerChoice => {\n        return innerArray.some(innerChoice => {\n          found = tester(outerChoice, innerChoice);\n          if (found) {\n            return true;\n          }\n        });\n      });\n      return found;\n    };\n    let foundSourceAndTech;\n    const flip = fn => (a, b) => fn(b, a);\n    const finder = ([techName, tech], source) => {\n      if (tech.canPlaySource(source, this.options_[techName.toLowerCase()])) {\n        return {\n          source,\n          tech: techName\n        };\n      }\n    };\n\n    // Depending on the truthiness of `options.sourceOrder`, we swap the order of techs and sources\n    // to select from them based on their priority.\n    if (this.options_.sourceOrder) {\n      // Source-first ordering\n      foundSourceAndTech = findFirstPassingTechSourcePair(sources, techs, flip(finder));\n    } else {\n      // Tech-first ordering\n      foundSourceAndTech = findFirstPassingTechSourcePair(techs, sources, finder);\n    }\n    return foundSourceAndTech || false;\n  }\n\n  /**\n   * Executes source setting and getting logic\n   *\n   * @param {Tech~SourceObject|Tech~SourceObject[]|string} [source]\n   *        A SourceObject, an array of SourceObjects, or a string referencing\n   *        a URL to a media source. It is _highly recommended_ that an object\n   *        or array of objects is used here, so that source selection\n   *        algorithms can take the `type` into account.\n   *\n   *        If not provided, this method acts as a getter.\n   * @param {boolean} isRetry\n   *        Indicates whether this is being called internally as a result of a retry\n   *\n   * @return {string|undefined}\n   *         If the `source` argument is missing, returns the current source\n   *         URL. Otherwise, returns nothing/undefined.\n   */\n  handleSrc_(source, isRetry) {\n    // getter usage\n    if (typeof source === 'undefined') {\n      return this.cache_.src || '';\n    }\n\n    // Reset retry behavior for new source\n    if (this.resetRetryOnError_) {\n      this.resetRetryOnError_();\n    }\n\n    // filter out invalid sources and turn our source into\n    // an array of source objects\n    const sources = filterSource(source);\n\n    // if a source was passed in then it is invalid because\n    // it was filtered to a zero length Array. So we have to\n    // show an error\n    if (!sources.length) {\n      this.setTimeout(function () {\n        this.error({\n          code: 4,\n          message: this.options_.notSupportedMessage\n        });\n      }, 0);\n      return;\n    }\n\n    // initial sources\n    this.changingSrc_ = true;\n\n    // Only update the cached source list if we are not retrying a new source after error,\n    // since in that case we want to include the failed source(s) in the cache\n    if (!isRetry) {\n      this.cache_.sources = sources;\n    }\n    this.updateSourceCaches_(sources[0]);\n\n    // middlewareSource is the source after it has been changed by middleware\n    setSource(this, sources[0], (middlewareSource, mws) => {\n      this.middleware_ = mws;\n\n      // since sourceSet is async we have to update the cache again after we select a source since\n      // the source that is selected could be out of order from the cache update above this callback.\n      if (!isRetry) {\n        this.cache_.sources = sources;\n      }\n      this.updateSourceCaches_(middlewareSource);\n      const err = this.src_(middlewareSource);\n      if (err) {\n        if (sources.length > 1) {\n          return this.handleSrc_(sources.slice(1));\n        }\n        this.changingSrc_ = false;\n\n        // We need to wrap this in a timeout to give folks a chance to add error event handlers\n        this.setTimeout(function () {\n          this.error({\n            code: 4,\n            message: this.options_.notSupportedMessage\n          });\n        }, 0);\n\n        // we could not find an appropriate tech, but let's still notify the delegate that this is it\n        // this needs a better comment about why this is needed\n        this.triggerReady();\n        return;\n      }\n      setTech(mws, this.tech_);\n    });\n\n    // Try another available source if this one fails before playback.\n    if (sources.length > 1) {\n      const retry = () => {\n        // Remove the error modal\n        this.error(null);\n        this.handleSrc_(sources.slice(1), true);\n      };\n      const stopListeningForErrors = () => {\n        this.off('error', retry);\n      };\n      this.one('error', retry);\n      this.one('playing', stopListeningForErrors);\n      this.resetRetryOnError_ = () => {\n        this.off('error', retry);\n        this.off('playing', stopListeningForErrors);\n      };\n    }\n  }\n\n  /**\n   * Get or set the video source.\n   *\n   * @param {Tech~SourceObject|Tech~SourceObject[]|string} [source]\n   *        A SourceObject, an array of SourceObjects, or a string referencing\n   *        a URL to a media source. It is _highly recommended_ that an object\n   *        or array of objects is used here, so that source selection\n   *        algorithms can take the `type` into account.\n   *\n   *        If not provided, this method acts as a getter.\n   *\n   * @return {string|undefined}\n   *         If the `source` argument is missing, returns the current source\n   *         URL. Otherwise, returns nothing/undefined.\n   */\n  src(source) {\n    return this.handleSrc_(source, false);\n  }\n\n  /**\n   * Set the source object on the tech, returns a boolean that indicates whether\n   * there is a tech that can play the source or not\n   *\n   * @param {Tech~SourceObject} source\n   *        The source object to set on the Tech\n   *\n   * @return {boolean}\n   *         - True if there is no Tech to playback this source\n   *         - False otherwise\n   *\n   * @private\n   */\n  src_(source) {\n    const sourceTech = this.selectSource([source]);\n    if (!sourceTech) {\n      return true;\n    }\n    if (!titleCaseEquals(sourceTech.tech, this.techName_)) {\n      this.changingSrc_ = true;\n      // load this technology with the chosen source\n      this.loadTech_(sourceTech.tech, sourceTech.source);\n      this.tech_.ready(() => {\n        this.changingSrc_ = false;\n      });\n      return false;\n    }\n\n    // wait until the tech is ready to set the source\n    // and set it synchronously if possible (#2326)\n    this.ready(function () {\n      // The setSource tech method was added with source handlers\n      // so older techs won't support it\n      // We need to check the direct prototype for the case where subclasses\n      // of the tech do not support source handlers\n      if (this.tech_.constructor.prototype.hasOwnProperty('setSource')) {\n        this.techCall_('setSource', source);\n      } else {\n        this.techCall_('src', source.src);\n      }\n      this.changingSrc_ = false;\n    }, true);\n    return false;\n  }\n\n  /**\n   * Begin loading the src data.\n   */\n  load() {\n    this.techCall_('load');\n  }\n\n  /**\n   * Reset the player. Loads the first tech in the techOrder,\n   * removes all the text tracks in the existing `tech`,\n   * and calls `reset` on the `tech`.\n   */\n  reset() {\n    if (this.paused()) {\n      this.doReset_();\n    } else {\n      const playPromise = this.play();\n      silencePromise(playPromise.then(() => this.doReset_()));\n    }\n  }\n  doReset_() {\n    if (this.tech_) {\n      this.tech_.clearTracks('text');\n    }\n    this.resetCache_();\n    this.poster('');\n    this.loadTech_(this.options_.techOrder[0], null);\n    this.techCall_('reset');\n    this.resetControlBarUI_();\n    if (isEvented(this)) {\n      this.trigger('playerreset');\n    }\n  }\n\n  /**\n   * Reset Control Bar's UI by calling sub-methods that reset\n   * all of Control Bar's components\n   */\n  resetControlBarUI_() {\n    this.resetProgressBar_();\n    this.resetPlaybackRate_();\n    this.resetVolumeBar_();\n  }\n\n  /**\n   * Reset tech's progress so progress bar is reset in the UI\n   */\n  resetProgressBar_() {\n    this.currentTime(0);\n    const {\n      currentTimeDisplay,\n      durationDisplay,\n      progressControl,\n      remainingTimeDisplay\n    } = this.controlBar || {};\n    const {\n      seekBar\n    } = progressControl || {};\n    if (currentTimeDisplay) {\n      currentTimeDisplay.updateContent();\n    }\n    if (durationDisplay) {\n      durationDisplay.updateContent();\n    }\n    if (remainingTimeDisplay) {\n      remainingTimeDisplay.updateContent();\n    }\n    if (seekBar) {\n      seekBar.update();\n      if (seekBar.loadProgressBar) {\n        seekBar.loadProgressBar.update();\n      }\n    }\n  }\n\n  /**\n   * Reset Playback ratio\n   */\n  resetPlaybackRate_() {\n    this.playbackRate(this.defaultPlaybackRate());\n    this.handleTechRateChange_();\n  }\n\n  /**\n   * Reset Volume bar\n   */\n  resetVolumeBar_() {\n    this.volume(1.0);\n    this.trigger('volumechange');\n  }\n\n  /**\n   * Returns all of the current source objects.\n   *\n   * @return {Tech~SourceObject[]}\n   *         The current source objects\n   */\n  currentSources() {\n    const source = this.currentSource();\n    const sources = [];\n\n    // assume `{}` or `{ src }`\n    if (Object.keys(source).length !== 0) {\n      sources.push(source);\n    }\n    return this.cache_.sources || sources;\n  }\n\n  /**\n   * Returns the current source object.\n   *\n   * @return {Tech~SourceObject}\n   *         The current source object\n   */\n  currentSource() {\n    return this.cache_.source || {};\n  }\n\n  /**\n   * Returns the fully qualified URL of the current source value e.g. http://mysite.com/video.mp4\n   * Can be used in conjunction with `currentType` to assist in rebuilding the current source object.\n   *\n   * @return {string}\n   *         The current source\n   */\n  currentSrc() {\n    return this.currentSource() && this.currentSource().src || '';\n  }\n\n  /**\n   * Get the current source type e.g. video/mp4\n   * This can allow you rebuild the current source object so that you could load the same\n   * source and tech later\n   *\n   * @return {string}\n   *         The source MIME type\n   */\n  currentType() {\n    return this.currentSource() && this.currentSource().type || '';\n  }\n\n  /**\n   * Get or set the preload attribute\n   *\n   * @param {boolean} [value]\n   *        - true means that we should preload\n   *        - false means that we should not preload\n   *\n   * @return {string}\n   *         The preload attribute value when getting\n   */\n  preload(value) {\n    if (value !== undefined) {\n      this.techCall_('setPreload', value);\n      this.options_.preload = value;\n      return;\n    }\n    return this.techGet_('preload');\n  }\n\n  /**\n   * Get or set the autoplay option. When this is a boolean it will\n   * modify the attribute on the tech. When this is a string the attribute on\n   * the tech will be removed and `Player` will handle autoplay on loadstarts.\n   *\n   * @param {boolean|string} [value]\n   *        - true: autoplay using the browser behavior\n   *        - false: do not autoplay\n   *        - 'play': call play() on every loadstart\n   *        - 'muted': call muted() then play() on every loadstart\n   *        - 'any': call play() on every loadstart. if that fails call muted() then play().\n   *        - *: values other than those listed here will be set `autoplay` to true\n   *\n   * @return {boolean|string}\n   *         The current value of autoplay when getting\n   */\n  autoplay(value) {\n    // getter usage\n    if (value === undefined) {\n      return this.options_.autoplay || false;\n    }\n    let techAutoplay;\n\n    // if the value is a valid string set it to that, or normalize `true` to 'play', if need be\n    if (typeof value === 'string' && /(any|play|muted)/.test(value) || value === true && this.options_.normalizeAutoplay) {\n      this.options_.autoplay = value;\n      this.manualAutoplay_(typeof value === 'string' ? value : 'play');\n      techAutoplay = false;\n\n      // any falsy value sets autoplay to false in the browser,\n      // lets do the same\n    } else if (!value) {\n      this.options_.autoplay = false;\n\n      // any other value (ie truthy) sets autoplay to true\n    } else {\n      this.options_.autoplay = true;\n    }\n    techAutoplay = typeof techAutoplay === 'undefined' ? this.options_.autoplay : techAutoplay;\n\n    // if we don't have a tech then we do not queue up\n    // a setAutoplay call on tech ready. We do this because the\n    // autoplay option will be passed in the constructor and we\n    // do not need to set it twice\n    if (this.tech_) {\n      this.techCall_('setAutoplay', techAutoplay);\n    }\n  }\n\n  /**\n   * Set or unset the playsinline attribute.\n   * Playsinline tells the browser that non-fullscreen playback is preferred.\n   *\n   * @param {boolean} [value]\n   *        - true means that we should try to play inline by default\n   *        - false means that we should use the browser's default playback mode,\n   *          which in most cases is inline. iOS Safari is a notable exception\n   *          and plays fullscreen by default.\n   *\n   * @return {string|Player}\n   *         - the current value of playsinline\n   *         - the player when setting\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n   */\n  playsinline(value) {\n    if (value !== undefined) {\n      this.techCall_('setPlaysinline', value);\n      this.options_.playsinline = value;\n      return this;\n    }\n    return this.techGet_('playsinline');\n  }\n\n  /**\n   * Get or set the loop attribute on the video element.\n   *\n   * @param {boolean} [value]\n   *        - true means that we should loop the video\n   *        - false means that we should not loop the video\n   *\n   * @return {boolean}\n   *         The current value of loop when getting\n   */\n  loop(value) {\n    if (value !== undefined) {\n      this.techCall_('setLoop', value);\n      this.options_.loop = value;\n      return;\n    }\n    return this.techGet_('loop');\n  }\n\n  /**\n   * Get or set the poster image source url\n   *\n   * @fires Player#posterchange\n   *\n   * @param {string} [src]\n   *        Poster image source URL\n   *\n   * @return {string}\n   *         The current value of poster when getting\n   */\n  poster(src) {\n    if (src === undefined) {\n      return this.poster_;\n    }\n\n    // The correct way to remove a poster is to set as an empty string\n    // other falsey values will throw errors\n    if (!src) {\n      src = '';\n    }\n    if (src === this.poster_) {\n      return;\n    }\n\n    // update the internal poster variable\n    this.poster_ = src;\n\n    // update the tech's poster\n    this.techCall_('setPoster', src);\n    this.isPosterFromTech_ = false;\n\n    // alert components that the poster has been set\n    /**\n     * This event fires when the poster image is changed on the player.\n     *\n     * @event Player#posterchange\n     * @type {Event}\n     */\n    this.trigger('posterchange');\n  }\n\n  /**\n   * Some techs (e.g. YouTube) can provide a poster source in an\n   * asynchronous way. We want the poster component to use this\n   * poster source so that it covers up the tech's controls.\n   * (YouTube's play button). However we only want to use this\n   * source if the player user hasn't set a poster through\n   * the normal APIs.\n   *\n   * @fires Player#posterchange\n   * @listens Tech#posterchange\n   * @private\n   */\n  handleTechPosterChange_() {\n    if ((!this.poster_ || this.options_.techCanOverridePoster) && this.tech_ && this.tech_.poster) {\n      const newPoster = this.tech_.poster() || '';\n      if (newPoster !== this.poster_) {\n        this.poster_ = newPoster;\n        this.isPosterFromTech_ = true;\n\n        // Let components know the poster has changed\n        this.trigger('posterchange');\n      }\n    }\n  }\n\n  /**\n   * Get or set whether or not the controls are showing.\n   *\n   * @fires Player#controlsenabled\n   *\n   * @param {boolean} [bool]\n   *        - true to turn controls on\n   *        - false to turn controls off\n   *\n   * @return {boolean}\n   *         The current value of controls when getting\n   */\n  controls(bool) {\n    if (bool === undefined) {\n      return !!this.controls_;\n    }\n    bool = !!bool;\n\n    // Don't trigger a change event unless it actually changed\n    if (this.controls_ === bool) {\n      return;\n    }\n    this.controls_ = bool;\n    if (this.usingNativeControls()) {\n      this.techCall_('setControls', bool);\n    }\n    if (this.controls_) {\n      this.removeClass('vjs-controls-disabled');\n      this.addClass('vjs-controls-enabled');\n      /**\n       * @event Player#controlsenabled\n       * @type {Event}\n       */\n      this.trigger('controlsenabled');\n      if (!this.usingNativeControls()) {\n        this.addTechControlsListeners_();\n      }\n    } else {\n      this.removeClass('vjs-controls-enabled');\n      this.addClass('vjs-controls-disabled');\n      /**\n       * @event Player#controlsdisabled\n       * @type {Event}\n       */\n      this.trigger('controlsdisabled');\n      if (!this.usingNativeControls()) {\n        this.removeTechControlsListeners_();\n      }\n    }\n  }\n\n  /**\n   * Toggle native controls on/off. Native controls are the controls built into\n   * devices (e.g. default iPhone controls) or other techs\n   * (e.g. Vimeo Controls)\n   * **This should only be set by the current tech, because only the tech knows\n   * if it can support native controls**\n   *\n   * @fires Player#usingnativecontrols\n   * @fires Player#usingcustomcontrols\n   *\n   * @param {boolean} [bool]\n   *        - true to turn native controls on\n   *        - false to turn native controls off\n   *\n   * @return {boolean}\n   *         The current value of native controls when getting\n   */\n  usingNativeControls(bool) {\n    if (bool === undefined) {\n      return !!this.usingNativeControls_;\n    }\n    bool = !!bool;\n\n    // Don't trigger a change event unless it actually changed\n    if (this.usingNativeControls_ === bool) {\n      return;\n    }\n    this.usingNativeControls_ = bool;\n    if (this.usingNativeControls_) {\n      this.addClass('vjs-using-native-controls');\n\n      /**\n       * player is using the native device controls\n       *\n       * @event Player#usingnativecontrols\n       * @type {Event}\n       */\n      this.trigger('usingnativecontrols');\n    } else {\n      this.removeClass('vjs-using-native-controls');\n\n      /**\n       * player is using the custom HTML controls\n       *\n       * @event Player#usingcustomcontrols\n       * @type {Event}\n       */\n      this.trigger('usingcustomcontrols');\n    }\n  }\n\n  /**\n   * Set or get the current MediaError\n   *\n   * @fires Player#error\n   *\n   * @param  {MediaError|string|number} [err]\n   *         A MediaError or a string/number to be turned\n   *         into a MediaError\n   *\n   * @return {MediaError|null}\n   *         The current MediaError when getting (or null)\n   */\n  error(err) {\n    if (err === undefined) {\n      return this.error_ || null;\n    }\n\n    // allow hooks to modify error object\n    hooks('beforeerror').forEach(hookFunction => {\n      const newErr = hookFunction(this, err);\n      if (!(isObject(newErr) && !Array.isArray(newErr) || typeof newErr === 'string' || typeof newErr === 'number' || newErr === null)) {\n        this.log.error('please return a value that MediaError expects in beforeerror hooks');\n        return;\n      }\n      err = newErr;\n    });\n\n    // Suppress the first error message for no compatible source until\n    // user interaction\n    if (this.options_.suppressNotSupportedError && err && err.code === 4) {\n      const triggerSuppressedError = function () {\n        this.error(err);\n      };\n      this.options_.suppressNotSupportedError = false;\n      this.any(['click', 'touchstart'], triggerSuppressedError);\n      this.one('loadstart', function () {\n        this.off(['click', 'touchstart'], triggerSuppressedError);\n      });\n      return;\n    }\n\n    // restoring to default\n    if (err === null) {\n      this.error_ = err;\n      this.removeClass('vjs-error');\n      if (this.errorDisplay) {\n        this.errorDisplay.close();\n      }\n      return;\n    }\n    this.error_ = new MediaError(err);\n\n    // add the vjs-error classname to the player\n    this.addClass('vjs-error');\n\n    // log the name of the error type and any message\n    // IE11 logs \"[object object]\" and required you to expand message to see error object\n    log$1.error(`(CODE:${this.error_.code} ${MediaError.errorTypes[this.error_.code]})`, this.error_.message, this.error_);\n\n    /**\n     * @event Player#error\n     * @type {Event}\n     */\n    this.trigger('error');\n\n    // notify hooks of the per player error\n    hooks('error').forEach(hookFunction => hookFunction(this, this.error_));\n    return;\n  }\n\n  /**\n   * Report user activity\n   *\n   * @param {Object} event\n   *        Event object\n   */\n  reportUserActivity(event) {\n    this.userActivity_ = true;\n  }\n\n  /**\n   * Get/set if user is active\n   *\n   * @fires Player#useractive\n   * @fires Player#userinactive\n   *\n   * @param {boolean} [bool]\n   *        - true if the user is active\n   *        - false if the user is inactive\n   *\n   * @return {boolean}\n   *         The current value of userActive when getting\n   */\n  userActive(bool) {\n    if (bool === undefined) {\n      return this.userActive_;\n    }\n    bool = !!bool;\n    if (bool === this.userActive_) {\n      return;\n    }\n    this.userActive_ = bool;\n    if (this.userActive_) {\n      this.userActivity_ = true;\n      this.removeClass('vjs-user-inactive');\n      this.addClass('vjs-user-active');\n      /**\n       * @event Player#useractive\n       * @type {Event}\n       */\n      this.trigger('useractive');\n      return;\n    }\n\n    // Chrome/Safari/IE have bugs where when you change the cursor it can\n    // trigger a mousemove event. This causes an issue when you're hiding\n    // the cursor when the user is inactive, and a mousemove signals user\n    // activity. Making it impossible to go into inactive mode. Specifically\n    // this happens in fullscreen when we really need to hide the cursor.\n    //\n    // When this gets resolved in ALL browsers it can be removed\n    // https://code.google.com/p/chromium/issues/detail?id=103041\n    if (this.tech_) {\n      this.tech_.one('mousemove', function (e) {\n        e.stopPropagation();\n        e.preventDefault();\n      });\n    }\n    this.userActivity_ = false;\n    this.removeClass('vjs-user-active');\n    this.addClass('vjs-user-inactive');\n    /**\n     * @event Player#userinactive\n     * @type {Event}\n     */\n    this.trigger('userinactive');\n  }\n\n  /**\n   * Listen for user activity based on timeout value\n   *\n   * @private\n   */\n  listenForUserActivity_() {\n    let mouseInProgress;\n    let lastMoveX;\n    let lastMoveY;\n    const handleActivity = bind_(this, this.reportUserActivity);\n    const handleMouseMove = function (e) {\n      // #1068 - Prevent mousemove spamming\n      // Chrome Bug: https://code.google.com/p/chromium/issues/detail?id=366970\n      if (e.screenX !== lastMoveX || e.screenY !== lastMoveY) {\n        lastMoveX = e.screenX;\n        lastMoveY = e.screenY;\n        handleActivity();\n      }\n    };\n    const handleMouseDown = function () {\n      handleActivity();\n      // For as long as the they are touching the device or have their mouse down,\n      // we consider them active even if they're not moving their finger or mouse.\n      // So we want to continue to update that they are active\n      this.clearInterval(mouseInProgress);\n      // Setting userActivity=true now and setting the interval to the same time\n      // as the activityCheck interval (250) should ensure we never miss the\n      // next activityCheck\n      mouseInProgress = this.setInterval(handleActivity, 250);\n    };\n    const handleMouseUpAndMouseLeave = function (event) {\n      handleActivity();\n      // Stop the interval that maintains activity if the mouse/touch is down\n      this.clearInterval(mouseInProgress);\n    };\n\n    // Any mouse movement will be considered user activity\n    this.on('mousedown', handleMouseDown);\n    this.on('mousemove', handleMouseMove);\n    this.on('mouseup', handleMouseUpAndMouseLeave);\n    this.on('mouseleave', handleMouseUpAndMouseLeave);\n    const controlBar = this.getChild('controlBar');\n\n    // Fixes bug on Android & iOS where when tapping progressBar (when control bar is displayed)\n    // controlBar would no longer be hidden by default timeout.\n    if (controlBar && !IS_IOS && !IS_ANDROID) {\n      controlBar.on('mouseenter', function (event) {\n        if (this.player().options_.inactivityTimeout !== 0) {\n          this.player().cache_.inactivityTimeout = this.player().options_.inactivityTimeout;\n        }\n        this.player().options_.inactivityTimeout = 0;\n      });\n      controlBar.on('mouseleave', function (event) {\n        this.player().options_.inactivityTimeout = this.player().cache_.inactivityTimeout;\n      });\n    }\n\n    // Listen for keyboard navigation\n    // Shouldn't need to use inProgress interval because of key repeat\n    this.on('keydown', handleActivity);\n    this.on('keyup', handleActivity);\n\n    // Run an interval every 250 milliseconds instead of stuffing everything into\n    // the mousemove/touchmove function itself, to prevent performance degradation.\n    // `this.reportUserActivity` simply sets this.userActivity_ to true, which\n    // then gets picked up by this loop\n    // http://ejohn.org/blog/learning-from-twitter/\n    let inactivityTimeout;\n    this.setInterval(function () {\n      // Check to see if mouse/touch activity has happened\n      if (!this.userActivity_) {\n        return;\n      }\n\n      // Reset the activity tracker\n      this.userActivity_ = false;\n\n      // If the user state was inactive, set the state to active\n      this.userActive(true);\n\n      // Clear any existing inactivity timeout to start the timer over\n      this.clearTimeout(inactivityTimeout);\n      const timeout = this.options_.inactivityTimeout;\n      if (timeout <= 0) {\n        return;\n      }\n\n      // In <timeout> milliseconds, if no more activity has occurred the\n      // user will be considered inactive\n      inactivityTimeout = this.setTimeout(function () {\n        // Protect against the case where the inactivityTimeout can trigger just\n        // before the next user activity is picked up by the activity check loop\n        // causing a flicker\n        if (!this.userActivity_) {\n          this.userActive(false);\n        }\n      }, timeout);\n    }, 250);\n  }\n\n  /**\n   * Gets or sets the current playback rate. A playback rate of\n   * 1.0 represents normal speed and 0.5 would indicate half-speed\n   * playback, for instance.\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-playbackrate\n   *\n   * @param {number} [rate]\n   *       New playback rate to set.\n   *\n   * @return {number}\n   *         The current playback rate when getting or 1.0\n   */\n  playbackRate(rate) {\n    if (rate !== undefined) {\n      // NOTE: this.cache_.lastPlaybackRate is set from the tech handler\n      // that is registered above\n      this.techCall_('setPlaybackRate', rate);\n      return;\n    }\n    if (this.tech_ && this.tech_.featuresPlaybackRate) {\n      return this.cache_.lastPlaybackRate || this.techGet_('playbackRate');\n    }\n    return 1.0;\n  }\n\n  /**\n   * Gets or sets the current default playback rate. A default playback rate of\n   * 1.0 represents normal speed and 0.5 would indicate half-speed playback, for instance.\n   * defaultPlaybackRate will only represent what the initial playbackRate of a video was, not\n   * not the current playbackRate.\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-defaultplaybackrate\n   *\n   * @param {number} [rate]\n   *       New default playback rate to set.\n   *\n   * @return {number|Player}\n   *         - The default playback rate when getting or 1.0\n   *         - the player when setting\n   */\n  defaultPlaybackRate(rate) {\n    if (rate !== undefined) {\n      return this.techCall_('setDefaultPlaybackRate', rate);\n    }\n    if (this.tech_ && this.tech_.featuresPlaybackRate) {\n      return this.techGet_('defaultPlaybackRate');\n    }\n    return 1.0;\n  }\n\n  /**\n   * Gets or sets the audio flag\n   *\n   * @param {boolean} bool\n   *        - true signals that this is an audio player\n   *        - false signals that this is not an audio player\n   *\n   * @return {boolean}\n   *         The current value of isAudio when getting\n   */\n  isAudio(bool) {\n    if (bool !== undefined) {\n      this.isAudio_ = !!bool;\n      return;\n    }\n    return !!this.isAudio_;\n  }\n  enableAudioOnlyUI_() {\n    // Update styling immediately to show the control bar so we can get its height\n    this.addClass('vjs-audio-only-mode');\n    const playerChildren = this.children();\n    const controlBar = this.getChild('ControlBar');\n    const controlBarHeight = controlBar && controlBar.currentHeight();\n\n    // Hide all player components except the control bar. Control bar components\n    // needed only for video are hidden with CSS\n    playerChildren.forEach(child => {\n      if (child === controlBar) {\n        return;\n      }\n      if (child.el_ && !child.hasClass('vjs-hidden')) {\n        child.hide();\n        this.audioOnlyCache_.hiddenChildren.push(child);\n      }\n    });\n    this.audioOnlyCache_.playerHeight = this.currentHeight();\n\n    // Set the player height the same as the control bar\n    this.height(controlBarHeight);\n    this.trigger('audioonlymodechange');\n  }\n  disableAudioOnlyUI_() {\n    this.removeClass('vjs-audio-only-mode');\n\n    // Show player components that were previously hidden\n    this.audioOnlyCache_.hiddenChildren.forEach(child => child.show());\n\n    // Reset player height\n    this.height(this.audioOnlyCache_.playerHeight);\n    this.trigger('audioonlymodechange');\n  }\n\n  /**\n   * Get the current audioOnlyMode state or set audioOnlyMode to true or false.\n   *\n   * Setting this to `true` will hide all player components except the control bar,\n   * as well as control bar components needed only for video.\n   *\n   * @param {boolean} [value]\n   *         The value to set audioOnlyMode to.\n   *\n   * @return {Promise|boolean}\n   *        A Promise is returned when setting the state, and a boolean when getting\n   *        the present state\n   */\n  audioOnlyMode(value) {\n    if (typeof value !== 'boolean' || value === this.audioOnlyMode_) {\n      return this.audioOnlyMode_;\n    }\n    this.audioOnlyMode_ = value;\n\n    // Enable Audio Only Mode\n    if (value) {\n      const exitPromises = [];\n\n      // Fullscreen and PiP are not supported in audioOnlyMode, so exit if we need to.\n      if (this.isInPictureInPicture()) {\n        exitPromises.push(this.exitPictureInPicture());\n      }\n      if (this.isFullscreen()) {\n        exitPromises.push(this.exitFullscreen());\n      }\n      if (this.audioPosterMode()) {\n        exitPromises.push(this.audioPosterMode(false));\n      }\n      return Promise.all(exitPromises).then(() => this.enableAudioOnlyUI_());\n    }\n\n    // Disable Audio Only Mode\n    return Promise.resolve().then(() => this.disableAudioOnlyUI_());\n  }\n  enablePosterModeUI_() {\n    // Hide the video element and show the poster image to enable posterModeUI\n    const tech = this.tech_ && this.tech_;\n    tech.hide();\n    this.addClass('vjs-audio-poster-mode');\n    this.trigger('audiopostermodechange');\n  }\n  disablePosterModeUI_() {\n    // Show the video element and hide the poster image to disable posterModeUI\n    const tech = this.tech_ && this.tech_;\n    tech.show();\n    this.removeClass('vjs-audio-poster-mode');\n    this.trigger('audiopostermodechange');\n  }\n\n  /**\n   * Get the current audioPosterMode state or set audioPosterMode to true or false\n   *\n   * @param {boolean} [value]\n   *         The value to set audioPosterMode to.\n   *\n   * @return {Promise|boolean}\n   *         A Promise is returned when setting the state, and a boolean when getting\n   *        the present state\n   */\n  audioPosterMode(value) {\n    if (typeof value !== 'boolean' || value === this.audioPosterMode_) {\n      return this.audioPosterMode_;\n    }\n    this.audioPosterMode_ = value;\n    if (value) {\n      if (this.audioOnlyMode()) {\n        const audioOnlyModePromise = this.audioOnlyMode(false);\n        return audioOnlyModePromise.then(() => {\n          // enable audio poster mode after audio only mode is disabled\n          this.enablePosterModeUI_();\n        });\n      }\n      return Promise.resolve().then(() => {\n        // enable audio poster mode\n        this.enablePosterModeUI_();\n      });\n    }\n    return Promise.resolve().then(() => {\n      // disable audio poster mode\n      this.disablePosterModeUI_();\n    });\n  }\n\n  /**\n   * A helper method for adding a {@link TextTrack} to our\n   * {@link TextTrackList}.\n   *\n   * In addition to the W3C settings we allow adding additional info through options.\n   *\n   * @see http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#dom-media-addtexttrack\n   *\n   * @param {string} [kind]\n   *        the kind of TextTrack you are adding\n   *\n   * @param {string} [label]\n   *        the label to give the TextTrack label\n   *\n   * @param {string} [language]\n   *        the language to set on the TextTrack\n   *\n   * @return {TextTrack|undefined}\n   *         the TextTrack that was added or undefined\n   *         if there is no tech\n   */\n  addTextTrack(kind, label, language) {\n    if (this.tech_) {\n      return this.tech_.addTextTrack(kind, label, language);\n    }\n  }\n\n  /**\n   * Create a remote {@link TextTrack} and an {@link HTMLTrackElement}.\n   *\n   * @param {Object} options\n   *        Options to pass to {@link HTMLTrackElement} during creation. See\n   *        {@link HTMLTrackElement} for object properties that you should use.\n   *\n   * @param {boolean} [manualCleanup=false] if set to true, the TextTrack will not be removed\n   *                                        from the TextTrackList and HtmlTrackElementList\n   *                                        after a source change\n   *\n   * @return { import('./tracks/html-track-element').default }\n   *         the HTMLTrackElement that was created and added\n   *         to the HtmlTrackElementList and the remote\n   *         TextTrackList\n   *\n   */\n  addRemoteTextTrack(options, manualCleanup) {\n    if (this.tech_) {\n      return this.tech_.addRemoteTextTrack(options, manualCleanup);\n    }\n  }\n\n  /**\n   * Remove a remote {@link TextTrack} from the respective\n   * {@link TextTrackList} and {@link HtmlTrackElementList}.\n   *\n   * @param {Object} track\n   *        Remote {@link TextTrack} to remove\n   *\n   * @return {undefined}\n   *         does not return anything\n   */\n  removeRemoteTextTrack(obj = {}) {\n    let {\n      track\n    } = obj;\n    if (!track) {\n      track = obj;\n    }\n\n    // destructure the input into an object with a track argument, defaulting to arguments[0]\n    // default the whole argument to an empty object if nothing was passed in\n\n    if (this.tech_) {\n      return this.tech_.removeRemoteTextTrack(track);\n    }\n  }\n\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object|undefined}\n   *         An object with supported media playback quality metrics or undefined if there\n   *         is no tech or the tech does not support it.\n   */\n  getVideoPlaybackQuality() {\n    return this.techGet_('getVideoPlaybackQuality');\n  }\n\n  /**\n   * Get video width\n   *\n   * @return {number}\n   *         current video width\n   */\n  videoWidth() {\n    return this.tech_ && this.tech_.videoWidth && this.tech_.videoWidth() || 0;\n  }\n\n  /**\n   * Get video height\n   *\n   * @return {number}\n   *         current video height\n   */\n  videoHeight() {\n    return this.tech_ && this.tech_.videoHeight && this.tech_.videoHeight() || 0;\n  }\n\n  /**\n   * The player's language code.\n   *\n   * Changing the language will trigger\n   * [languagechange]{@link Player#event:languagechange}\n   * which Components can use to update control text.\n   * ClickableComponent will update its control text by default on\n   * [languagechange]{@link Player#event:languagechange}.\n   *\n   * @fires Player#languagechange\n   *\n   * @param {string} [code]\n   *        the language code to set the player to\n   *\n   * @return {string}\n   *         The current language code when getting\n   */\n  language(code) {\n    if (code === undefined) {\n      return this.language_;\n    }\n    if (this.language_ !== String(code).toLowerCase()) {\n      this.language_ = String(code).toLowerCase();\n\n      // during first init, it's possible some things won't be evented\n      if (isEvented(this)) {\n        /**\n        * fires when the player language change\n        *\n        * @event Player#languagechange\n        * @type {Event}\n        */\n        this.trigger('languagechange');\n      }\n    }\n  }\n\n  /**\n   * Get the player's language dictionary\n   * Merge every time, because a newly added plugin might call videojs.addLanguage() at any time\n   * Languages specified directly in the player options have precedence\n   *\n   * @return {Array}\n   *         An array of of supported languages\n   */\n  languages() {\n    return merge$1(Player.prototype.options_.languages, this.languages_);\n  }\n\n  /**\n   * returns a JavaScript object representing the current track\n   * information. **DOES not return it as JSON**\n   *\n   * @return {Object}\n   *         Object representing the current of track info\n   */\n  toJSON() {\n    const options = merge$1(this.options_);\n    const tracks = options.tracks;\n    options.tracks = [];\n    for (let i = 0; i < tracks.length; i++) {\n      let track = tracks[i];\n\n      // deep merge tracks and null out player so no circular references\n      track = merge$1(track);\n      track.player = undefined;\n      options.tracks[i] = track;\n    }\n    return options;\n  }\n\n  /**\n   * Creates a simple modal dialog (an instance of the {@link ModalDialog}\n   * component) that immediately overlays the player with arbitrary\n   * content and removes itself when closed.\n   *\n   * @param {string|Function|Element|Array|null} content\n   *        Same as {@link ModalDialog#content}'s param of the same name.\n   *        The most straight-forward usage is to provide a string or DOM\n   *        element.\n   *\n   * @param {Object} [options]\n   *        Extra options which will be passed on to the {@link ModalDialog}.\n   *\n   * @return {ModalDialog}\n   *         the {@link ModalDialog} that was created\n   */\n  createModal(content, options) {\n    options = options || {};\n    options.content = content || '';\n    const modal = new ModalDialog(this, options);\n    this.addChild(modal);\n    modal.on('dispose', () => {\n      this.removeChild(modal);\n    });\n    modal.open();\n    return modal;\n  }\n\n  /**\n   * Change breakpoint classes when the player resizes.\n   *\n   * @private\n   */\n  updateCurrentBreakpoint_() {\n    if (!this.responsive()) {\n      return;\n    }\n    const currentBreakpoint = this.currentBreakpoint();\n    const currentWidth = this.currentWidth();\n    for (let i = 0; i < BREAKPOINT_ORDER.length; i++) {\n      const candidateBreakpoint = BREAKPOINT_ORDER[i];\n      const maxWidth = this.breakpoints_[candidateBreakpoint];\n      if (currentWidth <= maxWidth) {\n        // The current breakpoint did not change, nothing to do.\n        if (currentBreakpoint === candidateBreakpoint) {\n          return;\n        }\n\n        // Only remove a class if there is a current breakpoint.\n        if (currentBreakpoint) {\n          this.removeClass(BREAKPOINT_CLASSES[currentBreakpoint]);\n        }\n        this.addClass(BREAKPOINT_CLASSES[candidateBreakpoint]);\n        this.breakpoint_ = candidateBreakpoint;\n        break;\n      }\n    }\n  }\n\n  /**\n   * Removes the current breakpoint.\n   *\n   * @private\n   */\n  removeCurrentBreakpoint_() {\n    const className = this.currentBreakpointClass();\n    this.breakpoint_ = '';\n    if (className) {\n      this.removeClass(className);\n    }\n  }\n\n  /**\n   * Get or set breakpoints on the player.\n   *\n   * Calling this method with an object or `true` will remove any previous\n   * custom breakpoints and start from the defaults again.\n   *\n   * @param  {Object|boolean} [breakpoints]\n   *         If an object is given, it can be used to provide custom\n   *         breakpoints. If `true` is given, will set default breakpoints.\n   *         If this argument is not given, will simply return the current\n   *         breakpoints.\n   *\n   * @param  {number} [breakpoints.tiny]\n   *         The maximum width for the \"vjs-layout-tiny\" class.\n   *\n   * @param  {number} [breakpoints.xsmall]\n   *         The maximum width for the \"vjs-layout-x-small\" class.\n   *\n   * @param  {number} [breakpoints.small]\n   *         The maximum width for the \"vjs-layout-small\" class.\n   *\n   * @param  {number} [breakpoints.medium]\n   *         The maximum width for the \"vjs-layout-medium\" class.\n   *\n   * @param  {number} [breakpoints.large]\n   *         The maximum width for the \"vjs-layout-large\" class.\n   *\n   * @param  {number} [breakpoints.xlarge]\n   *         The maximum width for the \"vjs-layout-x-large\" class.\n   *\n   * @param  {number} [breakpoints.huge]\n   *         The maximum width for the \"vjs-layout-huge\" class.\n   *\n   * @return {Object}\n   *         An object mapping breakpoint names to maximum width values.\n   */\n  breakpoints(breakpoints) {\n    // Used as a getter.\n    if (breakpoints === undefined) {\n      return Object.assign(this.breakpoints_);\n    }\n    this.breakpoint_ = '';\n    this.breakpoints_ = Object.assign({}, DEFAULT_BREAKPOINTS, breakpoints);\n\n    // When breakpoint definitions change, we need to update the currently\n    // selected breakpoint.\n    this.updateCurrentBreakpoint_();\n\n    // Clone the breakpoints before returning.\n    return Object.assign(this.breakpoints_);\n  }\n\n  /**\n   * Get or set a flag indicating whether or not this player should adjust\n   * its UI based on its dimensions.\n   *\n   * @param  {boolean} value\n   *         Should be `true` if the player should adjust its UI based on its\n   *         dimensions; otherwise, should be `false`.\n   *\n   * @return {boolean}\n   *         Will be `true` if this player should adjust its UI based on its\n   *         dimensions; otherwise, will be `false`.\n   */\n  responsive(value) {\n    // Used as a getter.\n    if (value === undefined) {\n      return this.responsive_;\n    }\n    value = Boolean(value);\n    const current = this.responsive_;\n\n    // Nothing changed.\n    if (value === current) {\n      return;\n    }\n\n    // The value actually changed, set it.\n    this.responsive_ = value;\n\n    // Start listening for breakpoints and set the initial breakpoint if the\n    // player is now responsive.\n    if (value) {\n      this.on('playerresize', this.boundUpdateCurrentBreakpoint_);\n      this.updateCurrentBreakpoint_();\n\n      // Stop listening for breakpoints if the player is no longer responsive.\n    } else {\n      this.off('playerresize', this.boundUpdateCurrentBreakpoint_);\n      this.removeCurrentBreakpoint_();\n    }\n    return value;\n  }\n\n  /**\n   * Get current breakpoint name, if any.\n   *\n   * @return {string}\n   *         If there is currently a breakpoint set, returns a the key from the\n   *         breakpoints object matching it. Otherwise, returns an empty string.\n   */\n  currentBreakpoint() {\n    return this.breakpoint_;\n  }\n\n  /**\n   * Get the current breakpoint class name.\n   *\n   * @return {string}\n   *         The matching class name (e.g. `\"vjs-layout-tiny\"` or\n   *         `\"vjs-layout-large\"`) for the current breakpoint. Empty string if\n   *         there is no current breakpoint.\n   */\n  currentBreakpointClass() {\n    return BREAKPOINT_CLASSES[this.breakpoint_] || '';\n  }\n\n  /**\n   * An object that describes a single piece of media.\n   *\n   * Properties that are not part of this type description will be retained; so,\n   * this can be viewed as a generic metadata storage mechanism as well.\n   *\n   * @see      {@link https://wicg.github.io/mediasession/#the-mediametadata-interface}\n   * @typedef  {Object} Player~MediaObject\n   *\n   * @property {string} [album]\n   *           Unused, except if this object is passed to the `MediaSession`\n   *           API.\n   *\n   * @property {string} [artist]\n   *           Unused, except if this object is passed to the `MediaSession`\n   *           API.\n   *\n   * @property {Object[]} [artwork]\n   *           Unused, except if this object is passed to the `MediaSession`\n   *           API. If not specified, will be populated via the `poster`, if\n   *           available.\n   *\n   * @property {string} [poster]\n   *           URL to an image that will display before playback.\n   *\n   * @property {Tech~SourceObject|Tech~SourceObject[]|string} [src]\n   *           A single source object, an array of source objects, or a string\n   *           referencing a URL to a media source. It is _highly recommended_\n   *           that an object or array of objects is used here, so that source\n   *           selection algorithms can take the `type` into account.\n   *\n   * @property {string} [title]\n   *           Unused, except if this object is passed to the `MediaSession`\n   *           API.\n   *\n   * @property {Object[]} [textTracks]\n   *           An array of objects to be used to create text tracks, following\n   *           the {@link https://www.w3.org/TR/html50/embedded-content-0.html#the-track-element|native track element format}.\n   *           For ease of removal, these will be created as \"remote\" text\n   *           tracks and set to automatically clean up on source changes.\n   *\n   *           These objects may have properties like `src`, `kind`, `label`,\n   *           and `language`, see {@link Tech#createRemoteTextTrack}.\n   */\n\n  /**\n   * Populate the player using a {@link Player~MediaObject|MediaObject}.\n   *\n   * @param  {Player~MediaObject} media\n   *         A media object.\n   *\n   * @param  {Function} ready\n   *         A callback to be called when the player is ready.\n   */\n  loadMedia(media, ready) {\n    if (!media || typeof media !== 'object') {\n      return;\n    }\n    this.reset();\n\n    // Clone the media object so it cannot be mutated from outside.\n    this.cache_.media = merge$1(media);\n    const {\n      artist,\n      artwork,\n      description,\n      poster,\n      src,\n      textTracks,\n      title\n    } = this.cache_.media;\n\n    // If `artwork` is not given, create it using `poster`.\n    if (!artwork && poster) {\n      this.cache_.media.artwork = [{\n        src: poster,\n        type: getMimetype(poster)\n      }];\n    }\n    if (src) {\n      this.src(src);\n    }\n    if (poster) {\n      this.poster(poster);\n    }\n    if (Array.isArray(textTracks)) {\n      textTracks.forEach(tt => this.addRemoteTextTrack(tt, false));\n    }\n    if (this.titleBar) {\n      this.titleBar.update({\n        title,\n        description: description || artist || ''\n      });\n    }\n    this.ready(ready);\n  }\n\n  /**\n   * Get a clone of the current {@link Player~MediaObject} for this player.\n   *\n   * If the `loadMedia` method has not been used, will attempt to return a\n   * {@link Player~MediaObject} based on the current state of the player.\n   *\n   * @return {Player~MediaObject}\n   */\n  getMedia() {\n    if (!this.cache_.media) {\n      const poster = this.poster();\n      const src = this.currentSources();\n      const textTracks = Array.prototype.map.call(this.remoteTextTracks(), tt => ({\n        kind: tt.kind,\n        label: tt.label,\n        language: tt.language,\n        src: tt.src\n      }));\n      const media = {\n        src,\n        textTracks\n      };\n      if (poster) {\n        media.poster = poster;\n        media.artwork = [{\n          src: media.poster,\n          type: getMimetype(media.poster)\n        }];\n      }\n      return media;\n    }\n    return merge$1(this.cache_.media);\n  }\n\n  /**\n   * Gets tag settings\n   *\n   * @param {Element} tag\n   *        The player tag\n   *\n   * @return {Object}\n   *         An object containing all of the settings\n   *         for a player tag\n   */\n  static getTagSettings(tag) {\n    const baseOptions = {\n      sources: [],\n      tracks: []\n    };\n    const tagOptions = getAttributes(tag);\n    const dataSetup = tagOptions['data-setup'];\n    if (hasClass(tag, 'vjs-fill')) {\n      tagOptions.fill = true;\n    }\n    if (hasClass(tag, 'vjs-fluid')) {\n      tagOptions.fluid = true;\n    }\n\n    // Check if data-setup attr exists.\n    if (dataSetup !== null) {\n      // Parse options JSON\n      // If empty string, make it a parsable json object.\n      const [err, data] = safeParseTuple(dataSetup || '{}');\n      if (err) {\n        log$1.error(err);\n      }\n      Object.assign(tagOptions, data);\n    }\n    Object.assign(baseOptions, tagOptions);\n\n    // Get tag children settings\n    if (tag.hasChildNodes()) {\n      const children = tag.childNodes;\n      for (let i = 0, j = children.length; i < j; i++) {\n        const child = children[i];\n        // Change case needed: http://ejohn.org/blog/nodename-case-sensitivity/\n        const childName = child.nodeName.toLowerCase();\n        if (childName === 'source') {\n          baseOptions.sources.push(getAttributes(child));\n        } else if (childName === 'track') {\n          baseOptions.tracks.push(getAttributes(child));\n        }\n      }\n    }\n    return baseOptions;\n  }\n\n  /**\n   * Set debug mode to enable/disable logs at info level.\n   *\n   * @param {boolean} enabled\n   * @fires Player#debugon\n   * @fires Player#debugoff\n   */\n  debug(enabled) {\n    if (enabled === undefined) {\n      return this.debugEnabled_;\n    }\n    if (enabled) {\n      this.trigger('debugon');\n      this.previousLogLevel_ = this.log.level;\n      this.log.level('debug');\n      this.debugEnabled_ = true;\n    } else {\n      this.trigger('debugoff');\n      this.log.level(this.previousLogLevel_);\n      this.previousLogLevel_ = undefined;\n      this.debugEnabled_ = false;\n    }\n  }\n\n  /**\n   * Set or get current playback rates.\n   * Takes an array and updates the playback rates menu with the new items.\n   * Pass in an empty array to hide the menu.\n   * Values other than arrays are ignored.\n   *\n   * @fires Player#playbackrateschange\n   * @param {number[]} newRates\n   *                   The new rates that the playback rates menu should update to.\n   *                   An empty array will hide the menu\n   * @return {number[]} When used as a getter will return the current playback rates\n   */\n  playbackRates(newRates) {\n    if (newRates === undefined) {\n      return this.cache_.playbackRates;\n    }\n\n    // ignore any value that isn't an array\n    if (!Array.isArray(newRates)) {\n      return;\n    }\n\n    // ignore any arrays that don't only contain numbers\n    if (!newRates.every(rate => typeof rate === 'number')) {\n      return;\n    }\n    this.cache_.playbackRates = newRates;\n\n    /**\n    * fires when the playback rates in a player are changed\n    *\n    * @event Player#playbackrateschange\n    * @type {Event}\n    */\n    this.trigger('playbackrateschange');\n  }\n}\n\n/**\n * Get the {@link VideoTrackList}\n *\n * @link https://html.spec.whatwg.org/multipage/embedded-content.html#videotracklist\n *\n * @return {VideoTrackList}\n *         the current video track list\n *\n * @method Player.prototype.videoTracks\n */\n\n/**\n * Get the {@link AudioTrackList}\n *\n * @link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotracklist\n *\n * @return {AudioTrackList}\n *         the current audio track list\n *\n * @method Player.prototype.audioTracks\n */\n\n/**\n * Get the {@link TextTrackList}\n *\n * @link http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#dom-media-texttracks\n *\n * @return {TextTrackList}\n *         the current text track list\n *\n * @method Player.prototype.textTracks\n */\n\n/**\n * Get the remote {@link TextTrackList}\n *\n * @return {TextTrackList}\n *         The current remote text track list\n *\n * @method Player.prototype.remoteTextTracks\n */\n\n/**\n * Get the remote {@link HtmlTrackElementList} tracks.\n *\n * @return {HtmlTrackElementList}\n *         The current remote text track element list\n *\n * @method Player.prototype.remoteTextTrackEls\n */\n\nALL.names.forEach(function (name) {\n  const props = ALL[name];\n  Player.prototype[props.getterName] = function () {\n    if (this.tech_) {\n      return this.tech_[props.getterName]();\n    }\n\n    // if we have not yet loadTech_, we create {video,audio,text}Tracks_\n    // these will be passed to the tech during loading\n    this[props.privateName] = this[props.privateName] || new props.ListClass();\n    return this[props.privateName];\n  };\n});\n\n/**\n * Get or set the `Player`'s crossorigin option. For the HTML5 player, this\n * sets the `crossOrigin` property on the `<video>` tag to control the CORS\n * behavior.\n *\n * @see [Video Element Attributes]{@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video#attr-crossorigin}\n *\n * @param {string} [value]\n *        The value to set the `Player`'s crossorigin to. If an argument is\n *        given, must be one of `anonymous` or `use-credentials`.\n *\n * @return {string|undefined}\n *         - The current crossorigin value of the `Player` when getting.\n *         - undefined when setting\n */\nPlayer.prototype.crossorigin = Player.prototype.crossOrigin;\n\n/**\n * Global enumeration of players.\n *\n * The keys are the player IDs and the values are either the {@link Player}\n * instance or `null` for disposed players.\n *\n * @type {Object}\n */\nPlayer.players = {};\nconst navigator = window$1.navigator;\n\n/*\n * Player instance options, surfaced using options\n * options = Player.prototype.options_\n * Make changes in options, not here.\n *\n * @type {Object}\n * @private\n */\nPlayer.prototype.options_ = {\n  // Default order of fallback technology\n  techOrder: Tech.defaultTechOrder_,\n  html5: {},\n  // enable sourceset by default\n  enableSourceset: true,\n  // default inactivity timeout\n  inactivityTimeout: 2000,\n  // default playback rates\n  playbackRates: [],\n  // Add playback rate selection by adding rates\n  // 'playbackRates': [0.5, 1, 1.5, 2],\n  liveui: false,\n  // Included control sets\n  children: ['mediaLoader', 'posterImage', 'titleBar', 'textTrackDisplay', 'loadingSpinner', 'bigPlayButton', 'liveTracker', 'controlBar', 'errorDisplay', 'textTrackSettings', 'resizeManager'],\n  language: navigator && (navigator.languages && navigator.languages[0] || navigator.userLanguage || navigator.language) || 'en',\n  // locales and their language translations\n  languages: {},\n  // Default message to show when a video cannot be played.\n  notSupportedMessage: 'No compatible source was found for this media.',\n  normalizeAutoplay: false,\n  fullscreen: {\n    options: {\n      navigationUI: 'hide'\n    }\n  },\n  breakpoints: {},\n  responsive: false,\n  audioOnlyMode: false,\n  audioPosterMode: false\n};\n[\n/**\n * Returns whether or not the player is in the \"ended\" state.\n *\n * @return {Boolean} True if the player is in the ended state, false if not.\n * @method Player#ended\n */\n'ended',\n/**\n * Returns whether or not the player is in the \"seeking\" state.\n *\n * @return {Boolean} True if the player is in the seeking state, false if not.\n * @method Player#seeking\n */\n'seeking',\n/**\n * Returns the TimeRanges of the media that are currently available\n * for seeking to.\n *\n * @return {TimeRanges} the seekable intervals of the media timeline\n * @method Player#seekable\n */\n'seekable',\n/**\n * Returns the current state of network activity for the element, from\n * the codes in the list below.\n * - NETWORK_EMPTY (numeric value 0)\n *   The element has not yet been initialised. All attributes are in\n *   their initial states.\n * - NETWORK_IDLE (numeric value 1)\n *   The element's resource selection algorithm is active and has\n *   selected a resource, but it is not actually using the network at\n *   this time.\n * - NETWORK_LOADING (numeric value 2)\n *   The user agent is actively trying to download data.\n * - NETWORK_NO_SOURCE (numeric value 3)\n *   The element's resource selection algorithm is active, but it has\n *   not yet found a resource to use.\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#network-states\n * @return {number} the current network activity state\n * @method Player#networkState\n */\n'networkState',\n/**\n * Returns a value that expresses the current state of the element\n * with respect to rendering the current playback position, from the\n * codes in the list below.\n * - HAVE_NOTHING (numeric value 0)\n *   No information regarding the media resource is available.\n * - HAVE_METADATA (numeric value 1)\n *   Enough of the resource has been obtained that the duration of the\n *   resource is available.\n * - HAVE_CURRENT_DATA (numeric value 2)\n *   Data for the immediate current playback position is available.\n * - HAVE_FUTURE_DATA (numeric value 3)\n *   Data for the immediate current playback position is available, as\n *   well as enough data for the user agent to advance the current\n *   playback position in the direction of playback.\n * - HAVE_ENOUGH_DATA (numeric value 4)\n *   The user agent estimates that enough data is available for\n *   playback to proceed uninterrupted.\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-readystate\n * @return {number} the current playback rendering state\n * @method Player#readyState\n */\n'readyState'].forEach(function (fn) {\n  Player.prototype[fn] = function () {\n    return this.techGet_(fn);\n  };\n});\nTECH_EVENTS_RETRIGGER.forEach(function (event) {\n  Player.prototype[`handleTech${toTitleCase$1(event)}_`] = function () {\n    return this.trigger(event);\n  };\n});\n\n/**\n * Fired when the player has initial duration and dimension information\n *\n * @event Player#loadedmetadata\n * @type {Event}\n */\n\n/**\n * Fired when the player has downloaded data at the current playback position\n *\n * @event Player#loadeddata\n * @type {Event}\n */\n\n/**\n * Fired when the current playback position has changed *\n * During playback this is fired every 15-250 milliseconds, depending on the\n * playback technology in use.\n *\n * @event Player#timeupdate\n * @type {Event}\n */\n\n/**\n * Fired when the volume changes\n *\n * @event Player#volumechange\n * @type {Event}\n */\n\n/**\n * Reports whether or not a player has a plugin available.\n *\n * This does not report whether or not the plugin has ever been initialized\n * on this player. For that, [usingPlugin]{@link Player#usingPlugin}.\n *\n * @method Player#hasPlugin\n * @param  {string}  name\n *         The name of a plugin.\n *\n * @return {boolean}\n *         Whether or not this player has the requested plugin available.\n */\n\n/**\n * Reports whether or not a player is using a plugin by name.\n *\n * For basic plugins, this only reports whether the plugin has _ever_ been\n * initialized on this player.\n *\n * @method Player#usingPlugin\n * @param  {string} name\n *         The name of a plugin.\n *\n * @return {boolean}\n *         Whether or not this player is using the requested plugin.\n */\n\nComponent$1.registerComponent('Player', Player);\n\n/**\n * @file plugin.js\n */\n\n/**\n * The base plugin name.\n *\n * @private\n * @constant\n * @type {string}\n */\nconst BASE_PLUGIN_NAME = 'plugin';\n\n/**\n * The key on which a player's active plugins cache is stored.\n *\n * @private\n * @constant\n * @type     {string}\n */\nconst PLUGIN_CACHE_KEY = 'activePlugins_';\n\n/**\n * Stores registered plugins in a private space.\n *\n * @private\n * @type    {Object}\n */\nconst pluginStorage = {};\n\n/**\n * Reports whether or not a plugin has been registered.\n *\n * @private\n * @param   {string} name\n *          The name of a plugin.\n *\n * @return {boolean}\n *          Whether or not the plugin has been registered.\n */\nconst pluginExists = name => pluginStorage.hasOwnProperty(name);\n\n/**\n * Get a single registered plugin by name.\n *\n * @private\n * @param   {string} name\n *          The name of a plugin.\n *\n * @return {typeof Plugin|Function|undefined}\n *          The plugin (or undefined).\n */\nconst getPlugin = name => pluginExists(name) ? pluginStorage[name] : undefined;\n\n/**\n * Marks a plugin as \"active\" on a player.\n *\n * Also, ensures that the player has an object for tracking active plugins.\n *\n * @private\n * @param   {Player} player\n *          A Video.js player instance.\n *\n * @param   {string} name\n *          The name of a plugin.\n */\nconst markPluginAsActive = (player, name) => {\n  player[PLUGIN_CACHE_KEY] = player[PLUGIN_CACHE_KEY] || {};\n  player[PLUGIN_CACHE_KEY][name] = true;\n};\n\n/**\n * Triggers a pair of plugin setup events.\n *\n * @private\n * @param  {Player} player\n *         A Video.js player instance.\n *\n * @param  {Plugin~PluginEventHash} hash\n *         A plugin event hash.\n *\n * @param  {boolean} [before]\n *         If true, prefixes the event name with \"before\". In other words,\n *         use this to trigger \"beforepluginsetup\" instead of \"pluginsetup\".\n */\nconst triggerSetupEvent = (player, hash, before) => {\n  const eventName = (before ? 'before' : '') + 'pluginsetup';\n  player.trigger(eventName, hash);\n  player.trigger(eventName + ':' + hash.name, hash);\n};\n\n/**\n * Takes a basic plugin function and returns a wrapper function which marks\n * on the player that the plugin has been activated.\n *\n * @private\n * @param   {string} name\n *          The name of the plugin.\n *\n * @param   {Function} plugin\n *          The basic plugin.\n *\n * @return {Function}\n *          A wrapper function for the given plugin.\n */\nconst createBasicPlugin = function (name, plugin) {\n  const basicPluginWrapper = function () {\n    // We trigger the \"beforepluginsetup\" and \"pluginsetup\" events on the player\n    // regardless, but we want the hash to be consistent with the hash provided\n    // for advanced plugins.\n    //\n    // The only potentially counter-intuitive thing here is the `instance` in\n    // the \"pluginsetup\" event is the value returned by the `plugin` function.\n    triggerSetupEvent(this, {\n      name,\n      plugin,\n      instance: null\n    }, true);\n    const instance = plugin.apply(this, arguments);\n    markPluginAsActive(this, name);\n    triggerSetupEvent(this, {\n      name,\n      plugin,\n      instance\n    });\n    return instance;\n  };\n  Object.keys(plugin).forEach(function (prop) {\n    basicPluginWrapper[prop] = plugin[prop];\n  });\n  return basicPluginWrapper;\n};\n\n/**\n * Takes a plugin sub-class and returns a factory function for generating\n * instances of it.\n *\n * This factory function will replace itself with an instance of the requested\n * sub-class of Plugin.\n *\n * @private\n * @param   {string} name\n *          The name of the plugin.\n *\n * @param   {Plugin} PluginSubClass\n *          The advanced plugin.\n *\n * @return {Function}\n */\nconst createPluginFactory = (name, PluginSubClass) => {\n  // Add a `name` property to the plugin prototype so that each plugin can\n  // refer to itself by name.\n  PluginSubClass.prototype.name = name;\n  return function (...args) {\n    triggerSetupEvent(this, {\n      name,\n      plugin: PluginSubClass,\n      instance: null\n    }, true);\n    const instance = new PluginSubClass(...[this, ...args]);\n\n    // The plugin is replaced by a function that returns the current instance.\n    this[name] = () => instance;\n    triggerSetupEvent(this, instance.getEventHash());\n    return instance;\n  };\n};\n\n/**\n * Parent class for all advanced plugins.\n *\n * @mixes   module:evented~EventedMixin\n * @mixes   module:stateful~StatefulMixin\n * @fires   Player#beforepluginsetup\n * @fires   Player#beforepluginsetup:$name\n * @fires   Player#pluginsetup\n * @fires   Player#pluginsetup:$name\n * @listens Player#dispose\n * @throws  {Error}\n *          If attempting to instantiate the base {@link Plugin} class\n *          directly instead of via a sub-class.\n */\nclass Plugin {\n  /**\n   * Creates an instance of this class.\n   *\n   * Sub-classes should call `super` to ensure plugins are properly initialized.\n   *\n   * @param {Player} player\n   *        A Video.js player instance.\n   */\n  constructor(player) {\n    if (this.constructor === Plugin) {\n      throw new Error('Plugin must be sub-classed; not directly instantiated.');\n    }\n    this.player = player;\n    if (!this.log) {\n      this.log = this.player.log.createLogger(this.name);\n    }\n\n    // Make this object evented, but remove the added `trigger` method so we\n    // use the prototype version instead.\n    evented(this);\n    delete this.trigger;\n    stateful(this, this.constructor.defaultState);\n    markPluginAsActive(player, this.name);\n\n    // Auto-bind the dispose method so we can use it as a listener and unbind\n    // it later easily.\n    this.dispose = this.dispose.bind(this);\n\n    // If the player is disposed, dispose the plugin.\n    player.on('dispose', this.dispose);\n  }\n\n  /**\n   * Get the version of the plugin that was set on <pluginName>.VERSION\n   */\n  version() {\n    return this.constructor.VERSION;\n  }\n\n  /**\n   * Each event triggered by plugins includes a hash of additional data with\n   * conventional properties.\n   *\n   * This returns that object or mutates an existing hash.\n   *\n   * @param   {Object} [hash={}]\n   *          An object to be used as event an event hash.\n   *\n   * @return {Plugin~PluginEventHash}\n   *          An event hash object with provided properties mixed-in.\n   */\n  getEventHash(hash = {}) {\n    hash.name = this.name;\n    hash.plugin = this.constructor;\n    hash.instance = this;\n    return hash;\n  }\n\n  /**\n   * Triggers an event on the plugin object and overrides\n   * {@link module:evented~EventedMixin.trigger|EventedMixin.trigger}.\n   *\n   * @param   {string|Object} event\n   *          An event type or an object with a type property.\n   *\n   * @param   {Object} [hash={}]\n   *          Additional data hash to merge with a\n   *          {@link Plugin~PluginEventHash|PluginEventHash}.\n   *\n   * @return {boolean}\n   *          Whether or not default was prevented.\n   */\n  trigger(event, hash = {}) {\n    return trigger(this.eventBusEl_, event, this.getEventHash(hash));\n  }\n\n  /**\n   * Handles \"statechanged\" events on the plugin. No-op by default, override by\n   * subclassing.\n   *\n   * @abstract\n   * @param    {Event} e\n   *           An event object provided by a \"statechanged\" event.\n   *\n   * @param    {Object} e.changes\n   *           An object describing changes that occurred with the \"statechanged\"\n   *           event.\n   */\n  handleStateChanged(e) {}\n\n  /**\n   * Disposes a plugin.\n   *\n   * Subclasses can override this if they want, but for the sake of safety,\n   * it's probably best to subscribe the \"dispose\" event.\n   *\n   * @fires Plugin#dispose\n   */\n  dispose() {\n    const {\n      name,\n      player\n    } = this;\n\n    /**\n     * Signals that a advanced plugin is about to be disposed.\n     *\n     * @event Plugin#dispose\n     * @type  {Event}\n     */\n    this.trigger('dispose');\n    this.off();\n    player.off('dispose', this.dispose);\n\n    // Eliminate any possible sources of leaking memory by clearing up\n    // references between the player and the plugin instance and nulling out\n    // the plugin's state and replacing methods with a function that throws.\n    player[PLUGIN_CACHE_KEY][name] = false;\n    this.player = this.state = null;\n\n    // Finally, replace the plugin name on the player with a new factory\n    // function, so that the plugin is ready to be set up again.\n    player[name] = createPluginFactory(name, pluginStorage[name]);\n  }\n\n  /**\n   * Determines if a plugin is a basic plugin (i.e. not a sub-class of `Plugin`).\n   *\n   * @param   {string|Function} plugin\n   *          If a string, matches the name of a plugin. If a function, will be\n   *          tested directly.\n   *\n   * @return {boolean}\n   *          Whether or not a plugin is a basic plugin.\n   */\n  static isBasic(plugin) {\n    const p = typeof plugin === 'string' ? getPlugin(plugin) : plugin;\n    return typeof p === 'function' && !Plugin.prototype.isPrototypeOf(p.prototype);\n  }\n\n  /**\n   * Register a Video.js plugin.\n   *\n   * @param   {string} name\n   *          The name of the plugin to be registered. Must be a string and\n   *          must not match an existing plugin or a method on the `Player`\n   *          prototype.\n   *\n   * @param   {typeof Plugin|Function} plugin\n   *          A sub-class of `Plugin` or a function for basic plugins.\n   *\n   * @return {typeof Plugin|Function}\n   *          For advanced plugins, a factory function for that plugin. For\n   *          basic plugins, a wrapper function that initializes the plugin.\n   */\n  static registerPlugin(name, plugin) {\n    if (typeof name !== 'string') {\n      throw new Error(`Illegal plugin name, \"${name}\", must be a string, was ${typeof name}.`);\n    }\n    if (pluginExists(name)) {\n      log$1.warn(`A plugin named \"${name}\" already exists. You may want to avoid re-registering plugins!`);\n    } else if (Player.prototype.hasOwnProperty(name)) {\n      throw new Error(`Illegal plugin name, \"${name}\", cannot share a name with an existing player method!`);\n    }\n    if (typeof plugin !== 'function') {\n      throw new Error(`Illegal plugin for \"${name}\", must be a function, was ${typeof plugin}.`);\n    }\n    pluginStorage[name] = plugin;\n\n    // Add a player prototype method for all sub-classed plugins (but not for\n    // the base Plugin class).\n    if (name !== BASE_PLUGIN_NAME) {\n      if (Plugin.isBasic(plugin)) {\n        Player.prototype[name] = createBasicPlugin(name, plugin);\n      } else {\n        Player.prototype[name] = createPluginFactory(name, plugin);\n      }\n    }\n    return plugin;\n  }\n\n  /**\n   * De-register a Video.js plugin.\n   *\n   * @param  {string} name\n   *         The name of the plugin to be de-registered. Must be a string that\n   *         matches an existing plugin.\n   *\n   * @throws {Error}\n   *         If an attempt is made to de-register the base plugin.\n   */\n  static deregisterPlugin(name) {\n    if (name === BASE_PLUGIN_NAME) {\n      throw new Error('Cannot de-register base plugin.');\n    }\n    if (pluginExists(name)) {\n      delete pluginStorage[name];\n      delete Player.prototype[name];\n    }\n  }\n\n  /**\n   * Gets an object containing multiple Video.js plugins.\n   *\n   * @param   {Array} [names]\n   *          If provided, should be an array of plugin names. Defaults to _all_\n   *          plugin names.\n   *\n   * @return {Object|undefined}\n   *          An object containing plugin(s) associated with their name(s) or\n   *          `undefined` if no matching plugins exist).\n   */\n  static getPlugins(names = Object.keys(pluginStorage)) {\n    let result;\n    names.forEach(name => {\n      const plugin = getPlugin(name);\n      if (plugin) {\n        result = result || {};\n        result[name] = plugin;\n      }\n    });\n    return result;\n  }\n\n  /**\n   * Gets a plugin's version, if available\n   *\n   * @param   {string} name\n   *          The name of a plugin.\n   *\n   * @return {string}\n   *          The plugin's version or an empty string.\n   */\n  static getPluginVersion(name) {\n    const plugin = getPlugin(name);\n    return plugin && plugin.VERSION || '';\n  }\n}\n\n/**\n * Gets a plugin by name if it exists.\n *\n * @static\n * @method   getPlugin\n * @memberOf Plugin\n * @param    {string} name\n *           The name of a plugin.\n *\n * @returns  {typeof Plugin|Function|undefined}\n *           The plugin (or `undefined`).\n */\nPlugin.getPlugin = getPlugin;\n\n/**\n * The name of the base plugin class as it is registered.\n *\n * @type {string}\n */\nPlugin.BASE_PLUGIN_NAME = BASE_PLUGIN_NAME;\nPlugin.registerPlugin(BASE_PLUGIN_NAME, Plugin);\n\n/**\n * Documented in player.js\n *\n * @ignore\n */\nPlayer.prototype.usingPlugin = function (name) {\n  return !!this[PLUGIN_CACHE_KEY] && this[PLUGIN_CACHE_KEY][name] === true;\n};\n\n/**\n * Documented in player.js\n *\n * @ignore\n */\nPlayer.prototype.hasPlugin = function (name) {\n  return !!pluginExists(name);\n};\n\n/**\n * Signals that a plugin is about to be set up on a player.\n *\n * @event    Player#beforepluginsetup\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * Signals that a plugin is about to be set up on a player - by name. The name\n * is the name of the plugin.\n *\n * @event    Player#beforepluginsetup:$name\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * Signals that a plugin has just been set up on a player.\n *\n * @event    Player#pluginsetup\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * Signals that a plugin has just been set up on a player - by name. The name\n * is the name of the plugin.\n *\n * @event    Player#pluginsetup:$name\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * @typedef  {Object} Plugin~PluginEventHash\n *\n * @property {string} instance\n *           For basic plugins, the return value of the plugin function. For\n *           advanced plugins, the plugin instance on which the event is fired.\n *\n * @property {string} name\n *           The name of the plugin.\n *\n * @property {string} plugin\n *           For basic plugins, the plugin function. For advanced plugins, the\n *           plugin class/constructor.\n */\n\n/**\n * @file deprecate.js\n * @module deprecate\n */\n\n/**\n * Decorate a function with a deprecation message the first time it is called.\n *\n * @param  {string}   message\n *         A deprecation message to log the first time the returned function\n *         is called.\n *\n * @param  {Function} fn\n *         The function to be deprecated.\n *\n * @return {Function}\n *         A wrapper function that will log a deprecation warning the first\n *         time it is called. The return value will be the return value of\n *         the wrapped function.\n */\nfunction deprecate(message, fn) {\n  let warned = false;\n  return function (...args) {\n    if (!warned) {\n      log$1.warn(message);\n    }\n    warned = true;\n    return fn.apply(this, args);\n  };\n}\n\n/**\n * Internal function used to mark a function as deprecated in the next major\n * version with consistent messaging.\n *\n * @param  {number}   major   The major version where it will be removed\n * @param  {string}   oldName The old function name\n * @param  {string}   newName The new function name\n * @param  {Function} fn      The function to deprecate\n * @return {Function}         The decorated function\n */\nfunction deprecateForMajor(major, oldName, newName, fn) {\n  return deprecate(`${oldName} is deprecated and will be removed in ${major}.0; please use ${newName} instead.`, fn);\n}\n\n/**\n * @file video.js\n * @module videojs\n */\n\n/**\n * Normalize an `id` value by trimming off a leading `#`\n *\n * @private\n * @param   {string} id\n *          A string, maybe with a leading `#`.\n *\n * @return {string}\n *          The string, without any leading `#`.\n */\nconst normalizeId = id => id.indexOf('#') === 0 ? id.slice(1) : id;\n\n/**\n * A callback that is called when a component is ready. Does not have any\n * parameters and any callback value will be ignored. See: {@link Component~ReadyCallback}\n *\n * @callback ReadyCallback\n */\n\n/**\n * The `videojs()` function doubles as the main function for users to create a\n * {@link Player} instance as well as the main library namespace.\n *\n * It can also be used as a getter for a pre-existing {@link Player} instance.\n * However, we _strongly_ recommend using `videojs.getPlayer()` for this\n * purpose because it avoids any potential for unintended initialization.\n *\n * Due to [limitations](https://github.com/jsdoc3/jsdoc/issues/955#issuecomment-313829149)\n * of our JSDoc template, we cannot properly document this as both a function\n * and a namespace, so its function signature is documented here.\n *\n * #### Arguments\n * ##### id\n * string|Element, **required**\n *\n * Video element or video element ID.\n *\n * ##### options\n * Object, optional\n *\n * Options object for providing settings.\n * See: [Options Guide](https://docs.videojs.com/tutorial-options.html).\n *\n * ##### ready\n * {@link Component~ReadyCallback}, optional\n *\n * A function to be called when the {@link Player} and {@link Tech} are ready.\n *\n * #### Return Value\n *\n * The `videojs()` function returns a {@link Player} instance.\n *\n * @namespace\n *\n * @borrows AudioTrack as AudioTrack\n * @borrows Component.getComponent as getComponent\n * @borrows module:events.on as on\n * @borrows module:events.one as one\n * @borrows module:events.off as off\n * @borrows module:events.trigger as trigger\n * @borrows EventTarget as EventTarget\n * @borrows module:middleware.use as use\n * @borrows Player.players as players\n * @borrows Plugin.registerPlugin as registerPlugin\n * @borrows Plugin.deregisterPlugin as deregisterPlugin\n * @borrows Plugin.getPlugins as getPlugins\n * @borrows Plugin.getPlugin as getPlugin\n * @borrows Plugin.getPluginVersion as getPluginVersion\n * @borrows Tech.getTech as getTech\n * @borrows Tech.registerTech as registerTech\n * @borrows TextTrack as TextTrack\n * @borrows VideoTrack as VideoTrack\n *\n * @param  {string|Element} id\n *         Video element or video element ID.\n *\n * @param  {Object} [options]\n *         Options object for providing settings.\n *         See: [Options Guide](https://docs.videojs.com/tutorial-options.html).\n *\n * @param  {ReadyCallback} [ready]\n *         A function to be called when the {@link Player} and {@link Tech} are\n *         ready.\n *\n * @return {Player}\n *         The `videojs()` function returns a {@link Player|Player} instance.\n */\nfunction videojs(id, options, ready) {\n  let player = videojs.getPlayer(id);\n  if (player) {\n    if (options) {\n      log$1.warn(`Player \"${id}\" is already initialised. Options will not be applied.`);\n    }\n    if (ready) {\n      player.ready(ready);\n    }\n    return player;\n  }\n  const el = typeof id === 'string' ? $('#' + normalizeId(id)) : id;\n  if (!isEl(el)) {\n    throw new TypeError('The element or ID supplied is not valid. (videojs)');\n  }\n\n  // document.body.contains(el) will only check if el is contained within that one document.\n  // This causes problems for elements in iframes.\n  // Instead, use the element's ownerDocument instead of the global document.\n  // This will make sure that the element is indeed in the dom of that document.\n  // Additionally, check that the document in question has a default view.\n  // If the document is no longer attached to the dom, the defaultView of the document will be null.\n  if (!el.ownerDocument.defaultView || !el.ownerDocument.body.contains(el)) {\n    log$1.warn('The element supplied is not included in the DOM');\n  }\n  options = options || {};\n\n  // Store a copy of the el before modification, if it is to be restored in destroy()\n  // If div ingest, store the parent div\n  if (options.restoreEl === true) {\n    options.restoreEl = (el.parentNode && el.parentNode.hasAttribute('data-vjs-player') ? el.parentNode : el).cloneNode(true);\n  }\n  hooks('beforesetup').forEach(hookFunction => {\n    const opts = hookFunction(el, merge$1(options));\n    if (!isObject(opts) || Array.isArray(opts)) {\n      log$1.error('please return an object in beforesetup hooks');\n      return;\n    }\n    options = merge$1(options, opts);\n  });\n\n  // We get the current \"Player\" component here in case an integration has\n  // replaced it with a custom player.\n  const PlayerComponent = Component$1.getComponent('Player');\n  player = new PlayerComponent(el, options, ready);\n  hooks('setup').forEach(hookFunction => hookFunction(player));\n  return player;\n}\nvideojs.hooks_ = hooks_;\nvideojs.hooks = hooks;\nvideojs.hook = hook;\nvideojs.hookOnce = hookOnce;\nvideojs.removeHook = removeHook;\n\n// Add default styles\nif (window$1.VIDEOJS_NO_DYNAMIC_STYLE !== true && isReal()) {\n  let style = $('.vjs-styles-defaults');\n  if (!style) {\n    style = createStyleElement('vjs-styles-defaults');\n    const head = $('head');\n    if (head) {\n      head.insertBefore(style, head.firstChild);\n    }\n    setTextContent(style, `\n      .video-js {\n        width: 300px;\n        height: 150px;\n      }\n\n      .vjs-fluid:not(.vjs-audio-only-mode) {\n        padding-top: 56.25%\n      }\n    `);\n  }\n}\n\n// Run Auto-load players\n// You have to wait at least once in case this script is loaded after your\n// video in the DOM (weird behavior only with minified version)\nautoSetupTimeout(1, videojs);\n\n/**\n * Current Video.js version. Follows [semantic versioning](https://semver.org/).\n *\n * @type {string}\n */\nvideojs.VERSION = version$6;\n\n/**\n * The global options object. These are the settings that take effect\n * if no overrides are specified when the player is created.\n *\n * @type {Object}\n */\nvideojs.options = Player.prototype.options_;\n\n/**\n * Get an object with the currently created players, keyed by player ID\n *\n * @return {Object}\n *         The created players\n */\nvideojs.getPlayers = () => Player.players;\n\n/**\n * Get a single player based on an ID or DOM element.\n *\n * This is useful if you want to check if an element or ID has an associated\n * Video.js player, but not create one if it doesn't.\n *\n * @param   {string|Element} id\n *          An HTML element - `<video>`, `<audio>`, or `<video-js>` -\n *          or a string matching the `id` of such an element.\n *\n * @return {Player|undefined}\n *          A player instance or `undefined` if there is no player instance\n *          matching the argument.\n */\nvideojs.getPlayer = id => {\n  const players = Player.players;\n  let tag;\n  if (typeof id === 'string') {\n    const nId = normalizeId(id);\n    const player = players[nId];\n    if (player) {\n      return player;\n    }\n    tag = $('#' + nId);\n  } else {\n    tag = id;\n  }\n  if (isEl(tag)) {\n    const {\n      player,\n      playerId\n    } = tag;\n\n    // Element may have a `player` property referring to an already created\n    // player instance. If so, return that.\n    if (player || players[playerId]) {\n      return player || players[playerId];\n    }\n  }\n};\n\n/**\n * Returns an array of all current players.\n *\n * @return {Array}\n *         An array of all players. The array will be in the order that\n *         `Object.keys` provides, which could potentially vary between\n *         JavaScript engines.\n *\n */\nvideojs.getAllPlayers = () =>\n// Disposed players leave a key with a `null` value, so we need to make sure\n// we filter those out.\nObject.keys(Player.players).map(k => Player.players[k]).filter(Boolean);\nvideojs.players = Player.players;\nvideojs.getComponent = Component$1.getComponent;\n\n/**\n * Register a component so it can referred to by name. Used when adding to other\n * components, either through addChild `component.addChild('myComponent')` or through\n * default children options  `{ children: ['myComponent'] }`.\n *\n * > NOTE: You could also just initialize the component before adding.\n * `component.addChild(new MyComponent());`\n *\n * @param {string} name\n *        The class name of the component\n *\n * @param {Component} comp\n *        The component class\n *\n * @return {Component}\n *         The newly registered component\n */\nvideojs.registerComponent = (name, comp) => {\n  if (Tech.isTech(comp)) {\n    log$1.warn(`The ${name} tech was registered as a component. It should instead be registered using videojs.registerTech(name, tech)`);\n  }\n  Component$1.registerComponent.call(Component$1, name, comp);\n};\nvideojs.getTech = Tech.getTech;\nvideojs.registerTech = Tech.registerTech;\nvideojs.use = use;\n\n/**\n * An object that can be returned by a middleware to signify\n * that the middleware is being terminated.\n *\n * @type {object}\n * @property {object} middleware.TERMINATOR\n */\nObject.defineProperty(videojs, 'middleware', {\n  value: {},\n  writeable: false,\n  enumerable: true\n});\nObject.defineProperty(videojs.middleware, 'TERMINATOR', {\n  value: TERMINATOR,\n  writeable: false,\n  enumerable: true\n});\n\n/**\n * A reference to the {@link module:browser|browser utility module} as an object.\n *\n * @type {Object}\n * @see  {@link module:browser|browser}\n */\nvideojs.browser = browser;\n\n/**\n * A reference to the {@link module:obj|obj utility module} as an object.\n *\n * @type {Object}\n * @see  {@link module:obj|obj}\n */\nvideojs.obj = Obj;\n\n/**\n * Deprecated reference to the {@link module:obj.merge|merge function}\n *\n * @type {Function}\n * @see {@link module:obj.merge|merge}\n * @deprecated Deprecated and will be removed in 9.0. Please use videojs.obj.merge instead.\n */\nvideojs.mergeOptions = deprecateForMajor(9, 'videojs.mergeOptions', 'videojs.obj.merge', merge$1);\n\n/**\n * Deprecated reference to the {@link module:obj.defineLazyProperty|defineLazyProperty function}\n *\n * @type {Function}\n * @see {@link module:obj.defineLazyProperty|defineLazyProperty}\n * @deprecated Deprecated and will be removed in 9.0. Please use videojs.obj.defineLazyProperty instead.\n */\nvideojs.defineLazyProperty = deprecateForMajor(9, 'videojs.defineLazyProperty', 'videojs.obj.defineLazyProperty', defineLazyProperty);\n\n/**\n * Deprecated reference to the {@link module:fn.bind_|fn.bind_ function}\n *\n * @type {Function}\n * @see {@link module:fn.bind_|fn.bind_}\n * @deprecated Deprecated and will be removed in 9.0. Please use native Function.prototype.bind instead.\n */\nvideojs.bind = deprecateForMajor(9, 'videojs.bind', 'native Function.prototype.bind', bind_);\nvideojs.registerPlugin = Plugin.registerPlugin;\nvideojs.deregisterPlugin = Plugin.deregisterPlugin;\n\n/**\n * Deprecated method to register a plugin with Video.js\n *\n * @deprecated Deprecated and will be removed in 9.0. Use videojs.registerPlugin() instead.\n *\n * @param {string} name\n *        The plugin name\n *\n * @param {Plugin|Function} plugin\n *         The plugin sub-class or function\n */\nvideojs.plugin = (name, plugin) => {\n  log$1.warn('videojs.plugin() is deprecated; use videojs.registerPlugin() instead');\n  return Plugin.registerPlugin(name, plugin);\n};\nvideojs.getPlugins = Plugin.getPlugins;\nvideojs.getPlugin = Plugin.getPlugin;\nvideojs.getPluginVersion = Plugin.getPluginVersion;\n\n/**\n * Adding languages so that they're available to all players.\n * Example: `videojs.addLanguage('es', { 'Hello': 'Hola' });`\n *\n * @param {string} code\n *        The language code or dictionary property\n *\n * @param {Object} data\n *        The data values to be translated\n *\n * @return {Object}\n *         The resulting language dictionary object\n */\nvideojs.addLanguage = function (code, data) {\n  code = ('' + code).toLowerCase();\n  videojs.options.languages = merge$1(videojs.options.languages, {\n    [code]: data\n  });\n  return videojs.options.languages[code];\n};\n\n/**\n * A reference to the {@link module:log|log utility module} as an object.\n *\n * @type {Function}\n * @see  {@link module:log|log}\n */\nvideojs.log = log$1;\nvideojs.createLogger = createLogger;\n\n/**\n * A reference to the {@link module:time|time utility module} as an object.\n *\n * @type {Object}\n * @see {@link module:time|time}\n */\nvideojs.time = Time;\n\n/**\n * Deprecated reference to the {@link module:time.createTimeRanges|createTimeRanges function}\n *\n * @type {Function}\n * @see {@link module:time.createTimeRanges|createTimeRanges}\n * @deprecated Deprecated and will be removed in 9.0. Please use videojs.time.createTimeRanges instead.\n */\nvideojs.createTimeRange = deprecateForMajor(9, 'videojs.createTimeRange', 'videojs.time.createTimeRanges', createTimeRanges$1);\n\n/**\n * Deprecated reference to the {@link module:time.createTimeRanges|createTimeRanges function}\n *\n * @type {Function}\n * @see {@link module:time.createTimeRanges|createTimeRanges}\n * @deprecated Deprecated and will be removed in 9.0. Please use videojs.time.createTimeRanges instead.\n */\nvideojs.createTimeRanges = deprecateForMajor(9, 'videojs.createTimeRanges', 'videojs.time.createTimeRanges', createTimeRanges$1);\n\n/**\n * Deprecated reference to the {@link module:time.formatTime|formatTime function}\n *\n * @type {Function}\n * @see {@link module:time.formatTime|formatTime}\n * @deprecated Deprecated and will be removed in 9.0. Please use videojs.time.format instead.\n */\nvideojs.formatTime = deprecateForMajor(9, 'videojs.formatTime', 'videojs.time.formatTime', formatTime);\n\n/**\n * Deprecated reference to the {@link module:time.setFormatTime|setFormatTime function}\n *\n * @type {Function}\n * @see {@link module:time.setFormatTime|setFormatTime}\n * @deprecated Deprecated and will be removed in 9.0. Please use videojs.time.setFormat instead.\n */\nvideojs.setFormatTime = deprecateForMajor(9, 'videojs.setFormatTime', 'videojs.time.setFormatTime', setFormatTime);\n\n/**\n * Deprecated reference to the {@link module:time.resetFormatTime|resetFormatTime function}\n *\n * @type {Function}\n * @see {@link module:time.resetFormatTime|resetFormatTime}\n * @deprecated Deprecated and will be removed in 9.0. Please use videojs.time.resetFormat instead.\n */\nvideojs.resetFormatTime = deprecateForMajor(9, 'videojs.resetFormatTime', 'videojs.time.resetFormatTime', resetFormatTime);\n\n/**\n * Deprecated reference to the {@link module:url.parseUrl|Url.parseUrl function}\n *\n * @type {Function}\n * @see {@link module:url.parseUrl|parseUrl}\n * @deprecated Deprecated and will be removed in 9.0. Please use videojs.url.parseUrl instead.\n */\nvideojs.parseUrl = deprecateForMajor(9, 'videojs.parseUrl', 'videojs.url.parseUrl', parseUrl);\n\n/**\n * Deprecated reference to the {@link module:url.isCrossOrigin|Url.isCrossOrigin function}\n *\n * @type {Function}\n * @see {@link module:url.isCrossOrigin|isCrossOrigin}\n * @deprecated Deprecated and will be removed in 9.0. Please use videojs.url.isCrossOrigin instead.\n */\nvideojs.isCrossOrigin = deprecateForMajor(9, 'videojs.isCrossOrigin', 'videojs.url.isCrossOrigin', isCrossOrigin);\nvideojs.EventTarget = EventTarget$2;\nvideojs.any = any;\nvideojs.on = on;\nvideojs.one = one;\nvideojs.off = off;\nvideojs.trigger = trigger;\n\n/**\n * A cross-browser XMLHttpRequest wrapper.\n *\n * @function\n * @param    {Object} options\n *           Settings for the request.\n *\n * @return   {XMLHttpRequest|XDomainRequest}\n *           The request object.\n *\n * @see      https://github.com/Raynos/xhr\n */\nvideojs.xhr = XHR;\nvideojs.TextTrack = TextTrack;\nvideojs.AudioTrack = AudioTrack;\nvideojs.VideoTrack = VideoTrack;\n['isEl', 'isTextNode', 'createEl', 'hasClass', 'addClass', 'removeClass', 'toggleClass', 'setAttributes', 'getAttributes', 'emptyEl', 'appendContent', 'insertContent'].forEach(k => {\n  videojs[k] = function () {\n    log$1.warn(`videojs.${k}() is deprecated; use videojs.dom.${k}() instead`);\n    return Dom[k].apply(null, arguments);\n  };\n});\nvideojs.computedStyle = deprecateForMajor(9, 'videojs.computedStyle', 'videojs.dom.computedStyle', computedStyle);\n\n/**\n * A reference to the {@link module:dom|DOM utility module} as an object.\n *\n * @type {Object}\n * @see {@link module:dom|dom}\n */\nvideojs.dom = Dom;\n\n/**\n * A reference to the {@link module:fn|fn utility module} as an object.\n *\n * @type {Object}\n * @see {@link module:fn|fn}\n */\nvideojs.fn = Fn;\n\n/**\n * A reference to the {@link module:num|num utility module} as an object.\n *\n * @type {Object}\n * @see {@link module:num|num}\n */\nvideojs.num = Num;\n\n/**\n * A reference to the {@link module:str|str utility module} as an object.\n *\n * @type {Object}\n * @see {@link module:str|str}\n */\nvideojs.str = Str;\n\n/**\n * A reference to the {@link module:url|URL utility module} as an object.\n *\n * @type {Object}\n * @see {@link module:url|url}\n */\nvideojs.url = Url;\n\n/*! @name videojs-contrib-quality-levels @version 3.0.0 @license Apache-2.0 */\n\n/**\n * A single QualityLevel.\n *\n * interface QualityLevel {\n *   readonly attribute DOMString id;\n *            attribute DOMString label;\n *   readonly attribute long width;\n *   readonly attribute long height;\n *   readonly attribute long bitrate;\n *            attribute boolean enabled;\n * };\n *\n * @class QualityLevel\n */\nclass QualityLevel {\n  /**\n   * Creates a QualityLevel\n   *\n   * @param {Representation|Object} representation The representation of the quality level\n   * @param {string}   representation.id        Unique id of the QualityLevel\n   * @param {number=}  representation.width     Resolution width of the QualityLevel\n   * @param {number=}  representation.height    Resolution height of the QualityLevel\n   * @param {number}   representation.bandwidth Bitrate of the QualityLevel\n   * @param {number=}  representation.frameRate Frame-rate of the QualityLevel\n   * @param {Function} representation.enabled   Callback to enable/disable QualityLevel\n   */\n  constructor(representation) {\n    let level = this; // eslint-disable-line\n\n    level.id = representation.id;\n    level.label = level.id;\n    level.width = representation.width;\n    level.height = representation.height;\n    level.bitrate = representation.bandwidth;\n    level.frameRate = representation.frameRate;\n    level.enabled_ = representation.enabled;\n    Object.defineProperty(level, 'enabled', {\n      /**\n       * Get whether the QualityLevel is enabled.\n       *\n       * @return {boolean} True if the QualityLevel is enabled.\n       */\n      get() {\n        return level.enabled_();\n      },\n      /**\n       * Enable or disable the QualityLevel.\n       *\n       * @param {boolean} enable true to enable QualityLevel, false to disable.\n       */\n      set(enable) {\n        level.enabled_(enable);\n      }\n    });\n    return level;\n  }\n}\n\n/**\n * A list of QualityLevels.\n *\n * interface QualityLevelList : EventTarget {\n *   getter QualityLevel (unsigned long index);\n *   readonly attribute unsigned long length;\n *   readonly attribute long selectedIndex;\n *\n *   void addQualityLevel(QualityLevel qualityLevel)\n *   void removeQualityLevel(QualityLevel remove)\n *   QualityLevel? getQualityLevelById(DOMString id);\n *\n *   attribute EventHandler onchange;\n *   attribute EventHandler onaddqualitylevel;\n *   attribute EventHandler onremovequalitylevel;\n * };\n *\n * @extends videojs.EventTarget\n * @class QualityLevelList\n */\n\nclass QualityLevelList extends videojs.EventTarget {\n  constructor() {\n    super();\n    let list = this; // eslint-disable-line\n\n    list.levels_ = [];\n    list.selectedIndex_ = -1;\n    /**\n     * Get the index of the currently selected QualityLevel.\n     *\n     * @returns {number} The index of the selected QualityLevel. -1 if none selected.\n     * @readonly\n     */\n\n    Object.defineProperty(list, 'selectedIndex', {\n      get() {\n        return list.selectedIndex_;\n      }\n    });\n    /**\n     * Get the length of the list of QualityLevels.\n     *\n     * @returns {number} The length of the list.\n     * @readonly\n     */\n\n    Object.defineProperty(list, 'length', {\n      get() {\n        return list.levels_.length;\n      }\n    });\n    return list;\n  }\n  /**\n   * Adds a quality level to the list.\n   *\n   * @param {Representation|Object} representation The representation of the quality level\n   * @param {string}   representation.id        Unique id of the QualityLevel\n   * @param {number=}  representation.width     Resolution width of the QualityLevel\n   * @param {number=}  representation.height    Resolution height of the QualityLevel\n   * @param {number}   representation.bandwidth Bitrate of the QualityLevel\n   * @param {number=}  representation.frameRate Frame-rate of the QualityLevel\n   * @param {Function} representation.enabled   Callback to enable/disable QualityLevel\n   * @return {QualityLevel} the QualityLevel added to the list\n   * @method addQualityLevel\n   */\n\n  addQualityLevel(representation) {\n    let qualityLevel = this.getQualityLevelById(representation.id); // Do not add duplicate quality levels\n\n    if (qualityLevel) {\n      return qualityLevel;\n    }\n    const index = this.levels_.length;\n    qualityLevel = new QualityLevel(representation);\n    if (!('' + index in this)) {\n      Object.defineProperty(this, index, {\n        get() {\n          return this.levels_[index];\n        }\n      });\n    }\n    this.levels_.push(qualityLevel);\n    this.trigger({\n      qualityLevel,\n      type: 'addqualitylevel'\n    });\n    return qualityLevel;\n  }\n  /**\n   * Removes a quality level from the list.\n   *\n   * @param {QualityLevel} remove QualityLevel to remove to the list.\n   * @return {QualityLevel|null} the QualityLevel removed or null if nothing removed\n   * @method removeQualityLevel\n   */\n\n  removeQualityLevel(qualityLevel) {\n    let removed = null;\n    for (let i = 0, l = this.length; i < l; i++) {\n      if (this[i] === qualityLevel) {\n        removed = this.levels_.splice(i, 1)[0];\n        if (this.selectedIndex_ === i) {\n          this.selectedIndex_ = -1;\n        } else if (this.selectedIndex_ > i) {\n          this.selectedIndex_--;\n        }\n        break;\n      }\n    }\n    if (removed) {\n      this.trigger({\n        qualityLevel,\n        type: 'removequalitylevel'\n      });\n    }\n    return removed;\n  }\n  /**\n   * Searches for a QualityLevel with the given id.\n   *\n   * @param {string} id The id of the QualityLevel to find.\n   * @return {QualityLevel|null} The QualityLevel with id, or null if not found.\n   * @method getQualityLevelById\n   */\n\n  getQualityLevelById(id) {\n    for (let i = 0, l = this.length; i < l; i++) {\n      const level = this[i];\n      if (level.id === id) {\n        return level;\n      }\n    }\n    return null;\n  }\n  /**\n   * Resets the list of QualityLevels to empty\n   *\n   * @method dispose\n   */\n\n  dispose() {\n    this.selectedIndex_ = -1;\n    this.levels_.length = 0;\n  }\n}\n/**\n * change - The selected QualityLevel has changed.\n * addqualitylevel - A QualityLevel has been added to the QualityLevelList.\n * removequalitylevel - A QualityLevel has been removed from the QualityLevelList.\n */\n\nQualityLevelList.prototype.allowedEvents_ = {\n  change: 'change',\n  addqualitylevel: 'addqualitylevel',\n  removequalitylevel: 'removequalitylevel'\n}; // emulate attribute EventHandler support to allow for feature detection\n\nfor (const event in QualityLevelList.prototype.allowedEvents_) {\n  QualityLevelList.prototype['on' + event] = null;\n}\nvar version$5 = \"3.0.0\";\nconst registerPlugin = videojs.registerPlugin || videojs.plugin;\n/**\n * Initialization function for the qualityLevels plugin. Sets up the QualityLevelList and\n * event handlers.\n *\n * @param {Player} player Player object.\n * @param {Object} options Plugin options object.\n * @function initPlugin\n */\n\nconst initPlugin$1 = function (player, options) {\n  const originalPluginFn = player.qualityLevels;\n  const qualityLevelList = new QualityLevelList();\n  const disposeHandler = function () {\n    qualityLevelList.dispose();\n    player.qualityLevels = originalPluginFn;\n    player.off('dispose', disposeHandler);\n  };\n  player.on('dispose', disposeHandler);\n  player.qualityLevels = () => qualityLevelList;\n  player.qualityLevels.VERSION = version$5;\n  return qualityLevelList;\n};\n/**\n * A video.js plugin.\n *\n * In the plugin function, the value of `this` is a video.js `Player`\n * instance. You cannot rely on the player being in a \"ready\" state here,\n * depending on how the plugin is invoked. This may or may not be important\n * to you; if not, remove the wait for \"ready\"!\n *\n * @param {Object} options Plugin options object\n * @function qualityLevels\n */\n\nconst qualityLevels = function (options) {\n  return initPlugin$1(this, videojs.mergeOptions({}, options));\n}; // Register the plugin with video.js.\n\nregisterPlugin('qualityLevels', qualityLevels); // Include the version number.\n\nqualityLevels.VERSION = version$5;\n\n/*! @name @videojs/http-streaming @version 3.0.2 @license Apache-2.0 */\n\n/**\n * @file resolve-url.js - Handling how URLs are resolved and manipulated\n */\nconst resolveUrl = _resolveUrl;\n/**\n * If the xhr request was redirected, return the responseURL, otherwise,\n * return the original url.\n *\n * @api private\n *\n * @param  {string} url - an url being requested\n * @param  {XMLHttpRequest} req - xhr request result\n *\n * @return {string}\n */\n\nconst resolveManifestRedirect = (url, req) => {\n  // To understand how the responseURL below is set and generated:\n  // - https://fetch.spec.whatwg.org/#concept-response-url\n  // - https://fetch.spec.whatwg.org/#atomic-http-redirect-handling\n  if (req && req.responseURL && url !== req.responseURL) {\n    return req.responseURL;\n  }\n  return url;\n};\nconst logger = source => {\n  if (videojs.log.debug) {\n    return videojs.log.debug.bind(videojs, 'VHS:', `${source} >`);\n  }\n  return function () {};\n};\n\n/**\n * Provides a compatibility layer between Video.js 7 and 8 API changes for VHS.\n */\n/**\n * Delegates to videojs.obj.merge (Video.js 8) or\n * videojs.mergeOptions (Video.js 7).\n */\n\nfunction merge(...args) {\n  const context = videojs.obj || videojs;\n  const fn = context.merge || context.mergeOptions;\n  return fn.apply(context, args);\n}\n/**\n * Delegates to videojs.time.createTimeRanges (Video.js 8) or\n * videojs.createTimeRanges (Video.js 7).\n */\n\nfunction createTimeRanges(...args) {\n  const context = videojs.time || videojs;\n  const fn = context.createTimeRanges || context.createTimeRanges;\n  return fn.apply(context, args);\n}\n\n/**\n * ranges\n *\n * Utilities for working with TimeRanges.\n *\n */\n\nconst TIME_FUDGE_FACTOR = 1 / 30; // Comparisons between time values such as current time and the end of the buffered range\n// can be misleading because of precision differences or when the current media has poorly\n// aligned audio and video, which can cause values to be slightly off from what you would\n// expect. This value is what we consider to be safe to use in such comparisons to account\n// for these scenarios.\n\nconst SAFE_TIME_DELTA = TIME_FUDGE_FACTOR * 3;\nconst filterRanges = function (timeRanges, predicate) {\n  const results = [];\n  let i;\n  if (timeRanges && timeRanges.length) {\n    // Search for ranges that match the predicate\n    for (i = 0; i < timeRanges.length; i++) {\n      if (predicate(timeRanges.start(i), timeRanges.end(i))) {\n        results.push([timeRanges.start(i), timeRanges.end(i)]);\n      }\n    }\n  }\n  return createTimeRanges(results);\n};\n/**\n * Attempts to find the buffered TimeRange that contains the specified\n * time.\n *\n * @param {TimeRanges} buffered - the TimeRanges object to query\n * @param {number} time  - the time to filter on.\n * @return {TimeRanges} a new TimeRanges object\n */\n\nconst findRange = function (buffered, time) {\n  return filterRanges(buffered, function (start, end) {\n    return start - SAFE_TIME_DELTA <= time && end + SAFE_TIME_DELTA >= time;\n  });\n};\n/**\n * Returns the TimeRanges that begin later than the specified time.\n *\n * @param {TimeRanges} timeRanges - the TimeRanges object to query\n * @param {number} time - the time to filter on.\n * @return {TimeRanges} a new TimeRanges object.\n */\n\nconst findNextRange = function (timeRanges, time) {\n  return filterRanges(timeRanges, function (start) {\n    return start - TIME_FUDGE_FACTOR >= time;\n  });\n};\n/**\n * Returns gaps within a list of TimeRanges\n *\n * @param {TimeRanges} buffered - the TimeRanges object\n * @return {TimeRanges} a TimeRanges object of gaps\n */\n\nconst findGaps = function (buffered) {\n  if (buffered.length < 2) {\n    return createTimeRanges();\n  }\n  const ranges = [];\n  for (let i = 1; i < buffered.length; i++) {\n    const start = buffered.end(i - 1);\n    const end = buffered.start(i);\n    ranges.push([start, end]);\n  }\n  return createTimeRanges(ranges);\n};\n/**\n * Calculate the intersection of two TimeRanges\n *\n * @param {TimeRanges} bufferA\n * @param {TimeRanges} bufferB\n * @return {TimeRanges} The interesection of `bufferA` with `bufferB`\n */\n\nconst bufferIntersection = function (bufferA, bufferB) {\n  let start = null;\n  let end = null;\n  let arity = 0;\n  const extents = [];\n  const ranges = [];\n  if (!bufferA || !bufferA.length || !bufferB || !bufferB.length) {\n    return createTimeRanges();\n  } // Handle the case where we have both buffers and create an\n  // intersection of the two\n\n  let count = bufferA.length; // A) Gather up all start and end times\n\n  while (count--) {\n    extents.push({\n      time: bufferA.start(count),\n      type: 'start'\n    });\n    extents.push({\n      time: bufferA.end(count),\n      type: 'end'\n    });\n  }\n  count = bufferB.length;\n  while (count--) {\n    extents.push({\n      time: bufferB.start(count),\n      type: 'start'\n    });\n    extents.push({\n      time: bufferB.end(count),\n      type: 'end'\n    });\n  } // B) Sort them by time\n\n  extents.sort(function (a, b) {\n    return a.time - b.time;\n  }); // C) Go along one by one incrementing arity for start and decrementing\n  //    arity for ends\n\n  for (count = 0; count < extents.length; count++) {\n    if (extents[count].type === 'start') {\n      arity++; // D) If arity is ever incremented to 2 we are entering an\n      //    overlapping range\n\n      if (arity === 2) {\n        start = extents[count].time;\n      }\n    } else if (extents[count].type === 'end') {\n      arity--; // E) If arity is ever decremented to 1 we leaving an\n      //    overlapping range\n\n      if (arity === 1) {\n        end = extents[count].time;\n      }\n    } // F) Record overlapping ranges\n\n    if (start !== null && end !== null) {\n      ranges.push([start, end]);\n      start = null;\n      end = null;\n    }\n  }\n  return createTimeRanges(ranges);\n};\n/**\n * Gets a human readable string for a TimeRange\n *\n * @param {TimeRange} range\n * @return {string} a human readable string\n */\n\nconst printableRange = range => {\n  const strArr = [];\n  if (!range || !range.length) {\n    return '';\n  }\n  for (let i = 0; i < range.length; i++) {\n    strArr.push(range.start(i) + ' => ' + range.end(i));\n  }\n  return strArr.join(', ');\n};\n/**\n * Calculates the amount of time left in seconds until the player hits the end of the\n * buffer and causes a rebuffer\n *\n * @param {TimeRange} buffered\n *        The state of the buffer\n * @param {Numnber} currentTime\n *        The current time of the player\n * @param {number} playbackRate\n *        The current playback rate of the player. Defaults to 1.\n * @return {number}\n *         Time until the player has to start rebuffering in seconds.\n * @function timeUntilRebuffer\n */\n\nconst timeUntilRebuffer = function (buffered, currentTime, playbackRate = 1) {\n  const bufferedEnd = buffered.length ? buffered.end(buffered.length - 1) : 0;\n  return (bufferedEnd - currentTime) / playbackRate;\n};\n/**\n * Converts a TimeRanges object into an array representation\n *\n * @param {TimeRanges} timeRanges\n * @return {Array}\n */\n\nconst timeRangesToArray = timeRanges => {\n  const timeRangesList = [];\n  for (let i = 0; i < timeRanges.length; i++) {\n    timeRangesList.push({\n      start: timeRanges.start(i),\n      end: timeRanges.end(i)\n    });\n  }\n  return timeRangesList;\n};\n/**\n * Determines if two time range objects are different.\n *\n * @param {TimeRange} a\n *        the first time range object to check\n *\n * @param {TimeRange} b\n *        the second time range object to check\n *\n * @return {Boolean}\n *         Whether the time range objects differ\n */\n\nconst isRangeDifferent = function (a, b) {\n  // same object\n  if (a === b) {\n    return false;\n  } // one or the other is undefined\n\n  if (!a && b || !b && a) {\n    return true;\n  } // length is different\n\n  if (a.length !== b.length) {\n    return true;\n  } // see if any start/end pair is different\n\n  for (let i = 0; i < a.length; i++) {\n    if (a.start(i) !== b.start(i) || a.end(i) !== b.end(i)) {\n      return true;\n    }\n  } // if the length and every pair is the same\n  // this is the same time range\n\n  return false;\n};\nconst lastBufferedEnd = function (a) {\n  if (!a || !a.length || !a.end) {\n    return;\n  }\n  return a.end(a.length - 1);\n};\n/**\n * A utility function to add up the amount of time in a timeRange\n * after a specified startTime.\n * ie:[[0, 10], [20, 40], [50, 60]] with a startTime 0\n *     would return 40 as there are 40s seconds after 0 in the timeRange\n *\n * @param {TimeRange} range\n *        The range to check against\n * @param {number} startTime\n *        The time in the time range that you should start counting from\n *\n * @return {number}\n *          The number of seconds in the buffer passed the specified time.\n */\n\nconst timeAheadOf = function (range, startTime) {\n  let time = 0;\n  if (!range || !range.length) {\n    return time;\n  }\n  for (let i = 0; i < range.length; i++) {\n    const start = range.start(i);\n    const end = range.end(i); // startTime is after this range entirely\n\n    if (startTime > end) {\n      continue;\n    } // startTime is within this range\n\n    if (startTime > start && startTime <= end) {\n      time += end - startTime;\n      continue;\n    } // startTime is before this range.\n\n    time += end - start;\n  }\n  return time;\n};\n\n/**\n * @file playlist.js\n *\n * Playlist related utilities.\n */\n/**\n * Get the duration of a segment, with special cases for\n * llhls segments that do not have a duration yet.\n *\n * @param {Object} playlist\n *        the playlist that the segment belongs to.\n * @param {Object} segment\n *        the segment to get a duration for.\n *\n * @return {number}\n *          the segment duration\n */\n\nconst segmentDurationWithParts = (playlist, segment) => {\n  // if this isn't a preload segment\n  // then we will have a segment duration that is accurate.\n  if (!segment.preload) {\n    return segment.duration;\n  } // otherwise we have to add up parts and preload hints\n  // to get an up to date duration.\n\n  let result = 0;\n  (segment.parts || []).forEach(function (p) {\n    result += p.duration;\n  }); // for preload hints we have to use partTargetDuration\n  // as they won't even have a duration yet.\n\n  (segment.preloadHints || []).forEach(function (p) {\n    if (p.type === 'PART') {\n      result += playlist.partTargetDuration;\n    }\n  });\n  return result;\n};\n/**\n * A function to get a combined list of parts and segments with durations\n * and indexes.\n *\n * @param {Playlist} playlist the playlist to get the list for.\n *\n * @return {Array} The part/segment list.\n */\n\nconst getPartsAndSegments = playlist => (playlist.segments || []).reduce((acc, segment, si) => {\n  if (segment.parts) {\n    segment.parts.forEach(function (part, pi) {\n      acc.push({\n        duration: part.duration,\n        segmentIndex: si,\n        partIndex: pi,\n        part,\n        segment\n      });\n    });\n  } else {\n    acc.push({\n      duration: segment.duration,\n      segmentIndex: si,\n      partIndex: null,\n      segment,\n      part: null\n    });\n  }\n  return acc;\n}, []);\nconst getLastParts = media => {\n  const lastSegment = media.segments && media.segments.length && media.segments[media.segments.length - 1];\n  return lastSegment && lastSegment.parts || [];\n};\nconst getKnownPartCount = ({\n  preloadSegment\n}) => {\n  if (!preloadSegment) {\n    return;\n  }\n  const {\n    parts,\n    preloadHints\n  } = preloadSegment;\n  let partCount = (preloadHints || []).reduce((count, hint) => count + (hint.type === 'PART' ? 1 : 0), 0);\n  partCount += parts && parts.length ? parts.length : 0;\n  return partCount;\n};\n/**\n * Get the number of seconds to delay from the end of a\n * live playlist.\n *\n * @param {Playlist} main the main playlist\n * @param {Playlist} media the media playlist\n * @return {number} the hold back in seconds.\n */\n\nconst liveEdgeDelay = (main, media) => {\n  if (media.endList) {\n    return 0;\n  } // dash suggestedPresentationDelay trumps everything\n\n  if (main && main.suggestedPresentationDelay) {\n    return main.suggestedPresentationDelay;\n  }\n  const hasParts = getLastParts(media).length > 0; // look for \"part\" delays from ll-hls first\n\n  if (hasParts && media.serverControl && media.serverControl.partHoldBack) {\n    return media.serverControl.partHoldBack;\n  } else if (hasParts && media.partTargetDuration) {\n    return media.partTargetDuration * 3; // finally look for full segment delays\n  } else if (media.serverControl && media.serverControl.holdBack) {\n    return media.serverControl.holdBack;\n  } else if (media.targetDuration) {\n    return media.targetDuration * 3;\n  }\n  return 0;\n};\n/**\n * walk backward until we find a duration we can use\n * or return a failure\n *\n * @param {Playlist} playlist the playlist to walk through\n * @param {Number} endSequence the mediaSequence to stop walking on\n */\n\nconst backwardDuration = function (playlist, endSequence) {\n  let result = 0;\n  let i = endSequence - playlist.mediaSequence; // if a start time is available for segment immediately following\n  // the interval, use it\n\n  let segment = playlist.segments[i]; // Walk backward until we find the latest segment with timeline\n  // information that is earlier than endSequence\n\n  if (segment) {\n    if (typeof segment.start !== 'undefined') {\n      return {\n        result: segment.start,\n        precise: true\n      };\n    }\n    if (typeof segment.end !== 'undefined') {\n      return {\n        result: segment.end - segment.duration,\n        precise: true\n      };\n    }\n  }\n  while (i--) {\n    segment = playlist.segments[i];\n    if (typeof segment.end !== 'undefined') {\n      return {\n        result: result + segment.end,\n        precise: true\n      };\n    }\n    result += segmentDurationWithParts(playlist, segment);\n    if (typeof segment.start !== 'undefined') {\n      return {\n        result: result + segment.start,\n        precise: true\n      };\n    }\n  }\n  return {\n    result,\n    precise: false\n  };\n};\n/**\n * walk forward until we find a duration we can use\n * or return a failure\n *\n * @param {Playlist} playlist the playlist to walk through\n * @param {number} endSequence the mediaSequence to stop walking on\n */\n\nconst forwardDuration = function (playlist, endSequence) {\n  let result = 0;\n  let segment;\n  let i = endSequence - playlist.mediaSequence; // Walk forward until we find the earliest segment with timeline\n  // information\n\n  for (; i < playlist.segments.length; i++) {\n    segment = playlist.segments[i];\n    if (typeof segment.start !== 'undefined') {\n      return {\n        result: segment.start - result,\n        precise: true\n      };\n    }\n    result += segmentDurationWithParts(playlist, segment);\n    if (typeof segment.end !== 'undefined') {\n      return {\n        result: segment.end - result,\n        precise: true\n      };\n    }\n  } // indicate we didn't find a useful duration estimate\n\n  return {\n    result: -1,\n    precise: false\n  };\n};\n/**\n  * Calculate the media duration from the segments associated with a\n  * playlist. The duration of a subinterval of the available segments\n  * may be calculated by specifying an end index.\n  *\n  * @param {Object} playlist a media playlist object\n  * @param {number=} endSequence an exclusive upper boundary\n  * for the playlist.  Defaults to playlist length.\n  * @param {number} expired the amount of time that has dropped\n  * off the front of the playlist in a live scenario\n  * @return {number} the duration between the first available segment\n  * and end index.\n  */\n\nconst intervalDuration = function (playlist, endSequence, expired) {\n  if (typeof endSequence === 'undefined') {\n    endSequence = playlist.mediaSequence + playlist.segments.length;\n  }\n  if (endSequence < playlist.mediaSequence) {\n    return 0;\n  } // do a backward walk to estimate the duration\n\n  const backward = backwardDuration(playlist, endSequence);\n  if (backward.precise) {\n    // if we were able to base our duration estimate on timing\n    // information provided directly from the Media Source, return\n    // it\n    return backward.result;\n  } // walk forward to see if a precise duration estimate can be made\n  // that way\n\n  const forward = forwardDuration(playlist, endSequence);\n  if (forward.precise) {\n    // we found a segment that has been buffered and so it's\n    // position is known precisely\n    return forward.result;\n  } // return the less-precise, playlist-based duration estimate\n\n  return backward.result + expired;\n};\n/**\n  * Calculates the duration of a playlist. If a start and end index\n  * are specified, the duration will be for the subset of the media\n  * timeline between those two indices. The total duration for live\n  * playlists is always Infinity.\n  *\n  * @param {Object} playlist a media playlist object\n  * @param {number=} endSequence an exclusive upper\n  * boundary for the playlist. Defaults to the playlist media\n  * sequence number plus its length.\n  * @param {number=} expired the amount of time that has\n  * dropped off the front of the playlist in a live scenario\n  * @return {number} the duration between the start index and end\n  * index.\n  */\n\nconst duration = function (playlist, endSequence, expired) {\n  if (!playlist) {\n    return 0;\n  }\n  if (typeof expired !== 'number') {\n    expired = 0;\n  } // if a slice of the total duration is not requested, use\n  // playlist-level duration indicators when they're present\n\n  if (typeof endSequence === 'undefined') {\n    // if present, use the duration specified in the playlist\n    if (playlist.totalDuration) {\n      return playlist.totalDuration;\n    } // duration should be Infinity for live playlists\n\n    if (!playlist.endList) {\n      return window$1.Infinity;\n    }\n  } // calculate the total duration based on the segment durations\n\n  return intervalDuration(playlist, endSequence, expired);\n};\n/**\n  * Calculate the time between two indexes in the current playlist\n  * neight the start- nor the end-index need to be within the current\n  * playlist in which case, the targetDuration of the playlist is used\n  * to approximate the durations of the segments\n  *\n  * @param {Array} options.durationList list to iterate over for durations.\n  * @param {number} options.defaultDuration duration to use for elements before or after the durationList\n  * @param {number} options.startIndex partsAndSegments index to start\n  * @param {number} options.endIndex partsAndSegments index to end.\n  * @return {number} the number of seconds between startIndex and endIndex\n  */\n\nconst sumDurations = function ({\n  defaultDuration,\n  durationList,\n  startIndex,\n  endIndex\n}) {\n  let durations = 0;\n  if (startIndex > endIndex) {\n    [startIndex, endIndex] = [endIndex, startIndex];\n  }\n  if (startIndex < 0) {\n    for (let i = startIndex; i < Math.min(0, endIndex); i++) {\n      durations += defaultDuration;\n    }\n    startIndex = 0;\n  }\n  for (let i = startIndex; i < endIndex; i++) {\n    durations += durationList[i].duration;\n  }\n  return durations;\n};\n/**\n * Calculates the playlist end time\n *\n * @param {Object} playlist a media playlist object\n * @param {number=} expired the amount of time that has\n *                  dropped off the front of the playlist in a live scenario\n * @param {boolean|false} useSafeLiveEnd a boolean value indicating whether or not the\n *                        playlist end calculation should consider the safe live end\n *                        (truncate the playlist end by three segments). This is normally\n *                        used for calculating the end of the playlist's seekable range.\n *                        This takes into account the value of liveEdgePadding.\n *                        Setting liveEdgePadding to 0 is equivalent to setting this to false.\n * @param {number} liveEdgePadding a number indicating how far from the end of the playlist we should be in seconds.\n *                 If this is provided, it is used in the safe live end calculation.\n *                 Setting useSafeLiveEnd=false or liveEdgePadding=0 are equivalent.\n *                 Corresponds to suggestedPresentationDelay in DASH manifests.\n * @return {number} the end time of playlist\n * @function playlistEnd\n */\n\nconst playlistEnd = function (playlist, expired, useSafeLiveEnd, liveEdgePadding) {\n  if (!playlist || !playlist.segments) {\n    return null;\n  }\n  if (playlist.endList) {\n    return duration(playlist);\n  }\n  if (expired === null) {\n    return null;\n  }\n  expired = expired || 0;\n  let lastSegmentEndTime = intervalDuration(playlist, playlist.mediaSequence + playlist.segments.length, expired);\n  if (useSafeLiveEnd) {\n    liveEdgePadding = typeof liveEdgePadding === 'number' ? liveEdgePadding : liveEdgeDelay(null, playlist);\n    lastSegmentEndTime -= liveEdgePadding;\n  } // don't return a time less than zero\n\n  return Math.max(0, lastSegmentEndTime);\n};\n/**\n  * Calculates the interval of time that is currently seekable in a\n  * playlist. The returned time ranges are relative to the earliest\n  * moment in the specified playlist that is still available. A full\n  * seekable implementation for live streams would need to offset\n  * these values by the duration of content that has expired from the\n  * stream.\n  *\n  * @param {Object} playlist a media playlist object\n  * dropped off the front of the playlist in a live scenario\n  * @param {number=} expired the amount of time that has\n  * dropped off the front of the playlist in a live scenario\n  * @param {number} liveEdgePadding how far from the end of the playlist we should be in seconds.\n  *        Corresponds to suggestedPresentationDelay in DASH manifests.\n  * @return {TimeRanges} the periods of time that are valid targets\n  * for seeking\n  */\n\nconst seekable = function (playlist, expired, liveEdgePadding) {\n  const useSafeLiveEnd = true;\n  const seekableStart = expired || 0;\n  const seekableEnd = playlistEnd(playlist, expired, useSafeLiveEnd, liveEdgePadding);\n  if (seekableEnd === null) {\n    return createTimeRanges();\n  }\n  return createTimeRanges(seekableStart, seekableEnd);\n};\n/**\n * Determine the index and estimated starting time of the segment that\n * contains a specified playback position in a media playlist.\n *\n * @param {Object} options.playlist the media playlist to query\n * @param {number} options.currentTime The number of seconds since the earliest\n * possible position to determine the containing segment for\n * @param {number} options.startTime the time when the segment/part starts\n * @param {number} options.startingSegmentIndex the segment index to start looking at.\n * @param {number?} [options.startingPartIndex] the part index to look at within the segment.\n *\n * @return {Object} an object with partIndex, segmentIndex, and startTime.\n */\n\nconst getMediaInfoForTime = function ({\n  playlist,\n  currentTime,\n  startingSegmentIndex,\n  startingPartIndex,\n  startTime,\n  exactManifestTimings\n}) {\n  let time = currentTime - startTime;\n  const partsAndSegments = getPartsAndSegments(playlist);\n  let startIndex = 0;\n  for (let i = 0; i < partsAndSegments.length; i++) {\n    const partAndSegment = partsAndSegments[i];\n    if (startingSegmentIndex !== partAndSegment.segmentIndex) {\n      continue;\n    } // skip this if part index does not match.\n\n    if (typeof startingPartIndex === 'number' && typeof partAndSegment.partIndex === 'number' && startingPartIndex !== partAndSegment.partIndex) {\n      continue;\n    }\n    startIndex = i;\n    break;\n  }\n  if (time < 0) {\n    // Walk backward from startIndex in the playlist, adding durations\n    // until we find a segment that contains `time` and return it\n    if (startIndex > 0) {\n      for (let i = startIndex - 1; i >= 0; i--) {\n        const partAndSegment = partsAndSegments[i];\n        time += partAndSegment.duration;\n        if (exactManifestTimings) {\n          if (time < 0) {\n            continue;\n          }\n        } else if (time + TIME_FUDGE_FACTOR <= 0) {\n          continue;\n        }\n        return {\n          partIndex: partAndSegment.partIndex,\n          segmentIndex: partAndSegment.segmentIndex,\n          startTime: startTime - sumDurations({\n            defaultDuration: playlist.targetDuration,\n            durationList: partsAndSegments,\n            startIndex,\n            endIndex: i\n          })\n        };\n      }\n    } // We were unable to find a good segment within the playlist\n    // so select the first segment\n\n    return {\n      partIndex: partsAndSegments[0] && partsAndSegments[0].partIndex || null,\n      segmentIndex: partsAndSegments[0] && partsAndSegments[0].segmentIndex || 0,\n      startTime: currentTime\n    };\n  } // When startIndex is negative, we first walk forward to first segment\n  // adding target durations. If we \"run out of time\" before getting to\n  // the first segment, return the first segment\n\n  if (startIndex < 0) {\n    for (let i = startIndex; i < 0; i++) {\n      time -= playlist.targetDuration;\n      if (time < 0) {\n        return {\n          partIndex: partsAndSegments[0] && partsAndSegments[0].partIndex || null,\n          segmentIndex: partsAndSegments[0] && partsAndSegments[0].segmentIndex || 0,\n          startTime: currentTime\n        };\n      }\n    }\n    startIndex = 0;\n  } // Walk forward from startIndex in the playlist, subtracting durations\n  // until we find a segment that contains `time` and return it\n\n  for (let i = startIndex; i < partsAndSegments.length; i++) {\n    const partAndSegment = partsAndSegments[i];\n    time -= partAndSegment.duration;\n    if (exactManifestTimings) {\n      if (time > 0) {\n        continue;\n      }\n    } else if (time - TIME_FUDGE_FACTOR >= 0) {\n      continue;\n    }\n    return {\n      partIndex: partAndSegment.partIndex,\n      segmentIndex: partAndSegment.segmentIndex,\n      startTime: startTime + sumDurations({\n        defaultDuration: playlist.targetDuration,\n        durationList: partsAndSegments,\n        startIndex,\n        endIndex: i\n      })\n    };\n  } // We are out of possible candidates so load the last one...\n\n  return {\n    segmentIndex: partsAndSegments[partsAndSegments.length - 1].segmentIndex,\n    partIndex: partsAndSegments[partsAndSegments.length - 1].partIndex,\n    startTime: currentTime\n  };\n};\n/**\n * Check whether the playlist is excluded or not.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is excluded or not\n * @function isExcluded\n */\n\nconst isExcluded = function (playlist) {\n  return playlist.excludeUntil && playlist.excludeUntil > Date.now();\n};\n/**\n * Check whether the playlist is compatible with current playback configuration or has\n * been excluded permanently for being incompatible.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is incompatible or not\n * @function isIncompatible\n */\n\nconst isIncompatible = function (playlist) {\n  return playlist.excludeUntil && playlist.excludeUntil === Infinity;\n};\n/**\n * Check whether the playlist is enabled or not.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is enabled or not\n * @function isEnabled\n */\n\nconst isEnabled = function (playlist) {\n  const excluded = isExcluded(playlist);\n  return !playlist.disabled && !excluded;\n};\n/**\n * Check whether the playlist has been manually disabled through the representations api.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is disabled manually or not\n * @function isDisabled\n */\n\nconst isDisabled = function (playlist) {\n  return playlist.disabled;\n};\n/**\n * Returns whether the current playlist is an AES encrypted HLS stream\n *\n * @return {boolean} true if it's an AES encrypted HLS stream\n */\n\nconst isAes = function (media) {\n  for (let i = 0; i < media.segments.length; i++) {\n    if (media.segments[i].key) {\n      return true;\n    }\n  }\n  return false;\n};\n/**\n * Checks if the playlist has a value for the specified attribute\n *\n * @param {string} attr\n *        Attribute to check for\n * @param {Object} playlist\n *        The media playlist object\n * @return {boolean}\n *         Whether the playlist contains a value for the attribute or not\n * @function hasAttribute\n */\n\nconst hasAttribute = function (attr, playlist) {\n  return playlist.attributes && playlist.attributes[attr];\n};\n/**\n * Estimates the time required to complete a segment download from the specified playlist\n *\n * @param {number} segmentDuration\n *        Duration of requested segment\n * @param {number} bandwidth\n *        Current measured bandwidth of the player\n * @param {Object} playlist\n *        The media playlist object\n * @param {number=} bytesReceived\n *        Number of bytes already received for the request. Defaults to 0\n * @return {number|NaN}\n *         The estimated time to request the segment. NaN if bandwidth information for\n *         the given playlist is unavailable\n * @function estimateSegmentRequestTime\n */\n\nconst estimateSegmentRequestTime = function (segmentDuration, bandwidth, playlist, bytesReceived = 0) {\n  if (!hasAttribute('BANDWIDTH', playlist)) {\n    return NaN;\n  }\n  const size = segmentDuration * playlist.attributes.BANDWIDTH;\n  return (size - bytesReceived * 8) / bandwidth;\n};\n/*\n * Returns whether the current playlist is the lowest rendition\n *\n * @return {Boolean} true if on lowest rendition\n */\n\nconst isLowestEnabledRendition = (main, media) => {\n  if (main.playlists.length === 1) {\n    return true;\n  }\n  const currentBandwidth = media.attributes.BANDWIDTH || Number.MAX_VALUE;\n  return main.playlists.filter(playlist => {\n    if (!isEnabled(playlist)) {\n      return false;\n    }\n    return (playlist.attributes.BANDWIDTH || 0) < currentBandwidth;\n  }).length === 0;\n};\nconst playlistMatch = (a, b) => {\n  // both playlits are null\n  // or only one playlist is non-null\n  // no match\n  if (!a && !b || !a && b || a && !b) {\n    return false;\n  } // playlist objects are the same, match\n\n  if (a === b) {\n    return true;\n  } // first try to use id as it should be the most\n  // accurate\n\n  if (a.id && b.id && a.id === b.id) {\n    return true;\n  } // next try to use reslovedUri as it should be the\n  // second most accurate.\n\n  if (a.resolvedUri && b.resolvedUri && a.resolvedUri === b.resolvedUri) {\n    return true;\n  } // finally try to use uri as it should be accurate\n  // but might miss a few cases for relative uris\n\n  if (a.uri && b.uri && a.uri === b.uri) {\n    return true;\n  }\n  return false;\n};\nconst someAudioVariant = function (main, callback) {\n  const AUDIO = main && main.mediaGroups && main.mediaGroups.AUDIO || {};\n  let found = false;\n  for (const groupName in AUDIO) {\n    for (const label in AUDIO[groupName]) {\n      found = callback(AUDIO[groupName][label]);\n      if (found) {\n        break;\n      }\n    }\n    if (found) {\n      break;\n    }\n  }\n  return !!found;\n};\nconst isAudioOnly = main => {\n  // we are audio only if we have no main playlists but do\n  // have media group playlists.\n  if (!main || !main.playlists || !main.playlists.length) {\n    // without audio variants or playlists this\n    // is not an audio only main.\n    const found = someAudioVariant(main, variant => variant.playlists && variant.playlists.length || variant.uri);\n    return found;\n  } // if every playlist has only an audio codec it is audio only\n\n  for (let i = 0; i < main.playlists.length; i++) {\n    const playlist = main.playlists[i];\n    const CODECS = playlist.attributes && playlist.attributes.CODECS; // all codecs are audio, this is an audio playlist.\n\n    if (CODECS && CODECS.split(',').every(c => isAudioCodec(c))) {\n      continue;\n    } // playlist is in an audio group it is audio only\n\n    const found = someAudioVariant(main, variant => playlistMatch(playlist, variant));\n    if (found) {\n      continue;\n    } // if we make it here this playlist isn't audio and we\n    // are not audio only\n\n    return false;\n  } // if we make it past every playlist without returning, then\n  // this is an audio only playlist.\n\n  return true;\n}; // exports\n\nvar Playlist = {\n  liveEdgeDelay,\n  duration,\n  seekable,\n  getMediaInfoForTime,\n  isEnabled,\n  isDisabled,\n  isExcluded,\n  isIncompatible,\n  playlistEnd,\n  isAes,\n  hasAttribute,\n  estimateSegmentRequestTime,\n  isLowestEnabledRendition,\n  isAudioOnly,\n  playlistMatch,\n  segmentDurationWithParts\n};\nconst {\n  log\n} = videojs;\nconst createPlaylistID = (index, uri) => {\n  return `${index}-${uri}`;\n}; // default function for creating a group id\n\nconst groupID = (type, group, label) => {\n  return `placeholder-uri-${type}-${group}-${label}`;\n};\n/**\n * Parses a given m3u8 playlist\n *\n * @param {Function} [onwarn]\n *        a function to call when the parser triggers a warning event.\n * @param {Function} [oninfo]\n *        a function to call when the parser triggers an info event.\n * @param {string} manifestString\n *        The downloaded manifest string\n * @param {Object[]} [customTagParsers]\n *        An array of custom tag parsers for the m3u8-parser instance\n * @param {Object[]} [customTagMappers]\n *        An array of custom tag mappers for the m3u8-parser instance\n * @param {boolean} [llhls]\n *        Whether to keep ll-hls features in the manifest after parsing.\n * @return {Object}\n *         The manifest object\n */\n\nconst parseManifest = ({\n  onwarn,\n  oninfo,\n  manifestString,\n  customTagParsers = [],\n  customTagMappers = [],\n  llhls\n}) => {\n  const parser = new Parser();\n  if (onwarn) {\n    parser.on('warn', onwarn);\n  }\n  if (oninfo) {\n    parser.on('info', oninfo);\n  }\n  customTagParsers.forEach(customParser => parser.addParser(customParser));\n  customTagMappers.forEach(mapper => parser.addTagMapper(mapper));\n  parser.push(manifestString);\n  parser.end();\n  const manifest = parser.manifest; // remove llhls features from the parsed manifest\n  // if we don't want llhls support.\n\n  if (!llhls) {\n    ['preloadSegment', 'skip', 'serverControl', 'renditionReports', 'partInf', 'partTargetDuration'].forEach(function (k) {\n      if (manifest.hasOwnProperty(k)) {\n        delete manifest[k];\n      }\n    });\n    if (manifest.segments) {\n      manifest.segments.forEach(function (segment) {\n        ['parts', 'preloadHints'].forEach(function (k) {\n          if (segment.hasOwnProperty(k)) {\n            delete segment[k];\n          }\n        });\n      });\n    }\n  }\n  if (!manifest.targetDuration) {\n    let targetDuration = 10;\n    if (manifest.segments && manifest.segments.length) {\n      targetDuration = manifest.segments.reduce((acc, s) => Math.max(acc, s.duration), 0);\n    }\n    if (onwarn) {\n      onwarn(`manifest has no targetDuration defaulting to ${targetDuration}`);\n    }\n    manifest.targetDuration = targetDuration;\n  }\n  const parts = getLastParts(manifest);\n  if (parts.length && !manifest.partTargetDuration) {\n    const partTargetDuration = parts.reduce((acc, p) => Math.max(acc, p.duration), 0);\n    if (onwarn) {\n      onwarn(`manifest has no partTargetDuration defaulting to ${partTargetDuration}`);\n      log.error('LL-HLS manifest has parts but lacks required #EXT-X-PART-INF:PART-TARGET value. See https://datatracker.ietf.org/doc/html/draft-pantos-hls-rfc8216bis-09#section-4.4.3.7. Playback is not guaranteed.');\n    }\n    manifest.partTargetDuration = partTargetDuration;\n  }\n  return manifest;\n};\n/**\n * Loops through all supported media groups in main and calls the provided\n * callback for each group\n *\n * @param {Object} main\n *        The parsed main manifest object\n * @param {Function} callback\n *        Callback to call for each media group\n */\n\nconst forEachMediaGroup = (main, callback) => {\n  if (!main.mediaGroups) {\n    return;\n  }\n  ['AUDIO', 'SUBTITLES'].forEach(mediaType => {\n    if (!main.mediaGroups[mediaType]) {\n      return;\n    }\n    for (const groupKey in main.mediaGroups[mediaType]) {\n      for (const labelKey in main.mediaGroups[mediaType][groupKey]) {\n        const mediaProperties = main.mediaGroups[mediaType][groupKey][labelKey];\n        callback(mediaProperties, mediaType, groupKey, labelKey);\n      }\n    }\n  });\n};\n/**\n * Adds properties and attributes to the playlist to keep consistent functionality for\n * playlists throughout VHS.\n *\n * @param {Object} config\n *        Arguments object\n * @param {Object} config.playlist\n *        The media playlist\n * @param {string} [config.uri]\n *        The uri to the media playlist (if media playlist is not from within a main\n *        playlist)\n * @param {string} id\n *        ID to use for the playlist\n */\n\nconst setupMediaPlaylist = ({\n  playlist,\n  uri,\n  id\n}) => {\n  playlist.id = id;\n  playlist.playlistErrors_ = 0;\n  if (uri) {\n    // For media playlists, m3u8-parser does not have access to a URI, as HLS media\n    // playlists do not contain their own source URI, but one is needed for consistency in\n    // VHS.\n    playlist.uri = uri;\n  } // For HLS main playlists, even though certain attributes MUST be defined, the\n  // stream may still be played without them.\n  // For HLS media playlists, m3u8-parser does not attach an attributes object to the\n  // manifest.\n  //\n  // To avoid undefined reference errors through the project, and make the code easier\n  // to write/read, add an empty attributes object for these cases.\n\n  playlist.attributes = playlist.attributes || {};\n};\n/**\n * Adds ID, resolvedUri, and attributes properties to each playlist of the main, where\n * necessary. In addition, creates playlist IDs for each playlist and adds playlist ID to\n * playlist references to the playlists array.\n *\n * @param {Object} main\n *        The main playlist\n */\n\nconst setupMediaPlaylists = main => {\n  let i = main.playlists.length;\n  while (i--) {\n    const playlist = main.playlists[i];\n    setupMediaPlaylist({\n      playlist,\n      id: createPlaylistID(i, playlist.uri)\n    });\n    playlist.resolvedUri = resolveUrl(main.uri, playlist.uri);\n    main.playlists[playlist.id] = playlist; // URI reference added for backwards compatibility\n\n    main.playlists[playlist.uri] = playlist; // Although the spec states an #EXT-X-STREAM-INF tag MUST have a BANDWIDTH attribute,\n    // the stream can be played without it. Although an attributes property may have been\n    // added to the playlist to prevent undefined references, issue a warning to fix the\n    // manifest.\n\n    if (!playlist.attributes.BANDWIDTH) {\n      log.warn('Invalid playlist STREAM-INF detected. Missing BANDWIDTH attribute.');\n    }\n  }\n};\n/**\n * Adds resolvedUri properties to each media group.\n *\n * @param {Object} main\n *        The main playlist\n */\n\nconst resolveMediaGroupUris = main => {\n  forEachMediaGroup(main, properties => {\n    if (properties.uri) {\n      properties.resolvedUri = resolveUrl(main.uri, properties.uri);\n    }\n  });\n};\n/**\n * Creates a main playlist wrapper to insert a sole media playlist into.\n *\n * @param {Object} media\n *        Media playlist\n * @param {string} uri\n *        The media URI\n *\n * @return {Object}\n *         main playlist\n */\n\nconst mainForMedia = (media, uri) => {\n  const id = createPlaylistID(0, uri);\n  const main = {\n    mediaGroups: {\n      'AUDIO': {},\n      'VIDEO': {},\n      'CLOSED-CAPTIONS': {},\n      'SUBTITLES': {}\n    },\n    uri: window$1.location.href,\n    resolvedUri: window$1.location.href,\n    playlists: [{\n      uri,\n      id,\n      resolvedUri: uri,\n      // m3u8-parser does not attach an attributes property to media playlists so make\n      // sure that the property is attached to avoid undefined reference errors\n      attributes: {}\n    }]\n  }; // set up ID reference\n\n  main.playlists[id] = main.playlists[0]; // URI reference added for backwards compatibility\n\n  main.playlists[uri] = main.playlists[0];\n  return main;\n};\n/**\n * Does an in-place update of the main manifest to add updated playlist URI references\n * as well as other properties needed by VHS that aren't included by the parser.\n *\n * @param {Object} main\n *        main manifest object\n * @param {string} uri\n *        The source URI\n * @param {function} createGroupID\n *        A function to determine how to create the groupID for mediaGroups\n */\n\nconst addPropertiesToMain = (main, uri, createGroupID = groupID) => {\n  main.uri = uri;\n  for (let i = 0; i < main.playlists.length; i++) {\n    if (!main.playlists[i].uri) {\n      // Set up phony URIs for the playlists since playlists are referenced by their URIs\n      // throughout VHS, but some formats (e.g., DASH) don't have external URIs\n      // TODO: consider adding dummy URIs in mpd-parser\n      const phonyUri = `placeholder-uri-${i}`;\n      main.playlists[i].uri = phonyUri;\n    }\n  }\n  const audioOnlyMain = isAudioOnly(main);\n  forEachMediaGroup(main, (properties, mediaType, groupKey, labelKey) => {\n    // add a playlist array under properties\n    if (!properties.playlists || !properties.playlists.length) {\n      // If the manifest is audio only and this media group does not have a uri, check\n      // if the media group is located in the main list of playlists. If it is, don't add\n      // placeholder properties as it shouldn't be considered an alternate audio track.\n      if (audioOnlyMain && mediaType === 'AUDIO' && !properties.uri) {\n        for (let i = 0; i < main.playlists.length; i++) {\n          const p = main.playlists[i];\n          if (p.attributes && p.attributes.AUDIO && p.attributes.AUDIO === groupKey) {\n            return;\n          }\n        }\n      }\n      properties.playlists = [_extends({}, properties)];\n    }\n    properties.playlists.forEach(function (p, i) {\n      const groupId = createGroupID(mediaType, groupKey, labelKey, p);\n      const id = createPlaylistID(i, groupId);\n      if (p.uri) {\n        p.resolvedUri = p.resolvedUri || resolveUrl(main.uri, p.uri);\n      } else {\n        // DEPRECATED, this has been added to prevent a breaking change.\n        // previously we only ever had a single media group playlist, so\n        // we mark the first playlist uri without prepending the index as we used to\n        // ideally we would do all of the playlists the same way.\n        p.uri = i === 0 ? groupId : id; // don't resolve a placeholder uri to an absolute url, just use\n        // the placeholder again\n\n        p.resolvedUri = p.uri;\n      }\n      p.id = p.id || id; // add an empty attributes object, all playlists are\n      // expected to have this.\n\n      p.attributes = p.attributes || {}; // setup ID and URI references (URI for backwards compatibility)\n\n      main.playlists[p.id] = p;\n      main.playlists[p.uri] = p;\n    });\n  });\n  setupMediaPlaylists(main);\n  resolveMediaGroupUris(main);\n};\n\n/**\n * @file playlist-loader.js\n *\n * A state machine that manages the loading, caching, and updating of\n * M3U8 playlists.\n *\n */\nconst {\n  EventTarget: EventTarget$1\n} = videojs;\nconst addLLHLSQueryDirectives = (uri, media) => {\n  if (media.endList || !media.serverControl) {\n    return uri;\n  }\n  const parameters = {};\n  if (media.serverControl.canBlockReload) {\n    const {\n      preloadSegment\n    } = media; // next msn is a zero based value, length is not.\n\n    let nextMSN = media.mediaSequence + media.segments.length; // If preload segment has parts then it is likely\n    // that we are going to request a part of that preload segment.\n    // the logic below is used to determine that.\n\n    if (preloadSegment) {\n      const parts = preloadSegment.parts || []; // _HLS_part is a zero based index\n\n      const nextPart = getKnownPartCount(media) - 1; // if nextPart is > -1 and not equal to just the\n      // length of parts, then we know we had part preload hints\n      // and we need to add the _HLS_part= query\n\n      if (nextPart > -1 && nextPart !== parts.length - 1) {\n        // add existing parts to our preload hints\n        // eslint-disable-next-line\n        parameters._HLS_part = nextPart;\n      } // this if statement makes sure that we request the msn\n      // of the preload segment if:\n      // 1. the preload segment had parts (and was not yet a full segment)\n      //    but was added to our segments array\n      // 2. the preload segment had preload hints for parts that are not in\n      //    the manifest yet.\n      // in all other cases we want the segment after the preload segment\n      // which will be given by using media.segments.length because it is 1 based\n      // rather than 0 based.\n\n      if (nextPart > -1 || parts.length) {\n        nextMSN--;\n      }\n    } // add _HLS_msn= in front of any _HLS_part query\n    // eslint-disable-next-line\n\n    parameters._HLS_msn = nextMSN;\n  }\n  if (media.serverControl && media.serverControl.canSkipUntil) {\n    // add _HLS_skip= infront of all other queries.\n    // eslint-disable-next-line\n    parameters._HLS_skip = media.serverControl.canSkipDateranges ? 'v2' : 'YES';\n  }\n  if (Object.keys(parameters).length) {\n    const parsedUri = new window$1.URL(uri);\n    ['_HLS_skip', '_HLS_msn', '_HLS_part'].forEach(function (name) {\n      if (!parameters.hasOwnProperty(name)) {\n        return;\n      }\n      parsedUri.searchParams.set(name, parameters[name]);\n    });\n    uri = parsedUri.toString();\n  }\n  return uri;\n};\n/**\n * Returns a new segment object with properties and\n * the parts array merged.\n *\n * @param {Object} a the old segment\n * @param {Object} b the new segment\n *\n * @return {Object} the merged segment\n */\n\nconst updateSegment = (a, b) => {\n  if (!a) {\n    return b;\n  }\n  const result = merge(a, b); // if only the old segment has preload hints\n  // and the new one does not, remove preload hints.\n\n  if (a.preloadHints && !b.preloadHints) {\n    delete result.preloadHints;\n  } // if only the old segment has parts\n  // then the parts are no longer valid\n\n  if (a.parts && !b.parts) {\n    delete result.parts; // if both segments have parts\n    // copy part propeties from the old segment\n    // to the new one.\n  } else if (a.parts && b.parts) {\n    for (let i = 0; i < b.parts.length; i++) {\n      if (a.parts && a.parts[i]) {\n        result.parts[i] = merge(a.parts[i], b.parts[i]);\n      }\n    }\n  } // set skipped to false for segments that have\n  // have had information merged from the old segment.\n\n  if (!a.skipped && b.skipped) {\n    result.skipped = false;\n  } // set preload to false for segments that have\n  // had information added in the new segment.\n\n  if (a.preload && !b.preload) {\n    result.preload = false;\n  }\n  return result;\n};\n/**\n * Returns a new array of segments that is the result of merging\n * properties from an older list of segments onto an updated\n * list. No properties on the updated playlist will be ovewritten.\n *\n * @param {Array} original the outdated list of segments\n * @param {Array} update the updated list of segments\n * @param {number=} offset the index of the first update\n * segment in the original segment list. For non-live playlists,\n * this should always be zero and does not need to be\n * specified. For live playlists, it should be the difference\n * between the media sequence numbers in the original and updated\n * playlists.\n * @return {Array} a list of merged segment objects\n */\n\nconst updateSegments = (original, update, offset) => {\n  const oldSegments = original.slice();\n  const newSegments = update.slice();\n  offset = offset || 0;\n  const result = [];\n  let currentMap;\n  for (let newIndex = 0; newIndex < newSegments.length; newIndex++) {\n    const oldSegment = oldSegments[newIndex + offset];\n    const newSegment = newSegments[newIndex];\n    if (oldSegment) {\n      currentMap = oldSegment.map || currentMap;\n      result.push(updateSegment(oldSegment, newSegment));\n    } else {\n      // carry over map to new segment if it is missing\n      if (currentMap && !newSegment.map) {\n        newSegment.map = currentMap;\n      }\n      result.push(newSegment);\n    }\n  }\n  return result;\n};\nconst resolveSegmentUris = (segment, baseUri) => {\n  // preloadSegment will not have a uri at all\n  // as the segment isn't actually in the manifest yet, only parts\n  if (!segment.resolvedUri && segment.uri) {\n    segment.resolvedUri = resolveUrl(baseUri, segment.uri);\n  }\n  if (segment.key && !segment.key.resolvedUri) {\n    segment.key.resolvedUri = resolveUrl(baseUri, segment.key.uri);\n  }\n  if (segment.map && !segment.map.resolvedUri) {\n    segment.map.resolvedUri = resolveUrl(baseUri, segment.map.uri);\n  }\n  if (segment.map && segment.map.key && !segment.map.key.resolvedUri) {\n    segment.map.key.resolvedUri = resolveUrl(baseUri, segment.map.key.uri);\n  }\n  if (segment.parts && segment.parts.length) {\n    segment.parts.forEach(p => {\n      if (p.resolvedUri) {\n        return;\n      }\n      p.resolvedUri = resolveUrl(baseUri, p.uri);\n    });\n  }\n  if (segment.preloadHints && segment.preloadHints.length) {\n    segment.preloadHints.forEach(p => {\n      if (p.resolvedUri) {\n        return;\n      }\n      p.resolvedUri = resolveUrl(baseUri, p.uri);\n    });\n  }\n};\nconst getAllSegments = function (media) {\n  const segments = media.segments || [];\n  const preloadSegment = media.preloadSegment; // a preloadSegment with only preloadHints is not currently\n  // a usable segment, only include a preloadSegment that has\n  // parts.\n\n  if (preloadSegment && preloadSegment.parts && preloadSegment.parts.length) {\n    // if preloadHints has a MAP that means that the\n    // init segment is going to change. We cannot use any of the parts\n    // from this preload segment.\n    if (preloadSegment.preloadHints) {\n      for (let i = 0; i < preloadSegment.preloadHints.length; i++) {\n        if (preloadSegment.preloadHints[i].type === 'MAP') {\n          return segments;\n        }\n      }\n    } // set the duration for our preload segment to target duration.\n\n    preloadSegment.duration = media.targetDuration;\n    preloadSegment.preload = true;\n    segments.push(preloadSegment);\n  }\n  return segments;\n}; // consider the playlist unchanged if the playlist object is the same or\n// the number of segments is equal, the media sequence number is unchanged,\n// and this playlist hasn't become the end of the playlist\n\nconst isPlaylistUnchanged = (a, b) => a === b || a.segments && b.segments && a.segments.length === b.segments.length && a.endList === b.endList && a.mediaSequence === b.mediaSequence && a.preloadSegment === b.preloadSegment;\n/**\n  * Returns a new main playlist that is the result of merging an\n  * updated media playlist into the original version. If the\n  * updated media playlist does not match any of the playlist\n  * entries in the original main playlist, null is returned.\n  *\n  * @param {Object} main a parsed main M3U8 object\n  * @param {Object} media a parsed media M3U8 object\n  * @return {Object} a new object that represents the original\n  * main playlist with the updated media playlist merged in, or\n  * null if the merge produced no change.\n  */\n\nconst updateMain$1 = (main, newMedia, unchangedCheck = isPlaylistUnchanged) => {\n  const result = merge(main, {});\n  const oldMedia = result.playlists[newMedia.id];\n  if (!oldMedia) {\n    return null;\n  }\n  if (unchangedCheck(oldMedia, newMedia)) {\n    return null;\n  }\n  newMedia.segments = getAllSegments(newMedia);\n  const mergedPlaylist = merge(oldMedia, newMedia); // always use the new media's preload segment\n\n  if (mergedPlaylist.preloadSegment && !newMedia.preloadSegment) {\n    delete mergedPlaylist.preloadSegment;\n  } // if the update could overlap existing segment information, merge the two segment lists\n\n  if (oldMedia.segments) {\n    if (newMedia.skip) {\n      newMedia.segments = newMedia.segments || []; // add back in objects for skipped segments, so that we merge\n      // old properties into the new segments\n\n      for (let i = 0; i < newMedia.skip.skippedSegments; i++) {\n        newMedia.segments.unshift({\n          skipped: true\n        });\n      }\n    }\n    mergedPlaylist.segments = updateSegments(oldMedia.segments, newMedia.segments, newMedia.mediaSequence - oldMedia.mediaSequence);\n  } // resolve any segment URIs to prevent us from having to do it later\n\n  mergedPlaylist.segments.forEach(segment => {\n    resolveSegmentUris(segment, mergedPlaylist.resolvedUri);\n  }); // TODO Right now in the playlists array there are two references to each playlist, one\n  // that is referenced by index, and one by URI. The index reference may no longer be\n  // necessary.\n\n  for (let i = 0; i < result.playlists.length; i++) {\n    if (result.playlists[i].id === newMedia.id) {\n      result.playlists[i] = mergedPlaylist;\n    }\n  }\n  result.playlists[newMedia.id] = mergedPlaylist; // URI reference added for backwards compatibility\n\n  result.playlists[newMedia.uri] = mergedPlaylist; // update media group playlist references.\n\n  forEachMediaGroup(main, (properties, mediaType, groupKey, labelKey) => {\n    if (!properties.playlists) {\n      return;\n    }\n    for (let i = 0; i < properties.playlists.length; i++) {\n      if (newMedia.id === properties.playlists[i].id) {\n        properties.playlists[i] = mergedPlaylist;\n      }\n    }\n  });\n  return result;\n};\n/**\n * Calculates the time to wait before refreshing a live playlist\n *\n * @param {Object} media\n *        The current media\n * @param {boolean} update\n *        True if there were any updates from the last refresh, false otherwise\n * @return {number}\n *         The time in ms to wait before refreshing the live playlist\n */\n\nconst refreshDelay = (media, update) => {\n  const segments = media.segments || [];\n  const lastSegment = segments[segments.length - 1];\n  const lastPart = lastSegment && lastSegment.parts && lastSegment.parts[lastSegment.parts.length - 1];\n  const lastDuration = lastPart && lastPart.duration || lastSegment && lastSegment.duration;\n  if (update && lastDuration) {\n    return lastDuration * 1000;\n  } // if the playlist is unchanged since the last reload or last segment duration\n  // cannot be determined, try again after half the target duration\n\n  return (media.partTargetDuration || media.targetDuration || 10) * 500;\n};\n/**\n * Load a playlist from a remote location\n *\n * @class PlaylistLoader\n * @extends Stream\n * @param {string|Object} src url or object of manifest\n * @param {boolean} withCredentials the withCredentials xhr option\n * @class\n */\n\nclass PlaylistLoader extends EventTarget$1 {\n  constructor(src, vhs, options = {}) {\n    super();\n    if (!src) {\n      throw new Error('A non-empty playlist URL or object is required');\n    }\n    this.logger_ = logger('PlaylistLoader');\n    const {\n      withCredentials = false\n    } = options;\n    this.src = src;\n    this.vhs_ = vhs;\n    this.withCredentials = withCredentials;\n    const vhsOptions = vhs.options_;\n    this.customTagParsers = vhsOptions && vhsOptions.customTagParsers || [];\n    this.customTagMappers = vhsOptions && vhsOptions.customTagMappers || [];\n    this.llhls = vhsOptions && vhsOptions.llhls; // initialize the loader state\n\n    this.state = 'HAVE_NOTHING'; // live playlist staleness timeout\n\n    this.handleMediaupdatetimeout_ = this.handleMediaupdatetimeout_.bind(this);\n    this.on('mediaupdatetimeout', this.handleMediaupdatetimeout_);\n  }\n  handleMediaupdatetimeout_() {\n    if (this.state !== 'HAVE_METADATA') {\n      // only refresh the media playlist if no other activity is going on\n      return;\n    }\n    const media = this.media();\n    let uri = resolveUrl(this.main.uri, media.uri);\n    if (this.llhls) {\n      uri = addLLHLSQueryDirectives(uri, media);\n    }\n    this.state = 'HAVE_CURRENT_METADATA';\n    this.request = this.vhs_.xhr({\n      uri,\n      withCredentials: this.withCredentials\n    }, (error, req) => {\n      // disposed\n      if (!this.request) {\n        return;\n      }\n      if (error) {\n        return this.playlistRequestError(this.request, this.media(), 'HAVE_METADATA');\n      }\n      this.haveMetadata({\n        playlistString: this.request.responseText,\n        url: this.media().uri,\n        id: this.media().id\n      });\n    });\n  }\n  playlistRequestError(xhr, playlist, startingState) {\n    const {\n      uri,\n      id\n    } = playlist; // any in-flight request is now finished\n\n    this.request = null;\n    if (startingState) {\n      this.state = startingState;\n    }\n    this.error = {\n      playlist: this.main.playlists[id],\n      status: xhr.status,\n      message: `HLS playlist request error at URL: ${uri}.`,\n      responseText: xhr.responseText,\n      code: xhr.status >= 500 ? 4 : 2\n    };\n    this.trigger('error');\n  }\n  parseManifest_({\n    url,\n    manifestString\n  }) {\n    return parseManifest({\n      onwarn: ({\n        message\n      }) => this.logger_(`m3u8-parser warn for ${url}: ${message}`),\n      oninfo: ({\n        message\n      }) => this.logger_(`m3u8-parser info for ${url}: ${message}`),\n      manifestString,\n      customTagParsers: this.customTagParsers,\n      customTagMappers: this.customTagMappers,\n      llhls: this.llhls\n    });\n  }\n  /**\n   * Update the playlist loader's state in response to a new or updated playlist.\n   *\n   * @param {string} [playlistString]\n   *        Playlist string (if playlistObject is not provided)\n   * @param {Object} [playlistObject]\n   *        Playlist object (if playlistString is not provided)\n   * @param {string} url\n   *        URL of playlist\n   * @param {string} id\n   *        ID to use for playlist\n   */\n\n  haveMetadata({\n    playlistString,\n    playlistObject,\n    url,\n    id\n  }) {\n    // any in-flight request is now finished\n    this.request = null;\n    this.state = 'HAVE_METADATA';\n    const playlist = playlistObject || this.parseManifest_({\n      url,\n      manifestString: playlistString\n    });\n    playlist.lastRequest = Date.now();\n    setupMediaPlaylist({\n      playlist,\n      uri: url,\n      id\n    }); // merge this playlist into the main manifest\n\n    const update = updateMain$1(this.main, playlist);\n    this.targetDuration = playlist.partTargetDuration || playlist.targetDuration;\n    this.pendingMedia_ = null;\n    if (update) {\n      this.main = update;\n      this.media_ = this.main.playlists[id];\n    } else {\n      this.trigger('playlistunchanged');\n    }\n    this.updateMediaUpdateTimeout_(refreshDelay(this.media(), !!update));\n    this.trigger('loadedplaylist');\n  }\n  /**\n    * Abort any outstanding work and clean up.\n    */\n\n  dispose() {\n    this.trigger('dispose');\n    this.stopRequest();\n    window$1.clearTimeout(this.mediaUpdateTimeout);\n    window$1.clearTimeout(this.finalRenditionTimeout);\n    this.off();\n  }\n  stopRequest() {\n    if (this.request) {\n      const oldRequest = this.request;\n      this.request = null;\n      oldRequest.onreadystatechange = null;\n      oldRequest.abort();\n    }\n  }\n  /**\n    * When called without any arguments, returns the currently\n    * active media playlist. When called with a single argument,\n    * triggers the playlist loader to asynchronously switch to the\n    * specified media playlist. Calling this method while the\n    * loader is in the HAVE_NOTHING causes an error to be emitted\n    * but otherwise has no effect.\n    *\n    * @param {Object=} playlist the parsed media playlist\n    * object to switch to\n    * @param {boolean=} shouldDelay whether we should delay the request by half target duration\n    *\n    * @return {Playlist} the current loaded media\n    */\n\n  media(playlist, shouldDelay) {\n    // getter\n    if (!playlist) {\n      return this.media_;\n    } // setter\n\n    if (this.state === 'HAVE_NOTHING') {\n      throw new Error('Cannot switch media playlist from ' + this.state);\n    } // find the playlist object if the target playlist has been\n    // specified by URI\n\n    if (typeof playlist === 'string') {\n      if (!this.main.playlists[playlist]) {\n        throw new Error('Unknown playlist URI: ' + playlist);\n      }\n      playlist = this.main.playlists[playlist];\n    }\n    window$1.clearTimeout(this.finalRenditionTimeout);\n    if (shouldDelay) {\n      const delay = (playlist.partTargetDuration || playlist.targetDuration) / 2 * 1000 || 5 * 1000;\n      this.finalRenditionTimeout = window$1.setTimeout(this.media.bind(this, playlist, false), delay);\n      return;\n    }\n    const startingState = this.state;\n    const mediaChange = !this.media_ || playlist.id !== this.media_.id;\n    const mainPlaylistRef = this.main.playlists[playlist.id]; // switch to fully loaded playlists immediately\n\n    if (mainPlaylistRef && mainPlaylistRef.endList ||\n    // handle the case of a playlist object (e.g., if using vhs-json with a resolved\n    // media playlist or, for the case of demuxed audio, a resolved audio media group)\n    playlist.endList && playlist.segments.length) {\n      // abort outstanding playlist requests\n      if (this.request) {\n        this.request.onreadystatechange = null;\n        this.request.abort();\n        this.request = null;\n      }\n      this.state = 'HAVE_METADATA';\n      this.media_ = playlist; // trigger media change if the active media has been updated\n\n      if (mediaChange) {\n        this.trigger('mediachanging');\n        if (startingState === 'HAVE_MAIN_MANIFEST') {\n          // The initial playlist was a main manifest, and the first media selected was\n          // also provided (in the form of a resolved playlist object) as part of the\n          // source object (rather than just a URL). Therefore, since the media playlist\n          // doesn't need to be requested, loadedmetadata won't trigger as part of the\n          // normal flow, and needs an explicit trigger here.\n          this.trigger('loadedmetadata');\n        } else {\n          this.trigger('mediachange');\n        }\n      }\n      return;\n    } // We update/set the timeout here so that live playlists\n    // that are not a media change will \"start\" the loader as expected.\n    // We expect that this function will start the media update timeout\n    // cycle again. This also prevents a playlist switch failure from\n    // causing us to stall during live.\n\n    this.updateMediaUpdateTimeout_(refreshDelay(playlist, true)); // switching to the active playlist is a no-op\n\n    if (!mediaChange) {\n      return;\n    }\n    this.state = 'SWITCHING_MEDIA'; // there is already an outstanding playlist request\n\n    if (this.request) {\n      if (playlist.resolvedUri === this.request.url) {\n        // requesting to switch to the same playlist multiple times\n        // has no effect after the first\n        return;\n      }\n      this.request.onreadystatechange = null;\n      this.request.abort();\n      this.request = null;\n    } // request the new playlist\n\n    if (this.media_) {\n      this.trigger('mediachanging');\n    }\n    this.pendingMedia_ = playlist;\n    this.request = this.vhs_.xhr({\n      uri: playlist.resolvedUri,\n      withCredentials: this.withCredentials\n    }, (error, req) => {\n      // disposed\n      if (!this.request) {\n        return;\n      }\n      playlist.lastRequest = Date.now();\n      playlist.resolvedUri = resolveManifestRedirect(playlist.resolvedUri, req);\n      if (error) {\n        return this.playlistRequestError(this.request, playlist, startingState);\n      }\n      this.haveMetadata({\n        playlistString: req.responseText,\n        url: playlist.uri,\n        id: playlist.id\n      }); // fire loadedmetadata the first time a media playlist is loaded\n\n      if (startingState === 'HAVE_MAIN_MANIFEST') {\n        this.trigger('loadedmetadata');\n      } else {\n        this.trigger('mediachange');\n      }\n    });\n  }\n  /**\n   * pause loading of the playlist\n   */\n\n  pause() {\n    if (this.mediaUpdateTimeout) {\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n      this.mediaUpdateTimeout = null;\n    }\n    this.stopRequest();\n    if (this.state === 'HAVE_NOTHING') {\n      // If we pause the loader before any data has been retrieved, its as if we never\n      // started, so reset to an unstarted state.\n      this.started = false;\n    } // Need to restore state now that no activity is happening\n\n    if (this.state === 'SWITCHING_MEDIA') {\n      // if the loader was in the process of switching media, it should either return to\n      // HAVE_MAIN_MANIFEST or HAVE_METADATA depending on if the loader has loaded a media\n      // playlist yet. This is determined by the existence of loader.media_\n      if (this.media_) {\n        this.state = 'HAVE_METADATA';\n      } else {\n        this.state = 'HAVE_MAIN_MANIFEST';\n      }\n    } else if (this.state === 'HAVE_CURRENT_METADATA') {\n      this.state = 'HAVE_METADATA';\n    }\n  }\n  /**\n   * start loading of the playlist\n   */\n\n  load(shouldDelay) {\n    if (this.mediaUpdateTimeout) {\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n      this.mediaUpdateTimeout = null;\n    }\n    const media = this.media();\n    if (shouldDelay) {\n      const delay = media ? (media.partTargetDuration || media.targetDuration) / 2 * 1000 : 5 * 1000;\n      this.mediaUpdateTimeout = window$1.setTimeout(() => {\n        this.mediaUpdateTimeout = null;\n        this.load();\n      }, delay);\n      return;\n    }\n    if (!this.started) {\n      this.start();\n      return;\n    }\n    if (media && !media.endList) {\n      this.trigger('mediaupdatetimeout');\n    } else {\n      this.trigger('loadedplaylist');\n    }\n  }\n  updateMediaUpdateTimeout_(delay) {\n    if (this.mediaUpdateTimeout) {\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n      this.mediaUpdateTimeout = null;\n    } // we only have use mediaupdatetimeout for live playlists.\n\n    if (!this.media() || this.media().endList) {\n      return;\n    }\n    this.mediaUpdateTimeout = window$1.setTimeout(() => {\n      this.mediaUpdateTimeout = null;\n      this.trigger('mediaupdatetimeout');\n      this.updateMediaUpdateTimeout_(delay);\n    }, delay);\n  }\n  /**\n   * start loading of the playlist\n   */\n\n  start() {\n    this.started = true;\n    if (typeof this.src === 'object') {\n      // in the case of an entirely constructed manifest object (meaning there's no actual\n      // manifest on a server), default the uri to the page's href\n      if (!this.src.uri) {\n        this.src.uri = window$1.location.href;\n      } // resolvedUri is added on internally after the initial request. Since there's no\n      // request for pre-resolved manifests, add on resolvedUri here.\n\n      this.src.resolvedUri = this.src.uri; // Since a manifest object was passed in as the source (instead of a URL), the first\n      // request can be skipped (since the top level of the manifest, at a minimum, is\n      // already available as a parsed manifest object). However, if the manifest object\n      // represents a main playlist, some media playlists may need to be resolved before\n      // the starting segment list is available. Therefore, go directly to setup of the\n      // initial playlist, and let the normal flow continue from there.\n      //\n      // Note that the call to setup is asynchronous, as other sections of VHS may assume\n      // that the first request is asynchronous.\n\n      setTimeout(() => {\n        this.setupInitialPlaylist(this.src);\n      }, 0);\n      return;\n    } // request the specified URL\n\n    this.request = this.vhs_.xhr({\n      uri: this.src,\n      withCredentials: this.withCredentials\n    }, (error, req) => {\n      // disposed\n      if (!this.request) {\n        return;\n      } // clear the loader's request reference\n\n      this.request = null;\n      if (error) {\n        this.error = {\n          status: req.status,\n          message: `HLS playlist request error at URL: ${this.src}.`,\n          responseText: req.responseText,\n          // MEDIA_ERR_NETWORK\n          code: 2\n        };\n        if (this.state === 'HAVE_NOTHING') {\n          this.started = false;\n        }\n        return this.trigger('error');\n      }\n      this.src = resolveManifestRedirect(this.src, req);\n      const manifest = this.parseManifest_({\n        manifestString: req.responseText,\n        url: this.src\n      });\n      this.setupInitialPlaylist(manifest);\n    });\n  }\n  srcUri() {\n    return typeof this.src === 'string' ? this.src : this.src.uri;\n  }\n  /**\n   * Given a manifest object that's either a main or media playlist, trigger the proper\n   * events and set the state of the playlist loader.\n   *\n   * If the manifest object represents a main playlist, `loadedplaylist` will be\n   * triggered to allow listeners to select a playlist. If none is selected, the loader\n   * will default to the first one in the playlists array.\n   *\n   * If the manifest object represents a media playlist, `loadedplaylist` will be\n   * triggered followed by `loadedmetadata`, as the only available playlist is loaded.\n   *\n   * In the case of a media playlist, a main playlist object wrapper with one playlist\n   * will be created so that all logic can handle playlists in the same fashion (as an\n   * assumed manifest object schema).\n   *\n   * @param {Object} manifest\n   *        The parsed manifest object\n   */\n\n  setupInitialPlaylist(manifest) {\n    this.state = 'HAVE_MAIN_MANIFEST';\n    if (manifest.playlists) {\n      this.main = manifest;\n      addPropertiesToMain(this.main, this.srcUri()); // If the initial main playlist has playlists wtih segments already resolved,\n      // then resolve URIs in advance, as they are usually done after a playlist request,\n      // which may not happen if the playlist is resolved.\n\n      manifest.playlists.forEach(playlist => {\n        playlist.segments = getAllSegments(playlist);\n        playlist.segments.forEach(segment => {\n          resolveSegmentUris(segment, playlist.resolvedUri);\n        });\n      });\n      this.trigger('loadedplaylist');\n      if (!this.request) {\n        // no media playlist was specifically selected so start\n        // from the first listed one\n        this.media(this.main.playlists[0]);\n      }\n      return;\n    } // In order to support media playlists passed in as vhs-json, the case where the uri\n    // is not provided as part of the manifest should be considered, and an appropriate\n    // default used.\n\n    const uri = this.srcUri() || window$1.location.href;\n    this.main = mainForMedia(manifest, uri);\n    this.haveMetadata({\n      playlistObject: manifest,\n      url: uri,\n      id: this.main.playlists[0].id\n    });\n    this.trigger('loadedmetadata');\n  }\n}\n\n/**\n * @file xhr.js\n */\nconst {\n  xhr: videojsXHR\n} = videojs;\nconst callbackWrapper = function (request, error, response, callback) {\n  const reqResponse = request.responseType === 'arraybuffer' ? request.response : request.responseText;\n  if (!error && reqResponse) {\n    request.responseTime = Date.now();\n    request.roundTripTime = request.responseTime - request.requestTime;\n    request.bytesReceived = reqResponse.byteLength || reqResponse.length;\n    if (!request.bandwidth) {\n      request.bandwidth = Math.floor(request.bytesReceived / request.roundTripTime * 8 * 1000);\n    }\n  }\n  if (response.headers) {\n    request.responseHeaders = response.headers;\n  } // videojs.xhr now uses a specific code on the error\n  // object to signal that a request has timed out instead\n  // of setting a boolean on the request object\n\n  if (error && error.code === 'ETIMEDOUT') {\n    request.timedout = true;\n  } // videojs.xhr no longer considers status codes outside of 200 and 0\n  // (for file uris) to be errors, but the old XHR did, so emulate that\n  // behavior. Status 206 may be used in response to byterange requests.\n\n  if (!error && !request.aborted && response.statusCode !== 200 && response.statusCode !== 206 && response.statusCode !== 0) {\n    error = new Error('XHR Failed with a response of: ' + (request && (reqResponse || request.responseText)));\n  }\n  callback(error, request);\n};\nconst xhrFactory = function () {\n  const xhr = function XhrFunction(options, callback) {\n    // Add a default timeout\n    options = merge({\n      timeout: 45e3\n    }, options); // Allow an optional user-specified function to modify the option\n    // object before we construct the xhr request\n\n    const beforeRequest = XhrFunction.beforeRequest || videojs.Vhs.xhr.beforeRequest;\n    if (beforeRequest && typeof beforeRequest === 'function') {\n      const newOptions = beforeRequest(options);\n      if (newOptions) {\n        options = newOptions;\n      }\n    } // Use the standard videojs.xhr() method unless `videojs.Vhs.xhr` has been overriden\n    // TODO: switch back to videojs.Vhs.xhr.name === 'XhrFunction' when we drop IE11\n\n    const xhrMethod = videojs.Vhs.xhr.original === true ? videojsXHR : videojs.Vhs.xhr;\n    const request = xhrMethod(options, function (error, response) {\n      return callbackWrapper(request, error, response, callback);\n    });\n    const originalAbort = request.abort;\n    request.abort = function () {\n      request.aborted = true;\n      return originalAbort.apply(request, arguments);\n    };\n    request.uri = options.uri;\n    request.requestTime = Date.now();\n    return request;\n  };\n  xhr.original = true;\n  return xhr;\n};\n/**\n * Turns segment byterange into a string suitable for use in\n * HTTP Range requests\n *\n * @param {Object} byterange - an object with two values defining the start and end\n *                             of a byte-range\n */\n\nconst byterangeStr = function (byterange) {\n  // `byterangeEnd` is one less than `offset + length` because the HTTP range\n  // header uses inclusive ranges\n  let byterangeEnd;\n  const byterangeStart = byterange.offset;\n  if (typeof byterange.offset === 'bigint' || typeof byterange.length === 'bigint') {\n    byterangeEnd = window$1.BigInt(byterange.offset) + window$1.BigInt(byterange.length) - window$1.BigInt(1);\n  } else {\n    byterangeEnd = byterange.offset + byterange.length - 1;\n  }\n  return 'bytes=' + byterangeStart + '-' + byterangeEnd;\n};\n/**\n * Defines headers for use in the xhr request for a particular segment.\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n */\n\nconst segmentXhrHeaders = function (segment) {\n  const headers = {};\n  if (segment.byterange) {\n    headers.Range = byterangeStr(segment.byterange);\n  }\n  return headers;\n};\n\n/**\n * @file bin-utils.js\n */\n\n/**\n * convert a TimeRange to text\n *\n * @param {TimeRange} range the timerange to use for conversion\n * @param {number} i the iterator on the range to convert\n * @return {string} the range in string format\n */\n\nconst textRange = function (range, i) {\n  return range.start(i) + '-' + range.end(i);\n};\n/**\n * format a number as hex string\n *\n * @param {number} e The number\n * @param {number} i the iterator\n * @return {string} the hex formatted number as a string\n */\n\nconst formatHexString = function (e, i) {\n  const value = e.toString(16);\n  return '00'.substring(0, 2 - value.length) + value + (i % 2 ? ' ' : '');\n};\nconst formatAsciiString = function (e) {\n  if (e >= 0x20 && e < 0x7e) {\n    return String.fromCharCode(e);\n  }\n  return '.';\n};\n/**\n * Creates an object for sending to a web worker modifying properties that are TypedArrays\n * into a new object with seperated properties for the buffer, byteOffset, and byteLength.\n *\n * @param {Object} message\n *        Object of properties and values to send to the web worker\n * @return {Object}\n *         Modified message with TypedArray values expanded\n * @function createTransferableMessage\n */\n\nconst createTransferableMessage = function (message) {\n  const transferable = {};\n  Object.keys(message).forEach(key => {\n    const value = message[key];\n    if (isArrayBufferView(value)) {\n      transferable[key] = {\n        bytes: value.buffer,\n        byteOffset: value.byteOffset,\n        byteLength: value.byteLength\n      };\n    } else {\n      transferable[key] = value;\n    }\n  });\n  return transferable;\n};\n/**\n * Returns a unique string identifier for a media initialization\n * segment.\n *\n * @param {Object} initSegment\n *        the init segment object.\n *\n * @return {string} the generated init segment id\n */\n\nconst initSegmentId = function (initSegment) {\n  const byterange = initSegment.byterange || {\n    length: Infinity,\n    offset: 0\n  };\n  return [byterange.length, byterange.offset, initSegment.resolvedUri].join(',');\n};\n/**\n * Returns a unique string identifier for a media segment key.\n *\n * @param {Object} key the encryption key\n * @return {string} the unique id for the media segment key.\n */\n\nconst segmentKeyId = function (key) {\n  return key.resolvedUri;\n};\n/**\n * utils to help dump binary data to the console\n *\n * @param {Array|TypedArray} data\n *        data to dump to a string\n *\n * @return {string} the data as a hex string.\n */\n\nconst hexDump = data => {\n  const bytes = Array.prototype.slice.call(data);\n  const step = 16;\n  let result = '';\n  let hex;\n  let ascii;\n  for (let j = 0; j < bytes.length / step; j++) {\n    hex = bytes.slice(j * step, j * step + step).map(formatHexString).join('');\n    ascii = bytes.slice(j * step, j * step + step).map(formatAsciiString).join('');\n    result += hex + ' ' + ascii + '\\n';\n  }\n  return result;\n};\nconst tagDump = ({\n  bytes\n}) => hexDump(bytes);\nconst textRanges = ranges => {\n  let result = '';\n  let i;\n  for (i = 0; i < ranges.length; i++) {\n    result += textRange(ranges, i) + ' ';\n  }\n  return result;\n};\nvar utils = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  createTransferableMessage: createTransferableMessage,\n  initSegmentId: initSegmentId,\n  segmentKeyId: segmentKeyId,\n  hexDump: hexDump,\n  tagDump: tagDump,\n  textRanges: textRanges\n});\n\n// TODO handle fmp4 case where the timing info is accurate and doesn't involve transmux\n// 25% was arbitrarily chosen, and may need to be refined over time.\n\nconst SEGMENT_END_FUDGE_PERCENT = 0.25;\n/**\n * Converts a player time (any time that can be gotten/set from player.currentTime(),\n * e.g., any time within player.seekable().start(0) to player.seekable().end(0)) to a\n * program time (any time referencing the real world (e.g., EXT-X-PROGRAM-DATE-TIME)).\n *\n * The containing segment is required as the EXT-X-PROGRAM-DATE-TIME serves as an \"anchor\n * point\" (a point where we have a mapping from program time to player time, with player\n * time being the post transmux start of the segment).\n *\n * For more details, see [this doc](../../docs/program-time-from-player-time.md).\n *\n * @param {number} playerTime the player time\n * @param {Object} segment the segment which contains the player time\n * @return {Date} program time\n */\n\nconst playerTimeToProgramTime = (playerTime, segment) => {\n  if (!segment.dateTimeObject) {\n    // Can't convert without an \"anchor point\" for the program time (i.e., a time that can\n    // be used to map the start of a segment with a real world time).\n    return null;\n  }\n  const transmuxerPrependedSeconds = segment.videoTimingInfo.transmuxerPrependedSeconds;\n  const transmuxedStart = segment.videoTimingInfo.transmuxedPresentationStart; // get the start of the content from before old content is prepended\n\n  const startOfSegment = transmuxedStart + transmuxerPrependedSeconds;\n  const offsetFromSegmentStart = playerTime - startOfSegment;\n  return new Date(segment.dateTimeObject.getTime() + offsetFromSegmentStart * 1000);\n};\nconst originalSegmentVideoDuration = videoTimingInfo => {\n  return videoTimingInfo.transmuxedPresentationEnd - videoTimingInfo.transmuxedPresentationStart - videoTimingInfo.transmuxerPrependedSeconds;\n};\n/**\n * Finds a segment that contains the time requested given as an ISO-8601 string. The\n * returned segment might be an estimate or an accurate match.\n *\n * @param {string} programTime The ISO-8601 programTime to find a match for\n * @param {Object} playlist A playlist object to search within\n */\n\nconst findSegmentForProgramTime = (programTime, playlist) => {\n  // Assumptions:\n  //  - verifyProgramDateTimeTags has already been run\n  //  - live streams have been started\n  let dateTimeObject;\n  try {\n    dateTimeObject = new Date(programTime);\n  } catch (e) {\n    return null;\n  }\n  if (!playlist || !playlist.segments || playlist.segments.length === 0) {\n    return null;\n  }\n  let segment = playlist.segments[0];\n  if (dateTimeObject < segment.dateTimeObject) {\n    // Requested time is before stream start.\n    return null;\n  }\n  for (let i = 0; i < playlist.segments.length - 1; i++) {\n    segment = playlist.segments[i];\n    const nextSegmentStart = playlist.segments[i + 1].dateTimeObject;\n    if (dateTimeObject < nextSegmentStart) {\n      break;\n    }\n  }\n  const lastSegment = playlist.segments[playlist.segments.length - 1];\n  const lastSegmentStart = lastSegment.dateTimeObject;\n  const lastSegmentDuration = lastSegment.videoTimingInfo ? originalSegmentVideoDuration(lastSegment.videoTimingInfo) : lastSegment.duration + lastSegment.duration * SEGMENT_END_FUDGE_PERCENT;\n  const lastSegmentEnd = new Date(lastSegmentStart.getTime() + lastSegmentDuration * 1000);\n  if (dateTimeObject > lastSegmentEnd) {\n    // Beyond the end of the stream, or our best guess of the end of the stream.\n    return null;\n  }\n  if (dateTimeObject > lastSegmentStart) {\n    segment = lastSegment;\n  }\n  return {\n    segment,\n    estimatedStart: segment.videoTimingInfo ? segment.videoTimingInfo.transmuxedPresentationStart : Playlist.duration(playlist, playlist.mediaSequence + playlist.segments.indexOf(segment)),\n    // Although, given that all segments have accurate date time objects, the segment\n    // selected should be accurate, unless the video has been transmuxed at some point\n    // (determined by the presence of the videoTimingInfo object), the segment's \"player\n    // time\" (the start time in the player) can't be considered accurate.\n    type: segment.videoTimingInfo ? 'accurate' : 'estimate'\n  };\n};\n/**\n * Finds a segment that contains the given player time(in seconds).\n *\n * @param {number} time The player time to find a match for\n * @param {Object} playlist A playlist object to search within\n */\n\nconst findSegmentForPlayerTime = (time, playlist) => {\n  // Assumptions:\n  // - there will always be a segment.duration\n  // - we can start from zero\n  // - segments are in time order\n  if (!playlist || !playlist.segments || playlist.segments.length === 0) {\n    return null;\n  }\n  let segmentEnd = 0;\n  let segment;\n  for (let i = 0; i < playlist.segments.length; i++) {\n    segment = playlist.segments[i]; // videoTimingInfo is set after the segment is downloaded and transmuxed, and\n    // should contain the most accurate values we have for the segment's player times.\n    //\n    // Use the accurate transmuxedPresentationEnd value if it is available, otherwise fall\n    // back to an estimate based on the manifest derived (inaccurate) segment.duration, to\n    // calculate an end value.\n\n    segmentEnd = segment.videoTimingInfo ? segment.videoTimingInfo.transmuxedPresentationEnd : segmentEnd + segment.duration;\n    if (time <= segmentEnd) {\n      break;\n    }\n  }\n  const lastSegment = playlist.segments[playlist.segments.length - 1];\n  if (lastSegment.videoTimingInfo && lastSegment.videoTimingInfo.transmuxedPresentationEnd < time) {\n    // The time requested is beyond the stream end.\n    return null;\n  }\n  if (time > segmentEnd) {\n    // The time is within or beyond the last segment.\n    //\n    // Check to see if the time is beyond a reasonable guess of the end of the stream.\n    if (time > segmentEnd + lastSegment.duration * SEGMENT_END_FUDGE_PERCENT) {\n      // Technically, because the duration value is only an estimate, the time may still\n      // exist in the last segment, however, there isn't enough information to make even\n      // a reasonable estimate.\n      return null;\n    }\n    segment = lastSegment;\n  }\n  return {\n    segment,\n    estimatedStart: segment.videoTimingInfo ? segment.videoTimingInfo.transmuxedPresentationStart : segmentEnd - segment.duration,\n    // Because videoTimingInfo is only set after transmux, it is the only way to get\n    // accurate timing values.\n    type: segment.videoTimingInfo ? 'accurate' : 'estimate'\n  };\n};\n/**\n * Gives the offset of the comparisonTimestamp from the programTime timestamp in seconds.\n * If the offset returned is positive, the programTime occurs after the\n * comparisonTimestamp.\n * If the offset is negative, the programTime occurs before the comparisonTimestamp.\n *\n * @param {string} comparisonTimeStamp An ISO-8601 timestamp to compare against\n * @param {string} programTime The programTime as an ISO-8601 string\n * @return {number} offset\n */\n\nconst getOffsetFromTimestamp = (comparisonTimeStamp, programTime) => {\n  let segmentDateTime;\n  let programDateTime;\n  try {\n    segmentDateTime = new Date(comparisonTimeStamp);\n    programDateTime = new Date(programTime);\n  } catch (e) {// TODO handle error\n  }\n  const segmentTimeEpoch = segmentDateTime.getTime();\n  const programTimeEpoch = programDateTime.getTime();\n  return (programTimeEpoch - segmentTimeEpoch) / 1000;\n};\n/**\n * Checks that all segments in this playlist have programDateTime tags.\n *\n * @param {Object} playlist A playlist object\n */\n\nconst verifyProgramDateTimeTags = playlist => {\n  if (!playlist.segments || playlist.segments.length === 0) {\n    return false;\n  }\n  for (let i = 0; i < playlist.segments.length; i++) {\n    const segment = playlist.segments[i];\n    if (!segment.dateTimeObject) {\n      return false;\n    }\n  }\n  return true;\n};\n/**\n * Returns the programTime of the media given a playlist and a playerTime.\n * The playlist must have programDateTime tags for a programDateTime tag to be returned.\n * If the segments containing the time requested have not been buffered yet, an estimate\n * may be returned to the callback.\n *\n * @param {Object} args\n * @param {Object} args.playlist A playlist object to search within\n * @param {number} time A playerTime in seconds\n * @param {Function} callback(err, programTime)\n * @return {string} err.message A detailed error message\n * @return {Object} programTime\n * @return {number} programTime.mediaSeconds The streamTime in seconds\n * @return {string} programTime.programDateTime The programTime as an ISO-8601 String\n */\n\nconst getProgramTime = ({\n  playlist,\n  time = undefined,\n  callback\n}) => {\n  if (!callback) {\n    throw new Error('getProgramTime: callback must be provided');\n  }\n  if (!playlist || time === undefined) {\n    return callback({\n      message: 'getProgramTime: playlist and time must be provided'\n    });\n  }\n  const matchedSegment = findSegmentForPlayerTime(time, playlist);\n  if (!matchedSegment) {\n    return callback({\n      message: 'valid programTime was not found'\n    });\n  }\n  if (matchedSegment.type === 'estimate') {\n    return callback({\n      message: 'Accurate programTime could not be determined.' + ' Please seek to e.seekTime and try again',\n      seekTime: matchedSegment.estimatedStart\n    });\n  }\n  const programTimeObject = {\n    mediaSeconds: time\n  };\n  const programTime = playerTimeToProgramTime(time, matchedSegment.segment);\n  if (programTime) {\n    programTimeObject.programDateTime = programTime.toISOString();\n  }\n  return callback(null, programTimeObject);\n};\n/**\n * Seeks in the player to a time that matches the given programTime ISO-8601 string.\n *\n * @param {Object} args\n * @param {string} args.programTime A programTime to seek to as an ISO-8601 String\n * @param {Object} args.playlist A playlist to look within\n * @param {number} args.retryCount The number of times to try for an accurate seek. Default is 2.\n * @param {Function} args.seekTo A method to perform a seek\n * @param {boolean} args.pauseAfterSeek Whether to end in a paused state after seeking. Default is true.\n * @param {Object} args.tech The tech to seek on\n * @param {Function} args.callback(err, newTime) A callback to return the new time to\n * @return {string} err.message A detailed error message\n * @return {number} newTime The exact time that was seeked to in seconds\n */\n\nconst seekToProgramTime = ({\n  programTime,\n  playlist,\n  retryCount = 2,\n  seekTo,\n  pauseAfterSeek = true,\n  tech,\n  callback\n}) => {\n  if (!callback) {\n    throw new Error('seekToProgramTime: callback must be provided');\n  }\n  if (typeof programTime === 'undefined' || !playlist || !seekTo) {\n    return callback({\n      message: 'seekToProgramTime: programTime, seekTo and playlist must be provided'\n    });\n  }\n  if (!playlist.endList && !tech.hasStarted_) {\n    return callback({\n      message: 'player must be playing a live stream to start buffering'\n    });\n  }\n  if (!verifyProgramDateTimeTags(playlist)) {\n    return callback({\n      message: 'programDateTime tags must be provided in the manifest ' + playlist.resolvedUri\n    });\n  }\n  const matchedSegment = findSegmentForProgramTime(programTime, playlist); // no match\n\n  if (!matchedSegment) {\n    return callback({\n      message: `${programTime} was not found in the stream`\n    });\n  }\n  const segment = matchedSegment.segment;\n  const mediaOffset = getOffsetFromTimestamp(segment.dateTimeObject, programTime);\n  if (matchedSegment.type === 'estimate') {\n    // we've run out of retries\n    if (retryCount === 0) {\n      return callback({\n        message: `${programTime} is not buffered yet. Try again`\n      });\n    }\n    seekTo(matchedSegment.estimatedStart + mediaOffset);\n    tech.one('seeked', () => {\n      seekToProgramTime({\n        programTime,\n        playlist,\n        retryCount: retryCount - 1,\n        seekTo,\n        pauseAfterSeek,\n        tech,\n        callback\n      });\n    });\n    return;\n  } // Since the segment.start value is determined from the buffered end or ending time\n  // of the prior segment, the seekToTime doesn't need to account for any transmuxer\n  // modifications.\n\n  const seekToTime = segment.start + mediaOffset;\n  const seekedCallback = () => {\n    return callback(null, tech.currentTime());\n  }; // listen for seeked event\n\n  tech.one('seeked', seekedCallback); // pause before seeking as video.js will restore this state\n\n  if (pauseAfterSeek) {\n    tech.pause();\n  }\n  seekTo(seekToTime);\n};\n\n// which will only happen if the request is complete.\n\nconst callbackOnCompleted = (request, cb) => {\n  if (request.readyState === 4) {\n    return cb();\n  }\n  return;\n};\nconst containerRequest = (uri, xhr, cb) => {\n  let bytes = [];\n  let id3Offset;\n  let finished = false;\n  const endRequestAndCallback = function (err, req, type, _bytes) {\n    req.abort();\n    finished = true;\n    return cb(err, req, type, _bytes);\n  };\n  const progressListener = function (error, request) {\n    if (finished) {\n      return;\n    }\n    if (error) {\n      return endRequestAndCallback(error, request, '', bytes);\n    } // grap the new part of content that was just downloaded\n\n    const newPart = request.responseText.substring(bytes && bytes.byteLength || 0, request.responseText.length); // add that onto bytes\n\n    bytes = concatTypedArrays(bytes, stringToBytes(newPart, true));\n    id3Offset = id3Offset || getId3Offset(bytes); // we need at least 10 bytes to determine a type\n    // or we need at least two bytes after an id3Offset\n\n    if (bytes.length < 10 || id3Offset && bytes.length < id3Offset + 2) {\n      return callbackOnCompleted(request, () => endRequestAndCallback(error, request, '', bytes));\n    }\n    const type = detectContainerForBytes(bytes); // if this looks like a ts segment but we don't have enough data\n    // to see the second sync byte, wait until we have enough data\n    // before declaring it ts\n\n    if (type === 'ts' && bytes.length < 188) {\n      return callbackOnCompleted(request, () => endRequestAndCallback(error, request, '', bytes));\n    } // this may be an unsynced ts segment\n    // wait for 376 bytes before detecting no container\n\n    if (!type && bytes.length < 376) {\n      return callbackOnCompleted(request, () => endRequestAndCallback(error, request, '', bytes));\n    }\n    return endRequestAndCallback(null, request, type, bytes);\n  };\n  const options = {\n    uri,\n    beforeSend(request) {\n      // this forces the browser to pass the bytes to us unprocessed\n      request.overrideMimeType('text/plain; charset=x-user-defined');\n      request.addEventListener('progress', function ({\n        total,\n        loaded\n      }) {\n        return callbackWrapper(request, null, {\n          statusCode: request.status\n        }, progressListener);\n      });\n    }\n  };\n  const request = xhr(options, function (error, response) {\n    return callbackWrapper(request, error, response, progressListener);\n  });\n  return request;\n};\nconst {\n  EventTarget\n} = videojs;\nconst dashPlaylistUnchanged = function (a, b) {\n  if (!isPlaylistUnchanged(a, b)) {\n    return false;\n  } // for dash the above check will often return true in scenarios where\n  // the playlist actually has changed because mediaSequence isn't a\n  // dash thing, and we often set it to 1. So if the playlists have the same amount\n  // of segments we return true.\n  // So for dash we need to make sure that the underlying segments are different.\n  // if sidx changed then the playlists are different.\n\n  if (a.sidx && b.sidx && (a.sidx.offset !== b.sidx.offset || a.sidx.length !== b.sidx.length)) {\n    return false;\n  } else if (!a.sidx && b.sidx || a.sidx && !b.sidx) {\n    return false;\n  } // one or the other does not have segments\n  // there was a change.\n\n  if (a.segments && !b.segments || !a.segments && b.segments) {\n    return false;\n  } // neither has segments nothing changed\n\n  if (!a.segments && !b.segments) {\n    return true;\n  } // check segments themselves\n\n  for (let i = 0; i < a.segments.length; i++) {\n    const aSegment = a.segments[i];\n    const bSegment = b.segments[i]; // if uris are different between segments there was a change\n\n    if (aSegment.uri !== bSegment.uri) {\n      return false;\n    } // neither segment has a byterange, there will be no byterange change.\n\n    if (!aSegment.byterange && !bSegment.byterange) {\n      continue;\n    }\n    const aByterange = aSegment.byterange;\n    const bByterange = bSegment.byterange; // if byterange only exists on one of the segments, there was a change.\n\n    if (aByterange && !bByterange || !aByterange && bByterange) {\n      return false;\n    } // if both segments have byterange with different offsets, there was a change.\n\n    if (aByterange.offset !== bByterange.offset || aByterange.length !== bByterange.length) {\n      return false;\n    }\n  } // if everything was the same with segments, this is the same playlist.\n\n  return true;\n};\n/**\n * Use the representation IDs from the mpd object to create groupIDs, the NAME is set to mandatory representation\n * ID in the parser. This allows for continuous playout across periods with the same representation IDs\n * (continuous periods as defined in DASH-IF 3.2.12). This is assumed in the mpd-parser as well. If we want to support\n * periods without continuous playback this function may need modification as well as the parser.\n */\n\nconst dashGroupId = (type, group, label, playlist) => {\n  // If the manifest somehow does not have an ID (non-dash compliant), use the label.\n  const playlistId = playlist.attributes.NAME || label;\n  return `placeholder-uri-${type}-${group}-${playlistId}`;\n};\n/**\n * Parses the main XML string and updates playlist URI references.\n *\n * @param {Object} config\n *        Object of arguments\n * @param {string} config.mainXml\n *        The mpd XML\n * @param {string} config.srcUrl\n *        The mpd URL\n * @param {Date} config.clientOffset\n *         A time difference between server and client\n * @param {Object} config.sidxMapping\n *        SIDX mappings for moof/mdat URIs and byte ranges\n * @return {Object}\n *         The parsed mpd manifest object\n */\n\nconst parseMainXml = ({\n  mainXml,\n  srcUrl,\n  clientOffset,\n  sidxMapping,\n  previousManifest\n}) => {\n  const manifest = parse(mainXml, {\n    manifestUri: srcUrl,\n    clientOffset,\n    sidxMapping,\n    previousManifest\n  });\n  addPropertiesToMain(manifest, srcUrl, dashGroupId);\n  return manifest;\n};\n/**\n * Removes any mediaGroup labels that no longer exist in the newMain\n *\n * @param {Object} update\n *         The previous mpd object being updated\n * @param {Object} newMain\n *         The new mpd object\n */\n\nconst removeOldMediaGroupLabels = (update, newMain) => {\n  forEachMediaGroup(update, (properties, type, group, label) => {\n    if (!(label in newMain.mediaGroups[type][group])) {\n      delete update.mediaGroups[type][group][label];\n    }\n  });\n};\n/**\n * Returns a new main manifest that is the result of merging an updated main manifest\n * into the original version.\n *\n * @param {Object} oldMain\n *        The old parsed mpd object\n * @param {Object} newMain\n *        The updated parsed mpd object\n * @return {Object}\n *         A new object representing the original main manifest with the updated media\n *         playlists merged in\n */\n\nconst updateMain = (oldMain, newMain, sidxMapping) => {\n  let noChanges = true;\n  let update = merge(oldMain, {\n    // These are top level properties that can be updated\n    duration: newMain.duration,\n    minimumUpdatePeriod: newMain.minimumUpdatePeriod,\n    timelineStarts: newMain.timelineStarts\n  }); // First update the playlists in playlist list\n\n  for (let i = 0; i < newMain.playlists.length; i++) {\n    const playlist = newMain.playlists[i];\n    if (playlist.sidx) {\n      const sidxKey = generateSidxKey(playlist.sidx); // add sidx segments to the playlist if we have all the sidx info already\n\n      if (sidxMapping && sidxMapping[sidxKey] && sidxMapping[sidxKey].sidx) {\n        addSidxSegmentsToPlaylist(playlist, sidxMapping[sidxKey].sidx, playlist.sidx.resolvedUri);\n      }\n    }\n    const playlistUpdate = updateMain$1(update, playlist, dashPlaylistUnchanged);\n    if (playlistUpdate) {\n      update = playlistUpdate;\n      noChanges = false;\n    }\n  } // Then update media group playlists\n\n  forEachMediaGroup(newMain, (properties, type, group, label) => {\n    if (properties.playlists && properties.playlists.length) {\n      const id = properties.playlists[0].id;\n      const playlistUpdate = updateMain$1(update, properties.playlists[0], dashPlaylistUnchanged);\n      if (playlistUpdate) {\n        update = playlistUpdate; // add new mediaGroup label if it doesn't exist and assign the new mediaGroup.\n\n        if (!(label in update.mediaGroups[type][group])) {\n          update.mediaGroups[type][group][label] = properties;\n        } // update the playlist reference within media groups\n\n        update.mediaGroups[type][group][label].playlists[0] = update.playlists[id];\n        noChanges = false;\n      }\n    }\n  }); // remove mediaGroup labels and references that no longer exist in the newMain\n\n  removeOldMediaGroupLabels(update, newMain);\n  if (newMain.minimumUpdatePeriod !== oldMain.minimumUpdatePeriod) {\n    noChanges = false;\n  }\n  if (noChanges) {\n    return null;\n  }\n  return update;\n}; // SIDX should be equivalent if the URI and byteranges of the SIDX match.\n// If the SIDXs have maps, the two maps should match,\n// both `a` and `b` missing SIDXs is considered matching.\n// If `a` or `b` but not both have a map, they aren't matching.\n\nconst equivalentSidx = (a, b) => {\n  const neitherMap = Boolean(!a.map && !b.map);\n  const equivalentMap = neitherMap || Boolean(a.map && b.map && a.map.byterange.offset === b.map.byterange.offset && a.map.byterange.length === b.map.byterange.length);\n  return equivalentMap && a.uri === b.uri && a.byterange.offset === b.byterange.offset && a.byterange.length === b.byterange.length;\n}; // exported for testing\n\nconst compareSidxEntry = (playlists, oldSidxMapping) => {\n  const newSidxMapping = {};\n  for (const id in playlists) {\n    const playlist = playlists[id];\n    const currentSidxInfo = playlist.sidx;\n    if (currentSidxInfo) {\n      const key = generateSidxKey(currentSidxInfo);\n      if (!oldSidxMapping[key]) {\n        break;\n      }\n      const savedSidxInfo = oldSidxMapping[key].sidxInfo;\n      if (equivalentSidx(savedSidxInfo, currentSidxInfo)) {\n        newSidxMapping[key] = oldSidxMapping[key];\n      }\n    }\n  }\n  return newSidxMapping;\n};\n/**\n *  A function that filters out changed items as they need to be requested separately.\n *\n *  The method is exported for testing\n *\n *  @param {Object} main the parsed mpd XML returned via mpd-parser\n *  @param {Object} oldSidxMapping the SIDX to compare against\n */\n\nconst filterChangedSidxMappings = (main, oldSidxMapping) => {\n  const videoSidx = compareSidxEntry(main.playlists, oldSidxMapping);\n  let mediaGroupSidx = videoSidx;\n  forEachMediaGroup(main, (properties, mediaType, groupKey, labelKey) => {\n    if (properties.playlists && properties.playlists.length) {\n      const playlists = properties.playlists;\n      mediaGroupSidx = merge(mediaGroupSidx, compareSidxEntry(playlists, oldSidxMapping));\n    }\n  });\n  return mediaGroupSidx;\n};\nclass DashPlaylistLoader extends EventTarget {\n  // DashPlaylistLoader must accept either a src url or a playlist because subsequent\n  // playlist loader setups from media groups will expect to be able to pass a playlist\n  // (since there aren't external URLs to media playlists with DASH)\n  constructor(srcUrlOrPlaylist, vhs, options = {}, mainPlaylistLoader) {\n    super();\n    this.mainPlaylistLoader_ = mainPlaylistLoader || this;\n    if (!mainPlaylistLoader) {\n      this.isMain_ = true;\n    }\n    const {\n      withCredentials = false\n    } = options;\n    this.vhs_ = vhs;\n    this.withCredentials = withCredentials;\n    if (!srcUrlOrPlaylist) {\n      throw new Error('A non-empty playlist URL or object is required');\n    } // event naming?\n\n    this.on('minimumUpdatePeriod', () => {\n      this.refreshXml_();\n    }); // live playlist staleness timeout\n\n    this.on('mediaupdatetimeout', () => {\n      this.refreshMedia_(this.media().id);\n    });\n    this.state = 'HAVE_NOTHING';\n    this.loadedPlaylists_ = {};\n    this.logger_ = logger('DashPlaylistLoader'); // initialize the loader state\n    // The mainPlaylistLoader will be created with a string\n\n    if (this.isMain_) {\n      this.mainPlaylistLoader_.srcUrl = srcUrlOrPlaylist; // TODO: reset sidxMapping between period changes\n      // once multi-period is refactored\n\n      this.mainPlaylistLoader_.sidxMapping_ = {};\n    } else {\n      this.childPlaylist_ = srcUrlOrPlaylist;\n    }\n  }\n  requestErrored_(err, request, startingState) {\n    // disposed\n    if (!this.request) {\n      return true;\n    } // pending request is cleared\n\n    this.request = null;\n    if (err) {\n      // use the provided error object or create one\n      // based on the request/response\n      this.error = typeof err === 'object' && !(err instanceof Error) ? err : {\n        status: request.status,\n        message: 'DASH request error at URL: ' + request.uri,\n        response: request.response,\n        // MEDIA_ERR_NETWORK\n        code: 2\n      };\n      if (startingState) {\n        this.state = startingState;\n      }\n      this.trigger('error');\n      return true;\n    }\n  }\n  /**\n   * Verify that the container of the sidx segment can be parsed\n   * and if it can, get and parse that segment.\n   */\n\n  addSidxSegments_(playlist, startingState, cb) {\n    const sidxKey = playlist.sidx && generateSidxKey(playlist.sidx); // playlist lacks sidx or sidx segments were added to this playlist already.\n\n    if (!playlist.sidx || !sidxKey || this.mainPlaylistLoader_.sidxMapping_[sidxKey]) {\n      // keep this function async\n      this.mediaRequest_ = window$1.setTimeout(() => cb(false), 0);\n      return;\n    } // resolve the segment URL relative to the playlist\n\n    const uri = resolveManifestRedirect(playlist.sidx.resolvedUri);\n    const fin = (err, request) => {\n      if (this.requestErrored_(err, request, startingState)) {\n        return;\n      }\n      const sidxMapping = this.mainPlaylistLoader_.sidxMapping_;\n      let sidx;\n      try {\n        sidx = parseSidx(toUint8(request.response).subarray(8));\n      } catch (e) {\n        // sidx parsing failed.\n        this.requestErrored_(e, request, startingState);\n        return;\n      }\n      sidxMapping[sidxKey] = {\n        sidxInfo: playlist.sidx,\n        sidx\n      };\n      addSidxSegmentsToPlaylist(playlist, sidx, playlist.sidx.resolvedUri);\n      return cb(true);\n    };\n    this.request = containerRequest(uri, this.vhs_.xhr, (err, request, container, bytes) => {\n      if (err) {\n        return fin(err, request);\n      }\n      if (!container || container !== 'mp4') {\n        return fin({\n          status: request.status,\n          message: `Unsupported ${container || 'unknown'} container type for sidx segment at URL: ${uri}`,\n          // response is just bytes in this case\n          // but we really don't want to return that.\n          response: '',\n          playlist,\n          internal: true,\n          playlistExclusionDuration: Infinity,\n          // MEDIA_ERR_NETWORK\n          code: 2\n        }, request);\n      } // if we already downloaded the sidx bytes in the container request, use them\n\n      const {\n        offset,\n        length\n      } = playlist.sidx.byterange;\n      if (bytes.length >= length + offset) {\n        return fin(err, {\n          response: bytes.subarray(offset, offset + length),\n          status: request.status,\n          uri: request.uri\n        });\n      } // otherwise request sidx bytes\n\n      this.request = this.vhs_.xhr({\n        uri,\n        responseType: 'arraybuffer',\n        headers: segmentXhrHeaders({\n          byterange: playlist.sidx.byterange\n        })\n      }, fin);\n    });\n  }\n  dispose() {\n    this.trigger('dispose');\n    this.stopRequest();\n    this.loadedPlaylists_ = {};\n    window$1.clearTimeout(this.minimumUpdatePeriodTimeout_);\n    window$1.clearTimeout(this.mediaRequest_);\n    window$1.clearTimeout(this.mediaUpdateTimeout);\n    this.mediaUpdateTimeout = null;\n    this.mediaRequest_ = null;\n    this.minimumUpdatePeriodTimeout_ = null;\n    if (this.mainPlaylistLoader_.createMupOnMedia_) {\n      this.off('loadedmetadata', this.mainPlaylistLoader_.createMupOnMedia_);\n      this.mainPlaylistLoader_.createMupOnMedia_ = null;\n    }\n    this.off();\n  }\n  hasPendingRequest() {\n    return this.request || this.mediaRequest_;\n  }\n  stopRequest() {\n    if (this.request) {\n      const oldRequest = this.request;\n      this.request = null;\n      oldRequest.onreadystatechange = null;\n      oldRequest.abort();\n    }\n  }\n  media(playlist) {\n    // getter\n    if (!playlist) {\n      return this.media_;\n    } // setter\n\n    if (this.state === 'HAVE_NOTHING') {\n      throw new Error('Cannot switch media playlist from ' + this.state);\n    }\n    const startingState = this.state; // find the playlist object if the target playlist has been specified by URI\n\n    if (typeof playlist === 'string') {\n      if (!this.mainPlaylistLoader_.main.playlists[playlist]) {\n        throw new Error('Unknown playlist URI: ' + playlist);\n      }\n      playlist = this.mainPlaylistLoader_.main.playlists[playlist];\n    }\n    const mediaChange = !this.media_ || playlist.id !== this.media_.id; // switch to previously loaded playlists immediately\n\n    if (mediaChange && this.loadedPlaylists_[playlist.id] && this.loadedPlaylists_[playlist.id].endList) {\n      this.state = 'HAVE_METADATA';\n      this.media_ = playlist; // trigger media change if the active media has been updated\n\n      if (mediaChange) {\n        this.trigger('mediachanging');\n        this.trigger('mediachange');\n      }\n      return;\n    } // switching to the active playlist is a no-op\n\n    if (!mediaChange) {\n      return;\n    } // switching from an already loaded playlist\n\n    if (this.media_) {\n      this.trigger('mediachanging');\n    }\n    this.addSidxSegments_(playlist, startingState, sidxChanged => {\n      // everything is ready just continue to haveMetadata\n      this.haveMetadata({\n        startingState,\n        playlist\n      });\n    });\n  }\n  haveMetadata({\n    startingState,\n    playlist\n  }) {\n    this.state = 'HAVE_METADATA';\n    this.loadedPlaylists_[playlist.id] = playlist;\n    this.mediaRequest_ = null; // This will trigger loadedplaylist\n\n    this.refreshMedia_(playlist.id); // fire loadedmetadata the first time a media playlist is loaded\n    // to resolve setup of media groups\n\n    if (startingState === 'HAVE_MAIN_MANIFEST') {\n      this.trigger('loadedmetadata');\n    } else {\n      // trigger media change if the active media has been updated\n      this.trigger('mediachange');\n    }\n  }\n  pause() {\n    if (this.mainPlaylistLoader_.createMupOnMedia_) {\n      this.off('loadedmetadata', this.mainPlaylistLoader_.createMupOnMedia_);\n      this.mainPlaylistLoader_.createMupOnMedia_ = null;\n    }\n    this.stopRequest();\n    window$1.clearTimeout(this.mediaUpdateTimeout);\n    this.mediaUpdateTimeout = null;\n    if (this.isMain_) {\n      window$1.clearTimeout(this.mainPlaylistLoader_.minimumUpdatePeriodTimeout_);\n      this.mainPlaylistLoader_.minimumUpdatePeriodTimeout_ = null;\n    }\n    if (this.state === 'HAVE_NOTHING') {\n      // If we pause the loader before any data has been retrieved, its as if we never\n      // started, so reset to an unstarted state.\n      this.started = false;\n    }\n  }\n  load(isFinalRendition) {\n    window$1.clearTimeout(this.mediaUpdateTimeout);\n    this.mediaUpdateTimeout = null;\n    const media = this.media();\n    if (isFinalRendition) {\n      const delay = media ? media.targetDuration / 2 * 1000 : 5 * 1000;\n      this.mediaUpdateTimeout = window$1.setTimeout(() => this.load(), delay);\n      return;\n    } // because the playlists are internal to the manifest, load should either load the\n    // main manifest, or do nothing but trigger an event\n\n    if (!this.started) {\n      this.start();\n      return;\n    }\n    if (media && !media.endList) {\n      // Check to see if this is the main loader and the MUP was cleared (this happens\n      // when the loader was paused). `media` should be set at this point since one is always\n      // set during `start()`.\n      if (this.isMain_ && !this.minimumUpdatePeriodTimeout_) {\n        // Trigger minimumUpdatePeriod to refresh the main manifest\n        this.trigger('minimumUpdatePeriod'); // Since there was no prior minimumUpdatePeriodTimeout it should be recreated\n\n        this.updateMinimumUpdatePeriodTimeout_();\n      }\n      this.trigger('mediaupdatetimeout');\n    } else {\n      this.trigger('loadedplaylist');\n    }\n  }\n  start() {\n    this.started = true; // We don't need to request the main manifest again\n    // Call this asynchronously to match the xhr request behavior below\n\n    if (!this.isMain_) {\n      this.mediaRequest_ = window$1.setTimeout(() => this.haveMain_(), 0);\n      return;\n    }\n    this.requestMain_((req, mainChanged) => {\n      this.haveMain_();\n      if (!this.hasPendingRequest() && !this.media_) {\n        this.media(this.mainPlaylistLoader_.main.playlists[0]);\n      }\n    });\n  }\n  requestMain_(cb) {\n    this.request = this.vhs_.xhr({\n      uri: this.mainPlaylistLoader_.srcUrl,\n      withCredentials: this.withCredentials\n    }, (error, req) => {\n      if (this.requestErrored_(error, req)) {\n        if (this.state === 'HAVE_NOTHING') {\n          this.started = false;\n        }\n        return;\n      }\n      const mainChanged = req.responseText !== this.mainPlaylistLoader_.mainXml_;\n      this.mainPlaylistLoader_.mainXml_ = req.responseText;\n      if (req.responseHeaders && req.responseHeaders.date) {\n        this.mainLoaded_ = Date.parse(req.responseHeaders.date);\n      } else {\n        this.mainLoaded_ = Date.now();\n      }\n      this.mainPlaylistLoader_.srcUrl = resolveManifestRedirect(this.mainPlaylistLoader_.srcUrl, req);\n      if (mainChanged) {\n        this.handleMain_();\n        this.syncClientServerClock_(() => {\n          return cb(req, mainChanged);\n        });\n        return;\n      }\n      return cb(req, mainChanged);\n    });\n  }\n  /**\n   * Parses the main xml for UTCTiming node to sync the client clock to the server\n   * clock. If the UTCTiming node requires a HEAD or GET request, that request is made.\n   *\n   * @param {Function} done\n   *        Function to call when clock sync has completed\n   */\n\n  syncClientServerClock_(done) {\n    const utcTiming = parseUTCTiming(this.mainPlaylistLoader_.mainXml_); // No UTCTiming element found in the mpd. Use Date header from mpd request as the\n    // server clock\n\n    if (utcTiming === null) {\n      this.mainPlaylistLoader_.clientOffset_ = this.mainLoaded_ - Date.now();\n      return done();\n    }\n    if (utcTiming.method === 'DIRECT') {\n      this.mainPlaylistLoader_.clientOffset_ = utcTiming.value - Date.now();\n      return done();\n    }\n    this.request = this.vhs_.xhr({\n      uri: resolveUrl(this.mainPlaylistLoader_.srcUrl, utcTiming.value),\n      method: utcTiming.method,\n      withCredentials: this.withCredentials\n    }, (error, req) => {\n      // disposed\n      if (!this.request) {\n        return;\n      }\n      if (error) {\n        // sync request failed, fall back to using date header from mpd\n        // TODO: log warning\n        this.mainPlaylistLoader_.clientOffset_ = this.mainLoaded_ - Date.now();\n        return done();\n      }\n      let serverTime;\n      if (utcTiming.method === 'HEAD') {\n        if (!req.responseHeaders || !req.responseHeaders.date) {\n          // expected date header not preset, fall back to using date header from mpd\n          // TODO: log warning\n          serverTime = this.mainLoaded_;\n        } else {\n          serverTime = Date.parse(req.responseHeaders.date);\n        }\n      } else {\n        serverTime = Date.parse(req.responseText);\n      }\n      this.mainPlaylistLoader_.clientOffset_ = serverTime - Date.now();\n      done();\n    });\n  }\n  haveMain_() {\n    this.state = 'HAVE_MAIN_MANIFEST';\n    if (this.isMain_) {\n      // We have the main playlist at this point, so\n      // trigger this to allow PlaylistController\n      // to make an initial playlist selection\n      this.trigger('loadedplaylist');\n    } else if (!this.media_) {\n      // no media playlist was specifically selected so select\n      // the one the child playlist loader was created with\n      this.media(this.childPlaylist_);\n    }\n  }\n  handleMain_() {\n    // clear media request\n    this.mediaRequest_ = null;\n    const oldMain = this.mainPlaylistLoader_.main;\n    let newMain = parseMainXml({\n      mainXml: this.mainPlaylistLoader_.mainXml_,\n      srcUrl: this.mainPlaylistLoader_.srcUrl,\n      clientOffset: this.mainPlaylistLoader_.clientOffset_,\n      sidxMapping: this.mainPlaylistLoader_.sidxMapping_,\n      previousManifest: oldMain\n    }); // if we have an old main to compare the new main against\n\n    if (oldMain) {\n      newMain = updateMain(oldMain, newMain, this.mainPlaylistLoader_.sidxMapping_);\n    } // only update main if we have a new main\n\n    this.mainPlaylistLoader_.main = newMain ? newMain : oldMain;\n    const location = this.mainPlaylistLoader_.main.locations && this.mainPlaylistLoader_.main.locations[0];\n    if (location && location !== this.mainPlaylistLoader_.srcUrl) {\n      this.mainPlaylistLoader_.srcUrl = location;\n    }\n    if (!oldMain || newMain && newMain.minimumUpdatePeriod !== oldMain.minimumUpdatePeriod) {\n      this.updateMinimumUpdatePeriodTimeout_();\n    }\n    return Boolean(newMain);\n  }\n  updateMinimumUpdatePeriodTimeout_() {\n    const mpl = this.mainPlaylistLoader_; // cancel any pending creation of mup on media\n    // a new one will be added if needed.\n\n    if (mpl.createMupOnMedia_) {\n      mpl.off('loadedmetadata', mpl.createMupOnMedia_);\n      mpl.createMupOnMedia_ = null;\n    } // clear any pending timeouts\n\n    if (mpl.minimumUpdatePeriodTimeout_) {\n      window$1.clearTimeout(mpl.minimumUpdatePeriodTimeout_);\n      mpl.minimumUpdatePeriodTimeout_ = null;\n    }\n    let mup = mpl.main && mpl.main.minimumUpdatePeriod; // If the minimumUpdatePeriod has a value of 0, that indicates that the current\n    // MPD has no future validity, so a new one will need to be acquired when new\n    // media segments are to be made available. Thus, we use the target duration\n    // in this case\n\n    if (mup === 0) {\n      if (mpl.media()) {\n        mup = mpl.media().targetDuration * 1000;\n      } else {\n        mpl.createMupOnMedia_ = mpl.updateMinimumUpdatePeriodTimeout_;\n        mpl.one('loadedmetadata', mpl.createMupOnMedia_);\n      }\n    } // if minimumUpdatePeriod is invalid or <= zero, which\n    // can happen when a live video becomes VOD. skip timeout\n    // creation.\n\n    if (typeof mup !== 'number' || mup <= 0) {\n      if (mup < 0) {\n        this.logger_(`found invalid minimumUpdatePeriod of ${mup}, not setting a timeout`);\n      }\n      return;\n    }\n    this.createMUPTimeout_(mup);\n  }\n  createMUPTimeout_(mup) {\n    const mpl = this.mainPlaylistLoader_;\n    mpl.minimumUpdatePeriodTimeout_ = window$1.setTimeout(() => {\n      mpl.minimumUpdatePeriodTimeout_ = null;\n      mpl.trigger('minimumUpdatePeriod');\n      mpl.createMUPTimeout_(mup);\n    }, mup);\n  }\n  /**\n   * Sends request to refresh the main xml and updates the parsed main manifest\n   */\n\n  refreshXml_() {\n    this.requestMain_((req, mainChanged) => {\n      if (!mainChanged) {\n        return;\n      }\n      if (this.media_) {\n        this.media_ = this.mainPlaylistLoader_.main.playlists[this.media_.id];\n      } // This will filter out updated sidx info from the mapping\n\n      this.mainPlaylistLoader_.sidxMapping_ = filterChangedSidxMappings(this.mainPlaylistLoader_.main, this.mainPlaylistLoader_.sidxMapping_);\n      this.addSidxSegments_(this.media(), this.state, sidxChanged => {\n        // TODO: do we need to reload the current playlist?\n        this.refreshMedia_(this.media().id);\n      });\n    });\n  }\n  /**\n   * Refreshes the media playlist by re-parsing the main xml and updating playlist\n   * references. If this is an alternate loader, the updated parsed manifest is retrieved\n   * from the main loader.\n   */\n\n  refreshMedia_(mediaID) {\n    if (!mediaID) {\n      throw new Error('refreshMedia_ must take a media id');\n    } // for main we have to reparse the main xml\n    // to re-create segments based on current timing values\n    // which may change media. We only skip updating the main manifest\n    // if this is the first time this.media_ is being set.\n    // as main was just parsed in that case.\n\n    if (this.media_ && this.isMain_) {\n      this.handleMain_();\n    }\n    const playlists = this.mainPlaylistLoader_.main.playlists;\n    const mediaChanged = !this.media_ || this.media_ !== playlists[mediaID];\n    if (mediaChanged) {\n      this.media_ = playlists[mediaID];\n    } else {\n      this.trigger('playlistunchanged');\n    }\n    if (!this.mediaUpdateTimeout) {\n      const createMediaUpdateTimeout = () => {\n        if (this.media().endList) {\n          return;\n        }\n        this.mediaUpdateTimeout = window$1.setTimeout(() => {\n          this.trigger('mediaupdatetimeout');\n          createMediaUpdateTimeout();\n        }, refreshDelay(this.media(), Boolean(mediaChanged)));\n      };\n      createMediaUpdateTimeout();\n    }\n    this.trigger('loadedplaylist');\n  }\n}\nvar Config = {\n  GOAL_BUFFER_LENGTH: 30,\n  MAX_GOAL_BUFFER_LENGTH: 60,\n  BACK_BUFFER_LENGTH: 30,\n  GOAL_BUFFER_LENGTH_RATE: 1,\n  // 0.5 MB/s\n  INITIAL_BANDWIDTH: 4194304,\n  // A fudge factor to apply to advertised playlist bitrates to account for\n  // temporary flucations in client bandwidth\n  BANDWIDTH_VARIANCE: 1.2,\n  // How much of the buffer must be filled before we consider upswitching\n  BUFFER_LOW_WATER_LINE: 0,\n  MAX_BUFFER_LOW_WATER_LINE: 30,\n  // TODO: Remove this when experimentalBufferBasedABR is removed\n  EXPERIMENTAL_MAX_BUFFER_LOW_WATER_LINE: 16,\n  BUFFER_LOW_WATER_LINE_RATE: 1,\n  // If the buffer is greater than the high water line, we won't switch down\n  BUFFER_HIGH_WATER_LINE: 30\n};\nconst stringToArrayBuffer = string => {\n  const view = new Uint8Array(new ArrayBuffer(string.length));\n  for (let i = 0; i < string.length; i++) {\n    view[i] = string.charCodeAt(i);\n  }\n  return view.buffer;\n};\n\n/* global Blob, BlobBuilder, Worker */\n// unify worker interface\nconst browserWorkerPolyFill = function (workerObj) {\n  // node only supports on/off\n  workerObj.on = workerObj.addEventListener;\n  workerObj.off = workerObj.removeEventListener;\n  return workerObj;\n};\nconst createObjectURL = function (str) {\n  try {\n    return URL.createObjectURL(new Blob([str], {\n      type: 'application/javascript'\n    }));\n  } catch (e) {\n    const blob = new BlobBuilder();\n    blob.append(str);\n    return URL.createObjectURL(blob.getBlob());\n  }\n};\nconst factory = function (code) {\n  return function () {\n    const objectUrl = createObjectURL(code);\n    const worker = browserWorkerPolyFill(new Worker(objectUrl));\n    worker.objURL = objectUrl;\n    const terminate = worker.terminate;\n    worker.on = worker.addEventListener;\n    worker.off = worker.removeEventListener;\n    worker.terminate = function () {\n      URL.revokeObjectURL(objectUrl);\n      return terminate.call(this);\n    };\n    return worker;\n  };\n};\nconst transform = function (code) {\n  return `var browserWorkerPolyFill = ${browserWorkerPolyFill.toString()};\\n` + 'browserWorkerPolyFill(self);\\n' + code;\n};\nconst getWorkerString = function (fn) {\n  return fn.toString().replace(/^function.+?{/, '').slice(0, -1);\n};\n\n/* rollup-plugin-worker-factory start for worker!/Users/ddashkevich/projects/http-streaming/src/transmuxer-worker.js */\nconst workerCode$1 = transform(getWorkerString(function () {\n  var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * A lightweight readable stream implemention that handles event dispatching.\n   * Objects that inherit from streams should call init in their constructors.\n   */\n\n  var Stream$8 = function () {\n    this.init = function () {\n      var listeners = {};\n      /**\n       * Add a listener for a specified event type.\n       * @param type {string} the event name\n       * @param listener {function} the callback to be invoked when an event of\n       * the specified type occurs\n       */\n\n      this.on = function (type, listener) {\n        if (!listeners[type]) {\n          listeners[type] = [];\n        }\n        listeners[type] = listeners[type].concat(listener);\n      };\n      /**\n       * Remove a listener for a specified event type.\n       * @param type {string} the event name\n       * @param listener {function} a function previously registered for this\n       * type of event through `on`\n       */\n\n      this.off = function (type, listener) {\n        var index;\n        if (!listeners[type]) {\n          return false;\n        }\n        index = listeners[type].indexOf(listener);\n        listeners[type] = listeners[type].slice();\n        listeners[type].splice(index, 1);\n        return index > -1;\n      };\n      /**\n       * Trigger an event of the specified type on this stream. Any additional\n       * arguments to this function are passed as parameters to event listeners.\n       * @param type {string} the event name\n       */\n\n      this.trigger = function (type) {\n        var callbacks, i, length, args;\n        callbacks = listeners[type];\n        if (!callbacks) {\n          return;\n        } // Slicing the arguments on every invocation of this method\n        // can add a significant amount of overhead. Avoid the\n        // intermediate object creation for the common case of a\n        // single callback argument\n\n        if (arguments.length === 2) {\n          length = callbacks.length;\n          for (i = 0; i < length; ++i) {\n            callbacks[i].call(this, arguments[1]);\n          }\n        } else {\n          args = [];\n          i = arguments.length;\n          for (i = 1; i < arguments.length; ++i) {\n            args.push(arguments[i]);\n          }\n          length = callbacks.length;\n          for (i = 0; i < length; ++i) {\n            callbacks[i].apply(this, args);\n          }\n        }\n      };\n      /**\n       * Destroys the stream and cleans up.\n       */\n\n      this.dispose = function () {\n        listeners = {};\n      };\n    };\n  };\n  /**\n   * Forwards all `data` events on this stream to the destination stream. The\n   * destination stream should provide a method `push` to receive the data\n   * events as they arrive.\n   * @param destination {stream} the stream that will receive all `data` events\n   * @param autoFlush {boolean} if false, we will not call `flush` on the destination\n   *                            when the current stream emits a 'done' event\n   * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n   */\n\n  Stream$8.prototype.pipe = function (destination) {\n    this.on('data', function (data) {\n      destination.push(data);\n    });\n    this.on('done', function (flushSource) {\n      destination.flush(flushSource);\n    });\n    this.on('partialdone', function (flushSource) {\n      destination.partialFlush(flushSource);\n    });\n    this.on('endedtimeline', function (flushSource) {\n      destination.endTimeline(flushSource);\n    });\n    this.on('reset', function (flushSource) {\n      destination.reset(flushSource);\n    });\n    return destination;\n  }; // Default stream functions that are expected to be overridden to perform\n  // actual work. These are provided by the prototype as a sort of no-op\n  // implementation so that we don't have to check for their existence in the\n  // `pipe` function above.\n\n  Stream$8.prototype.push = function (data) {\n    this.trigger('data', data);\n  };\n  Stream$8.prototype.flush = function (flushSource) {\n    this.trigger('done', flushSource);\n  };\n  Stream$8.prototype.partialFlush = function (flushSource) {\n    this.trigger('partialdone', flushSource);\n  };\n  Stream$8.prototype.endTimeline = function (flushSource) {\n    this.trigger('endedtimeline', flushSource);\n  };\n  Stream$8.prototype.reset = function (flushSource) {\n    this.trigger('reset', flushSource);\n  };\n  var stream = Stream$8;\n  var MAX_UINT32$1 = Math.pow(2, 32);\n  var getUint64$3 = function (uint8) {\n    var dv = new DataView(uint8.buffer, uint8.byteOffset, uint8.byteLength);\n    var value;\n    if (dv.getBigUint64) {\n      value = dv.getBigUint64(0);\n      if (value < Number.MAX_SAFE_INTEGER) {\n        return Number(value);\n      }\n      return value;\n    }\n    return dv.getUint32(0) * MAX_UINT32$1 + dv.getUint32(4);\n  };\n  var numbers = {\n    getUint64: getUint64$3,\n    MAX_UINT32: MAX_UINT32$1\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * Functions that generate fragmented MP4s suitable for use with Media\n   * Source Extensions.\n   */\n\n  var MAX_UINT32 = numbers.MAX_UINT32;\n  var box, dinf, esds, ftyp, mdat, mfhd, minf, moof, moov, mvex, mvhd, trak, tkhd, mdia, mdhd, hdlr, sdtp, stbl, stsd, traf, trex, trun$1, types, MAJOR_BRAND, MINOR_VERSION, AVC1_BRAND, VIDEO_HDLR, AUDIO_HDLR, HDLR_TYPES, VMHD, SMHD, DREF, STCO, STSC, STSZ, STTS; // pre-calculate constants\n\n  (function () {\n    var i;\n    types = {\n      avc1: [],\n      // codingname\n      avcC: [],\n      btrt: [],\n      dinf: [],\n      dref: [],\n      esds: [],\n      ftyp: [],\n      hdlr: [],\n      mdat: [],\n      mdhd: [],\n      mdia: [],\n      mfhd: [],\n      minf: [],\n      moof: [],\n      moov: [],\n      mp4a: [],\n      // codingname\n      mvex: [],\n      mvhd: [],\n      pasp: [],\n      sdtp: [],\n      smhd: [],\n      stbl: [],\n      stco: [],\n      stsc: [],\n      stsd: [],\n      stsz: [],\n      stts: [],\n      styp: [],\n      tfdt: [],\n      tfhd: [],\n      traf: [],\n      trak: [],\n      trun: [],\n      trex: [],\n      tkhd: [],\n      vmhd: []\n    }; // In environments where Uint8Array is undefined (e.g., IE8), skip set up so that we\n    // don't throw an error\n\n    if (typeof Uint8Array === 'undefined') {\n      return;\n    }\n    for (i in types) {\n      if (types.hasOwnProperty(i)) {\n        types[i] = [i.charCodeAt(0), i.charCodeAt(1), i.charCodeAt(2), i.charCodeAt(3)];\n      }\n    }\n    MAJOR_BRAND = new Uint8Array(['i'.charCodeAt(0), 's'.charCodeAt(0), 'o'.charCodeAt(0), 'm'.charCodeAt(0)]);\n    AVC1_BRAND = new Uint8Array(['a'.charCodeAt(0), 'v'.charCodeAt(0), 'c'.charCodeAt(0), '1'.charCodeAt(0)]);\n    MINOR_VERSION = new Uint8Array([0, 0, 0, 1]);\n    VIDEO_HDLR = new Uint8Array([0x00,\n    // version 0\n    0x00, 0x00, 0x00,\n    // flags\n    0x00, 0x00, 0x00, 0x00,\n    // pre_defined\n    0x76, 0x69, 0x64, 0x65,\n    // handler_type: 'vide'\n    0x00, 0x00, 0x00, 0x00,\n    // reserved\n    0x00, 0x00, 0x00, 0x00,\n    // reserved\n    0x00, 0x00, 0x00, 0x00,\n    // reserved\n    0x56, 0x69, 0x64, 0x65, 0x6f, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'VideoHandler'\n    ]);\n\n    AUDIO_HDLR = new Uint8Array([0x00,\n    // version 0\n    0x00, 0x00, 0x00,\n    // flags\n    0x00, 0x00, 0x00, 0x00,\n    // pre_defined\n    0x73, 0x6f, 0x75, 0x6e,\n    // handler_type: 'soun'\n    0x00, 0x00, 0x00, 0x00,\n    // reserved\n    0x00, 0x00, 0x00, 0x00,\n    // reserved\n    0x00, 0x00, 0x00, 0x00,\n    // reserved\n    0x53, 0x6f, 0x75, 0x6e, 0x64, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'SoundHandler'\n    ]);\n\n    HDLR_TYPES = {\n      video: VIDEO_HDLR,\n      audio: AUDIO_HDLR\n    };\n    DREF = new Uint8Array([0x00,\n    // version 0\n    0x00, 0x00, 0x00,\n    // flags\n    0x00, 0x00, 0x00, 0x01,\n    // entry_count\n    0x00, 0x00, 0x00, 0x0c,\n    // entry_size\n    0x75, 0x72, 0x6c, 0x20,\n    // 'url' type\n    0x00,\n    // version 0\n    0x00, 0x00, 0x01 // entry_flags\n    ]);\n\n    SMHD = new Uint8Array([0x00,\n    // version\n    0x00, 0x00, 0x00,\n    // flags\n    0x00, 0x00,\n    // balance, 0 means centered\n    0x00, 0x00 // reserved\n    ]);\n\n    STCO = new Uint8Array([0x00,\n    // version\n    0x00, 0x00, 0x00,\n    // flags\n    0x00, 0x00, 0x00, 0x00 // entry_count\n    ]);\n\n    STSC = STCO;\n    STSZ = new Uint8Array([0x00,\n    // version\n    0x00, 0x00, 0x00,\n    // flags\n    0x00, 0x00, 0x00, 0x00,\n    // sample_size\n    0x00, 0x00, 0x00, 0x00 // sample_count\n    ]);\n\n    STTS = STCO;\n    VMHD = new Uint8Array([0x00,\n    // version\n    0x00, 0x00, 0x01,\n    // flags\n    0x00, 0x00,\n    // graphicsmode\n    0x00, 0x00, 0x00, 0x00, 0x00, 0x00 // opcolor\n    ]);\n  })();\n\n  box = function (type) {\n    var payload = [],\n      size = 0,\n      i,\n      result,\n      view;\n    for (i = 1; i < arguments.length; i++) {\n      payload.push(arguments[i]);\n    }\n    i = payload.length; // calculate the total size we need to allocate\n\n    while (i--) {\n      size += payload[i].byteLength;\n    }\n    result = new Uint8Array(size + 8);\n    view = new DataView(result.buffer, result.byteOffset, result.byteLength);\n    view.setUint32(0, result.byteLength);\n    result.set(type, 4); // copy the payload into the result\n\n    for (i = 0, size = 8; i < payload.length; i++) {\n      result.set(payload[i], size);\n      size += payload[i].byteLength;\n    }\n    return result;\n  };\n  dinf = function () {\n    return box(types.dinf, box(types.dref, DREF));\n  };\n  esds = function (track) {\n    return box(types.esds, new Uint8Array([0x00,\n    // version\n    0x00, 0x00, 0x00,\n    // flags\n    // ES_Descriptor\n    0x03,\n    // tag, ES_DescrTag\n    0x19,\n    // length\n    0x00, 0x00,\n    // ES_ID\n    0x00,\n    // streamDependenceFlag, URL_flag, reserved, streamPriority\n    // DecoderConfigDescriptor\n    0x04,\n    // tag, DecoderConfigDescrTag\n    0x11,\n    // length\n    0x40,\n    // object type\n    0x15,\n    // streamType\n    0x00, 0x06, 0x00,\n    // bufferSizeDB\n    0x00, 0x00, 0xda, 0xc0,\n    // maxBitrate\n    0x00, 0x00, 0xda, 0xc0,\n    // avgBitrate\n    // DecoderSpecificInfo\n    0x05,\n    // tag, DecoderSpecificInfoTag\n    0x02,\n    // length\n    // ISO/IEC 14496-3, AudioSpecificConfig\n    // for samplingFrequencyIndex see ISO/IEC 13818-7:2006, 8.1.3.2.2, Table 35\n    track.audioobjecttype << 3 | track.samplingfrequencyindex >>> 1, track.samplingfrequencyindex << 7 | track.channelcount << 3, 0x06, 0x01, 0x02 // GASpecificConfig\n    ]));\n  };\n\n  ftyp = function () {\n    return box(types.ftyp, MAJOR_BRAND, MINOR_VERSION, MAJOR_BRAND, AVC1_BRAND);\n  };\n  hdlr = function (type) {\n    return box(types.hdlr, HDLR_TYPES[type]);\n  };\n  mdat = function (data) {\n    return box(types.mdat, data);\n  };\n  mdhd = function (track) {\n    var result = new Uint8Array([0x00,\n    // version 0\n    0x00, 0x00, 0x00,\n    // flags\n    0x00, 0x00, 0x00, 0x02,\n    // creation_time\n    0x00, 0x00, 0x00, 0x03,\n    // modification_time\n    0x00, 0x01, 0x5f, 0x90,\n    // timescale, 90,000 \"ticks\" per second\n    track.duration >>> 24 & 0xFF, track.duration >>> 16 & 0xFF, track.duration >>> 8 & 0xFF, track.duration & 0xFF,\n    // duration\n    0x55, 0xc4,\n    // 'und' language (undetermined)\n    0x00, 0x00]); // Use the sample rate from the track metadata, when it is\n    // defined. The sample rate can be parsed out of an ADTS header, for\n    // instance.\n\n    if (track.samplerate) {\n      result[12] = track.samplerate >>> 24 & 0xFF;\n      result[13] = track.samplerate >>> 16 & 0xFF;\n      result[14] = track.samplerate >>> 8 & 0xFF;\n      result[15] = track.samplerate & 0xFF;\n    }\n    return box(types.mdhd, result);\n  };\n  mdia = function (track) {\n    return box(types.mdia, mdhd(track), hdlr(track.type), minf(track));\n  };\n  mfhd = function (sequenceNumber) {\n    return box(types.mfhd, new Uint8Array([0x00, 0x00, 0x00, 0x00,\n    // flags\n    (sequenceNumber & 0xFF000000) >> 24, (sequenceNumber & 0xFF0000) >> 16, (sequenceNumber & 0xFF00) >> 8, sequenceNumber & 0xFF // sequence_number\n    ]));\n  };\n\n  minf = function (track) {\n    return box(types.minf, track.type === 'video' ? box(types.vmhd, VMHD) : box(types.smhd, SMHD), dinf(), stbl(track));\n  };\n  moof = function (sequenceNumber, tracks) {\n    var trackFragments = [],\n      i = tracks.length; // build traf boxes for each track fragment\n\n    while (i--) {\n      trackFragments[i] = traf(tracks[i]);\n    }\n    return box.apply(null, [types.moof, mfhd(sequenceNumber)].concat(trackFragments));\n  };\n  /**\n   * Returns a movie box.\n   * @param tracks {array} the tracks associated with this movie\n   * @see ISO/IEC 14496-12:2012(E), section 8.2.1\n   */\n\n  moov = function (tracks) {\n    var i = tracks.length,\n      boxes = [];\n    while (i--) {\n      boxes[i] = trak(tracks[i]);\n    }\n    return box.apply(null, [types.moov, mvhd(0xffffffff)].concat(boxes).concat(mvex(tracks)));\n  };\n  mvex = function (tracks) {\n    var i = tracks.length,\n      boxes = [];\n    while (i--) {\n      boxes[i] = trex(tracks[i]);\n    }\n    return box.apply(null, [types.mvex].concat(boxes));\n  };\n  mvhd = function (duration) {\n    var bytes = new Uint8Array([0x00,\n    // version 0\n    0x00, 0x00, 0x00,\n    // flags\n    0x00, 0x00, 0x00, 0x01,\n    // creation_time\n    0x00, 0x00, 0x00, 0x02,\n    // modification_time\n    0x00, 0x01, 0x5f, 0x90,\n    // timescale, 90,000 \"ticks\" per second\n    (duration & 0xFF000000) >> 24, (duration & 0xFF0000) >> 16, (duration & 0xFF00) >> 8, duration & 0xFF,\n    // duration\n    0x00, 0x01, 0x00, 0x00,\n    // 1.0 rate\n    0x01, 0x00,\n    // 1.0 volume\n    0x00, 0x00,\n    // reserved\n    0x00, 0x00, 0x00, 0x00,\n    // reserved\n    0x00, 0x00, 0x00, 0x00,\n    // reserved\n    0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00,\n    // transformation: unity matrix\n    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n    // pre_defined\n    0xff, 0xff, 0xff, 0xff // next_track_ID\n    ]);\n\n    return box(types.mvhd, bytes);\n  };\n  sdtp = function (track) {\n    var samples = track.samples || [],\n      bytes = new Uint8Array(4 + samples.length),\n      flags,\n      i; // leave the full box header (4 bytes) all zero\n    // write the sample table\n\n    for (i = 0; i < samples.length; i++) {\n      flags = samples[i].flags;\n      bytes[i + 4] = flags.dependsOn << 4 | flags.isDependedOn << 2 | flags.hasRedundancy;\n    }\n    return box(types.sdtp, bytes);\n  };\n  stbl = function (track) {\n    return box(types.stbl, stsd(track), box(types.stts, STTS), box(types.stsc, STSC), box(types.stsz, STSZ), box(types.stco, STCO));\n  };\n  (function () {\n    var videoSample, audioSample;\n    stsd = function (track) {\n      return box(types.stsd, new Uint8Array([0x00,\n      // version 0\n      0x00, 0x00, 0x00,\n      // flags\n      0x00, 0x00, 0x00, 0x01]), track.type === 'video' ? videoSample(track) : audioSample(track));\n    };\n    videoSample = function (track) {\n      var sps = track.sps || [],\n        pps = track.pps || [],\n        sequenceParameterSets = [],\n        pictureParameterSets = [],\n        i,\n        avc1Box; // assemble the SPSs\n\n      for (i = 0; i < sps.length; i++) {\n        sequenceParameterSets.push((sps[i].byteLength & 0xFF00) >>> 8);\n        sequenceParameterSets.push(sps[i].byteLength & 0xFF); // sequenceParameterSetLength\n\n        sequenceParameterSets = sequenceParameterSets.concat(Array.prototype.slice.call(sps[i])); // SPS\n      } // assemble the PPSs\n\n      for (i = 0; i < pps.length; i++) {\n        pictureParameterSets.push((pps[i].byteLength & 0xFF00) >>> 8);\n        pictureParameterSets.push(pps[i].byteLength & 0xFF);\n        pictureParameterSets = pictureParameterSets.concat(Array.prototype.slice.call(pps[i]));\n      }\n      avc1Box = [types.avc1, new Uint8Array([0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n      // reserved\n      0x00, 0x01,\n      // data_reference_index\n      0x00, 0x00,\n      // pre_defined\n      0x00, 0x00,\n      // reserved\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n      // pre_defined\n      (track.width & 0xff00) >> 8, track.width & 0xff,\n      // width\n      (track.height & 0xff00) >> 8, track.height & 0xff,\n      // height\n      0x00, 0x48, 0x00, 0x00,\n      // horizresolution\n      0x00, 0x48, 0x00, 0x00,\n      // vertresolution\n      0x00, 0x00, 0x00, 0x00,\n      // reserved\n      0x00, 0x01,\n      // frame_count\n      0x13, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x6a, 0x73, 0x2d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x2d, 0x68, 0x6c, 0x73, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n      // compressorname\n      0x00, 0x18,\n      // depth = 24\n      0x11, 0x11 // pre_defined = -1\n      ]), box(types.avcC, new Uint8Array([0x01,\n      // configurationVersion\n      track.profileIdc,\n      // AVCProfileIndication\n      track.profileCompatibility,\n      // profile_compatibility\n      track.levelIdc,\n      // AVCLevelIndication\n      0xff // lengthSizeMinusOne, hard-coded to 4 bytes\n      ].concat([sps.length],\n      // numOfSequenceParameterSets\n      sequenceParameterSets,\n      // \"SPS\"\n      [pps.length],\n      // numOfPictureParameterSets\n      pictureParameterSets // \"PPS\"\n      ))), box(types.btrt, new Uint8Array([0x00, 0x1c, 0x9c, 0x80,\n      // bufferSizeDB\n      0x00, 0x2d, 0xc6, 0xc0,\n      // maxBitrate\n      0x00, 0x2d, 0xc6, 0xc0 // avgBitrate\n      ]))];\n\n      if (track.sarRatio) {\n        var hSpacing = track.sarRatio[0],\n          vSpacing = track.sarRatio[1];\n        avc1Box.push(box(types.pasp, new Uint8Array([(hSpacing & 0xFF000000) >> 24, (hSpacing & 0xFF0000) >> 16, (hSpacing & 0xFF00) >> 8, hSpacing & 0xFF, (vSpacing & 0xFF000000) >> 24, (vSpacing & 0xFF0000) >> 16, (vSpacing & 0xFF00) >> 8, vSpacing & 0xFF])));\n      }\n      return box.apply(null, avc1Box);\n    };\n    audioSample = function (track) {\n      return box(types.mp4a, new Uint8Array([\n      // SampleEntry, ISO/IEC 14496-12\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n      // reserved\n      0x00, 0x01,\n      // data_reference_index\n      // AudioSampleEntry, ISO/IEC 14496-12\n      0x00, 0x00, 0x00, 0x00,\n      // reserved\n      0x00, 0x00, 0x00, 0x00,\n      // reserved\n      (track.channelcount & 0xff00) >> 8, track.channelcount & 0xff,\n      // channelcount\n      (track.samplesize & 0xff00) >> 8, track.samplesize & 0xff,\n      // samplesize\n      0x00, 0x00,\n      // pre_defined\n      0x00, 0x00,\n      // reserved\n      (track.samplerate & 0xff00) >> 8, track.samplerate & 0xff, 0x00, 0x00 // samplerate, 16.16\n      // MP4AudioSampleEntry, ISO/IEC 14496-14\n      ]), esds(track));\n    };\n  })();\n  tkhd = function (track) {\n    var result = new Uint8Array([0x00,\n    // version 0\n    0x00, 0x00, 0x07,\n    // flags\n    0x00, 0x00, 0x00, 0x00,\n    // creation_time\n    0x00, 0x00, 0x00, 0x00,\n    // modification_time\n    (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF,\n    // track_ID\n    0x00, 0x00, 0x00, 0x00,\n    // reserved\n    (track.duration & 0xFF000000) >> 24, (track.duration & 0xFF0000) >> 16, (track.duration & 0xFF00) >> 8, track.duration & 0xFF,\n    // duration\n    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n    // reserved\n    0x00, 0x00,\n    // layer\n    0x00, 0x00,\n    // alternate_group\n    0x01, 0x00,\n    // non-audio track volume\n    0x00, 0x00,\n    // reserved\n    0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00,\n    // transformation: unity matrix\n    (track.width & 0xFF00) >> 8, track.width & 0xFF, 0x00, 0x00,\n    // width\n    (track.height & 0xFF00) >> 8, track.height & 0xFF, 0x00, 0x00 // height\n    ]);\n\n    return box(types.tkhd, result);\n  };\n  /**\n   * Generate a track fragment (traf) box. A traf box collects metadata\n   * about tracks in a movie fragment (moof) box.\n   */\n\n  traf = function (track) {\n    var trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun, sampleDependencyTable, dataOffset, upperWordBaseMediaDecodeTime, lowerWordBaseMediaDecodeTime;\n    trackFragmentHeader = box(types.tfhd, new Uint8Array([0x00,\n    // version 0\n    0x00, 0x00, 0x3a,\n    // flags\n    (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF,\n    // track_ID\n    0x00, 0x00, 0x00, 0x01,\n    // sample_description_index\n    0x00, 0x00, 0x00, 0x00,\n    // default_sample_duration\n    0x00, 0x00, 0x00, 0x00,\n    // default_sample_size\n    0x00, 0x00, 0x00, 0x00 // default_sample_flags\n    ]));\n\n    upperWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime / MAX_UINT32);\n    lowerWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime % MAX_UINT32);\n    trackFragmentDecodeTime = box(types.tfdt, new Uint8Array([0x01,\n    // version 1\n    0x00, 0x00, 0x00,\n    // flags\n    // baseMediaDecodeTime\n    upperWordBaseMediaDecodeTime >>> 24 & 0xFF, upperWordBaseMediaDecodeTime >>> 16 & 0xFF, upperWordBaseMediaDecodeTime >>> 8 & 0xFF, upperWordBaseMediaDecodeTime & 0xFF, lowerWordBaseMediaDecodeTime >>> 24 & 0xFF, lowerWordBaseMediaDecodeTime >>> 16 & 0xFF, lowerWordBaseMediaDecodeTime >>> 8 & 0xFF, lowerWordBaseMediaDecodeTime & 0xFF])); // the data offset specifies the number of bytes from the start of\n    // the containing moof to the first payload byte of the associated\n    // mdat\n\n    dataOffset = 32 +\n    // tfhd\n    20 +\n    // tfdt\n    8 +\n    // traf header\n    16 +\n    // mfhd\n    8 +\n    // moof header\n    8; // mdat header\n    // audio tracks require less metadata\n\n    if (track.type === 'audio') {\n      trackFragmentRun = trun$1(track, dataOffset);\n      return box(types.traf, trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun);\n    } // video tracks should contain an independent and disposable samples\n    // box (sdtp)\n    // generate one and adjust offsets to match\n\n    sampleDependencyTable = sdtp(track);\n    trackFragmentRun = trun$1(track, sampleDependencyTable.length + dataOffset);\n    return box(types.traf, trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun, sampleDependencyTable);\n  };\n  /**\n   * Generate a track box.\n   * @param track {object} a track definition\n   * @return {Uint8Array} the track box\n   */\n\n  trak = function (track) {\n    track.duration = track.duration || 0xffffffff;\n    return box(types.trak, tkhd(track), mdia(track));\n  };\n  trex = function (track) {\n    var result = new Uint8Array([0x00,\n    // version 0\n    0x00, 0x00, 0x00,\n    // flags\n    (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF,\n    // track_ID\n    0x00, 0x00, 0x00, 0x01,\n    // default_sample_description_index\n    0x00, 0x00, 0x00, 0x00,\n    // default_sample_duration\n    0x00, 0x00, 0x00, 0x00,\n    // default_sample_size\n    0x00, 0x01, 0x00, 0x01 // default_sample_flags\n    ]); // the last two bytes of default_sample_flags is the sample\n    // degradation priority, a hint about the importance of this sample\n    // relative to others. Lower the degradation priority for all sample\n    // types other than video.\n\n    if (track.type !== 'video') {\n      result[result.length - 1] = 0x00;\n    }\n    return box(types.trex, result);\n  };\n  (function () {\n    var audioTrun, videoTrun, trunHeader; // This method assumes all samples are uniform. That is, if a\n    // duration is present for the first sample, it will be present for\n    // all subsequent samples.\n    // see ISO/IEC 14496-12:2012, Section 8.8.8.1\n\n    trunHeader = function (samples, offset) {\n      var durationPresent = 0,\n        sizePresent = 0,\n        flagsPresent = 0,\n        compositionTimeOffset = 0; // trun flag constants\n\n      if (samples.length) {\n        if (samples[0].duration !== undefined) {\n          durationPresent = 0x1;\n        }\n        if (samples[0].size !== undefined) {\n          sizePresent = 0x2;\n        }\n        if (samples[0].flags !== undefined) {\n          flagsPresent = 0x4;\n        }\n        if (samples[0].compositionTimeOffset !== undefined) {\n          compositionTimeOffset = 0x8;\n        }\n      }\n      return [0x00,\n      // version 0\n      0x00, durationPresent | sizePresent | flagsPresent | compositionTimeOffset, 0x01,\n      // flags\n      (samples.length & 0xFF000000) >>> 24, (samples.length & 0xFF0000) >>> 16, (samples.length & 0xFF00) >>> 8, samples.length & 0xFF,\n      // sample_count\n      (offset & 0xFF000000) >>> 24, (offset & 0xFF0000) >>> 16, (offset & 0xFF00) >>> 8, offset & 0xFF // data_offset\n      ];\n    };\n\n    videoTrun = function (track, offset) {\n      var bytesOffest, bytes, header, samples, sample, i;\n      samples = track.samples || [];\n      offset += 8 + 12 + 16 * samples.length;\n      header = trunHeader(samples, offset);\n      bytes = new Uint8Array(header.length + samples.length * 16);\n      bytes.set(header);\n      bytesOffest = header.length;\n      for (i = 0; i < samples.length; i++) {\n        sample = samples[i];\n        bytes[bytesOffest++] = (sample.duration & 0xFF000000) >>> 24;\n        bytes[bytesOffest++] = (sample.duration & 0xFF0000) >>> 16;\n        bytes[bytesOffest++] = (sample.duration & 0xFF00) >>> 8;\n        bytes[bytesOffest++] = sample.duration & 0xFF; // sample_duration\n\n        bytes[bytesOffest++] = (sample.size & 0xFF000000) >>> 24;\n        bytes[bytesOffest++] = (sample.size & 0xFF0000) >>> 16;\n        bytes[bytesOffest++] = (sample.size & 0xFF00) >>> 8;\n        bytes[bytesOffest++] = sample.size & 0xFF; // sample_size\n\n        bytes[bytesOffest++] = sample.flags.isLeading << 2 | sample.flags.dependsOn;\n        bytes[bytesOffest++] = sample.flags.isDependedOn << 6 | sample.flags.hasRedundancy << 4 | sample.flags.paddingValue << 1 | sample.flags.isNonSyncSample;\n        bytes[bytesOffest++] = sample.flags.degradationPriority & 0xF0 << 8;\n        bytes[bytesOffest++] = sample.flags.degradationPriority & 0x0F; // sample_flags\n\n        bytes[bytesOffest++] = (sample.compositionTimeOffset & 0xFF000000) >>> 24;\n        bytes[bytesOffest++] = (sample.compositionTimeOffset & 0xFF0000) >>> 16;\n        bytes[bytesOffest++] = (sample.compositionTimeOffset & 0xFF00) >>> 8;\n        bytes[bytesOffest++] = sample.compositionTimeOffset & 0xFF; // sample_composition_time_offset\n      }\n\n      return box(types.trun, bytes);\n    };\n    audioTrun = function (track, offset) {\n      var bytes, bytesOffest, header, samples, sample, i;\n      samples = track.samples || [];\n      offset += 8 + 12 + 8 * samples.length;\n      header = trunHeader(samples, offset);\n      bytes = new Uint8Array(header.length + samples.length * 8);\n      bytes.set(header);\n      bytesOffest = header.length;\n      for (i = 0; i < samples.length; i++) {\n        sample = samples[i];\n        bytes[bytesOffest++] = (sample.duration & 0xFF000000) >>> 24;\n        bytes[bytesOffest++] = (sample.duration & 0xFF0000) >>> 16;\n        bytes[bytesOffest++] = (sample.duration & 0xFF00) >>> 8;\n        bytes[bytesOffest++] = sample.duration & 0xFF; // sample_duration\n\n        bytes[bytesOffest++] = (sample.size & 0xFF000000) >>> 24;\n        bytes[bytesOffest++] = (sample.size & 0xFF0000) >>> 16;\n        bytes[bytesOffest++] = (sample.size & 0xFF00) >>> 8;\n        bytes[bytesOffest++] = sample.size & 0xFF; // sample_size\n      }\n\n      return box(types.trun, bytes);\n    };\n    trun$1 = function (track, offset) {\n      if (track.type === 'audio') {\n        return audioTrun(track, offset);\n      }\n      return videoTrun(track, offset);\n    };\n  })();\n  var mp4Generator = {\n    ftyp: ftyp,\n    mdat: mdat,\n    moof: moof,\n    moov: moov,\n    initSegment: function (tracks) {\n      var fileType = ftyp(),\n        movie = moov(tracks),\n        result;\n      result = new Uint8Array(fileType.byteLength + movie.byteLength);\n      result.set(fileType);\n      result.set(movie, fileType.byteLength);\n      return result;\n    }\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n  // composed of the nal units that make up that frame\n  // Also keep track of cummulative data about the frame from the nal units such\n  // as the frame duration, starting pts, etc.\n\n  var groupNalsIntoFrames = function (nalUnits) {\n    var i,\n      currentNal,\n      currentFrame = [],\n      frames = []; // TODO added for LHLS, make sure this is OK\n\n    frames.byteLength = 0;\n    frames.nalCount = 0;\n    frames.duration = 0;\n    currentFrame.byteLength = 0;\n    for (i = 0; i < nalUnits.length; i++) {\n      currentNal = nalUnits[i]; // Split on 'aud'-type nal units\n\n      if (currentNal.nalUnitType === 'access_unit_delimiter_rbsp') {\n        // Since the very first nal unit is expected to be an AUD\n        // only push to the frames array when currentFrame is not empty\n        if (currentFrame.length) {\n          currentFrame.duration = currentNal.dts - currentFrame.dts; // TODO added for LHLS, make sure this is OK\n\n          frames.byteLength += currentFrame.byteLength;\n          frames.nalCount += currentFrame.length;\n          frames.duration += currentFrame.duration;\n          frames.push(currentFrame);\n        }\n        currentFrame = [currentNal];\n        currentFrame.byteLength = currentNal.data.byteLength;\n        currentFrame.pts = currentNal.pts;\n        currentFrame.dts = currentNal.dts;\n      } else {\n        // Specifically flag key frames for ease of use later\n        if (currentNal.nalUnitType === 'slice_layer_without_partitioning_rbsp_idr') {\n          currentFrame.keyFrame = true;\n        }\n        currentFrame.duration = currentNal.dts - currentFrame.dts;\n        currentFrame.byteLength += currentNal.data.byteLength;\n        currentFrame.push(currentNal);\n      }\n    } // For the last frame, use the duration of the previous frame if we\n    // have nothing better to go on\n\n    if (frames.length && (!currentFrame.duration || currentFrame.duration <= 0)) {\n      currentFrame.duration = frames[frames.length - 1].duration;\n    } // Push the final frame\n    // TODO added for LHLS, make sure this is OK\n\n    frames.byteLength += currentFrame.byteLength;\n    frames.nalCount += currentFrame.length;\n    frames.duration += currentFrame.duration;\n    frames.push(currentFrame);\n    return frames;\n  }; // Convert an array of frames into an array of Gop with each Gop being composed\n  // of the frames that make up that Gop\n  // Also keep track of cummulative data about the Gop from the frames such as the\n  // Gop duration, starting pts, etc.\n\n  var groupFramesIntoGops = function (frames) {\n    var i,\n      currentFrame,\n      currentGop = [],\n      gops = []; // We must pre-set some of the values on the Gop since we\n    // keep running totals of these values\n\n    currentGop.byteLength = 0;\n    currentGop.nalCount = 0;\n    currentGop.duration = 0;\n    currentGop.pts = frames[0].pts;\n    currentGop.dts = frames[0].dts; // store some metadata about all the Gops\n\n    gops.byteLength = 0;\n    gops.nalCount = 0;\n    gops.duration = 0;\n    gops.pts = frames[0].pts;\n    gops.dts = frames[0].dts;\n    for (i = 0; i < frames.length; i++) {\n      currentFrame = frames[i];\n      if (currentFrame.keyFrame) {\n        // Since the very first frame is expected to be an keyframe\n        // only push to the gops array when currentGop is not empty\n        if (currentGop.length) {\n          gops.push(currentGop);\n          gops.byteLength += currentGop.byteLength;\n          gops.nalCount += currentGop.nalCount;\n          gops.duration += currentGop.duration;\n        }\n        currentGop = [currentFrame];\n        currentGop.nalCount = currentFrame.length;\n        currentGop.byteLength = currentFrame.byteLength;\n        currentGop.pts = currentFrame.pts;\n        currentGop.dts = currentFrame.dts;\n        currentGop.duration = currentFrame.duration;\n      } else {\n        currentGop.duration += currentFrame.duration;\n        currentGop.nalCount += currentFrame.length;\n        currentGop.byteLength += currentFrame.byteLength;\n        currentGop.push(currentFrame);\n      }\n    }\n    if (gops.length && currentGop.duration <= 0) {\n      currentGop.duration = gops[gops.length - 1].duration;\n    }\n    gops.byteLength += currentGop.byteLength;\n    gops.nalCount += currentGop.nalCount;\n    gops.duration += currentGop.duration; // push the final Gop\n\n    gops.push(currentGop);\n    return gops;\n  };\n  /*\n   * Search for the first keyframe in the GOPs and throw away all frames\n   * until that keyframe. Then extend the duration of the pulled keyframe\n   * and pull the PTS and DTS of the keyframe so that it covers the time\n   * range of the frames that were disposed.\n   *\n   * @param {Array} gops video GOPs\n   * @returns {Array} modified video GOPs\n   */\n\n  var extendFirstKeyFrame = function (gops) {\n    var currentGop;\n    if (!gops[0][0].keyFrame && gops.length > 1) {\n      // Remove the first GOP\n      currentGop = gops.shift();\n      gops.byteLength -= currentGop.byteLength;\n      gops.nalCount -= currentGop.nalCount; // Extend the first frame of what is now the\n      // first gop to cover the time period of the\n      // frames we just removed\n\n      gops[0][0].dts = currentGop.dts;\n      gops[0][0].pts = currentGop.pts;\n      gops[0][0].duration += currentGop.duration;\n    }\n    return gops;\n  };\n  /**\n   * Default sample object\n   * see ISO/IEC 14496-12:2012, section 8.6.4.3\n   */\n\n  var createDefaultSample = function () {\n    return {\n      size: 0,\n      flags: {\n        isLeading: 0,\n        dependsOn: 1,\n        isDependedOn: 0,\n        hasRedundancy: 0,\n        degradationPriority: 0,\n        isNonSyncSample: 1\n      }\n    };\n  };\n  /*\n   * Collates information from a video frame into an object for eventual\n   * entry into an MP4 sample table.\n   *\n   * @param {Object} frame the video frame\n   * @param {Number} dataOffset the byte offset to position the sample\n   * @return {Object} object containing sample table info for a frame\n   */\n\n  var sampleForFrame = function (frame, dataOffset) {\n    var sample = createDefaultSample();\n    sample.dataOffset = dataOffset;\n    sample.compositionTimeOffset = frame.pts - frame.dts;\n    sample.duration = frame.duration;\n    sample.size = 4 * frame.length; // Space for nal unit size\n\n    sample.size += frame.byteLength;\n    if (frame.keyFrame) {\n      sample.flags.dependsOn = 2;\n      sample.flags.isNonSyncSample = 0;\n    }\n    return sample;\n  }; // generate the track's sample table from an array of gops\n\n  var generateSampleTable$1 = function (gops, baseDataOffset) {\n    var h,\n      i,\n      sample,\n      currentGop,\n      currentFrame,\n      dataOffset = baseDataOffset || 0,\n      samples = [];\n    for (h = 0; h < gops.length; h++) {\n      currentGop = gops[h];\n      for (i = 0; i < currentGop.length; i++) {\n        currentFrame = currentGop[i];\n        sample = sampleForFrame(currentFrame, dataOffset);\n        dataOffset += sample.size;\n        samples.push(sample);\n      }\n    }\n    return samples;\n  }; // generate the track's raw mdat data from an array of gops\n\n  var concatenateNalData = function (gops) {\n    var h,\n      i,\n      j,\n      currentGop,\n      currentFrame,\n      currentNal,\n      dataOffset = 0,\n      nalsByteLength = gops.byteLength,\n      numberOfNals = gops.nalCount,\n      totalByteLength = nalsByteLength + 4 * numberOfNals,\n      data = new Uint8Array(totalByteLength),\n      view = new DataView(data.buffer); // For each Gop..\n\n    for (h = 0; h < gops.length; h++) {\n      currentGop = gops[h]; // For each Frame..\n\n      for (i = 0; i < currentGop.length; i++) {\n        currentFrame = currentGop[i]; // For each NAL..\n\n        for (j = 0; j < currentFrame.length; j++) {\n          currentNal = currentFrame[j];\n          view.setUint32(dataOffset, currentNal.data.byteLength);\n          dataOffset += 4;\n          data.set(currentNal.data, dataOffset);\n          dataOffset += currentNal.data.byteLength;\n        }\n      }\n    }\n    return data;\n  }; // generate the track's sample table from a frame\n\n  var generateSampleTableForFrame = function (frame, baseDataOffset) {\n    var sample,\n      dataOffset = baseDataOffset || 0,\n      samples = [];\n    sample = sampleForFrame(frame, dataOffset);\n    samples.push(sample);\n    return samples;\n  }; // generate the track's raw mdat data from a frame\n\n  var concatenateNalDataForFrame = function (frame) {\n    var i,\n      currentNal,\n      dataOffset = 0,\n      nalsByteLength = frame.byteLength,\n      numberOfNals = frame.length,\n      totalByteLength = nalsByteLength + 4 * numberOfNals,\n      data = new Uint8Array(totalByteLength),\n      view = new DataView(data.buffer); // For each NAL..\n\n    for (i = 0; i < frame.length; i++) {\n      currentNal = frame[i];\n      view.setUint32(dataOffset, currentNal.data.byteLength);\n      dataOffset += 4;\n      data.set(currentNal.data, dataOffset);\n      dataOffset += currentNal.data.byteLength;\n    }\n    return data;\n  };\n  var frameUtils$1 = {\n    groupNalsIntoFrames: groupNalsIntoFrames,\n    groupFramesIntoGops: groupFramesIntoGops,\n    extendFirstKeyFrame: extendFirstKeyFrame,\n    generateSampleTable: generateSampleTable$1,\n    concatenateNalData: concatenateNalData,\n    generateSampleTableForFrame: generateSampleTableForFrame,\n    concatenateNalDataForFrame: concatenateNalDataForFrame\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n\n  var highPrefix = [33, 16, 5, 32, 164, 27];\n  var lowPrefix = [33, 65, 108, 84, 1, 2, 4, 8, 168, 2, 4, 8, 17, 191, 252];\n  var zeroFill = function (count) {\n    var a = [];\n    while (count--) {\n      a.push(0);\n    }\n    return a;\n  };\n  var makeTable = function (metaTable) {\n    return Object.keys(metaTable).reduce(function (obj, key) {\n      obj[key] = new Uint8Array(metaTable[key].reduce(function (arr, part) {\n        return arr.concat(part);\n      }, []));\n      return obj;\n    }, {});\n  };\n  var silence;\n  var silence_1 = function () {\n    if (!silence) {\n      // Frames-of-silence to use for filling in missing AAC frames\n      var coneOfSilence = {\n        96000: [highPrefix, [227, 64], zeroFill(154), [56]],\n        88200: [highPrefix, [231], zeroFill(170), [56]],\n        64000: [highPrefix, [248, 192], zeroFill(240), [56]],\n        48000: [highPrefix, [255, 192], zeroFill(268), [55, 148, 128], zeroFill(54), [112]],\n        44100: [highPrefix, [255, 192], zeroFill(268), [55, 163, 128], zeroFill(84), [112]],\n        32000: [highPrefix, [255, 192], zeroFill(268), [55, 234], zeroFill(226), [112]],\n        24000: [highPrefix, [255, 192], zeroFill(268), [55, 255, 128], zeroFill(268), [111, 112], zeroFill(126), [224]],\n        16000: [highPrefix, [255, 192], zeroFill(268), [55, 255, 128], zeroFill(268), [111, 255], zeroFill(269), [223, 108], zeroFill(195), [1, 192]],\n        12000: [lowPrefix, zeroFill(268), [3, 127, 248], zeroFill(268), [6, 255, 240], zeroFill(268), [13, 255, 224], zeroFill(268), [27, 253, 128], zeroFill(259), [56]],\n        11025: [lowPrefix, zeroFill(268), [3, 127, 248], zeroFill(268), [6, 255, 240], zeroFill(268), [13, 255, 224], zeroFill(268), [27, 255, 192], zeroFill(268), [55, 175, 128], zeroFill(108), [112]],\n        8000: [lowPrefix, zeroFill(268), [3, 121, 16], zeroFill(47), [7]]\n      };\n      silence = makeTable(coneOfSilence);\n    }\n    return silence;\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n\n  var ONE_SECOND_IN_TS$4 = 90000,\n    // 90kHz clock\n    secondsToVideoTs,\n    secondsToAudioTs,\n    videoTsToSeconds,\n    audioTsToSeconds,\n    audioTsToVideoTs,\n    videoTsToAudioTs,\n    metadataTsToSeconds;\n  secondsToVideoTs = function (seconds) {\n    return seconds * ONE_SECOND_IN_TS$4;\n  };\n  secondsToAudioTs = function (seconds, sampleRate) {\n    return seconds * sampleRate;\n  };\n  videoTsToSeconds = function (timestamp) {\n    return timestamp / ONE_SECOND_IN_TS$4;\n  };\n  audioTsToSeconds = function (timestamp, sampleRate) {\n    return timestamp / sampleRate;\n  };\n  audioTsToVideoTs = function (timestamp, sampleRate) {\n    return secondsToVideoTs(audioTsToSeconds(timestamp, sampleRate));\n  };\n  videoTsToAudioTs = function (timestamp, sampleRate) {\n    return secondsToAudioTs(videoTsToSeconds(timestamp), sampleRate);\n  };\n  /**\n   * Adjust ID3 tag or caption timing information by the timeline pts values\n   * (if keepOriginalTimestamps is false) and convert to seconds\n   */\n\n  metadataTsToSeconds = function (timestamp, timelineStartPts, keepOriginalTimestamps) {\n    return videoTsToSeconds(keepOriginalTimestamps ? timestamp : timestamp - timelineStartPts);\n  };\n  var clock$2 = {\n    ONE_SECOND_IN_TS: ONE_SECOND_IN_TS$4,\n    secondsToVideoTs: secondsToVideoTs,\n    secondsToAudioTs: secondsToAudioTs,\n    videoTsToSeconds: videoTsToSeconds,\n    audioTsToSeconds: audioTsToSeconds,\n    audioTsToVideoTs: audioTsToVideoTs,\n    videoTsToAudioTs: videoTsToAudioTs,\n    metadataTsToSeconds: metadataTsToSeconds\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n\n  var coneOfSilence = silence_1;\n  var clock$1 = clock$2;\n  /**\n   * Sum the `byteLength` properties of the data in each AAC frame\n   */\n\n  var sumFrameByteLengths = function (array) {\n    var i,\n      currentObj,\n      sum = 0; // sum the byteLength's all each nal unit in the frame\n\n    for (i = 0; i < array.length; i++) {\n      currentObj = array[i];\n      sum += currentObj.data.byteLength;\n    }\n    return sum;\n  }; // Possibly pad (prefix) the audio track with silence if appending this track\n  // would lead to the introduction of a gap in the audio buffer\n\n  var prefixWithSilence = function (track, frames, audioAppendStartTs, videoBaseMediaDecodeTime) {\n    var baseMediaDecodeTimeTs,\n      frameDuration = 0,\n      audioGapDuration = 0,\n      audioFillFrameCount = 0,\n      audioFillDuration = 0,\n      silentFrame,\n      i,\n      firstFrame;\n    if (!frames.length) {\n      return;\n    }\n    baseMediaDecodeTimeTs = clock$1.audioTsToVideoTs(track.baseMediaDecodeTime, track.samplerate); // determine frame clock duration based on sample rate, round up to avoid overfills\n\n    frameDuration = Math.ceil(clock$1.ONE_SECOND_IN_TS / (track.samplerate / 1024));\n    if (audioAppendStartTs && videoBaseMediaDecodeTime) {\n      // insert the shortest possible amount (audio gap or audio to video gap)\n      audioGapDuration = baseMediaDecodeTimeTs - Math.max(audioAppendStartTs, videoBaseMediaDecodeTime); // number of full frames in the audio gap\n\n      audioFillFrameCount = Math.floor(audioGapDuration / frameDuration);\n      audioFillDuration = audioFillFrameCount * frameDuration;\n    } // don't attempt to fill gaps smaller than a single frame or larger\n    // than a half second\n\n    if (audioFillFrameCount < 1 || audioFillDuration > clock$1.ONE_SECOND_IN_TS / 2) {\n      return;\n    }\n    silentFrame = coneOfSilence()[track.samplerate];\n    if (!silentFrame) {\n      // we don't have a silent frame pregenerated for the sample rate, so use a frame\n      // from the content instead\n      silentFrame = frames[0].data;\n    }\n    for (i = 0; i < audioFillFrameCount; i++) {\n      firstFrame = frames[0];\n      frames.splice(0, 0, {\n        data: silentFrame,\n        dts: firstFrame.dts - frameDuration,\n        pts: firstFrame.pts - frameDuration\n      });\n    }\n    track.baseMediaDecodeTime -= Math.floor(clock$1.videoTsToAudioTs(audioFillDuration, track.samplerate));\n    return audioFillDuration;\n  }; // If the audio segment extends before the earliest allowed dts\n  // value, remove AAC frames until starts at or after the earliest\n  // allowed DTS so that we don't end up with a negative baseMedia-\n  // DecodeTime for the audio track\n\n  var trimAdtsFramesByEarliestDts = function (adtsFrames, track, earliestAllowedDts) {\n    if (track.minSegmentDts >= earliestAllowedDts) {\n      return adtsFrames;\n    } // We will need to recalculate the earliest segment Dts\n\n    track.minSegmentDts = Infinity;\n    return adtsFrames.filter(function (currentFrame) {\n      // If this is an allowed frame, keep it and record it's Dts\n      if (currentFrame.dts >= earliestAllowedDts) {\n        track.minSegmentDts = Math.min(track.minSegmentDts, currentFrame.dts);\n        track.minSegmentPts = track.minSegmentDts;\n        return true;\n      } // Otherwise, discard it\n\n      return false;\n    });\n  }; // generate the track's raw mdat data from an array of frames\n\n  var generateSampleTable = function (frames) {\n    var i,\n      currentFrame,\n      samples = [];\n    for (i = 0; i < frames.length; i++) {\n      currentFrame = frames[i];\n      samples.push({\n        size: currentFrame.data.byteLength,\n        duration: 1024 // For AAC audio, all samples contain 1024 samples\n      });\n    }\n\n    return samples;\n  }; // generate the track's sample table from an array of frames\n\n  var concatenateFrameData = function (frames) {\n    var i,\n      currentFrame,\n      dataOffset = 0,\n      data = new Uint8Array(sumFrameByteLengths(frames));\n    for (i = 0; i < frames.length; i++) {\n      currentFrame = frames[i];\n      data.set(currentFrame.data, dataOffset);\n      dataOffset += currentFrame.data.byteLength;\n    }\n    return data;\n  };\n  var audioFrameUtils$1 = {\n    prefixWithSilence: prefixWithSilence,\n    trimAdtsFramesByEarliestDts: trimAdtsFramesByEarliestDts,\n    generateSampleTable: generateSampleTable,\n    concatenateFrameData: concatenateFrameData\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n\n  var ONE_SECOND_IN_TS$3 = clock$2.ONE_SECOND_IN_TS;\n  /**\n   * Store information about the start and end of the track and the\n   * duration for each frame/sample we process in order to calculate\n   * the baseMediaDecodeTime\n   */\n\n  var collectDtsInfo = function (track, data) {\n    if (typeof data.pts === 'number') {\n      if (track.timelineStartInfo.pts === undefined) {\n        track.timelineStartInfo.pts = data.pts;\n      }\n      if (track.minSegmentPts === undefined) {\n        track.minSegmentPts = data.pts;\n      } else {\n        track.minSegmentPts = Math.min(track.minSegmentPts, data.pts);\n      }\n      if (track.maxSegmentPts === undefined) {\n        track.maxSegmentPts = data.pts;\n      } else {\n        track.maxSegmentPts = Math.max(track.maxSegmentPts, data.pts);\n      }\n    }\n    if (typeof data.dts === 'number') {\n      if (track.timelineStartInfo.dts === undefined) {\n        track.timelineStartInfo.dts = data.dts;\n      }\n      if (track.minSegmentDts === undefined) {\n        track.minSegmentDts = data.dts;\n      } else {\n        track.minSegmentDts = Math.min(track.minSegmentDts, data.dts);\n      }\n      if (track.maxSegmentDts === undefined) {\n        track.maxSegmentDts = data.dts;\n      } else {\n        track.maxSegmentDts = Math.max(track.maxSegmentDts, data.dts);\n      }\n    }\n  };\n  /**\n   * Clear values used to calculate the baseMediaDecodeTime between\n   * tracks\n   */\n\n  var clearDtsInfo = function (track) {\n    delete track.minSegmentDts;\n    delete track.maxSegmentDts;\n    delete track.minSegmentPts;\n    delete track.maxSegmentPts;\n  };\n  /**\n   * Calculate the track's baseMediaDecodeTime based on the earliest\n   * DTS the transmuxer has ever seen and the minimum DTS for the\n   * current track\n   * @param track {object} track metadata configuration\n   * @param keepOriginalTimestamps {boolean} If true, keep the timestamps\n   *        in the source; false to adjust the first segment to start at 0.\n   */\n\n  var calculateTrackBaseMediaDecodeTime = function (track, keepOriginalTimestamps) {\n    var baseMediaDecodeTime,\n      scale,\n      minSegmentDts = track.minSegmentDts; // Optionally adjust the time so the first segment starts at zero.\n\n    if (!keepOriginalTimestamps) {\n      minSegmentDts -= track.timelineStartInfo.dts;\n    } // track.timelineStartInfo.baseMediaDecodeTime is the location, in time, where\n    // we want the start of the first segment to be placed\n\n    baseMediaDecodeTime = track.timelineStartInfo.baseMediaDecodeTime; // Add to that the distance this segment is from the very first\n\n    baseMediaDecodeTime += minSegmentDts; // baseMediaDecodeTime must not become negative\n\n    baseMediaDecodeTime = Math.max(0, baseMediaDecodeTime);\n    if (track.type === 'audio') {\n      // Audio has a different clock equal to the sampling_rate so we need to\n      // scale the PTS values into the clock rate of the track\n      scale = track.samplerate / ONE_SECOND_IN_TS$3;\n      baseMediaDecodeTime *= scale;\n      baseMediaDecodeTime = Math.floor(baseMediaDecodeTime);\n    }\n    return baseMediaDecodeTime;\n  };\n  var trackDecodeInfo$1 = {\n    clearDtsInfo: clearDtsInfo,\n    calculateTrackBaseMediaDecodeTime: calculateTrackBaseMediaDecodeTime,\n    collectDtsInfo: collectDtsInfo\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * Reads in-band caption information from a video elementary\n   * stream. Captions must follow the CEA-708 standard for injection\n   * into an MPEG-2 transport streams.\n   * @see https://en.wikipedia.org/wiki/CEA-708\n   * @see https://www.gpo.gov/fdsys/pkg/CFR-2007-title47-vol1/pdf/CFR-2007-title47-vol1-sec15-119.pdf\n   */\n  // payload type field to indicate how they are to be\n  // interpreted. CEAS-708 caption content is always transmitted with\n  // payload type 0x04.\n\n  var USER_DATA_REGISTERED_ITU_T_T35 = 4,\n    RBSP_TRAILING_BITS = 128;\n  /**\n    * Parse a supplemental enhancement information (SEI) NAL unit.\n    * Stops parsing once a message of type ITU T T35 has been found.\n    *\n    * @param bytes {Uint8Array} the bytes of a SEI NAL unit\n    * @return {object} the parsed SEI payload\n    * @see Rec. ITU-T H.264, 7.3.2.3.1\n    */\n\n  var parseSei = function (bytes) {\n    var i = 0,\n      result = {\n        payloadType: -1,\n        payloadSize: 0\n      },\n      payloadType = 0,\n      payloadSize = 0; // go through the sei_rbsp parsing each each individual sei_message\n\n    while (i < bytes.byteLength) {\n      // stop once we have hit the end of the sei_rbsp\n      if (bytes[i] === RBSP_TRAILING_BITS) {\n        break;\n      } // Parse payload type\n\n      while (bytes[i] === 0xFF) {\n        payloadType += 255;\n        i++;\n      }\n      payloadType += bytes[i++]; // Parse payload size\n\n      while (bytes[i] === 0xFF) {\n        payloadSize += 255;\n        i++;\n      }\n      payloadSize += bytes[i++]; // this sei_message is a 608/708 caption so save it and break\n      // there can only ever be one caption message in a frame's sei\n\n      if (!result.payload && payloadType === USER_DATA_REGISTERED_ITU_T_T35) {\n        var userIdentifier = String.fromCharCode(bytes[i + 3], bytes[i + 4], bytes[i + 5], bytes[i + 6]);\n        if (userIdentifier === 'GA94') {\n          result.payloadType = payloadType;\n          result.payloadSize = payloadSize;\n          result.payload = bytes.subarray(i, i + payloadSize);\n          break;\n        } else {\n          result.payload = void 0;\n        }\n      } // skip the payload and parse the next message\n\n      i += payloadSize;\n      payloadType = 0;\n      payloadSize = 0;\n    }\n    return result;\n  }; // see ANSI/SCTE 128-1 (2013), section 8.1\n\n  var parseUserData = function (sei) {\n    // itu_t_t35_contry_code must be 181 (United States) for\n    // captions\n    if (sei.payload[0] !== 181) {\n      return null;\n    } // itu_t_t35_provider_code should be 49 (ATSC) for captions\n\n    if ((sei.payload[1] << 8 | sei.payload[2]) !== 49) {\n      return null;\n    } // the user_identifier should be \"GA94\" to indicate ATSC1 data\n\n    if (String.fromCharCode(sei.payload[3], sei.payload[4], sei.payload[5], sei.payload[6]) !== 'GA94') {\n      return null;\n    } // finally, user_data_type_code should be 0x03 for caption data\n\n    if (sei.payload[7] !== 0x03) {\n      return null;\n    } // return the user_data_type_structure and strip the trailing\n    // marker bits\n\n    return sei.payload.subarray(8, sei.payload.length - 1);\n  }; // see CEA-708-D, section 4.4\n\n  var parseCaptionPackets = function (pts, userData) {\n    var results = [],\n      i,\n      count,\n      offset,\n      data; // if this is just filler, return immediately\n\n    if (!(userData[0] & 0x40)) {\n      return results;\n    } // parse out the cc_data_1 and cc_data_2 fields\n\n    count = userData[0] & 0x1f;\n    for (i = 0; i < count; i++) {\n      offset = i * 3;\n      data = {\n        type: userData[offset + 2] & 0x03,\n        pts: pts\n      }; // capture cc data when cc_valid is 1\n\n      if (userData[offset + 2] & 0x04) {\n        data.ccData = userData[offset + 3] << 8 | userData[offset + 4];\n        results.push(data);\n      }\n    }\n    return results;\n  };\n  var discardEmulationPreventionBytes$1 = function (data) {\n    var length = data.byteLength,\n      emulationPreventionBytesPositions = [],\n      i = 1,\n      newLength,\n      newData; // Find all `Emulation Prevention Bytes`\n\n    while (i < length - 2) {\n      if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n        emulationPreventionBytesPositions.push(i + 2);\n        i += 2;\n      } else {\n        i++;\n      }\n    } // If no Emulation Prevention Bytes were found just return the original\n    // array\n\n    if (emulationPreventionBytesPositions.length === 0) {\n      return data;\n    } // Create a new array to hold the NAL unit data\n\n    newLength = length - emulationPreventionBytesPositions.length;\n    newData = new Uint8Array(newLength);\n    var sourceIndex = 0;\n    for (i = 0; i < newLength; sourceIndex++, i++) {\n      if (sourceIndex === emulationPreventionBytesPositions[0]) {\n        // Skip this byte\n        sourceIndex++; // Remove this position index\n\n        emulationPreventionBytesPositions.shift();\n      }\n      newData[i] = data[sourceIndex];\n    }\n    return newData;\n  }; // exports\n\n  var captionPacketParser = {\n    parseSei: parseSei,\n    parseUserData: parseUserData,\n    parseCaptionPackets: parseCaptionPackets,\n    discardEmulationPreventionBytes: discardEmulationPreventionBytes$1,\n    USER_DATA_REGISTERED_ITU_T_T35: USER_DATA_REGISTERED_ITU_T_T35\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * Reads in-band caption information from a video elementary\n   * stream. Captions must follow the CEA-708 standard for injection\n   * into an MPEG-2 transport streams.\n   * @see https://en.wikipedia.org/wiki/CEA-708\n   * @see https://www.gpo.gov/fdsys/pkg/CFR-2007-title47-vol1/pdf/CFR-2007-title47-vol1-sec15-119.pdf\n   */\n  // Link To Transport\n  // -----------------\n\n  var Stream$7 = stream;\n  var cea708Parser = captionPacketParser;\n  var CaptionStream$2 = function (options) {\n    options = options || {};\n    CaptionStream$2.prototype.init.call(this); // parse708captions flag, default to true\n\n    this.parse708captions_ = typeof options.parse708captions === 'boolean' ? options.parse708captions : true;\n    this.captionPackets_ = [];\n    this.ccStreams_ = [new Cea608Stream(0, 0),\n    // eslint-disable-line no-use-before-define\n    new Cea608Stream(0, 1),\n    // eslint-disable-line no-use-before-define\n    new Cea608Stream(1, 0),\n    // eslint-disable-line no-use-before-define\n    new Cea608Stream(1, 1) // eslint-disable-line no-use-before-define\n    ];\n\n    if (this.parse708captions_) {\n      this.cc708Stream_ = new Cea708Stream({\n        captionServices: options.captionServices\n      }); // eslint-disable-line no-use-before-define\n    }\n\n    this.reset(); // forward data and done events from CCs to this CaptionStream\n\n    this.ccStreams_.forEach(function (cc) {\n      cc.on('data', this.trigger.bind(this, 'data'));\n      cc.on('partialdone', this.trigger.bind(this, 'partialdone'));\n      cc.on('done', this.trigger.bind(this, 'done'));\n    }, this);\n    if (this.parse708captions_) {\n      this.cc708Stream_.on('data', this.trigger.bind(this, 'data'));\n      this.cc708Stream_.on('partialdone', this.trigger.bind(this, 'partialdone'));\n      this.cc708Stream_.on('done', this.trigger.bind(this, 'done'));\n    }\n  };\n  CaptionStream$2.prototype = new Stream$7();\n  CaptionStream$2.prototype.push = function (event) {\n    var sei, userData, newCaptionPackets; // only examine SEI NALs\n\n    if (event.nalUnitType !== 'sei_rbsp') {\n      return;\n    } // parse the sei\n\n    sei = cea708Parser.parseSei(event.escapedRBSP); // no payload data, skip\n\n    if (!sei.payload) {\n      return;\n    } // ignore everything but user_data_registered_itu_t_t35\n\n    if (sei.payloadType !== cea708Parser.USER_DATA_REGISTERED_ITU_T_T35) {\n      return;\n    } // parse out the user data payload\n\n    userData = cea708Parser.parseUserData(sei); // ignore unrecognized userData\n\n    if (!userData) {\n      return;\n    } // Sometimes, the same segment # will be downloaded twice. To stop the\n    // caption data from being processed twice, we track the latest dts we've\n    // received and ignore everything with a dts before that. However, since\n    // data for a specific dts can be split across packets on either side of\n    // a segment boundary, we need to make sure we *don't* ignore the packets\n    // from the *next* segment that have dts === this.latestDts_. By constantly\n    // tracking the number of packets received with dts === this.latestDts_, we\n    // know how many should be ignored once we start receiving duplicates.\n\n    if (event.dts < this.latestDts_) {\n      // We've started getting older data, so set the flag.\n      this.ignoreNextEqualDts_ = true;\n      return;\n    } else if (event.dts === this.latestDts_ && this.ignoreNextEqualDts_) {\n      this.numSameDts_--;\n      if (!this.numSameDts_) {\n        // We've received the last duplicate packet, time to start processing again\n        this.ignoreNextEqualDts_ = false;\n      }\n      return;\n    } // parse out CC data packets and save them for later\n\n    newCaptionPackets = cea708Parser.parseCaptionPackets(event.pts, userData);\n    this.captionPackets_ = this.captionPackets_.concat(newCaptionPackets);\n    if (this.latestDts_ !== event.dts) {\n      this.numSameDts_ = 0;\n    }\n    this.numSameDts_++;\n    this.latestDts_ = event.dts;\n  };\n  CaptionStream$2.prototype.flushCCStreams = function (flushType) {\n    this.ccStreams_.forEach(function (cc) {\n      return flushType === 'flush' ? cc.flush() : cc.partialFlush();\n    }, this);\n  };\n  CaptionStream$2.prototype.flushStream = function (flushType) {\n    // make sure we actually parsed captions before proceeding\n    if (!this.captionPackets_.length) {\n      this.flushCCStreams(flushType);\n      return;\n    } // In Chrome, the Array#sort function is not stable so add a\n    // presortIndex that we can use to ensure we get a stable-sort\n\n    this.captionPackets_.forEach(function (elem, idx) {\n      elem.presortIndex = idx;\n    }); // sort caption byte-pairs based on their PTS values\n\n    this.captionPackets_.sort(function (a, b) {\n      if (a.pts === b.pts) {\n        return a.presortIndex - b.presortIndex;\n      }\n      return a.pts - b.pts;\n    });\n    this.captionPackets_.forEach(function (packet) {\n      if (packet.type < 2) {\n        // Dispatch packet to the right Cea608Stream\n        this.dispatchCea608Packet(packet);\n      } else {\n        // Dispatch packet to the Cea708Stream\n        this.dispatchCea708Packet(packet);\n      }\n    }, this);\n    this.captionPackets_.length = 0;\n    this.flushCCStreams(flushType);\n  };\n  CaptionStream$2.prototype.flush = function () {\n    return this.flushStream('flush');\n  }; // Only called if handling partial data\n\n  CaptionStream$2.prototype.partialFlush = function () {\n    return this.flushStream('partialFlush');\n  };\n  CaptionStream$2.prototype.reset = function () {\n    this.latestDts_ = null;\n    this.ignoreNextEqualDts_ = false;\n    this.numSameDts_ = 0;\n    this.activeCea608Channel_ = [null, null];\n    this.ccStreams_.forEach(function (ccStream) {\n      ccStream.reset();\n    });\n  }; // From the CEA-608 spec:\n\n  /*\n   * When XDS sub-packets are interleaved with other services, the end of each sub-packet shall be followed\n   * by a control pair to change to a different service. When any of the control codes from 0x10 to 0x1F is\n   * used to begin a control code pair, it indicates the return to captioning or Text data. The control code pair\n   * and subsequent data should then be processed according to the FCC rules. It may be necessary for the\n   * line 21 data encoder to automatically insert a control code pair (i.e. RCL, RU2, RU3, RU4, RDC, or RTD)\n   * to switch to captioning or Text.\n  */\n  // With that in mind, we ignore any data between an XDS control code and a\n  // subsequent closed-captioning control code.\n\n  CaptionStream$2.prototype.dispatchCea608Packet = function (packet) {\n    // NOTE: packet.type is the CEA608 field\n    if (this.setsTextOrXDSActive(packet)) {\n      this.activeCea608Channel_[packet.type] = null;\n    } else if (this.setsChannel1Active(packet)) {\n      this.activeCea608Channel_[packet.type] = 0;\n    } else if (this.setsChannel2Active(packet)) {\n      this.activeCea608Channel_[packet.type] = 1;\n    }\n    if (this.activeCea608Channel_[packet.type] === null) {\n      // If we haven't received anything to set the active channel, or the\n      // packets are Text/XDS data, discard the data; we don't want jumbled\n      // captions\n      return;\n    }\n    this.ccStreams_[(packet.type << 1) + this.activeCea608Channel_[packet.type]].push(packet);\n  };\n  CaptionStream$2.prototype.setsChannel1Active = function (packet) {\n    return (packet.ccData & 0x7800) === 0x1000;\n  };\n  CaptionStream$2.prototype.setsChannel2Active = function (packet) {\n    return (packet.ccData & 0x7800) === 0x1800;\n  };\n  CaptionStream$2.prototype.setsTextOrXDSActive = function (packet) {\n    return (packet.ccData & 0x7100) === 0x0100 || (packet.ccData & 0x78fe) === 0x102a || (packet.ccData & 0x78fe) === 0x182a;\n  };\n  CaptionStream$2.prototype.dispatchCea708Packet = function (packet) {\n    if (this.parse708captions_) {\n      this.cc708Stream_.push(packet);\n    }\n  }; // ----------------------\n  // Session to Application\n  // ----------------------\n  // This hash maps special and extended character codes to their\n  // proper Unicode equivalent. The first one-byte key is just a\n  // non-standard character code. The two-byte keys that follow are\n  // the extended CEA708 character codes, along with the preceding\n  // 0x10 extended character byte to distinguish these codes from\n  // non-extended character codes. Every CEA708 character code that\n  // is not in this object maps directly to a standard unicode\n  // character code.\n  // The transparent space and non-breaking transparent space are\n  // technically not fully supported since there is no code to\n  // make them transparent, so they have normal non-transparent\n  // stand-ins.\n  // The special closed caption (CC) character isn't a standard\n  // unicode character, so a fairly similar unicode character was\n  // chosen in it's place.\n\n  var CHARACTER_TRANSLATION_708 = {\n    0x7f: 0x266a,\n    // ♪\n    0x1020: 0x20,\n    // Transparent Space\n    0x1021: 0xa0,\n    // Nob-breaking Transparent Space\n    0x1025: 0x2026,\n    // …\n    0x102a: 0x0160,\n    // Š\n    0x102c: 0x0152,\n    // Œ\n    0x1030: 0x2588,\n    // █\n    0x1031: 0x2018,\n    // ‘\n    0x1032: 0x2019,\n    // ’\n    0x1033: 0x201c,\n    // “\n    0x1034: 0x201d,\n    // ”\n    0x1035: 0x2022,\n    // •\n    0x1039: 0x2122,\n    // ™\n    0x103a: 0x0161,\n    // š\n    0x103c: 0x0153,\n    // œ\n    0x103d: 0x2120,\n    // ℠\n    0x103f: 0x0178,\n    // Ÿ\n    0x1076: 0x215b,\n    // ⅛\n    0x1077: 0x215c,\n    // ⅜\n    0x1078: 0x215d,\n    // ⅝\n    0x1079: 0x215e,\n    // ⅞\n    0x107a: 0x23d0,\n    // ⏐\n    0x107b: 0x23a4,\n    // ⎤\n    0x107c: 0x23a3,\n    // ⎣\n    0x107d: 0x23af,\n    // ⎯\n    0x107e: 0x23a6,\n    // ⎦\n    0x107f: 0x23a1,\n    // ⎡\n    0x10a0: 0x3138 // ㄸ (CC char)\n  };\n\n  var get708CharFromCode = function (code) {\n    var newCode = CHARACTER_TRANSLATION_708[code] || code;\n    if (code & 0x1000 && code === newCode) {\n      // Invalid extended code\n      return '';\n    }\n    return String.fromCharCode(newCode);\n  };\n  var within708TextBlock = function (b) {\n    return 0x20 <= b && b <= 0x7f || 0xa0 <= b && b <= 0xff;\n  };\n  var Cea708Window = function (windowNum) {\n    this.windowNum = windowNum;\n    this.reset();\n  };\n  Cea708Window.prototype.reset = function () {\n    this.clearText();\n    this.pendingNewLine = false;\n    this.winAttr = {};\n    this.penAttr = {};\n    this.penLoc = {};\n    this.penColor = {}; // These default values are arbitrary,\n    // defineWindow will usually override them\n\n    this.visible = 0;\n    this.rowLock = 0;\n    this.columnLock = 0;\n    this.priority = 0;\n    this.relativePositioning = 0;\n    this.anchorVertical = 0;\n    this.anchorHorizontal = 0;\n    this.anchorPoint = 0;\n    this.rowCount = 1;\n    this.virtualRowCount = this.rowCount + 1;\n    this.columnCount = 41;\n    this.windowStyle = 0;\n    this.penStyle = 0;\n  };\n  Cea708Window.prototype.getText = function () {\n    return this.rows.join('\\n');\n  };\n  Cea708Window.prototype.clearText = function () {\n    this.rows = [''];\n    this.rowIdx = 0;\n  };\n  Cea708Window.prototype.newLine = function (pts) {\n    if (this.rows.length >= this.virtualRowCount && typeof this.beforeRowOverflow === 'function') {\n      this.beforeRowOverflow(pts);\n    }\n    if (this.rows.length > 0) {\n      this.rows.push('');\n      this.rowIdx++;\n    } // Show all virtual rows since there's no visible scrolling\n\n    while (this.rows.length > this.virtualRowCount) {\n      this.rows.shift();\n      this.rowIdx--;\n    }\n  };\n  Cea708Window.prototype.isEmpty = function () {\n    if (this.rows.length === 0) {\n      return true;\n    } else if (this.rows.length === 1) {\n      return this.rows[0] === '';\n    }\n    return false;\n  };\n  Cea708Window.prototype.addText = function (text) {\n    this.rows[this.rowIdx] += text;\n  };\n  Cea708Window.prototype.backspace = function () {\n    if (!this.isEmpty()) {\n      var row = this.rows[this.rowIdx];\n      this.rows[this.rowIdx] = row.substr(0, row.length - 1);\n    }\n  };\n  var Cea708Service = function (serviceNum, encoding, stream) {\n    this.serviceNum = serviceNum;\n    this.text = '';\n    this.currentWindow = new Cea708Window(-1);\n    this.windows = [];\n    this.stream = stream; // Try to setup a TextDecoder if an `encoding` value was provided\n\n    if (typeof encoding === 'string') {\n      this.createTextDecoder(encoding);\n    }\n  };\n  /**\n   * Initialize service windows\n   * Must be run before service use\n   *\n   * @param  {Integer}  pts               PTS value\n   * @param  {Function} beforeRowOverflow Function to execute before row overflow of a window\n   */\n\n  Cea708Service.prototype.init = function (pts, beforeRowOverflow) {\n    this.startPts = pts;\n    for (var win = 0; win < 8; win++) {\n      this.windows[win] = new Cea708Window(win);\n      if (typeof beforeRowOverflow === 'function') {\n        this.windows[win].beforeRowOverflow = beforeRowOverflow;\n      }\n    }\n  };\n  /**\n   * Set current window of service to be affected by commands\n   *\n   * @param  {Integer} windowNum Window number\n   */\n\n  Cea708Service.prototype.setCurrentWindow = function (windowNum) {\n    this.currentWindow = this.windows[windowNum];\n  };\n  /**\n   * Try to create a TextDecoder if it is natively supported\n   */\n\n  Cea708Service.prototype.createTextDecoder = function (encoding) {\n    if (typeof TextDecoder === 'undefined') {\n      this.stream.trigger('log', {\n        level: 'warn',\n        message: 'The `encoding` option is unsupported without TextDecoder support'\n      });\n    } else {\n      try {\n        this.textDecoder_ = new TextDecoder(encoding);\n      } catch (error) {\n        this.stream.trigger('log', {\n          level: 'warn',\n          message: 'TextDecoder could not be created with ' + encoding + ' encoding. ' + error\n        });\n      }\n    }\n  };\n  var Cea708Stream = function (options) {\n    options = options || {};\n    Cea708Stream.prototype.init.call(this);\n    var self = this;\n    var captionServices = options.captionServices || {};\n    var captionServiceEncodings = {};\n    var serviceProps; // Get service encodings from captionServices option block\n\n    Object.keys(captionServices).forEach(serviceName => {\n      serviceProps = captionServices[serviceName];\n      if (/^SERVICE/.test(serviceName)) {\n        captionServiceEncodings[serviceName] = serviceProps.encoding;\n      }\n    });\n    this.serviceEncodings = captionServiceEncodings;\n    this.current708Packet = null;\n    this.services = {};\n    this.push = function (packet) {\n      if (packet.type === 3) {\n        // 708 packet start\n        self.new708Packet();\n        self.add708Bytes(packet);\n      } else {\n        if (self.current708Packet === null) {\n          // This should only happen at the start of a file if there's no packet start.\n          self.new708Packet();\n        }\n        self.add708Bytes(packet);\n      }\n    };\n  };\n  Cea708Stream.prototype = new Stream$7();\n  /**\n   * Push current 708 packet, create new 708 packet.\n   */\n\n  Cea708Stream.prototype.new708Packet = function () {\n    if (this.current708Packet !== null) {\n      this.push708Packet();\n    }\n    this.current708Packet = {\n      data: [],\n      ptsVals: []\n    };\n  };\n  /**\n   * Add pts and both bytes from packet into current 708 packet.\n   */\n\n  Cea708Stream.prototype.add708Bytes = function (packet) {\n    var data = packet.ccData;\n    var byte0 = data >>> 8;\n    var byte1 = data & 0xff; // I would just keep a list of packets instead of bytes, but it isn't clear in the spec\n    // that service blocks will always line up with byte pairs.\n\n    this.current708Packet.ptsVals.push(packet.pts);\n    this.current708Packet.data.push(byte0);\n    this.current708Packet.data.push(byte1);\n  };\n  /**\n   * Parse completed 708 packet into service blocks and push each service block.\n   */\n\n  Cea708Stream.prototype.push708Packet = function () {\n    var packet708 = this.current708Packet;\n    var packetData = packet708.data;\n    var serviceNum = null;\n    var blockSize = null;\n    var i = 0;\n    var b = packetData[i++];\n    packet708.seq = b >> 6;\n    packet708.sizeCode = b & 0x3f; // 0b00111111;\n\n    for (; i < packetData.length; i++) {\n      b = packetData[i++];\n      serviceNum = b >> 5;\n      blockSize = b & 0x1f; // 0b00011111\n\n      if (serviceNum === 7 && blockSize > 0) {\n        // Extended service num\n        b = packetData[i++];\n        serviceNum = b;\n      }\n      this.pushServiceBlock(serviceNum, i, blockSize);\n      if (blockSize > 0) {\n        i += blockSize - 1;\n      }\n    }\n  };\n  /**\n   * Parse service block, execute commands, read text.\n   *\n   * Note: While many of these commands serve important purposes,\n   * many others just parse out the parameters or attributes, but\n   * nothing is done with them because this is not a full and complete\n   * implementation of the entire 708 spec.\n   *\n   * @param  {Integer} serviceNum Service number\n   * @param  {Integer} start      Start index of the 708 packet data\n   * @param  {Integer} size       Block size\n   */\n\n  Cea708Stream.prototype.pushServiceBlock = function (serviceNum, start, size) {\n    var b;\n    var i = start;\n    var packetData = this.current708Packet.data;\n    var service = this.services[serviceNum];\n    if (!service) {\n      service = this.initService(serviceNum, i);\n    }\n    for (; i < start + size && i < packetData.length; i++) {\n      b = packetData[i];\n      if (within708TextBlock(b)) {\n        i = this.handleText(i, service);\n      } else if (b === 0x18) {\n        i = this.multiByteCharacter(i, service);\n      } else if (b === 0x10) {\n        i = this.extendedCommands(i, service);\n      } else if (0x80 <= b && b <= 0x87) {\n        i = this.setCurrentWindow(i, service);\n      } else if (0x98 <= b && b <= 0x9f) {\n        i = this.defineWindow(i, service);\n      } else if (b === 0x88) {\n        i = this.clearWindows(i, service);\n      } else if (b === 0x8c) {\n        i = this.deleteWindows(i, service);\n      } else if (b === 0x89) {\n        i = this.displayWindows(i, service);\n      } else if (b === 0x8a) {\n        i = this.hideWindows(i, service);\n      } else if (b === 0x8b) {\n        i = this.toggleWindows(i, service);\n      } else if (b === 0x97) {\n        i = this.setWindowAttributes(i, service);\n      } else if (b === 0x90) {\n        i = this.setPenAttributes(i, service);\n      } else if (b === 0x91) {\n        i = this.setPenColor(i, service);\n      } else if (b === 0x92) {\n        i = this.setPenLocation(i, service);\n      } else if (b === 0x8f) {\n        service = this.reset(i, service);\n      } else if (b === 0x08) {\n        // BS: Backspace\n        service.currentWindow.backspace();\n      } else if (b === 0x0c) {\n        // FF: Form feed\n        service.currentWindow.clearText();\n      } else if (b === 0x0d) {\n        // CR: Carriage return\n        service.currentWindow.pendingNewLine = true;\n      } else if (b === 0x0e) {\n        // HCR: Horizontal carriage return\n        service.currentWindow.clearText();\n      } else if (b === 0x8d) {\n        // DLY: Delay, nothing to do\n        i++;\n      } else ;\n    }\n  };\n  /**\n   * Execute an extended command\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.extendedCommands = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[++i];\n    if (within708TextBlock(b)) {\n      i = this.handleText(i, service, {\n        isExtended: true\n      });\n    }\n    return i;\n  };\n  /**\n   * Get PTS value of a given byte index\n   *\n   * @param  {Integer} byteIndex  Index of the byte\n   * @return {Integer}            PTS\n   */\n\n  Cea708Stream.prototype.getPts = function (byteIndex) {\n    // There's 1 pts value per 2 bytes\n    return this.current708Packet.ptsVals[Math.floor(byteIndex / 2)];\n  };\n  /**\n   * Initializes a service\n   *\n   * @param  {Integer} serviceNum Service number\n   * @return {Service}            Initialized service object\n   */\n\n  Cea708Stream.prototype.initService = function (serviceNum, i) {\n    var serviceName = 'SERVICE' + serviceNum;\n    var self = this;\n    var serviceName;\n    var encoding;\n    if (serviceName in this.serviceEncodings) {\n      encoding = this.serviceEncodings[serviceName];\n    }\n    this.services[serviceNum] = new Cea708Service(serviceNum, encoding, self);\n    this.services[serviceNum].init(this.getPts(i), function (pts) {\n      self.flushDisplayed(pts, self.services[serviceNum]);\n    });\n    return this.services[serviceNum];\n  };\n  /**\n   * Execute text writing to current window\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.handleText = function (i, service, options) {\n    var isExtended = options && options.isExtended;\n    var isMultiByte = options && options.isMultiByte;\n    var packetData = this.current708Packet.data;\n    var extended = isExtended ? 0x1000 : 0x0000;\n    var currentByte = packetData[i];\n    var nextByte = packetData[i + 1];\n    var win = service.currentWindow;\n    var char;\n    var charCodeArray; // Use the TextDecoder if one was created for this service\n\n    if (service.textDecoder_ && !isExtended) {\n      if (isMultiByte) {\n        charCodeArray = [currentByte, nextByte];\n        i++;\n      } else {\n        charCodeArray = [currentByte];\n      }\n      char = service.textDecoder_.decode(new Uint8Array(charCodeArray));\n    } else {\n      char = get708CharFromCode(extended | currentByte);\n    }\n    if (win.pendingNewLine && !win.isEmpty()) {\n      win.newLine(this.getPts(i));\n    }\n    win.pendingNewLine = false;\n    win.addText(char);\n    return i;\n  };\n  /**\n   * Handle decoding of multibyte character\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.multiByteCharacter = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var firstByte = packetData[i + 1];\n    var secondByte = packetData[i + 2];\n    if (within708TextBlock(firstByte) && within708TextBlock(secondByte)) {\n      i = this.handleText(++i, service, {\n        isMultiByte: true\n      });\n    }\n    return i;\n  };\n  /**\n   * Parse and execute the CW# command.\n   *\n   * Set the current window.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.setCurrentWindow = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[i];\n    var windowNum = b & 0x07;\n    service.setCurrentWindow(windowNum);\n    return i;\n  };\n  /**\n   * Parse and execute the DF# command.\n   *\n   * Define a window and set it as the current window.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.defineWindow = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[i];\n    var windowNum = b & 0x07;\n    service.setCurrentWindow(windowNum);\n    var win = service.currentWindow;\n    b = packetData[++i];\n    win.visible = (b & 0x20) >> 5; // v\n\n    win.rowLock = (b & 0x10) >> 4; // rl\n\n    win.columnLock = (b & 0x08) >> 3; // cl\n\n    win.priority = b & 0x07; // p\n\n    b = packetData[++i];\n    win.relativePositioning = (b & 0x80) >> 7; // rp\n\n    win.anchorVertical = b & 0x7f; // av\n\n    b = packetData[++i];\n    win.anchorHorizontal = b; // ah\n\n    b = packetData[++i];\n    win.anchorPoint = (b & 0xf0) >> 4; // ap\n\n    win.rowCount = b & 0x0f; // rc\n\n    b = packetData[++i];\n    win.columnCount = b & 0x3f; // cc\n\n    b = packetData[++i];\n    win.windowStyle = (b & 0x38) >> 3; // ws\n\n    win.penStyle = b & 0x07; // ps\n    // The spec says there are (rowCount+1) \"virtual rows\"\n\n    win.virtualRowCount = win.rowCount + 1;\n    return i;\n  };\n  /**\n   * Parse and execute the SWA command.\n   *\n   * Set attributes of the current window.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.setWindowAttributes = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[i];\n    var winAttr = service.currentWindow.winAttr;\n    b = packetData[++i];\n    winAttr.fillOpacity = (b & 0xc0) >> 6; // fo\n\n    winAttr.fillRed = (b & 0x30) >> 4; // fr\n\n    winAttr.fillGreen = (b & 0x0c) >> 2; // fg\n\n    winAttr.fillBlue = b & 0x03; // fb\n\n    b = packetData[++i];\n    winAttr.borderType = (b & 0xc0) >> 6; // bt\n\n    winAttr.borderRed = (b & 0x30) >> 4; // br\n\n    winAttr.borderGreen = (b & 0x0c) >> 2; // bg\n\n    winAttr.borderBlue = b & 0x03; // bb\n\n    b = packetData[++i];\n    winAttr.borderType += (b & 0x80) >> 5; // bt\n\n    winAttr.wordWrap = (b & 0x40) >> 6; // ww\n\n    winAttr.printDirection = (b & 0x30) >> 4; // pd\n\n    winAttr.scrollDirection = (b & 0x0c) >> 2; // sd\n\n    winAttr.justify = b & 0x03; // j\n\n    b = packetData[++i];\n    winAttr.effectSpeed = (b & 0xf0) >> 4; // es\n\n    winAttr.effectDirection = (b & 0x0c) >> 2; // ed\n\n    winAttr.displayEffect = b & 0x03; // de\n\n    return i;\n  };\n  /**\n   * Gather text from all displayed windows and push a caption to output.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   */\n\n  Cea708Stream.prototype.flushDisplayed = function (pts, service) {\n    var displayedText = []; // TODO: Positioning not supported, displaying multiple windows will not necessarily\n    // display text in the correct order, but sample files so far have not shown any issue.\n\n    for (var winId = 0; winId < 8; winId++) {\n      if (service.windows[winId].visible && !service.windows[winId].isEmpty()) {\n        displayedText.push(service.windows[winId].getText());\n      }\n    }\n    service.endPts = pts;\n    service.text = displayedText.join('\\n\\n');\n    this.pushCaption(service);\n    service.startPts = pts;\n  };\n  /**\n   * Push a caption to output if the caption contains text.\n   *\n   * @param  {Service} service  The service object to be affected\n   */\n\n  Cea708Stream.prototype.pushCaption = function (service) {\n    if (service.text !== '') {\n      this.trigger('data', {\n        startPts: service.startPts,\n        endPts: service.endPts,\n        text: service.text,\n        stream: 'cc708_' + service.serviceNum\n      });\n      service.text = '';\n      service.startPts = service.endPts;\n    }\n  };\n  /**\n   * Parse and execute the DSW command.\n   *\n   * Set visible property of windows based on the parsed bitmask.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.displayWindows = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[++i];\n    var pts = this.getPts(i);\n    this.flushDisplayed(pts, service);\n    for (var winId = 0; winId < 8; winId++) {\n      if (b & 0x01 << winId) {\n        service.windows[winId].visible = 1;\n      }\n    }\n    return i;\n  };\n  /**\n   * Parse and execute the HDW command.\n   *\n   * Set visible property of windows based on the parsed bitmask.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.hideWindows = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[++i];\n    var pts = this.getPts(i);\n    this.flushDisplayed(pts, service);\n    for (var winId = 0; winId < 8; winId++) {\n      if (b & 0x01 << winId) {\n        service.windows[winId].visible = 0;\n      }\n    }\n    return i;\n  };\n  /**\n   * Parse and execute the TGW command.\n   *\n   * Set visible property of windows based on the parsed bitmask.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.toggleWindows = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[++i];\n    var pts = this.getPts(i);\n    this.flushDisplayed(pts, service);\n    for (var winId = 0; winId < 8; winId++) {\n      if (b & 0x01 << winId) {\n        service.windows[winId].visible ^= 1;\n      }\n    }\n    return i;\n  };\n  /**\n   * Parse and execute the CLW command.\n   *\n   * Clear text of windows based on the parsed bitmask.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.clearWindows = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[++i];\n    var pts = this.getPts(i);\n    this.flushDisplayed(pts, service);\n    for (var winId = 0; winId < 8; winId++) {\n      if (b & 0x01 << winId) {\n        service.windows[winId].clearText();\n      }\n    }\n    return i;\n  };\n  /**\n   * Parse and execute the DLW command.\n   *\n   * Re-initialize windows based on the parsed bitmask.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.deleteWindows = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[++i];\n    var pts = this.getPts(i);\n    this.flushDisplayed(pts, service);\n    for (var winId = 0; winId < 8; winId++) {\n      if (b & 0x01 << winId) {\n        service.windows[winId].reset();\n      }\n    }\n    return i;\n  };\n  /**\n   * Parse and execute the SPA command.\n   *\n   * Set pen attributes of the current window.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.setPenAttributes = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[i];\n    var penAttr = service.currentWindow.penAttr;\n    b = packetData[++i];\n    penAttr.textTag = (b & 0xf0) >> 4; // tt\n\n    penAttr.offset = (b & 0x0c) >> 2; // o\n\n    penAttr.penSize = b & 0x03; // s\n\n    b = packetData[++i];\n    penAttr.italics = (b & 0x80) >> 7; // i\n\n    penAttr.underline = (b & 0x40) >> 6; // u\n\n    penAttr.edgeType = (b & 0x38) >> 3; // et\n\n    penAttr.fontStyle = b & 0x07; // fs\n\n    return i;\n  };\n  /**\n   * Parse and execute the SPC command.\n   *\n   * Set pen color of the current window.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.setPenColor = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[i];\n    var penColor = service.currentWindow.penColor;\n    b = packetData[++i];\n    penColor.fgOpacity = (b & 0xc0) >> 6; // fo\n\n    penColor.fgRed = (b & 0x30) >> 4; // fr\n\n    penColor.fgGreen = (b & 0x0c) >> 2; // fg\n\n    penColor.fgBlue = b & 0x03; // fb\n\n    b = packetData[++i];\n    penColor.bgOpacity = (b & 0xc0) >> 6; // bo\n\n    penColor.bgRed = (b & 0x30) >> 4; // br\n\n    penColor.bgGreen = (b & 0x0c) >> 2; // bg\n\n    penColor.bgBlue = b & 0x03; // bb\n\n    b = packetData[++i];\n    penColor.edgeRed = (b & 0x30) >> 4; // er\n\n    penColor.edgeGreen = (b & 0x0c) >> 2; // eg\n\n    penColor.edgeBlue = b & 0x03; // eb\n\n    return i;\n  };\n  /**\n   * Parse and execute the SPL command.\n   *\n   * Set pen location of the current window.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.setPenLocation = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[i];\n    var penLoc = service.currentWindow.penLoc; // Positioning isn't really supported at the moment, so this essentially just inserts a linebreak\n\n    service.currentWindow.pendingNewLine = true;\n    b = packetData[++i];\n    penLoc.row = b & 0x0f; // r\n\n    b = packetData[++i];\n    penLoc.column = b & 0x3f; // c\n\n    return i;\n  };\n  /**\n   * Execute the RST command.\n   *\n   * Reset service to a clean slate. Re-initialize.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Service}          Re-initialized service\n   */\n\n  Cea708Stream.prototype.reset = function (i, service) {\n    var pts = this.getPts(i);\n    this.flushDisplayed(pts, service);\n    return this.initService(service.serviceNum, i);\n  }; // This hash maps non-ASCII, special, and extended character codes to their\n  // proper Unicode equivalent. The first keys that are only a single byte\n  // are the non-standard ASCII characters, which simply map the CEA608 byte\n  // to the standard ASCII/Unicode. The two-byte keys that follow are the CEA608\n  // character codes, but have their MSB bitmasked with 0x03 so that a lookup\n  // can be performed regardless of the field and data channel on which the\n  // character code was received.\n\n  var CHARACTER_TRANSLATION = {\n    0x2a: 0xe1,\n    // á\n    0x5c: 0xe9,\n    // é\n    0x5e: 0xed,\n    // í\n    0x5f: 0xf3,\n    // ó\n    0x60: 0xfa,\n    // ú\n    0x7b: 0xe7,\n    // ç\n    0x7c: 0xf7,\n    // ÷\n    0x7d: 0xd1,\n    // Ñ\n    0x7e: 0xf1,\n    // ñ\n    0x7f: 0x2588,\n    // █\n    0x0130: 0xae,\n    // ®\n    0x0131: 0xb0,\n    // °\n    0x0132: 0xbd,\n    // ½\n    0x0133: 0xbf,\n    // ¿\n    0x0134: 0x2122,\n    // ™\n    0x0135: 0xa2,\n    // ¢\n    0x0136: 0xa3,\n    // £\n    0x0137: 0x266a,\n    // ♪\n    0x0138: 0xe0,\n    // à\n    0x0139: 0xa0,\n    //\n    0x013a: 0xe8,\n    // è\n    0x013b: 0xe2,\n    // â\n    0x013c: 0xea,\n    // ê\n    0x013d: 0xee,\n    // î\n    0x013e: 0xf4,\n    // ô\n    0x013f: 0xfb,\n    // û\n    0x0220: 0xc1,\n    // Á\n    0x0221: 0xc9,\n    // É\n    0x0222: 0xd3,\n    // Ó\n    0x0223: 0xda,\n    // Ú\n    0x0224: 0xdc,\n    // Ü\n    0x0225: 0xfc,\n    // ü\n    0x0226: 0x2018,\n    // ‘\n    0x0227: 0xa1,\n    // ¡\n    0x0228: 0x2a,\n    // *\n    0x0229: 0x27,\n    // '\n    0x022a: 0x2014,\n    // —\n    0x022b: 0xa9,\n    // ©\n    0x022c: 0x2120,\n    // ℠\n    0x022d: 0x2022,\n    // •\n    0x022e: 0x201c,\n    // “\n    0x022f: 0x201d,\n    // ”\n    0x0230: 0xc0,\n    // À\n    0x0231: 0xc2,\n    // Â\n    0x0232: 0xc7,\n    // Ç\n    0x0233: 0xc8,\n    // È\n    0x0234: 0xca,\n    // Ê\n    0x0235: 0xcb,\n    // Ë\n    0x0236: 0xeb,\n    // ë\n    0x0237: 0xce,\n    // Î\n    0x0238: 0xcf,\n    // Ï\n    0x0239: 0xef,\n    // ï\n    0x023a: 0xd4,\n    // Ô\n    0x023b: 0xd9,\n    // Ù\n    0x023c: 0xf9,\n    // ù\n    0x023d: 0xdb,\n    // Û\n    0x023e: 0xab,\n    // «\n    0x023f: 0xbb,\n    // »\n    0x0320: 0xc3,\n    // Ã\n    0x0321: 0xe3,\n    // ã\n    0x0322: 0xcd,\n    // Í\n    0x0323: 0xcc,\n    // Ì\n    0x0324: 0xec,\n    // ì\n    0x0325: 0xd2,\n    // Ò\n    0x0326: 0xf2,\n    // ò\n    0x0327: 0xd5,\n    // Õ\n    0x0328: 0xf5,\n    // õ\n    0x0329: 0x7b,\n    // {\n    0x032a: 0x7d,\n    // }\n    0x032b: 0x5c,\n    // \\\n    0x032c: 0x5e,\n    // ^\n    0x032d: 0x5f,\n    // _\n    0x032e: 0x7c,\n    // |\n    0x032f: 0x7e,\n    // ~\n    0x0330: 0xc4,\n    // Ä\n    0x0331: 0xe4,\n    // ä\n    0x0332: 0xd6,\n    // Ö\n    0x0333: 0xf6,\n    // ö\n    0x0334: 0xdf,\n    // ß\n    0x0335: 0xa5,\n    // ¥\n    0x0336: 0xa4,\n    // ¤\n    0x0337: 0x2502,\n    // │\n    0x0338: 0xc5,\n    // Å\n    0x0339: 0xe5,\n    // å\n    0x033a: 0xd8,\n    // Ø\n    0x033b: 0xf8,\n    // ø\n    0x033c: 0x250c,\n    // ┌\n    0x033d: 0x2510,\n    // ┐\n    0x033e: 0x2514,\n    // └\n    0x033f: 0x2518 // ┘\n  };\n\n  var getCharFromCode = function (code) {\n    if (code === null) {\n      return '';\n    }\n    code = CHARACTER_TRANSLATION[code] || code;\n    return String.fromCharCode(code);\n  }; // the index of the last row in a CEA-608 display buffer\n\n  var BOTTOM_ROW = 14; // This array is used for mapping PACs -> row #, since there's no way of\n  // getting it through bit logic.\n\n  var ROWS = [0x1100, 0x1120, 0x1200, 0x1220, 0x1500, 0x1520, 0x1600, 0x1620, 0x1700, 0x1720, 0x1000, 0x1300, 0x1320, 0x1400, 0x1420]; // CEA-608 captions are rendered onto a 34x15 matrix of character\n  // cells. The \"bottom\" row is the last element in the outer array.\n\n  var createDisplayBuffer = function () {\n    var result = [],\n      i = BOTTOM_ROW + 1;\n    while (i--) {\n      result.push('');\n    }\n    return result;\n  };\n  var Cea608Stream = function (field, dataChannel) {\n    Cea608Stream.prototype.init.call(this);\n    this.field_ = field || 0;\n    this.dataChannel_ = dataChannel || 0;\n    this.name_ = 'CC' + ((this.field_ << 1 | this.dataChannel_) + 1);\n    this.setConstants();\n    this.reset();\n    this.push = function (packet) {\n      var data, swap, char0, char1, text; // remove the parity bits\n\n      data = packet.ccData & 0x7f7f; // ignore duplicate control codes; the spec demands they're sent twice\n\n      if (data === this.lastControlCode_) {\n        this.lastControlCode_ = null;\n        return;\n      } // Store control codes\n\n      if ((data & 0xf000) === 0x1000) {\n        this.lastControlCode_ = data;\n      } else if (data !== this.PADDING_) {\n        this.lastControlCode_ = null;\n      }\n      char0 = data >>> 8;\n      char1 = data & 0xff;\n      if (data === this.PADDING_) {\n        return;\n      } else if (data === this.RESUME_CAPTION_LOADING_) {\n        this.mode_ = 'popOn';\n      } else if (data === this.END_OF_CAPTION_) {\n        // If an EOC is received while in paint-on mode, the displayed caption\n        // text should be swapped to non-displayed memory as if it was a pop-on\n        // caption. Because of that, we should explicitly switch back to pop-on\n        // mode\n        this.mode_ = 'popOn';\n        this.clearFormatting(packet.pts); // if a caption was being displayed, it's gone now\n\n        this.flushDisplayed(packet.pts); // flip memory\n\n        swap = this.displayed_;\n        this.displayed_ = this.nonDisplayed_;\n        this.nonDisplayed_ = swap; // start measuring the time to display the caption\n\n        this.startPts_ = packet.pts;\n      } else if (data === this.ROLL_UP_2_ROWS_) {\n        this.rollUpRows_ = 2;\n        this.setRollUp(packet.pts);\n      } else if (data === this.ROLL_UP_3_ROWS_) {\n        this.rollUpRows_ = 3;\n        this.setRollUp(packet.pts);\n      } else if (data === this.ROLL_UP_4_ROWS_) {\n        this.rollUpRows_ = 4;\n        this.setRollUp(packet.pts);\n      } else if (data === this.CARRIAGE_RETURN_) {\n        this.clearFormatting(packet.pts);\n        this.flushDisplayed(packet.pts);\n        this.shiftRowsUp_();\n        this.startPts_ = packet.pts;\n      } else if (data === this.BACKSPACE_) {\n        if (this.mode_ === 'popOn') {\n          this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1);\n        } else {\n          this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1);\n        }\n      } else if (data === this.ERASE_DISPLAYED_MEMORY_) {\n        this.flushDisplayed(packet.pts);\n        this.displayed_ = createDisplayBuffer();\n      } else if (data === this.ERASE_NON_DISPLAYED_MEMORY_) {\n        this.nonDisplayed_ = createDisplayBuffer();\n      } else if (data === this.RESUME_DIRECT_CAPTIONING_) {\n        if (this.mode_ !== 'paintOn') {\n          // NOTE: This should be removed when proper caption positioning is\n          // implemented\n          this.flushDisplayed(packet.pts);\n          this.displayed_ = createDisplayBuffer();\n        }\n        this.mode_ = 'paintOn';\n        this.startPts_ = packet.pts; // Append special characters to caption text\n      } else if (this.isSpecialCharacter(char0, char1)) {\n        // Bitmask char0 so that we can apply character transformations\n        // regardless of field and data channel.\n        // Then byte-shift to the left and OR with char1 so we can pass the\n        // entire character code to `getCharFromCode`.\n        char0 = (char0 & 0x03) << 8;\n        text = getCharFromCode(char0 | char1);\n        this[this.mode_](packet.pts, text);\n        this.column_++; // Append extended characters to caption text\n      } else if (this.isExtCharacter(char0, char1)) {\n        // Extended characters always follow their \"non-extended\" equivalents.\n        // IE if a \"è\" is desired, you'll always receive \"eè\"; non-compliant\n        // decoders are supposed to drop the \"è\", while compliant decoders\n        // backspace the \"e\" and insert \"è\".\n        // Delete the previous character\n        if (this.mode_ === 'popOn') {\n          this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1);\n        } else {\n          this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1);\n        } // Bitmask char0 so that we can apply character transformations\n        // regardless of field and data channel.\n        // Then byte-shift to the left and OR with char1 so we can pass the\n        // entire character code to `getCharFromCode`.\n\n        char0 = (char0 & 0x03) << 8;\n        text = getCharFromCode(char0 | char1);\n        this[this.mode_](packet.pts, text);\n        this.column_++; // Process mid-row codes\n      } else if (this.isMidRowCode(char0, char1)) {\n        // Attributes are not additive, so clear all formatting\n        this.clearFormatting(packet.pts); // According to the standard, mid-row codes\n        // should be replaced with spaces, so add one now\n\n        this[this.mode_](packet.pts, ' ');\n        this.column_++;\n        if ((char1 & 0xe) === 0xe) {\n          this.addFormatting(packet.pts, ['i']);\n        }\n        if ((char1 & 0x1) === 0x1) {\n          this.addFormatting(packet.pts, ['u']);\n        } // Detect offset control codes and adjust cursor\n      } else if (this.isOffsetControlCode(char0, char1)) {\n        // Cursor position is set by indent PAC (see below) in 4-column\n        // increments, with an additional offset code of 1-3 to reach any\n        // of the 32 columns specified by CEA-608. So all we need to do\n        // here is increment the column cursor by the given offset.\n        this.column_ += char1 & 0x03; // Detect PACs (Preamble Address Codes)\n      } else if (this.isPAC(char0, char1)) {\n        // There's no logic for PAC -> row mapping, so we have to just\n        // find the row code in an array and use its index :(\n        var row = ROWS.indexOf(data & 0x1f20); // Configure the caption window if we're in roll-up mode\n\n        if (this.mode_ === 'rollUp') {\n          // This implies that the base row is incorrectly set.\n          // As per the recommendation in CEA-608(Base Row Implementation), defer to the number\n          // of roll-up rows set.\n          if (row - this.rollUpRows_ + 1 < 0) {\n            row = this.rollUpRows_ - 1;\n          }\n          this.setRollUp(packet.pts, row);\n        }\n        if (row !== this.row_) {\n          // formatting is only persistent for current row\n          this.clearFormatting(packet.pts);\n          this.row_ = row;\n        } // All PACs can apply underline, so detect and apply\n        // (All odd-numbered second bytes set underline)\n\n        if (char1 & 0x1 && this.formatting_.indexOf('u') === -1) {\n          this.addFormatting(packet.pts, ['u']);\n        }\n        if ((data & 0x10) === 0x10) {\n          // We've got an indent level code. Each successive even number\n          // increments the column cursor by 4, so we can get the desired\n          // column position by bit-shifting to the right (to get n/2)\n          // and multiplying by 4.\n          this.column_ = ((data & 0xe) >> 1) * 4;\n        }\n        if (this.isColorPAC(char1)) {\n          // it's a color code, though we only support white, which\n          // can be either normal or italicized. white italics can be\n          // either 0x4e or 0x6e depending on the row, so we just\n          // bitwise-and with 0xe to see if italics should be turned on\n          if ((char1 & 0xe) === 0xe) {\n            this.addFormatting(packet.pts, ['i']);\n          }\n        } // We have a normal character in char0, and possibly one in char1\n      } else if (this.isNormalChar(char0)) {\n        if (char1 === 0x00) {\n          char1 = null;\n        }\n        text = getCharFromCode(char0);\n        text += getCharFromCode(char1);\n        this[this.mode_](packet.pts, text);\n        this.column_ += text.length;\n      } // finish data processing\n    };\n  };\n\n  Cea608Stream.prototype = new Stream$7(); // Trigger a cue point that captures the current state of the\n  // display buffer\n\n  Cea608Stream.prototype.flushDisplayed = function (pts) {\n    var content = this.displayed_ // remove spaces from the start and end of the string\n    .map(function (row, index) {\n      try {\n        return row.trim();\n      } catch (e) {\n        // Ordinarily, this shouldn't happen. However, caption\n        // parsing errors should not throw exceptions and\n        // break playback.\n        this.trigger('log', {\n          level: 'warn',\n          message: 'Skipping a malformed 608 caption at index ' + index + '.'\n        });\n        return '';\n      }\n    }, this) // combine all text rows to display in one cue\n    .join('\\n') // and remove blank rows from the start and end, but not the middle\n    .replace(/^\\n+|\\n+$/g, '');\n    if (content.length) {\n      this.trigger('data', {\n        startPts: this.startPts_,\n        endPts: pts,\n        text: content,\n        stream: this.name_\n      });\n    }\n  };\n  /**\n   * Zero out the data, used for startup and on seek\n   */\n\n  Cea608Stream.prototype.reset = function () {\n    this.mode_ = 'popOn'; // When in roll-up mode, the index of the last row that will\n    // actually display captions. If a caption is shifted to a row\n    // with a lower index than this, it is cleared from the display\n    // buffer\n\n    this.topRow_ = 0;\n    this.startPts_ = 0;\n    this.displayed_ = createDisplayBuffer();\n    this.nonDisplayed_ = createDisplayBuffer();\n    this.lastControlCode_ = null; // Track row and column for proper line-breaking and spacing\n\n    this.column_ = 0;\n    this.row_ = BOTTOM_ROW;\n    this.rollUpRows_ = 2; // This variable holds currently-applied formatting\n\n    this.formatting_ = [];\n  };\n  /**\n   * Sets up control code and related constants for this instance\n   */\n\n  Cea608Stream.prototype.setConstants = function () {\n    // The following attributes have these uses:\n    // ext_ :    char0 for mid-row codes, and the base for extended\n    //           chars (ext_+0, ext_+1, and ext_+2 are char0s for\n    //           extended codes)\n    // control_: char0 for control codes, except byte-shifted to the\n    //           left so that we can do this.control_ | CONTROL_CODE\n    // offset_:  char0 for tab offset codes\n    //\n    // It's also worth noting that control codes, and _only_ control codes,\n    // differ between field 1 and field2. Field 2 control codes are always\n    // their field 1 value plus 1. That's why there's the \"| field\" on the\n    // control value.\n    if (this.dataChannel_ === 0) {\n      this.BASE_ = 0x10;\n      this.EXT_ = 0x11;\n      this.CONTROL_ = (0x14 | this.field_) << 8;\n      this.OFFSET_ = 0x17;\n    } else if (this.dataChannel_ === 1) {\n      this.BASE_ = 0x18;\n      this.EXT_ = 0x19;\n      this.CONTROL_ = (0x1c | this.field_) << 8;\n      this.OFFSET_ = 0x1f;\n    } // Constants for the LSByte command codes recognized by Cea608Stream. This\n    // list is not exhaustive. For a more comprehensive listing and semantics see\n    // http://www.gpo.gov/fdsys/pkg/CFR-2010-title47-vol1/pdf/CFR-2010-title47-vol1-sec15-119.pdf\n    // Padding\n\n    this.PADDING_ = 0x0000; // Pop-on Mode\n\n    this.RESUME_CAPTION_LOADING_ = this.CONTROL_ | 0x20;\n    this.END_OF_CAPTION_ = this.CONTROL_ | 0x2f; // Roll-up Mode\n\n    this.ROLL_UP_2_ROWS_ = this.CONTROL_ | 0x25;\n    this.ROLL_UP_3_ROWS_ = this.CONTROL_ | 0x26;\n    this.ROLL_UP_4_ROWS_ = this.CONTROL_ | 0x27;\n    this.CARRIAGE_RETURN_ = this.CONTROL_ | 0x2d; // paint-on mode\n\n    this.RESUME_DIRECT_CAPTIONING_ = this.CONTROL_ | 0x29; // Erasure\n\n    this.BACKSPACE_ = this.CONTROL_ | 0x21;\n    this.ERASE_DISPLAYED_MEMORY_ = this.CONTROL_ | 0x2c;\n    this.ERASE_NON_DISPLAYED_MEMORY_ = this.CONTROL_ | 0x2e;\n  };\n  /**\n   * Detects if the 2-byte packet data is a special character\n   *\n   * Special characters have a second byte in the range 0x30 to 0x3f,\n   * with the first byte being 0x11 (for data channel 1) or 0x19 (for\n   * data channel 2).\n   *\n   * @param  {Integer} char0 The first byte\n   * @param  {Integer} char1 The second byte\n   * @return {Boolean}       Whether the 2 bytes are an special character\n   */\n\n  Cea608Stream.prototype.isSpecialCharacter = function (char0, char1) {\n    return char0 === this.EXT_ && char1 >= 0x30 && char1 <= 0x3f;\n  };\n  /**\n   * Detects if the 2-byte packet data is an extended character\n   *\n   * Extended characters have a second byte in the range 0x20 to 0x3f,\n   * with the first byte being 0x12 or 0x13 (for data channel 1) or\n   * 0x1a or 0x1b (for data channel 2).\n   *\n   * @param  {Integer} char0 The first byte\n   * @param  {Integer} char1 The second byte\n   * @return {Boolean}       Whether the 2 bytes are an extended character\n   */\n\n  Cea608Stream.prototype.isExtCharacter = function (char0, char1) {\n    return (char0 === this.EXT_ + 1 || char0 === this.EXT_ + 2) && char1 >= 0x20 && char1 <= 0x3f;\n  };\n  /**\n   * Detects if the 2-byte packet is a mid-row code\n   *\n   * Mid-row codes have a second byte in the range 0x20 to 0x2f, with\n   * the first byte being 0x11 (for data channel 1) or 0x19 (for data\n   * channel 2).\n   *\n   * @param  {Integer} char0 The first byte\n   * @param  {Integer} char1 The second byte\n   * @return {Boolean}       Whether the 2 bytes are a mid-row code\n   */\n\n  Cea608Stream.prototype.isMidRowCode = function (char0, char1) {\n    return char0 === this.EXT_ && char1 >= 0x20 && char1 <= 0x2f;\n  };\n  /**\n   * Detects if the 2-byte packet is an offset control code\n   *\n   * Offset control codes have a second byte in the range 0x21 to 0x23,\n   * with the first byte being 0x17 (for data channel 1) or 0x1f (for\n   * data channel 2).\n   *\n   * @param  {Integer} char0 The first byte\n   * @param  {Integer} char1 The second byte\n   * @return {Boolean}       Whether the 2 bytes are an offset control code\n   */\n\n  Cea608Stream.prototype.isOffsetControlCode = function (char0, char1) {\n    return char0 === this.OFFSET_ && char1 >= 0x21 && char1 <= 0x23;\n  };\n  /**\n   * Detects if the 2-byte packet is a Preamble Address Code\n   *\n   * PACs have a first byte in the range 0x10 to 0x17 (for data channel 1)\n   * or 0x18 to 0x1f (for data channel 2), with the second byte in the\n   * range 0x40 to 0x7f.\n   *\n   * @param  {Integer} char0 The first byte\n   * @param  {Integer} char1 The second byte\n   * @return {Boolean}       Whether the 2 bytes are a PAC\n   */\n\n  Cea608Stream.prototype.isPAC = function (char0, char1) {\n    return char0 >= this.BASE_ && char0 < this.BASE_ + 8 && char1 >= 0x40 && char1 <= 0x7f;\n  };\n  /**\n   * Detects if a packet's second byte is in the range of a PAC color code\n   *\n   * PAC color codes have the second byte be in the range 0x40 to 0x4f, or\n   * 0x60 to 0x6f.\n   *\n   * @param  {Integer} char1 The second byte\n   * @return {Boolean}       Whether the byte is a color PAC\n   */\n\n  Cea608Stream.prototype.isColorPAC = function (char1) {\n    return char1 >= 0x40 && char1 <= 0x4f || char1 >= 0x60 && char1 <= 0x7f;\n  };\n  /**\n   * Detects if a single byte is in the range of a normal character\n   *\n   * Normal text bytes are in the range 0x20 to 0x7f.\n   *\n   * @param  {Integer} char  The byte\n   * @return {Boolean}       Whether the byte is a normal character\n   */\n\n  Cea608Stream.prototype.isNormalChar = function (char) {\n    return char >= 0x20 && char <= 0x7f;\n  };\n  /**\n   * Configures roll-up\n   *\n   * @param  {Integer} pts         Current PTS\n   * @param  {Integer} newBaseRow  Used by PACs to slide the current window to\n   *                               a new position\n   */\n\n  Cea608Stream.prototype.setRollUp = function (pts, newBaseRow) {\n    // Reset the base row to the bottom row when switching modes\n    if (this.mode_ !== 'rollUp') {\n      this.row_ = BOTTOM_ROW;\n      this.mode_ = 'rollUp'; // Spec says to wipe memories when switching to roll-up\n\n      this.flushDisplayed(pts);\n      this.nonDisplayed_ = createDisplayBuffer();\n      this.displayed_ = createDisplayBuffer();\n    }\n    if (newBaseRow !== undefined && newBaseRow !== this.row_) {\n      // move currently displayed captions (up or down) to the new base row\n      for (var i = 0; i < this.rollUpRows_; i++) {\n        this.displayed_[newBaseRow - i] = this.displayed_[this.row_ - i];\n        this.displayed_[this.row_ - i] = '';\n      }\n    }\n    if (newBaseRow === undefined) {\n      newBaseRow = this.row_;\n    }\n    this.topRow_ = newBaseRow - this.rollUpRows_ + 1;\n  }; // Adds the opening HTML tag for the passed character to the caption text,\n  // and keeps track of it for later closing\n\n  Cea608Stream.prototype.addFormatting = function (pts, format) {\n    this.formatting_ = this.formatting_.concat(format);\n    var text = format.reduce(function (text, format) {\n      return text + '<' + format + '>';\n    }, '');\n    this[this.mode_](pts, text);\n  }; // Adds HTML closing tags for current formatting to caption text and\n  // clears remembered formatting\n\n  Cea608Stream.prototype.clearFormatting = function (pts) {\n    if (!this.formatting_.length) {\n      return;\n    }\n    var text = this.formatting_.reverse().reduce(function (text, format) {\n      return text + '</' + format + '>';\n    }, '');\n    this.formatting_ = [];\n    this[this.mode_](pts, text);\n  }; // Mode Implementations\n\n  Cea608Stream.prototype.popOn = function (pts, text) {\n    var baseRow = this.nonDisplayed_[this.row_]; // buffer characters\n\n    baseRow += text;\n    this.nonDisplayed_[this.row_] = baseRow;\n  };\n  Cea608Stream.prototype.rollUp = function (pts, text) {\n    var baseRow = this.displayed_[this.row_];\n    baseRow += text;\n    this.displayed_[this.row_] = baseRow;\n  };\n  Cea608Stream.prototype.shiftRowsUp_ = function () {\n    var i; // clear out inactive rows\n\n    for (i = 0; i < this.topRow_; i++) {\n      this.displayed_[i] = '';\n    }\n    for (i = this.row_ + 1; i < BOTTOM_ROW + 1; i++) {\n      this.displayed_[i] = '';\n    } // shift displayed rows up\n\n    for (i = this.topRow_; i < this.row_; i++) {\n      this.displayed_[i] = this.displayed_[i + 1];\n    } // clear out the bottom row\n\n    this.displayed_[this.row_] = '';\n  };\n  Cea608Stream.prototype.paintOn = function (pts, text) {\n    var baseRow = this.displayed_[this.row_];\n    baseRow += text;\n    this.displayed_[this.row_] = baseRow;\n  }; // exports\n\n  var captionStream = {\n    CaptionStream: CaptionStream$2,\n    Cea608Stream: Cea608Stream,\n    Cea708Stream: Cea708Stream\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n\n  var streamTypes = {\n    H264_STREAM_TYPE: 0x1B,\n    ADTS_STREAM_TYPE: 0x0F,\n    METADATA_STREAM_TYPE: 0x15\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * Accepts program elementary stream (PES) data events and corrects\n   * decode and presentation time stamps to account for a rollover\n   * of the 33 bit value.\n   */\n\n  var Stream$6 = stream;\n  var MAX_TS = 8589934592;\n  var RO_THRESH = 4294967296;\n  var TYPE_SHARED = 'shared';\n  var handleRollover$1 = function (value, reference) {\n    var direction = 1;\n    if (value > reference) {\n      // If the current timestamp value is greater than our reference timestamp and we detect a\n      // timestamp rollover, this means the roll over is happening in the opposite direction.\n      // Example scenario: Enter a long stream/video just after a rollover occurred. The reference\n      // point will be set to a small number, e.g. 1. The user then seeks backwards over the\n      // rollover point. In loading this segment, the timestamp values will be very large,\n      // e.g. 2^33 - 1. Since this comes before the data we loaded previously, we want to adjust\n      // the time stamp to be `value - 2^33`.\n      direction = -1;\n    } // Note: A seek forwards or back that is greater than the RO_THRESH (2^32, ~13 hours) will\n    // cause an incorrect adjustment.\n\n    while (Math.abs(reference - value) > RO_THRESH) {\n      value += direction * MAX_TS;\n    }\n    return value;\n  };\n  var TimestampRolloverStream$1 = function (type) {\n    var lastDTS, referenceDTS;\n    TimestampRolloverStream$1.prototype.init.call(this); // The \"shared\" type is used in cases where a stream will contain muxed\n    // video and audio. We could use `undefined` here, but having a string\n    // makes debugging a little clearer.\n\n    this.type_ = type || TYPE_SHARED;\n    this.push = function (data) {\n      // Any \"shared\" rollover streams will accept _all_ data. Otherwise,\n      // streams will only accept data that matches their type.\n      if (this.type_ !== TYPE_SHARED && data.type !== this.type_) {\n        return;\n      }\n      if (referenceDTS === undefined) {\n        referenceDTS = data.dts;\n      }\n      data.dts = handleRollover$1(data.dts, referenceDTS);\n      data.pts = handleRollover$1(data.pts, referenceDTS);\n      lastDTS = data.dts;\n      this.trigger('data', data);\n    };\n    this.flush = function () {\n      referenceDTS = lastDTS;\n      this.trigger('done');\n    };\n    this.endTimeline = function () {\n      this.flush();\n      this.trigger('endedtimeline');\n    };\n    this.discontinuity = function () {\n      referenceDTS = void 0;\n      lastDTS = void 0;\n    };\n    this.reset = function () {\n      this.discontinuity();\n      this.trigger('reset');\n    };\n  };\n  TimestampRolloverStream$1.prototype = new Stream$6();\n  var timestampRolloverStream = {\n    TimestampRolloverStream: TimestampRolloverStream$1,\n    handleRollover: handleRollover$1\n  }; // Once IE11 support is dropped, this function should be removed.\n\n  var typedArrayIndexOf$1 = (typedArray, element, fromIndex) => {\n    if (!typedArray) {\n      return -1;\n    }\n    var currentIndex = fromIndex;\n    for (; currentIndex < typedArray.length; currentIndex++) {\n      if (typedArray[currentIndex] === element) {\n        return currentIndex;\n      }\n    }\n    return -1;\n  };\n  var typedArray = {\n    typedArrayIndexOf: typedArrayIndexOf$1\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * Tools for parsing ID3 frame data\n   * @see http://id3.org/id3v2.3.0\n   */\n\n  var typedArrayIndexOf = typedArray.typedArrayIndexOf,\n    // Frames that allow different types of text encoding contain a text\n    // encoding description byte [ID3v2.4.0 section 4.]\n    textEncodingDescriptionByte = {\n      Iso88591: 0x00,\n      // ISO-8859-1, terminated with \\0.\n      Utf16: 0x01,\n      // UTF-16 encoded Unicode BOM, terminated with \\0\\0\n      Utf16be: 0x02,\n      // UTF-16BE encoded Unicode, without BOM, terminated with \\0\\0\n      Utf8: 0x03 // UTF-8 encoded Unicode, terminated with \\0\n    },\n    // return a percent-encoded representation of the specified byte range\n    // @see http://en.wikipedia.org/wiki/Percent-encoding \n    percentEncode$1 = function (bytes, start, end) {\n      var i,\n        result = '';\n      for (i = start; i < end; i++) {\n        result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n      }\n      return result;\n    },\n    // return the string representation of the specified byte range,\n    // interpreted as UTf-8.\n    parseUtf8 = function (bytes, start, end) {\n      return decodeURIComponent(percentEncode$1(bytes, start, end));\n    },\n    // return the string representation of the specified byte range,\n    // interpreted as ISO-8859-1.\n    parseIso88591$1 = function (bytes, start, end) {\n      return unescape(percentEncode$1(bytes, start, end)); // jshint ignore:line\n    },\n    parseSyncSafeInteger$1 = function (data) {\n      return data[0] << 21 | data[1] << 14 | data[2] << 7 | data[3];\n    },\n    frameParsers = {\n      'APIC': function (frame) {\n        var i = 1,\n          mimeTypeEndIndex,\n          descriptionEndIndex,\n          LINK_MIME_TYPE = '-->';\n        if (frame.data[0] !== textEncodingDescriptionByte.Utf8) {\n          // ignore frames with unrecognized character encodings\n          return;\n        } // parsing fields [ID3v2.4.0 section 4.14.]\n\n        mimeTypeEndIndex = typedArrayIndexOf(frame.data, 0, i);\n        if (mimeTypeEndIndex < 0) {\n          // malformed frame\n          return;\n        } // parsing Mime type field (terminated with \\0)\n\n        frame.mimeType = parseIso88591$1(frame.data, i, mimeTypeEndIndex);\n        i = mimeTypeEndIndex + 1; // parsing 1-byte Picture Type field\n\n        frame.pictureType = frame.data[i];\n        i++;\n        descriptionEndIndex = typedArrayIndexOf(frame.data, 0, i);\n        if (descriptionEndIndex < 0) {\n          // malformed frame\n          return;\n        } // parsing Description field (terminated with \\0)\n\n        frame.description = parseUtf8(frame.data, i, descriptionEndIndex);\n        i = descriptionEndIndex + 1;\n        if (frame.mimeType === LINK_MIME_TYPE) {\n          // parsing Picture Data field as URL (always represented as ISO-8859-1 [ID3v2.4.0 section 4.])\n          frame.url = parseIso88591$1(frame.data, i, frame.data.length);\n        } else {\n          // parsing Picture Data field as binary data\n          frame.pictureData = frame.data.subarray(i, frame.data.length);\n        }\n      },\n      'T*': function (frame) {\n        if (frame.data[0] !== textEncodingDescriptionByte.Utf8) {\n          // ignore frames with unrecognized character encodings\n          return;\n        } // parse text field, do not include null terminator in the frame value\n        // frames that allow different types of encoding contain terminated text [ID3v2.4.0 section 4.]\n\n        frame.value = parseUtf8(frame.data, 1, frame.data.length).replace(/\\0*$/, ''); // text information frames supports multiple strings, stored as a terminator separated list [ID3v2.4.0 section 4.2.]\n\n        frame.values = frame.value.split('\\0');\n      },\n      'TXXX': function (frame) {\n        var descriptionEndIndex;\n        if (frame.data[0] !== textEncodingDescriptionByte.Utf8) {\n          // ignore frames with unrecognized character encodings\n          return;\n        }\n        descriptionEndIndex = typedArrayIndexOf(frame.data, 0, 1);\n        if (descriptionEndIndex === -1) {\n          return;\n        } // parse the text fields\n\n        frame.description = parseUtf8(frame.data, 1, descriptionEndIndex); // do not include the null terminator in the tag value\n        // frames that allow different types of encoding contain terminated text\n        // [ID3v2.4.0 section 4.]\n\n        frame.value = parseUtf8(frame.data, descriptionEndIndex + 1, frame.data.length).replace(/\\0*$/, '');\n        frame.data = frame.value;\n      },\n      'W*': function (frame) {\n        // parse URL field; URL fields are always represented as ISO-8859-1 [ID3v2.4.0 section 4.]\n        // if the value is followed by a string termination all the following information should be ignored [ID3v2.4.0 section 4.3]\n        frame.url = parseIso88591$1(frame.data, 0, frame.data.length).replace(/\\0.*$/, '');\n      },\n      'WXXX': function (frame) {\n        var descriptionEndIndex;\n        if (frame.data[0] !== textEncodingDescriptionByte.Utf8) {\n          // ignore frames with unrecognized character encodings\n          return;\n        }\n        descriptionEndIndex = typedArrayIndexOf(frame.data, 0, 1);\n        if (descriptionEndIndex === -1) {\n          return;\n        } // parse the description and URL fields\n\n        frame.description = parseUtf8(frame.data, 1, descriptionEndIndex); // URL fields are always represented as ISO-8859-1 [ID3v2.4.0 section 4.]\n        // if the value is followed by a string termination all the following information\n        // should be ignored [ID3v2.4.0 section 4.3]\n\n        frame.url = parseIso88591$1(frame.data, descriptionEndIndex + 1, frame.data.length).replace(/\\0.*$/, '');\n      },\n      'PRIV': function (frame) {\n        var i;\n        for (i = 0; i < frame.data.length; i++) {\n          if (frame.data[i] === 0) {\n            // parse the description and URL fields\n            frame.owner = parseIso88591$1(frame.data, 0, i);\n            break;\n          }\n        }\n        frame.privateData = frame.data.subarray(i + 1);\n        frame.data = frame.privateData;\n      }\n    };\n  var parseId3Frames$1 = function (data) {\n    var frameSize,\n      frameHeader,\n      frameStart = 10,\n      tagSize = 0,\n      frames = []; // If we don't have enough data for a header, 10 bytes, \n    // or 'ID3' in the first 3 bytes this is not a valid ID3 tag.\n\n    if (data.length < 10 || data[0] !== 'I'.charCodeAt(0) || data[1] !== 'D'.charCodeAt(0) || data[2] !== '3'.charCodeAt(0)) {\n      return;\n    } // the frame size is transmitted as a 28-bit integer in the\n    // last four bytes of the ID3 header.\n    // The most significant bit of each byte is dropped and the\n    // results concatenated to recover the actual value.\n\n    tagSize = parseSyncSafeInteger$1(data.subarray(6, 10)); // ID3 reports the tag size excluding the header but it's more\n    // convenient for our comparisons to include it\n\n    tagSize += 10; // check bit 6 of byte 5 for the extended header flag.\n\n    var hasExtendedHeader = data[5] & 0x40;\n    if (hasExtendedHeader) {\n      // advance the frame start past the extended header\n      frameStart += 4; // header size field\n\n      frameStart += parseSyncSafeInteger$1(data.subarray(10, 14));\n      tagSize -= parseSyncSafeInteger$1(data.subarray(16, 20)); // clip any padding off the end\n    } // parse one or more ID3 frames\n    // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n\n    do {\n      // determine the number of bytes in this frame\n      frameSize = parseSyncSafeInteger$1(data.subarray(frameStart + 4, frameStart + 8));\n      if (frameSize < 1) {\n        break;\n      }\n      frameHeader = String.fromCharCode(data[frameStart], data[frameStart + 1], data[frameStart + 2], data[frameStart + 3]);\n      var frame = {\n        id: frameHeader,\n        data: data.subarray(frameStart + 10, frameStart + frameSize + 10)\n      };\n      frame.key = frame.id; // parse frame values\n\n      if (frameParsers[frame.id]) {\n        // use frame specific parser\n        frameParsers[frame.id](frame);\n      } else if (frame.id[0] === 'T') {\n        // use text frame generic parser\n        frameParsers['T*'](frame);\n      } else if (frame.id[0] === 'W') {\n        // use URL link frame generic parser\n        frameParsers['W*'](frame);\n      }\n      frames.push(frame);\n      frameStart += 10; // advance past the frame header\n\n      frameStart += frameSize; // advance past the frame body\n    } while (frameStart < tagSize);\n    return frames;\n  };\n  var parseId3 = {\n    parseId3Frames: parseId3Frames$1,\n    parseSyncSafeInteger: parseSyncSafeInteger$1,\n    frameParsers: frameParsers\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * Accepts program elementary stream (PES) data events and parses out\n   * ID3 metadata from them, if present.\n   * @see http://id3.org/id3v2.3.0\n   */\n\n  var Stream$5 = stream,\n    StreamTypes$3 = streamTypes,\n    id3 = parseId3,\n    MetadataStream;\n  MetadataStream = function (options) {\n    var settings = {\n        // the bytes of the program-level descriptor field in MP2T\n        // see ISO/IEC 13818-1:2013 (E), section 2.6 \"Program and\n        // program element descriptors\"\n        descriptor: options && options.descriptor\n      },\n      // the total size in bytes of the ID3 tag being parsed\n      tagSize = 0,\n      // tag data that is not complete enough to be parsed\n      buffer = [],\n      // the total number of bytes currently in the buffer\n      bufferSize = 0,\n      i;\n    MetadataStream.prototype.init.call(this); // calculate the text track in-band metadata track dispatch type\n    // https://html.spec.whatwg.org/multipage/embedded-content.html#steps-to-expose-a-media-resource-specific-text-track\n\n    this.dispatchType = StreamTypes$3.METADATA_STREAM_TYPE.toString(16);\n    if (settings.descriptor) {\n      for (i = 0; i < settings.descriptor.length; i++) {\n        this.dispatchType += ('00' + settings.descriptor[i].toString(16)).slice(-2);\n      }\n    }\n    this.push = function (chunk) {\n      var tag, frameStart, frameSize, frame, i, frameHeader;\n      if (chunk.type !== 'timed-metadata') {\n        return;\n      } // if data_alignment_indicator is set in the PES header,\n      // we must have the start of a new ID3 tag. Assume anything\n      // remaining in the buffer was malformed and throw it out\n\n      if (chunk.dataAlignmentIndicator) {\n        bufferSize = 0;\n        buffer.length = 0;\n      } // ignore events that don't look like ID3 data\n\n      if (buffer.length === 0 && (chunk.data.length < 10 || chunk.data[0] !== 'I'.charCodeAt(0) || chunk.data[1] !== 'D'.charCodeAt(0) || chunk.data[2] !== '3'.charCodeAt(0))) {\n        this.trigger('log', {\n          level: 'warn',\n          message: 'Skipping unrecognized metadata packet'\n        });\n        return;\n      } // add this chunk to the data we've collected so far\n\n      buffer.push(chunk);\n      bufferSize += chunk.data.byteLength; // grab the size of the entire frame from the ID3 header\n\n      if (buffer.length === 1) {\n        // the frame size is transmitted as a 28-bit integer in the\n        // last four bytes of the ID3 header.\n        // The most significant bit of each byte is dropped and the\n        // results concatenated to recover the actual value.\n        tagSize = id3.parseSyncSafeInteger(chunk.data.subarray(6, 10)); // ID3 reports the tag size excluding the header but it's more\n        // convenient for our comparisons to include it\n\n        tagSize += 10;\n      } // if the entire frame has not arrived, wait for more data\n\n      if (bufferSize < tagSize) {\n        return;\n      } // collect the entire frame so it can be parsed\n\n      tag = {\n        data: new Uint8Array(tagSize),\n        frames: [],\n        pts: buffer[0].pts,\n        dts: buffer[0].dts\n      };\n      for (i = 0; i < tagSize;) {\n        tag.data.set(buffer[0].data.subarray(0, tagSize - i), i);\n        i += buffer[0].data.byteLength;\n        bufferSize -= buffer[0].data.byteLength;\n        buffer.shift();\n      } // find the start of the first frame and the end of the tag\n\n      frameStart = 10;\n      if (tag.data[5] & 0x40) {\n        // advance the frame start past the extended header\n        frameStart += 4; // header size field\n\n        frameStart += id3.parseSyncSafeInteger(tag.data.subarray(10, 14)); // clip any padding off the end\n\n        tagSize -= id3.parseSyncSafeInteger(tag.data.subarray(16, 20));\n      } // parse one or more ID3 frames\n      // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n\n      do {\n        // determine the number of bytes in this frame\n        frameSize = id3.parseSyncSafeInteger(tag.data.subarray(frameStart + 4, frameStart + 8));\n        if (frameSize < 1) {\n          this.trigger('log', {\n            level: 'warn',\n            message: 'Malformed ID3 frame encountered. Skipping remaining metadata parsing.'\n          }); // If the frame is malformed, don't parse any further frames but allow previous valid parsed frames\n          // to be sent along.\n\n          break;\n        }\n        frameHeader = String.fromCharCode(tag.data[frameStart], tag.data[frameStart + 1], tag.data[frameStart + 2], tag.data[frameStart + 3]);\n        frame = {\n          id: frameHeader,\n          data: tag.data.subarray(frameStart + 10, frameStart + frameSize + 10)\n        };\n        frame.key = frame.id; // parse frame values\n\n        if (id3.frameParsers[frame.id]) {\n          // use frame specific parser\n          id3.frameParsers[frame.id](frame);\n        } else if (frame.id[0] === 'T') {\n          // use text frame generic parser\n          id3.frameParsers['T*'](frame);\n        } else if (frame.id[0] === 'W') {\n          // use URL link frame generic parser\n          id3.frameParsers['W*'](frame);\n        } // handle the special PRIV frame used to indicate the start\n        // time for raw AAC data\n\n        if (frame.owner === 'com.apple.streaming.transportStreamTimestamp') {\n          var d = frame.data,\n            size = (d[3] & 0x01) << 30 | d[4] << 22 | d[5] << 14 | d[6] << 6 | d[7] >>> 2;\n          size *= 4;\n          size += d[7] & 0x03;\n          frame.timeStamp = size; // in raw AAC, all subsequent data will be timestamped based\n          // on the value of this frame\n          // we couldn't have known the appropriate pts and dts before\n          // parsing this ID3 tag so set those values now\n\n          if (tag.pts === undefined && tag.dts === undefined) {\n            tag.pts = frame.timeStamp;\n            tag.dts = frame.timeStamp;\n          }\n          this.trigger('timestamp', frame);\n        }\n        tag.frames.push(frame);\n        frameStart += 10; // advance past the frame header\n\n        frameStart += frameSize; // advance past the frame body\n      } while (frameStart < tagSize);\n      this.trigger('data', tag);\n    };\n  };\n  MetadataStream.prototype = new Stream$5();\n  var metadataStream = MetadataStream;\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * A stream-based mp2t to mp4 converter. This utility can be used to\n   * deliver mp4s to a SourceBuffer on platforms that support native\n   * Media Source Extensions.\n   */\n\n  var Stream$4 = stream,\n    CaptionStream$1 = captionStream,\n    StreamTypes$2 = streamTypes,\n    TimestampRolloverStream = timestampRolloverStream.TimestampRolloverStream; // object types\n\n  var TransportPacketStream, TransportParseStream, ElementaryStream; // constants\n\n  var MP2T_PACKET_LENGTH$1 = 188,\n    // bytes\n    SYNC_BYTE$1 = 0x47;\n  /**\n   * Splits an incoming stream of binary data into MPEG-2 Transport\n   * Stream packets.\n   */\n\n  TransportPacketStream = function () {\n    var buffer = new Uint8Array(MP2T_PACKET_LENGTH$1),\n      bytesInBuffer = 0;\n    TransportPacketStream.prototype.init.call(this); // Deliver new bytes to the stream.\n\n    /**\n     * Split a stream of data into M2TS packets\n    **/\n\n    this.push = function (bytes) {\n      var startIndex = 0,\n        endIndex = MP2T_PACKET_LENGTH$1,\n        everything; // If there are bytes remaining from the last segment, prepend them to the\n      // bytes that were pushed in\n\n      if (bytesInBuffer) {\n        everything = new Uint8Array(bytes.byteLength + bytesInBuffer);\n        everything.set(buffer.subarray(0, bytesInBuffer));\n        everything.set(bytes, bytesInBuffer);\n        bytesInBuffer = 0;\n      } else {\n        everything = bytes;\n      } // While we have enough data for a packet\n\n      while (endIndex < everything.byteLength) {\n        // Look for a pair of start and end sync bytes in the data..\n        if (everything[startIndex] === SYNC_BYTE$1 && everything[endIndex] === SYNC_BYTE$1) {\n          // We found a packet so emit it and jump one whole packet forward in\n          // the stream\n          this.trigger('data', everything.subarray(startIndex, endIndex));\n          startIndex += MP2T_PACKET_LENGTH$1;\n          endIndex += MP2T_PACKET_LENGTH$1;\n          continue;\n        } // If we get here, we have somehow become de-synchronized and we need to step\n        // forward one byte at a time until we find a pair of sync bytes that denote\n        // a packet\n\n        startIndex++;\n        endIndex++;\n      } // If there was some data left over at the end of the segment that couldn't\n      // possibly be a whole packet, keep it because it might be the start of a packet\n      // that continues in the next segment\n\n      if (startIndex < everything.byteLength) {\n        buffer.set(everything.subarray(startIndex), 0);\n        bytesInBuffer = everything.byteLength - startIndex;\n      }\n    };\n    /**\n     * Passes identified M2TS packets to the TransportParseStream to be parsed\n    **/\n\n    this.flush = function () {\n      // If the buffer contains a whole packet when we are being flushed, emit it\n      // and empty the buffer. Otherwise hold onto the data because it may be\n      // important for decoding the next segment\n      if (bytesInBuffer === MP2T_PACKET_LENGTH$1 && buffer[0] === SYNC_BYTE$1) {\n        this.trigger('data', buffer);\n        bytesInBuffer = 0;\n      }\n      this.trigger('done');\n    };\n    this.endTimeline = function () {\n      this.flush();\n      this.trigger('endedtimeline');\n    };\n    this.reset = function () {\n      bytesInBuffer = 0;\n      this.trigger('reset');\n    };\n  };\n  TransportPacketStream.prototype = new Stream$4();\n  /**\n   * Accepts an MP2T TransportPacketStream and emits data events with parsed\n   * forms of the individual transport stream packets.\n   */\n\n  TransportParseStream = function () {\n    var parsePsi, parsePat, parsePmt, self;\n    TransportParseStream.prototype.init.call(this);\n    self = this;\n    this.packetsWaitingForPmt = [];\n    this.programMapTable = undefined;\n    parsePsi = function (payload, psi) {\n      var offset = 0; // PSI packets may be split into multiple sections and those\n      // sections may be split into multiple packets. If a PSI\n      // section starts in this packet, the payload_unit_start_indicator\n      // will be true and the first byte of the payload will indicate\n      // the offset from the current position to the start of the\n      // section.\n\n      if (psi.payloadUnitStartIndicator) {\n        offset += payload[offset] + 1;\n      }\n      if (psi.type === 'pat') {\n        parsePat(payload.subarray(offset), psi);\n      } else {\n        parsePmt(payload.subarray(offset), psi);\n      }\n    };\n    parsePat = function (payload, pat) {\n      pat.section_number = payload[7]; // eslint-disable-line camelcase\n\n      pat.last_section_number = payload[8]; // eslint-disable-line camelcase\n      // skip the PSI header and parse the first PMT entry\n\n      self.pmtPid = (payload[10] & 0x1F) << 8 | payload[11];\n      pat.pmtPid = self.pmtPid;\n    };\n    /**\n     * Parse out the relevant fields of a Program Map Table (PMT).\n     * @param payload {Uint8Array} the PMT-specific portion of an MP2T\n     * packet. The first byte in this array should be the table_id\n     * field.\n     * @param pmt {object} the object that should be decorated with\n     * fields parsed from the PMT.\n     */\n\n    parsePmt = function (payload, pmt) {\n      var sectionLength, tableEnd, programInfoLength, offset; // PMTs can be sent ahead of the time when they should actually\n      // take effect. We don't believe this should ever be the case\n      // for HLS but we'll ignore \"forward\" PMT declarations if we see\n      // them. Future PMT declarations have the current_next_indicator\n      // set to zero.\n\n      if (!(payload[5] & 0x01)) {\n        return;\n      } // overwrite any existing program map table\n\n      self.programMapTable = {\n        video: null,\n        audio: null,\n        'timed-metadata': {}\n      }; // the mapping table ends at the end of the current section\n\n      sectionLength = (payload[1] & 0x0f) << 8 | payload[2];\n      tableEnd = 3 + sectionLength - 4; // to determine where the table is, we have to figure out how\n      // long the program info descriptors are\n\n      programInfoLength = (payload[10] & 0x0f) << 8 | payload[11]; // advance the offset to the first entry in the mapping table\n\n      offset = 12 + programInfoLength;\n      while (offset < tableEnd) {\n        var streamType = payload[offset];\n        var pid = (payload[offset + 1] & 0x1F) << 8 | payload[offset + 2]; // only map a single elementary_pid for audio and video stream types\n        // TODO: should this be done for metadata too? for now maintain behavior of\n        //       multiple metadata streams\n\n        if (streamType === StreamTypes$2.H264_STREAM_TYPE && self.programMapTable.video === null) {\n          self.programMapTable.video = pid;\n        } else if (streamType === StreamTypes$2.ADTS_STREAM_TYPE && self.programMapTable.audio === null) {\n          self.programMapTable.audio = pid;\n        } else if (streamType === StreamTypes$2.METADATA_STREAM_TYPE) {\n          // map pid to stream type for metadata streams\n          self.programMapTable['timed-metadata'][pid] = streamType;\n        } // move to the next table entry\n        // skip past the elementary stream descriptors, if present\n\n        offset += ((payload[offset + 3] & 0x0F) << 8 | payload[offset + 4]) + 5;\n      } // record the map on the packet as well\n\n      pmt.programMapTable = self.programMapTable;\n    };\n    /**\n     * Deliver a new MP2T packet to the next stream in the pipeline.\n     */\n\n    this.push = function (packet) {\n      var result = {},\n        offset = 4;\n      result.payloadUnitStartIndicator = !!(packet[1] & 0x40); // pid is a 13-bit field starting at the last bit of packet[1]\n\n      result.pid = packet[1] & 0x1f;\n      result.pid <<= 8;\n      result.pid |= packet[2]; // if an adaption field is present, its length is specified by the\n      // fifth byte of the TS packet header. The adaptation field is\n      // used to add stuffing to PES packets that don't fill a complete\n      // TS packet, and to specify some forms of timing and control data\n      // that we do not currently use.\n\n      if ((packet[3] & 0x30) >>> 4 > 0x01) {\n        offset += packet[offset] + 1;\n      } // parse the rest of the packet based on the type\n\n      if (result.pid === 0) {\n        result.type = 'pat';\n        parsePsi(packet.subarray(offset), result);\n        this.trigger('data', result);\n      } else if (result.pid === this.pmtPid) {\n        result.type = 'pmt';\n        parsePsi(packet.subarray(offset), result);\n        this.trigger('data', result); // if there are any packets waiting for a PMT to be found, process them now\n\n        while (this.packetsWaitingForPmt.length) {\n          this.processPes_.apply(this, this.packetsWaitingForPmt.shift());\n        }\n      } else if (this.programMapTable === undefined) {\n        // When we have not seen a PMT yet, defer further processing of\n        // PES packets until one has been parsed\n        this.packetsWaitingForPmt.push([packet, offset, result]);\n      } else {\n        this.processPes_(packet, offset, result);\n      }\n    };\n    this.processPes_ = function (packet, offset, result) {\n      // set the appropriate stream type\n      if (result.pid === this.programMapTable.video) {\n        result.streamType = StreamTypes$2.H264_STREAM_TYPE;\n      } else if (result.pid === this.programMapTable.audio) {\n        result.streamType = StreamTypes$2.ADTS_STREAM_TYPE;\n      } else {\n        // if not video or audio, it is timed-metadata or unknown\n        // if unknown, streamType will be undefined\n        result.streamType = this.programMapTable['timed-metadata'][result.pid];\n      }\n      result.type = 'pes';\n      result.data = packet.subarray(offset);\n      this.trigger('data', result);\n    };\n  };\n  TransportParseStream.prototype = new Stream$4();\n  TransportParseStream.STREAM_TYPES = {\n    h264: 0x1b,\n    adts: 0x0f\n  };\n  /**\n   * Reconsistutes program elementary stream (PES) packets from parsed\n   * transport stream packets. That is, if you pipe an\n   * mp2t.TransportParseStream into a mp2t.ElementaryStream, the output\n   * events will be events which capture the bytes for individual PES\n   * packets plus relevant metadata that has been extracted from the\n   * container.\n   */\n\n  ElementaryStream = function () {\n    var self = this,\n      segmentHadPmt = false,\n      // PES packet fragments\n      video = {\n        data: [],\n        size: 0\n      },\n      audio = {\n        data: [],\n        size: 0\n      },\n      timedMetadata = {\n        data: [],\n        size: 0\n      },\n      programMapTable,\n      parsePes = function (payload, pes) {\n        var ptsDtsFlags;\n        const startPrefix = payload[0] << 16 | payload[1] << 8 | payload[2]; // default to an empty array\n\n        pes.data = new Uint8Array(); // In certain live streams, the start of a TS fragment has ts packets\n        // that are frame data that is continuing from the previous fragment. This\n        // is to check that the pes data is the start of a new pes payload\n\n        if (startPrefix !== 1) {\n          return;\n        } // get the packet length, this will be 0 for video\n\n        pes.packetLength = 6 + (payload[4] << 8 | payload[5]); // find out if this packets starts a new keyframe\n\n        pes.dataAlignmentIndicator = (payload[6] & 0x04) !== 0; // PES packets may be annotated with a PTS value, or a PTS value\n        // and a DTS value. Determine what combination of values is\n        // available to work with.\n\n        ptsDtsFlags = payload[7]; // PTS and DTS are normally stored as a 33-bit number.  Javascript\n        // performs all bitwise operations on 32-bit integers but javascript\n        // supports a much greater range (52-bits) of integer using standard\n        // mathematical operations.\n        // We construct a 31-bit value using bitwise operators over the 31\n        // most significant bits and then multiply by 4 (equal to a left-shift\n        // of 2) before we add the final 2 least significant bits of the\n        // timestamp (equal to an OR.)\n\n        if (ptsDtsFlags & 0xC0) {\n          // the PTS and DTS are not written out directly. For information\n          // on how they are encoded, see\n          // http://dvd.sourceforge.net/dvdinfo/pes-hdr.html\n          pes.pts = (payload[9] & 0x0E) << 27 | (payload[10] & 0xFF) << 20 | (payload[11] & 0xFE) << 12 | (payload[12] & 0xFF) << 5 | (payload[13] & 0xFE) >>> 3;\n          pes.pts *= 4; // Left shift by 2\n\n          pes.pts += (payload[13] & 0x06) >>> 1; // OR by the two LSBs\n\n          pes.dts = pes.pts;\n          if (ptsDtsFlags & 0x40) {\n            pes.dts = (payload[14] & 0x0E) << 27 | (payload[15] & 0xFF) << 20 | (payload[16] & 0xFE) << 12 | (payload[17] & 0xFF) << 5 | (payload[18] & 0xFE) >>> 3;\n            pes.dts *= 4; // Left shift by 2\n\n            pes.dts += (payload[18] & 0x06) >>> 1; // OR by the two LSBs\n          }\n        } // the data section starts immediately after the PES header.\n        // pes_header_data_length specifies the number of header bytes\n        // that follow the last byte of the field.\n\n        pes.data = payload.subarray(9 + payload[8]);\n      },\n      /**\n        * Pass completely parsed PES packets to the next stream in the pipeline\n       **/\n      flushStream = function (stream, type, forceFlush) {\n        var packetData = new Uint8Array(stream.size),\n          event = {\n            type: type\n          },\n          i = 0,\n          offset = 0,\n          packetFlushable = false,\n          fragment; // do nothing if there is not enough buffered data for a complete\n        // PES header\n\n        if (!stream.data.length || stream.size < 9) {\n          return;\n        }\n        event.trackId = stream.data[0].pid; // reassemble the packet\n\n        for (i = 0; i < stream.data.length; i++) {\n          fragment = stream.data[i];\n          packetData.set(fragment.data, offset);\n          offset += fragment.data.byteLength;\n        } // parse assembled packet's PES header\n\n        parsePes(packetData, event); // non-video PES packets MUST have a non-zero PES_packet_length\n        // check that there is enough stream data to fill the packet\n\n        packetFlushable = type === 'video' || event.packetLength <= stream.size; // flush pending packets if the conditions are right\n\n        if (forceFlush || packetFlushable) {\n          stream.size = 0;\n          stream.data.length = 0;\n        } // only emit packets that are complete. this is to avoid assembling\n        // incomplete PES packets due to poor segmentation\n\n        if (packetFlushable) {\n          self.trigger('data', event);\n        }\n      };\n    ElementaryStream.prototype.init.call(this);\n    /**\n     * Identifies M2TS packet types and parses PES packets using metadata\n     * parsed from the PMT\n     **/\n\n    this.push = function (data) {\n      ({\n        pat: function () {// we have to wait for the PMT to arrive as well before we\n          // have any meaningful metadata\n        },\n        pes: function () {\n          var stream, streamType;\n          switch (data.streamType) {\n            case StreamTypes$2.H264_STREAM_TYPE:\n              stream = video;\n              streamType = 'video';\n              break;\n            case StreamTypes$2.ADTS_STREAM_TYPE:\n              stream = audio;\n              streamType = 'audio';\n              break;\n            case StreamTypes$2.METADATA_STREAM_TYPE:\n              stream = timedMetadata;\n              streamType = 'timed-metadata';\n              break;\n            default:\n              // ignore unknown stream types\n              return;\n          } // if a new packet is starting, we can flush the completed\n          // packet\n\n          if (data.payloadUnitStartIndicator) {\n            flushStream(stream, streamType, true);\n          } // buffer this fragment until we are sure we've received the\n          // complete payload\n\n          stream.data.push(data);\n          stream.size += data.data.byteLength;\n        },\n        pmt: function () {\n          var event = {\n            type: 'metadata',\n            tracks: []\n          };\n          programMapTable = data.programMapTable; // translate audio and video streams to tracks\n\n          if (programMapTable.video !== null) {\n            event.tracks.push({\n              timelineStartInfo: {\n                baseMediaDecodeTime: 0\n              },\n              id: +programMapTable.video,\n              codec: 'avc',\n              type: 'video'\n            });\n          }\n          if (programMapTable.audio !== null) {\n            event.tracks.push({\n              timelineStartInfo: {\n                baseMediaDecodeTime: 0\n              },\n              id: +programMapTable.audio,\n              codec: 'adts',\n              type: 'audio'\n            });\n          }\n          segmentHadPmt = true;\n          self.trigger('data', event);\n        }\n      })[data.type]();\n    };\n    this.reset = function () {\n      video.size = 0;\n      video.data.length = 0;\n      audio.size = 0;\n      audio.data.length = 0;\n      this.trigger('reset');\n    };\n    /**\n     * Flush any remaining input. Video PES packets may be of variable\n     * length. Normally, the start of a new video packet can trigger the\n     * finalization of the previous packet. That is not possible if no\n     * more video is forthcoming, however. In that case, some other\n     * mechanism (like the end of the file) has to be employed. When it is\n     * clear that no additional data is forthcoming, calling this method\n     * will flush the buffered packets.\n     */\n\n    this.flushStreams_ = function () {\n      // !!THIS ORDER IS IMPORTANT!!\n      // video first then audio\n      flushStream(video, 'video');\n      flushStream(audio, 'audio');\n      flushStream(timedMetadata, 'timed-metadata');\n    };\n    this.flush = function () {\n      // if on flush we haven't had a pmt emitted\n      // and we have a pmt to emit. emit the pmt\n      // so that we trigger a trackinfo downstream.\n      if (!segmentHadPmt && programMapTable) {\n        var pmt = {\n          type: 'metadata',\n          tracks: []\n        }; // translate audio and video streams to tracks\n\n        if (programMapTable.video !== null) {\n          pmt.tracks.push({\n            timelineStartInfo: {\n              baseMediaDecodeTime: 0\n            },\n            id: +programMapTable.video,\n            codec: 'avc',\n            type: 'video'\n          });\n        }\n        if (programMapTable.audio !== null) {\n          pmt.tracks.push({\n            timelineStartInfo: {\n              baseMediaDecodeTime: 0\n            },\n            id: +programMapTable.audio,\n            codec: 'adts',\n            type: 'audio'\n          });\n        }\n        self.trigger('data', pmt);\n      }\n      segmentHadPmt = false;\n      this.flushStreams_();\n      this.trigger('done');\n    };\n  };\n  ElementaryStream.prototype = new Stream$4();\n  var m2ts$1 = {\n    PAT_PID: 0x0000,\n    MP2T_PACKET_LENGTH: MP2T_PACKET_LENGTH$1,\n    TransportPacketStream: TransportPacketStream,\n    TransportParseStream: TransportParseStream,\n    ElementaryStream: ElementaryStream,\n    TimestampRolloverStream: TimestampRolloverStream,\n    CaptionStream: CaptionStream$1.CaptionStream,\n    Cea608Stream: CaptionStream$1.Cea608Stream,\n    Cea708Stream: CaptionStream$1.Cea708Stream,\n    MetadataStream: metadataStream\n  };\n  for (var type in StreamTypes$2) {\n    if (StreamTypes$2.hasOwnProperty(type)) {\n      m2ts$1[type] = StreamTypes$2[type];\n    }\n  }\n  var m2ts_1 = m2ts$1;\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n\n  var Stream$3 = stream;\n  var ONE_SECOND_IN_TS$2 = clock$2.ONE_SECOND_IN_TS;\n  var AdtsStream$1;\n  var ADTS_SAMPLING_FREQUENCIES$1 = [96000, 88200, 64000, 48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000, 7350];\n  /*\n   * Accepts a ElementaryStream and emits data events with parsed\n   * AAC Audio Frames of the individual packets. Input audio in ADTS\n   * format is unpacked and re-emitted as AAC frames.\n   *\n   * @see http://wiki.multimedia.cx/index.php?title=ADTS\n   * @see http://wiki.multimedia.cx/?title=Understanding_AAC\n   */\n\n  AdtsStream$1 = function (handlePartialSegments) {\n    var buffer,\n      frameNum = 0;\n    AdtsStream$1.prototype.init.call(this);\n    this.skipWarn_ = function (start, end) {\n      this.trigger('log', {\n        level: 'warn',\n        message: `adts skiping bytes ${start} to ${end} in frame ${frameNum} outside syncword`\n      });\n    };\n    this.push = function (packet) {\n      var i = 0,\n        frameLength,\n        protectionSkipBytes,\n        oldBuffer,\n        sampleCount,\n        adtsFrameDuration;\n      if (!handlePartialSegments) {\n        frameNum = 0;\n      }\n      if (packet.type !== 'audio') {\n        // ignore non-audio data\n        return;\n      } // Prepend any data in the buffer to the input data so that we can parse\n      // aac frames the cross a PES packet boundary\n\n      if (buffer && buffer.length) {\n        oldBuffer = buffer;\n        buffer = new Uint8Array(oldBuffer.byteLength + packet.data.byteLength);\n        buffer.set(oldBuffer);\n        buffer.set(packet.data, oldBuffer.byteLength);\n      } else {\n        buffer = packet.data;\n      } // unpack any ADTS frames which have been fully received\n      // for details on the ADTS header, see http://wiki.multimedia.cx/index.php?title=ADTS\n\n      var skip; // We use i + 7 here because we want to be able to parse the entire header.\n      // If we don't have enough bytes to do that, then we definitely won't have a full frame.\n\n      while (i + 7 < buffer.length) {\n        // Look for the start of an ADTS header..\n        if (buffer[i] !== 0xFF || (buffer[i + 1] & 0xF6) !== 0xF0) {\n          if (typeof skip !== 'number') {\n            skip = i;\n          } // If a valid header was not found,  jump one forward and attempt to\n          // find a valid ADTS header starting at the next byte\n\n          i++;\n          continue;\n        }\n        if (typeof skip === 'number') {\n          this.skipWarn_(skip, i);\n          skip = null;\n        } // The protection skip bit tells us if we have 2 bytes of CRC data at the\n        // end of the ADTS header\n\n        protectionSkipBytes = (~buffer[i + 1] & 0x01) * 2; // Frame length is a 13 bit integer starting 16 bits from the\n        // end of the sync sequence\n        // NOTE: frame length includes the size of the header\n\n        frameLength = (buffer[i + 3] & 0x03) << 11 | buffer[i + 4] << 3 | (buffer[i + 5] & 0xe0) >> 5;\n        sampleCount = ((buffer[i + 6] & 0x03) + 1) * 1024;\n        adtsFrameDuration = sampleCount * ONE_SECOND_IN_TS$2 / ADTS_SAMPLING_FREQUENCIES$1[(buffer[i + 2] & 0x3c) >>> 2]; // If we don't have enough data to actually finish this ADTS frame,\n        // then we have to wait for more data\n\n        if (buffer.byteLength - i < frameLength) {\n          break;\n        } // Otherwise, deliver the complete AAC frame\n\n        this.trigger('data', {\n          pts: packet.pts + frameNum * adtsFrameDuration,\n          dts: packet.dts + frameNum * adtsFrameDuration,\n          sampleCount: sampleCount,\n          audioobjecttype: (buffer[i + 2] >>> 6 & 0x03) + 1,\n          channelcount: (buffer[i + 2] & 1) << 2 | (buffer[i + 3] & 0xc0) >>> 6,\n          samplerate: ADTS_SAMPLING_FREQUENCIES$1[(buffer[i + 2] & 0x3c) >>> 2],\n          samplingfrequencyindex: (buffer[i + 2] & 0x3c) >>> 2,\n          // assume ISO/IEC 14496-12 AudioSampleEntry default of 16\n          samplesize: 16,\n          // data is the frame without it's header\n          data: buffer.subarray(i + 7 + protectionSkipBytes, i + frameLength)\n        });\n        frameNum++;\n        i += frameLength;\n      }\n      if (typeof skip === 'number') {\n        this.skipWarn_(skip, i);\n        skip = null;\n      } // remove processed bytes from the buffer.\n\n      buffer = buffer.subarray(i);\n    };\n    this.flush = function () {\n      frameNum = 0;\n      this.trigger('done');\n    };\n    this.reset = function () {\n      buffer = void 0;\n      this.trigger('reset');\n    };\n    this.endTimeline = function () {\n      buffer = void 0;\n      this.trigger('endedtimeline');\n    };\n  };\n  AdtsStream$1.prototype = new Stream$3();\n  var adts = AdtsStream$1;\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n\n  var ExpGolomb$1;\n  /**\n   * Parser for exponential Golomb codes, a variable-bitwidth number encoding\n   * scheme used by h264.\n   */\n\n  ExpGolomb$1 = function (workingData) {\n    var\n      // the number of bytes left to examine in workingData\n      workingBytesAvailable = workingData.byteLength,\n      // the current word being examined\n      workingWord = 0,\n      // :uint\n      // the number of bits left to examine in the current word\n      workingBitsAvailable = 0; // :uint;\n    // ():uint\n\n    this.length = function () {\n      return 8 * workingBytesAvailable;\n    }; // ():uint\n\n    this.bitsAvailable = function () {\n      return 8 * workingBytesAvailable + workingBitsAvailable;\n    }; // ():void\n\n    this.loadWord = function () {\n      var position = workingData.byteLength - workingBytesAvailable,\n        workingBytes = new Uint8Array(4),\n        availableBytes = Math.min(4, workingBytesAvailable);\n      if (availableBytes === 0) {\n        throw new Error('no bytes available');\n      }\n      workingBytes.set(workingData.subarray(position, position + availableBytes));\n      workingWord = new DataView(workingBytes.buffer).getUint32(0); // track the amount of workingData that has been processed\n\n      workingBitsAvailable = availableBytes * 8;\n      workingBytesAvailable -= availableBytes;\n    }; // (count:int):void\n\n    this.skipBits = function (count) {\n      var skipBytes; // :int\n\n      if (workingBitsAvailable > count) {\n        workingWord <<= count;\n        workingBitsAvailable -= count;\n      } else {\n        count -= workingBitsAvailable;\n        skipBytes = Math.floor(count / 8);\n        count -= skipBytes * 8;\n        workingBytesAvailable -= skipBytes;\n        this.loadWord();\n        workingWord <<= count;\n        workingBitsAvailable -= count;\n      }\n    }; // (size:int):uint\n\n    this.readBits = function (size) {\n      var bits = Math.min(workingBitsAvailable, size),\n        // :uint\n        valu = workingWord >>> 32 - bits; // :uint\n      // if size > 31, handle error\n\n      workingBitsAvailable -= bits;\n      if (workingBitsAvailable > 0) {\n        workingWord <<= bits;\n      } else if (workingBytesAvailable > 0) {\n        this.loadWord();\n      }\n      bits = size - bits;\n      if (bits > 0) {\n        return valu << bits | this.readBits(bits);\n      }\n      return valu;\n    }; // ():uint\n\n    this.skipLeadingZeros = function () {\n      var leadingZeroCount; // :uint\n\n      for (leadingZeroCount = 0; leadingZeroCount < workingBitsAvailable; ++leadingZeroCount) {\n        if ((workingWord & 0x80000000 >>> leadingZeroCount) !== 0) {\n          // the first bit of working word is 1\n          workingWord <<= leadingZeroCount;\n          workingBitsAvailable -= leadingZeroCount;\n          return leadingZeroCount;\n        }\n      } // we exhausted workingWord and still have not found a 1\n\n      this.loadWord();\n      return leadingZeroCount + this.skipLeadingZeros();\n    }; // ():void\n\n    this.skipUnsignedExpGolomb = function () {\n      this.skipBits(1 + this.skipLeadingZeros());\n    }; // ():void\n\n    this.skipExpGolomb = function () {\n      this.skipBits(1 + this.skipLeadingZeros());\n    }; // ():uint\n\n    this.readUnsignedExpGolomb = function () {\n      var clz = this.skipLeadingZeros(); // :uint\n\n      return this.readBits(clz + 1) - 1;\n    }; // ():int\n\n    this.readExpGolomb = function () {\n      var valu = this.readUnsignedExpGolomb(); // :int\n\n      if (0x01 & valu) {\n        // the number is odd if the low order bit is set\n        return 1 + valu >>> 1; // add 1 to make it even, and divide by 2\n      }\n\n      return -1 * (valu >>> 1); // divide by two then make it negative\n    }; // Some convenience functions\n    // :Boolean\n\n    this.readBoolean = function () {\n      return this.readBits(1) === 1;\n    }; // ():int\n\n    this.readUnsignedByte = function () {\n      return this.readBits(8);\n    };\n    this.loadWord();\n  };\n  var expGolomb = ExpGolomb$1;\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n\n  var Stream$2 = stream;\n  var ExpGolomb = expGolomb;\n  var H264Stream$1, NalByteStream;\n  var PROFILES_WITH_OPTIONAL_SPS_DATA;\n  /**\n   * Accepts a NAL unit byte stream and unpacks the embedded NAL units.\n   */\n\n  NalByteStream = function () {\n    var syncPoint = 0,\n      i,\n      buffer;\n    NalByteStream.prototype.init.call(this);\n    /*\n     * Scans a byte stream and triggers a data event with the NAL units found.\n     * @param {Object} data Event received from H264Stream\n     * @param {Uint8Array} data.data The h264 byte stream to be scanned\n     *\n     * @see H264Stream.push\n     */\n\n    this.push = function (data) {\n      var swapBuffer;\n      if (!buffer) {\n        buffer = data.data;\n      } else {\n        swapBuffer = new Uint8Array(buffer.byteLength + data.data.byteLength);\n        swapBuffer.set(buffer);\n        swapBuffer.set(data.data, buffer.byteLength);\n        buffer = swapBuffer;\n      }\n      var len = buffer.byteLength; // Rec. ITU-T H.264, Annex B\n      // scan for NAL unit boundaries\n      // a match looks like this:\n      // 0 0 1 .. NAL .. 0 0 1\n      // ^ sync point        ^ i\n      // or this:\n      // 0 0 1 .. NAL .. 0 0 0\n      // ^ sync point        ^ i\n      // advance the sync point to a NAL start, if necessary\n\n      for (; syncPoint < len - 3; syncPoint++) {\n        if (buffer[syncPoint + 2] === 1) {\n          // the sync point is properly aligned\n          i = syncPoint + 5;\n          break;\n        }\n      }\n      while (i < len) {\n        // look at the current byte to determine if we've hit the end of\n        // a NAL unit boundary\n        switch (buffer[i]) {\n          case 0:\n            // skip past non-sync sequences\n            if (buffer[i - 1] !== 0) {\n              i += 2;\n              break;\n            } else if (buffer[i - 2] !== 0) {\n              i++;\n              break;\n            } // deliver the NAL unit if it isn't empty\n\n            if (syncPoint + 3 !== i - 2) {\n              this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n            } // drop trailing zeroes\n\n            do {\n              i++;\n            } while (buffer[i] !== 1 && i < len);\n            syncPoint = i - 2;\n            i += 3;\n            break;\n          case 1:\n            // skip past non-sync sequences\n            if (buffer[i - 1] !== 0 || buffer[i - 2] !== 0) {\n              i += 3;\n              break;\n            } // deliver the NAL unit\n\n            this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n            syncPoint = i - 2;\n            i += 3;\n            break;\n          default:\n            // the current byte isn't a one or zero, so it cannot be part\n            // of a sync sequence\n            i += 3;\n            break;\n        }\n      } // filter out the NAL units that were delivered\n\n      buffer = buffer.subarray(syncPoint);\n      i -= syncPoint;\n      syncPoint = 0;\n    };\n    this.reset = function () {\n      buffer = null;\n      syncPoint = 0;\n      this.trigger('reset');\n    };\n    this.flush = function () {\n      // deliver the last buffered NAL unit\n      if (buffer && buffer.byteLength > 3) {\n        this.trigger('data', buffer.subarray(syncPoint + 3));\n      } // reset the stream state\n\n      buffer = null;\n      syncPoint = 0;\n      this.trigger('done');\n    };\n    this.endTimeline = function () {\n      this.flush();\n      this.trigger('endedtimeline');\n    };\n  };\n  NalByteStream.prototype = new Stream$2(); // values of profile_idc that indicate additional fields are included in the SPS\n  // see Recommendation ITU-T H.264 (4/2013),\n  // 7.3.2.1.1 Sequence parameter set data syntax\n\n  PROFILES_WITH_OPTIONAL_SPS_DATA = {\n    100: true,\n    110: true,\n    122: true,\n    244: true,\n    44: true,\n    83: true,\n    86: true,\n    118: true,\n    128: true,\n    // TODO: the three profiles below don't\n    // appear to have sps data in the specificiation anymore?\n    138: true,\n    139: true,\n    134: true\n  };\n  /**\n   * Accepts input from a ElementaryStream and produces H.264 NAL unit data\n   * events.\n   */\n\n  H264Stream$1 = function () {\n    var nalByteStream = new NalByteStream(),\n      self,\n      trackId,\n      currentPts,\n      currentDts,\n      discardEmulationPreventionBytes,\n      readSequenceParameterSet,\n      skipScalingList;\n    H264Stream$1.prototype.init.call(this);\n    self = this;\n    /*\n     * Pushes a packet from a stream onto the NalByteStream\n     *\n     * @param {Object} packet - A packet received from a stream\n     * @param {Uint8Array} packet.data - The raw bytes of the packet\n     * @param {Number} packet.dts - Decode timestamp of the packet\n     * @param {Number} packet.pts - Presentation timestamp of the packet\n     * @param {Number} packet.trackId - The id of the h264 track this packet came from\n     * @param {('video'|'audio')} packet.type - The type of packet\n     *\n     */\n\n    this.push = function (packet) {\n      if (packet.type !== 'video') {\n        return;\n      }\n      trackId = packet.trackId;\n      currentPts = packet.pts;\n      currentDts = packet.dts;\n      nalByteStream.push(packet);\n    };\n    /*\n     * Identify NAL unit types and pass on the NALU, trackId, presentation and decode timestamps\n     * for the NALUs to the next stream component.\n     * Also, preprocess caption and sequence parameter NALUs.\n     *\n     * @param {Uint8Array} data - A NAL unit identified by `NalByteStream.push`\n     * @see NalByteStream.push\n     */\n\n    nalByteStream.on('data', function (data) {\n      var event = {\n        trackId: trackId,\n        pts: currentPts,\n        dts: currentDts,\n        data: data,\n        nalUnitTypeCode: data[0] & 0x1f\n      };\n      switch (event.nalUnitTypeCode) {\n        case 0x05:\n          event.nalUnitType = 'slice_layer_without_partitioning_rbsp_idr';\n          break;\n        case 0x06:\n          event.nalUnitType = 'sei_rbsp';\n          event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n          break;\n        case 0x07:\n          event.nalUnitType = 'seq_parameter_set_rbsp';\n          event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n          event.config = readSequenceParameterSet(event.escapedRBSP);\n          break;\n        case 0x08:\n          event.nalUnitType = 'pic_parameter_set_rbsp';\n          break;\n        case 0x09:\n          event.nalUnitType = 'access_unit_delimiter_rbsp';\n          break;\n      } // This triggers data on the H264Stream\n\n      self.trigger('data', event);\n    });\n    nalByteStream.on('done', function () {\n      self.trigger('done');\n    });\n    nalByteStream.on('partialdone', function () {\n      self.trigger('partialdone');\n    });\n    nalByteStream.on('reset', function () {\n      self.trigger('reset');\n    });\n    nalByteStream.on('endedtimeline', function () {\n      self.trigger('endedtimeline');\n    });\n    this.flush = function () {\n      nalByteStream.flush();\n    };\n    this.partialFlush = function () {\n      nalByteStream.partialFlush();\n    };\n    this.reset = function () {\n      nalByteStream.reset();\n    };\n    this.endTimeline = function () {\n      nalByteStream.endTimeline();\n    };\n    /**\n     * Advance the ExpGolomb decoder past a scaling list. The scaling\n     * list is optionally transmitted as part of a sequence parameter\n     * set and is not relevant to transmuxing.\n     * @param count {number} the number of entries in this scaling list\n     * @param expGolombDecoder {object} an ExpGolomb pointed to the\n     * start of a scaling list\n     * @see Recommendation ITU-T H.264, Section 7.3.2.1.1.1\n     */\n\n    skipScalingList = function (count, expGolombDecoder) {\n      var lastScale = 8,\n        nextScale = 8,\n        j,\n        deltaScale;\n      for (j = 0; j < count; j++) {\n        if (nextScale !== 0) {\n          deltaScale = expGolombDecoder.readExpGolomb();\n          nextScale = (lastScale + deltaScale + 256) % 256;\n        }\n        lastScale = nextScale === 0 ? lastScale : nextScale;\n      }\n    };\n    /**\n     * Expunge any \"Emulation Prevention\" bytes from a \"Raw Byte\n     * Sequence Payload\"\n     * @param data {Uint8Array} the bytes of a RBSP from a NAL\n     * unit\n     * @return {Uint8Array} the RBSP without any Emulation\n     * Prevention Bytes\n     */\n\n    discardEmulationPreventionBytes = function (data) {\n      var length = data.byteLength,\n        emulationPreventionBytesPositions = [],\n        i = 1,\n        newLength,\n        newData; // Find all `Emulation Prevention Bytes`\n\n      while (i < length - 2) {\n        if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n          emulationPreventionBytesPositions.push(i + 2);\n          i += 2;\n        } else {\n          i++;\n        }\n      } // If no Emulation Prevention Bytes were found just return the original\n      // array\n\n      if (emulationPreventionBytesPositions.length === 0) {\n        return data;\n      } // Create a new array to hold the NAL unit data\n\n      newLength = length - emulationPreventionBytesPositions.length;\n      newData = new Uint8Array(newLength);\n      var sourceIndex = 0;\n      for (i = 0; i < newLength; sourceIndex++, i++) {\n        if (sourceIndex === emulationPreventionBytesPositions[0]) {\n          // Skip this byte\n          sourceIndex++; // Remove this position index\n\n          emulationPreventionBytesPositions.shift();\n        }\n        newData[i] = data[sourceIndex];\n      }\n      return newData;\n    };\n    /**\n     * Read a sequence parameter set and return some interesting video\n     * properties. A sequence parameter set is the H264 metadata that\n     * describes the properties of upcoming video frames.\n     * @param data {Uint8Array} the bytes of a sequence parameter set\n     * @return {object} an object with configuration parsed from the\n     * sequence parameter set, including the dimensions of the\n     * associated video frames.\n     */\n\n    readSequenceParameterSet = function (data) {\n      var frameCropLeftOffset = 0,\n        frameCropRightOffset = 0,\n        frameCropTopOffset = 0,\n        frameCropBottomOffset = 0,\n        expGolombDecoder,\n        profileIdc,\n        levelIdc,\n        profileCompatibility,\n        chromaFormatIdc,\n        picOrderCntType,\n        numRefFramesInPicOrderCntCycle,\n        picWidthInMbsMinus1,\n        picHeightInMapUnitsMinus1,\n        frameMbsOnlyFlag,\n        scalingListCount,\n        sarRatio = [1, 1],\n        aspectRatioIdc,\n        i;\n      expGolombDecoder = new ExpGolomb(data);\n      profileIdc = expGolombDecoder.readUnsignedByte(); // profile_idc\n\n      profileCompatibility = expGolombDecoder.readUnsignedByte(); // constraint_set[0-5]_flag\n\n      levelIdc = expGolombDecoder.readUnsignedByte(); // level_idc u(8)\n\n      expGolombDecoder.skipUnsignedExpGolomb(); // seq_parameter_set_id\n      // some profiles have more optional data we don't need\n\n      if (PROFILES_WITH_OPTIONAL_SPS_DATA[profileIdc]) {\n        chromaFormatIdc = expGolombDecoder.readUnsignedExpGolomb();\n        if (chromaFormatIdc === 3) {\n          expGolombDecoder.skipBits(1); // separate_colour_plane_flag\n        }\n\n        expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_luma_minus8\n\n        expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_chroma_minus8\n\n        expGolombDecoder.skipBits(1); // qpprime_y_zero_transform_bypass_flag\n\n        if (expGolombDecoder.readBoolean()) {\n          // seq_scaling_matrix_present_flag\n          scalingListCount = chromaFormatIdc !== 3 ? 8 : 12;\n          for (i = 0; i < scalingListCount; i++) {\n            if (expGolombDecoder.readBoolean()) {\n              // seq_scaling_list_present_flag[ i ]\n              if (i < 6) {\n                skipScalingList(16, expGolombDecoder);\n              } else {\n                skipScalingList(64, expGolombDecoder);\n              }\n            }\n          }\n        }\n      }\n      expGolombDecoder.skipUnsignedExpGolomb(); // log2_max_frame_num_minus4\n\n      picOrderCntType = expGolombDecoder.readUnsignedExpGolomb();\n      if (picOrderCntType === 0) {\n        expGolombDecoder.readUnsignedExpGolomb(); // log2_max_pic_order_cnt_lsb_minus4\n      } else if (picOrderCntType === 1) {\n        expGolombDecoder.skipBits(1); // delta_pic_order_always_zero_flag\n\n        expGolombDecoder.skipExpGolomb(); // offset_for_non_ref_pic\n\n        expGolombDecoder.skipExpGolomb(); // offset_for_top_to_bottom_field\n\n        numRefFramesInPicOrderCntCycle = expGolombDecoder.readUnsignedExpGolomb();\n        for (i = 0; i < numRefFramesInPicOrderCntCycle; i++) {\n          expGolombDecoder.skipExpGolomb(); // offset_for_ref_frame[ i ]\n        }\n      }\n\n      expGolombDecoder.skipUnsignedExpGolomb(); // max_num_ref_frames\n\n      expGolombDecoder.skipBits(1); // gaps_in_frame_num_value_allowed_flag\n\n      picWidthInMbsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n      picHeightInMapUnitsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n      frameMbsOnlyFlag = expGolombDecoder.readBits(1);\n      if (frameMbsOnlyFlag === 0) {\n        expGolombDecoder.skipBits(1); // mb_adaptive_frame_field_flag\n      }\n\n      expGolombDecoder.skipBits(1); // direct_8x8_inference_flag\n\n      if (expGolombDecoder.readBoolean()) {\n        // frame_cropping_flag\n        frameCropLeftOffset = expGolombDecoder.readUnsignedExpGolomb();\n        frameCropRightOffset = expGolombDecoder.readUnsignedExpGolomb();\n        frameCropTopOffset = expGolombDecoder.readUnsignedExpGolomb();\n        frameCropBottomOffset = expGolombDecoder.readUnsignedExpGolomb();\n      }\n      if (expGolombDecoder.readBoolean()) {\n        // vui_parameters_present_flag\n        if (expGolombDecoder.readBoolean()) {\n          // aspect_ratio_info_present_flag\n          aspectRatioIdc = expGolombDecoder.readUnsignedByte();\n          switch (aspectRatioIdc) {\n            case 1:\n              sarRatio = [1, 1];\n              break;\n            case 2:\n              sarRatio = [12, 11];\n              break;\n            case 3:\n              sarRatio = [10, 11];\n              break;\n            case 4:\n              sarRatio = [16, 11];\n              break;\n            case 5:\n              sarRatio = [40, 33];\n              break;\n            case 6:\n              sarRatio = [24, 11];\n              break;\n            case 7:\n              sarRatio = [20, 11];\n              break;\n            case 8:\n              sarRatio = [32, 11];\n              break;\n            case 9:\n              sarRatio = [80, 33];\n              break;\n            case 10:\n              sarRatio = [18, 11];\n              break;\n            case 11:\n              sarRatio = [15, 11];\n              break;\n            case 12:\n              sarRatio = [64, 33];\n              break;\n            case 13:\n              sarRatio = [160, 99];\n              break;\n            case 14:\n              sarRatio = [4, 3];\n              break;\n            case 15:\n              sarRatio = [3, 2];\n              break;\n            case 16:\n              sarRatio = [2, 1];\n              break;\n            case 255:\n              {\n                sarRatio = [expGolombDecoder.readUnsignedByte() << 8 | expGolombDecoder.readUnsignedByte(), expGolombDecoder.readUnsignedByte() << 8 | expGolombDecoder.readUnsignedByte()];\n                break;\n              }\n          }\n          if (sarRatio) {\n            sarRatio[0] / sarRatio[1];\n          }\n        }\n      }\n      return {\n        profileIdc: profileIdc,\n        levelIdc: levelIdc,\n        profileCompatibility: profileCompatibility,\n        width: (picWidthInMbsMinus1 + 1) * 16 - frameCropLeftOffset * 2 - frameCropRightOffset * 2,\n        height: (2 - frameMbsOnlyFlag) * (picHeightInMapUnitsMinus1 + 1) * 16 - frameCropTopOffset * 2 - frameCropBottomOffset * 2,\n        // sar is sample aspect ratio\n        sarRatio: sarRatio\n      };\n    };\n  };\n  H264Stream$1.prototype = new Stream$2();\n  var h264 = {\n    H264Stream: H264Stream$1,\n    NalByteStream: NalByteStream\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * Utilities to detect basic properties and metadata about Aac data.\n   */\n\n  var ADTS_SAMPLING_FREQUENCIES = [96000, 88200, 64000, 48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000, 7350];\n  var parseId3TagSize = function (header, byteIndex) {\n    var returnSize = header[byteIndex + 6] << 21 | header[byteIndex + 7] << 14 | header[byteIndex + 8] << 7 | header[byteIndex + 9],\n      flags = header[byteIndex + 5],\n      footerPresent = (flags & 16) >> 4; // if we get a negative returnSize clamp it to 0\n\n    returnSize = returnSize >= 0 ? returnSize : 0;\n    if (footerPresent) {\n      return returnSize + 20;\n    }\n    return returnSize + 10;\n  };\n  var getId3Offset = function (data, offset) {\n    if (data.length - offset < 10 || data[offset] !== 'I'.charCodeAt(0) || data[offset + 1] !== 'D'.charCodeAt(0) || data[offset + 2] !== '3'.charCodeAt(0)) {\n      return offset;\n    }\n    offset += parseId3TagSize(data, offset);\n    return getId3Offset(data, offset);\n  }; // TODO: use vhs-utils\n\n  var isLikelyAacData$1 = function (data) {\n    var offset = getId3Offset(data, 0);\n    return data.length >= offset + 2 && (data[offset] & 0xFF) === 0xFF && (data[offset + 1] & 0xF0) === 0xF0 &&\n    // verify that the 2 layer bits are 0, aka this\n    // is not mp3 data but aac data.\n    (data[offset + 1] & 0x16) === 0x10;\n  };\n  var parseSyncSafeInteger = function (data) {\n    return data[0] << 21 | data[1] << 14 | data[2] << 7 | data[3];\n  }; // return a percent-encoded representation of the specified byte range\n  // @see http://en.wikipedia.org/wiki/Percent-encoding\n\n  var percentEncode = function (bytes, start, end) {\n    var i,\n      result = '';\n    for (i = start; i < end; i++) {\n      result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n    }\n    return result;\n  }; // return the string representation of the specified byte range,\n  // interpreted as ISO-8859-1.\n\n  var parseIso88591 = function (bytes, start, end) {\n    return unescape(percentEncode(bytes, start, end)); // jshint ignore:line\n  };\n\n  var parseAdtsSize = function (header, byteIndex) {\n    var lowThree = (header[byteIndex + 5] & 0xE0) >> 5,\n      middle = header[byteIndex + 4] << 3,\n      highTwo = header[byteIndex + 3] & 0x3 << 11;\n    return highTwo | middle | lowThree;\n  };\n  var parseType$4 = function (header, byteIndex) {\n    if (header[byteIndex] === 'I'.charCodeAt(0) && header[byteIndex + 1] === 'D'.charCodeAt(0) && header[byteIndex + 2] === '3'.charCodeAt(0)) {\n      return 'timed-metadata';\n    } else if (header[byteIndex] & 0xff === 0xff && (header[byteIndex + 1] & 0xf0) === 0xf0) {\n      return 'audio';\n    }\n    return null;\n  };\n  var parseSampleRate = function (packet) {\n    var i = 0;\n    while (i + 5 < packet.length) {\n      if (packet[i] !== 0xFF || (packet[i + 1] & 0xF6) !== 0xF0) {\n        // If a valid header was not found,  jump one forward and attempt to\n        // find a valid ADTS header starting at the next byte\n        i++;\n        continue;\n      }\n      return ADTS_SAMPLING_FREQUENCIES[(packet[i + 2] & 0x3c) >>> 2];\n    }\n    return null;\n  };\n  var parseAacTimestamp = function (packet) {\n    var frameStart, frameSize, frame, frameHeader; // find the start of the first frame and the end of the tag\n\n    frameStart = 10;\n    if (packet[5] & 0x40) {\n      // advance the frame start past the extended header\n      frameStart += 4; // header size field\n\n      frameStart += parseSyncSafeInteger(packet.subarray(10, 14));\n    } // parse one or more ID3 frames\n    // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n\n    do {\n      // determine the number of bytes in this frame\n      frameSize = parseSyncSafeInteger(packet.subarray(frameStart + 4, frameStart + 8));\n      if (frameSize < 1) {\n        return null;\n      }\n      frameHeader = String.fromCharCode(packet[frameStart], packet[frameStart + 1], packet[frameStart + 2], packet[frameStart + 3]);\n      if (frameHeader === 'PRIV') {\n        frame = packet.subarray(frameStart + 10, frameStart + frameSize + 10);\n        for (var i = 0; i < frame.byteLength; i++) {\n          if (frame[i] === 0) {\n            var owner = parseIso88591(frame, 0, i);\n            if (owner === 'com.apple.streaming.transportStreamTimestamp') {\n              var d = frame.subarray(i + 1);\n              var size = (d[3] & 0x01) << 30 | d[4] << 22 | d[5] << 14 | d[6] << 6 | d[7] >>> 2;\n              size *= 4;\n              size += d[7] & 0x03;\n              return size;\n            }\n            break;\n          }\n        }\n      }\n      frameStart += 10; // advance past the frame header\n\n      frameStart += frameSize; // advance past the frame body\n    } while (frameStart < packet.byteLength);\n    return null;\n  };\n  var utils = {\n    isLikelyAacData: isLikelyAacData$1,\n    parseId3TagSize: parseId3TagSize,\n    parseAdtsSize: parseAdtsSize,\n    parseType: parseType$4,\n    parseSampleRate: parseSampleRate,\n    parseAacTimestamp: parseAacTimestamp\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * A stream-based aac to mp4 converter. This utility can be used to\n   * deliver mp4s to a SourceBuffer on platforms that support native\n   * Media Source Extensions.\n   */\n\n  var Stream$1 = stream;\n  var aacUtils = utils; // Constants\n\n  var AacStream$1;\n  /**\n   * Splits an incoming stream of binary data into ADTS and ID3 Frames.\n   */\n\n  AacStream$1 = function () {\n    var everything = new Uint8Array(),\n      timeStamp = 0;\n    AacStream$1.prototype.init.call(this);\n    this.setTimestamp = function (timestamp) {\n      timeStamp = timestamp;\n    };\n    this.push = function (bytes) {\n      var frameSize = 0,\n        byteIndex = 0,\n        bytesLeft,\n        chunk,\n        packet,\n        tempLength; // If there are bytes remaining from the last segment, prepend them to the\n      // bytes that were pushed in\n\n      if (everything.length) {\n        tempLength = everything.length;\n        everything = new Uint8Array(bytes.byteLength + tempLength);\n        everything.set(everything.subarray(0, tempLength));\n        everything.set(bytes, tempLength);\n      } else {\n        everything = bytes;\n      }\n      while (everything.length - byteIndex >= 3) {\n        if (everything[byteIndex] === 'I'.charCodeAt(0) && everything[byteIndex + 1] === 'D'.charCodeAt(0) && everything[byteIndex + 2] === '3'.charCodeAt(0)) {\n          // Exit early because we don't have enough to parse\n          // the ID3 tag header\n          if (everything.length - byteIndex < 10) {\n            break;\n          } // check framesize\n\n          frameSize = aacUtils.parseId3TagSize(everything, byteIndex); // Exit early if we don't have enough in the buffer\n          // to emit a full packet\n          // Add to byteIndex to support multiple ID3 tags in sequence\n\n          if (byteIndex + frameSize > everything.length) {\n            break;\n          }\n          chunk = {\n            type: 'timed-metadata',\n            data: everything.subarray(byteIndex, byteIndex + frameSize)\n          };\n          this.trigger('data', chunk);\n          byteIndex += frameSize;\n          continue;\n        } else if ((everything[byteIndex] & 0xff) === 0xff && (everything[byteIndex + 1] & 0xf0) === 0xf0) {\n          // Exit early because we don't have enough to parse\n          // the ADTS frame header\n          if (everything.length - byteIndex < 7) {\n            break;\n          }\n          frameSize = aacUtils.parseAdtsSize(everything, byteIndex); // Exit early if we don't have enough in the buffer\n          // to emit a full packet\n\n          if (byteIndex + frameSize > everything.length) {\n            break;\n          }\n          packet = {\n            type: 'audio',\n            data: everything.subarray(byteIndex, byteIndex + frameSize),\n            pts: timeStamp,\n            dts: timeStamp\n          };\n          this.trigger('data', packet);\n          byteIndex += frameSize;\n          continue;\n        }\n        byteIndex++;\n      }\n      bytesLeft = everything.length - byteIndex;\n      if (bytesLeft > 0) {\n        everything = everything.subarray(byteIndex);\n      } else {\n        everything = new Uint8Array();\n      }\n    };\n    this.reset = function () {\n      everything = new Uint8Array();\n      this.trigger('reset');\n    };\n    this.endTimeline = function () {\n      everything = new Uint8Array();\n      this.trigger('endedtimeline');\n    };\n  };\n  AacStream$1.prototype = new Stream$1();\n  var aac = AacStream$1;\n  var AUDIO_PROPERTIES$1 = ['audioobjecttype', 'channelcount', 'samplerate', 'samplingfrequencyindex', 'samplesize'];\n  var audioProperties = AUDIO_PROPERTIES$1;\n  var VIDEO_PROPERTIES$1 = ['width', 'height', 'profileIdc', 'levelIdc', 'profileCompatibility', 'sarRatio'];\n  var videoProperties = VIDEO_PROPERTIES$1;\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * A stream-based mp2t to mp4 converter. This utility can be used to\n   * deliver mp4s to a SourceBuffer on platforms that support native\n   * Media Source Extensions.\n   */\n\n  var Stream = stream;\n  var mp4 = mp4Generator;\n  var frameUtils = frameUtils$1;\n  var audioFrameUtils = audioFrameUtils$1;\n  var trackDecodeInfo = trackDecodeInfo$1;\n  var m2ts = m2ts_1;\n  var clock = clock$2;\n  var AdtsStream = adts;\n  var H264Stream = h264.H264Stream;\n  var AacStream = aac;\n  var isLikelyAacData = utils.isLikelyAacData;\n  var ONE_SECOND_IN_TS$1 = clock$2.ONE_SECOND_IN_TS;\n  var AUDIO_PROPERTIES = audioProperties;\n  var VIDEO_PROPERTIES = videoProperties; // object types\n\n  var VideoSegmentStream, AudioSegmentStream, Transmuxer, CoalesceStream;\n  var retriggerForStream = function (key, event) {\n    event.stream = key;\n    this.trigger('log', event);\n  };\n  var addPipelineLogRetriggers = function (transmuxer, pipeline) {\n    var keys = Object.keys(pipeline);\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i]; // skip non-stream keys and headOfPipeline\n      // which is just a duplicate\n\n      if (key === 'headOfPipeline' || !pipeline[key].on) {\n        continue;\n      }\n      pipeline[key].on('log', retriggerForStream.bind(transmuxer, key));\n    }\n  };\n  /**\n   * Compare two arrays (even typed) for same-ness\n   */\n\n  var arrayEquals = function (a, b) {\n    var i;\n    if (a.length !== b.length) {\n      return false;\n    } // compare the value of each element in the array\n\n    for (i = 0; i < a.length; i++) {\n      if (a[i] !== b[i]) {\n        return false;\n      }\n    }\n    return true;\n  };\n  var generateSegmentTimingInfo = function (baseMediaDecodeTime, startDts, startPts, endDts, endPts, prependedContentDuration) {\n    var ptsOffsetFromDts = startPts - startDts,\n      decodeDuration = endDts - startDts,\n      presentationDuration = endPts - startPts; // The PTS and DTS values are based on the actual stream times from the segment,\n    // however, the player time values will reflect a start from the baseMediaDecodeTime.\n    // In order to provide relevant values for the player times, base timing info on the\n    // baseMediaDecodeTime and the DTS and PTS durations of the segment.\n\n    return {\n      start: {\n        dts: baseMediaDecodeTime,\n        pts: baseMediaDecodeTime + ptsOffsetFromDts\n      },\n      end: {\n        dts: baseMediaDecodeTime + decodeDuration,\n        pts: baseMediaDecodeTime + presentationDuration\n      },\n      prependedContentDuration: prependedContentDuration,\n      baseMediaDecodeTime: baseMediaDecodeTime\n    };\n  };\n  /**\n   * Constructs a single-track, ISO BMFF media segment from AAC data\n   * events. The output of this stream can be fed to a SourceBuffer\n   * configured with a suitable initialization segment.\n   * @param track {object} track metadata configuration\n   * @param options {object} transmuxer options object\n   * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n   *        in the source; false to adjust the first segment to start at 0.\n   */\n\n  AudioSegmentStream = function (track, options) {\n    var adtsFrames = [],\n      sequenceNumber,\n      earliestAllowedDts = 0,\n      audioAppendStartTs = 0,\n      videoBaseMediaDecodeTime = Infinity;\n    options = options || {};\n    sequenceNumber = options.firstSequenceNumber || 0;\n    AudioSegmentStream.prototype.init.call(this);\n    this.push = function (data) {\n      trackDecodeInfo.collectDtsInfo(track, data);\n      if (track) {\n        AUDIO_PROPERTIES.forEach(function (prop) {\n          track[prop] = data[prop];\n        });\n      } // buffer audio data until end() is called\n\n      adtsFrames.push(data);\n    };\n    this.setEarliestDts = function (earliestDts) {\n      earliestAllowedDts = earliestDts;\n    };\n    this.setVideoBaseMediaDecodeTime = function (baseMediaDecodeTime) {\n      videoBaseMediaDecodeTime = baseMediaDecodeTime;\n    };\n    this.setAudioAppendStart = function (timestamp) {\n      audioAppendStartTs = timestamp;\n    };\n    this.flush = function () {\n      var frames, moof, mdat, boxes, frameDuration, segmentDuration, videoClockCyclesOfSilencePrefixed; // return early if no audio data has been observed\n\n      if (adtsFrames.length === 0) {\n        this.trigger('done', 'AudioSegmentStream');\n        return;\n      }\n      frames = audioFrameUtils.trimAdtsFramesByEarliestDts(adtsFrames, track, earliestAllowedDts);\n      track.baseMediaDecodeTime = trackDecodeInfo.calculateTrackBaseMediaDecodeTime(track, options.keepOriginalTimestamps); // amount of audio filled but the value is in video clock rather than audio clock\n\n      videoClockCyclesOfSilencePrefixed = audioFrameUtils.prefixWithSilence(track, frames, audioAppendStartTs, videoBaseMediaDecodeTime); // we have to build the index from byte locations to\n      // samples (that is, adts frames) in the audio data\n\n      track.samples = audioFrameUtils.generateSampleTable(frames); // concatenate the audio data to constuct the mdat\n\n      mdat = mp4.mdat(audioFrameUtils.concatenateFrameData(frames));\n      adtsFrames = [];\n      moof = mp4.moof(sequenceNumber, [track]);\n      boxes = new Uint8Array(moof.byteLength + mdat.byteLength); // bump the sequence number for next time\n\n      sequenceNumber++;\n      boxes.set(moof);\n      boxes.set(mdat, moof.byteLength);\n      trackDecodeInfo.clearDtsInfo(track);\n      frameDuration = Math.ceil(ONE_SECOND_IN_TS$1 * 1024 / track.samplerate); // TODO this check was added to maintain backwards compatibility (particularly with\n      // tests) on adding the timingInfo event. However, it seems unlikely that there's a\n      // valid use-case where an init segment/data should be triggered without associated\n      // frames. Leaving for now, but should be looked into.\n\n      if (frames.length) {\n        segmentDuration = frames.length * frameDuration;\n        this.trigger('segmentTimingInfo', generateSegmentTimingInfo(\n        // The audio track's baseMediaDecodeTime is in audio clock cycles, but the\n        // frame info is in video clock cycles. Convert to match expectation of\n        // listeners (that all timestamps will be based on video clock cycles).\n        clock.audioTsToVideoTs(track.baseMediaDecodeTime, track.samplerate),\n        // frame times are already in video clock, as is segment duration\n        frames[0].dts, frames[0].pts, frames[0].dts + segmentDuration, frames[0].pts + segmentDuration, videoClockCyclesOfSilencePrefixed || 0));\n        this.trigger('timingInfo', {\n          start: frames[0].pts,\n          end: frames[0].pts + segmentDuration\n        });\n      }\n      this.trigger('data', {\n        track: track,\n        boxes: boxes\n      });\n      this.trigger('done', 'AudioSegmentStream');\n    };\n    this.reset = function () {\n      trackDecodeInfo.clearDtsInfo(track);\n      adtsFrames = [];\n      this.trigger('reset');\n    };\n  };\n  AudioSegmentStream.prototype = new Stream();\n  /**\n   * Constructs a single-track, ISO BMFF media segment from H264 data\n   * events. The output of this stream can be fed to a SourceBuffer\n   * configured with a suitable initialization segment.\n   * @param track {object} track metadata configuration\n   * @param options {object} transmuxer options object\n   * @param options.alignGopsAtEnd {boolean} If true, start from the end of the\n   *        gopsToAlignWith list when attempting to align gop pts\n   * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n   *        in the source; false to adjust the first segment to start at 0.\n   */\n\n  VideoSegmentStream = function (track, options) {\n    var sequenceNumber,\n      nalUnits = [],\n      gopsToAlignWith = [],\n      config,\n      pps;\n    options = options || {};\n    sequenceNumber = options.firstSequenceNumber || 0;\n    VideoSegmentStream.prototype.init.call(this);\n    delete track.minPTS;\n    this.gopCache_ = [];\n    /**\n      * Constructs a ISO BMFF segment given H264 nalUnits\n      * @param {Object} nalUnit A data event representing a nalUnit\n      * @param {String} nalUnit.nalUnitType\n      * @param {Object} nalUnit.config Properties for a mp4 track\n      * @param {Uint8Array} nalUnit.data The nalUnit bytes\n      * @see lib/codecs/h264.js\n     **/\n\n    this.push = function (nalUnit) {\n      trackDecodeInfo.collectDtsInfo(track, nalUnit); // record the track config\n\n      if (nalUnit.nalUnitType === 'seq_parameter_set_rbsp' && !config) {\n        config = nalUnit.config;\n        track.sps = [nalUnit.data];\n        VIDEO_PROPERTIES.forEach(function (prop) {\n          track[prop] = config[prop];\n        }, this);\n      }\n      if (nalUnit.nalUnitType === 'pic_parameter_set_rbsp' && !pps) {\n        pps = nalUnit.data;\n        track.pps = [nalUnit.data];\n      } // buffer video until flush() is called\n\n      nalUnits.push(nalUnit);\n    };\n    /**\n      * Pass constructed ISO BMFF track and boxes on to the\n      * next stream in the pipeline\n     **/\n\n    this.flush = function () {\n      var frames,\n        gopForFusion,\n        gops,\n        moof,\n        mdat,\n        boxes,\n        prependedContentDuration = 0,\n        firstGop,\n        lastGop; // Throw away nalUnits at the start of the byte stream until\n      // we find the first AUD\n\n      while (nalUnits.length) {\n        if (nalUnits[0].nalUnitType === 'access_unit_delimiter_rbsp') {\n          break;\n        }\n        nalUnits.shift();\n      } // Return early if no video data has been observed\n\n      if (nalUnits.length === 0) {\n        this.resetStream_();\n        this.trigger('done', 'VideoSegmentStream');\n        return;\n      } // Organize the raw nal-units into arrays that represent\n      // higher-level constructs such as frames and gops\n      // (group-of-pictures)\n\n      frames = frameUtils.groupNalsIntoFrames(nalUnits);\n      gops = frameUtils.groupFramesIntoGops(frames); // If the first frame of this fragment is not a keyframe we have\n      // a problem since MSE (on Chrome) requires a leading keyframe.\n      //\n      // We have two approaches to repairing this situation:\n      // 1) GOP-FUSION:\n      //    This is where we keep track of the GOPS (group-of-pictures)\n      //    from previous fragments and attempt to find one that we can\n      //    prepend to the current fragment in order to create a valid\n      //    fragment.\n      // 2) KEYFRAME-PULLING:\n      //    Here we search for the first keyframe in the fragment and\n      //    throw away all the frames between the start of the fragment\n      //    and that keyframe. We then extend the duration and pull the\n      //    PTS of the keyframe forward so that it covers the time range\n      //    of the frames that were disposed of.\n      //\n      // #1 is far prefereable over #2 which can cause \"stuttering\" but\n      // requires more things to be just right.\n\n      if (!gops[0][0].keyFrame) {\n        // Search for a gop for fusion from our gopCache\n        gopForFusion = this.getGopForFusion_(nalUnits[0], track);\n        if (gopForFusion) {\n          // in order to provide more accurate timing information about the segment, save\n          // the number of seconds prepended to the original segment due to GOP fusion\n          prependedContentDuration = gopForFusion.duration;\n          gops.unshift(gopForFusion); // Adjust Gops' metadata to account for the inclusion of the\n          // new gop at the beginning\n\n          gops.byteLength += gopForFusion.byteLength;\n          gops.nalCount += gopForFusion.nalCount;\n          gops.pts = gopForFusion.pts;\n          gops.dts = gopForFusion.dts;\n          gops.duration += gopForFusion.duration;\n        } else {\n          // If we didn't find a candidate gop fall back to keyframe-pulling\n          gops = frameUtils.extendFirstKeyFrame(gops);\n        }\n      } // Trim gops to align with gopsToAlignWith\n\n      if (gopsToAlignWith.length) {\n        var alignedGops;\n        if (options.alignGopsAtEnd) {\n          alignedGops = this.alignGopsAtEnd_(gops);\n        } else {\n          alignedGops = this.alignGopsAtStart_(gops);\n        }\n        if (!alignedGops) {\n          // save all the nals in the last GOP into the gop cache\n          this.gopCache_.unshift({\n            gop: gops.pop(),\n            pps: track.pps,\n            sps: track.sps\n          }); // Keep a maximum of 6 GOPs in the cache\n\n          this.gopCache_.length = Math.min(6, this.gopCache_.length); // Clear nalUnits\n\n          nalUnits = []; // return early no gops can be aligned with desired gopsToAlignWith\n\n          this.resetStream_();\n          this.trigger('done', 'VideoSegmentStream');\n          return;\n        } // Some gops were trimmed. clear dts info so minSegmentDts and pts are correct\n        // when recalculated before sending off to CoalesceStream\n\n        trackDecodeInfo.clearDtsInfo(track);\n        gops = alignedGops;\n      }\n      trackDecodeInfo.collectDtsInfo(track, gops); // First, we have to build the index from byte locations to\n      // samples (that is, frames) in the video data\n\n      track.samples = frameUtils.generateSampleTable(gops); // Concatenate the video data and construct the mdat\n\n      mdat = mp4.mdat(frameUtils.concatenateNalData(gops));\n      track.baseMediaDecodeTime = trackDecodeInfo.calculateTrackBaseMediaDecodeTime(track, options.keepOriginalTimestamps);\n      this.trigger('processedGopsInfo', gops.map(function (gop) {\n        return {\n          pts: gop.pts,\n          dts: gop.dts,\n          byteLength: gop.byteLength\n        };\n      }));\n      firstGop = gops[0];\n      lastGop = gops[gops.length - 1];\n      this.trigger('segmentTimingInfo', generateSegmentTimingInfo(track.baseMediaDecodeTime, firstGop.dts, firstGop.pts, lastGop.dts + lastGop.duration, lastGop.pts + lastGop.duration, prependedContentDuration));\n      this.trigger('timingInfo', {\n        start: gops[0].pts,\n        end: gops[gops.length - 1].pts + gops[gops.length - 1].duration\n      }); // save all the nals in the last GOP into the gop cache\n\n      this.gopCache_.unshift({\n        gop: gops.pop(),\n        pps: track.pps,\n        sps: track.sps\n      }); // Keep a maximum of 6 GOPs in the cache\n\n      this.gopCache_.length = Math.min(6, this.gopCache_.length); // Clear nalUnits\n\n      nalUnits = [];\n      this.trigger('baseMediaDecodeTime', track.baseMediaDecodeTime);\n      this.trigger('timelineStartInfo', track.timelineStartInfo);\n      moof = mp4.moof(sequenceNumber, [track]); // it would be great to allocate this array up front instead of\n      // throwing away hundreds of media segment fragments\n\n      boxes = new Uint8Array(moof.byteLength + mdat.byteLength); // Bump the sequence number for next time\n\n      sequenceNumber++;\n      boxes.set(moof);\n      boxes.set(mdat, moof.byteLength);\n      this.trigger('data', {\n        track: track,\n        boxes: boxes\n      });\n      this.resetStream_(); // Continue with the flush process now\n\n      this.trigger('done', 'VideoSegmentStream');\n    };\n    this.reset = function () {\n      this.resetStream_();\n      nalUnits = [];\n      this.gopCache_.length = 0;\n      gopsToAlignWith.length = 0;\n      this.trigger('reset');\n    };\n    this.resetStream_ = function () {\n      trackDecodeInfo.clearDtsInfo(track); // reset config and pps because they may differ across segments\n      // for instance, when we are rendition switching\n\n      config = undefined;\n      pps = undefined;\n    }; // Search for a candidate Gop for gop-fusion from the gop cache and\n    // return it or return null if no good candidate was found\n\n    this.getGopForFusion_ = function (nalUnit) {\n      var halfSecond = 45000,\n        // Half-a-second in a 90khz clock\n        allowableOverlap = 10000,\n        // About 3 frames @ 30fps\n        nearestDistance = Infinity,\n        dtsDistance,\n        nearestGopObj,\n        currentGop,\n        currentGopObj,\n        i; // Search for the GOP nearest to the beginning of this nal unit\n\n      for (i = 0; i < this.gopCache_.length; i++) {\n        currentGopObj = this.gopCache_[i];\n        currentGop = currentGopObj.gop; // Reject Gops with different SPS or PPS\n\n        if (!(track.pps && arrayEquals(track.pps[0], currentGopObj.pps[0])) || !(track.sps && arrayEquals(track.sps[0], currentGopObj.sps[0]))) {\n          continue;\n        } // Reject Gops that would require a negative baseMediaDecodeTime\n\n        if (currentGop.dts < track.timelineStartInfo.dts) {\n          continue;\n        } // The distance between the end of the gop and the start of the nalUnit\n\n        dtsDistance = nalUnit.dts - currentGop.dts - currentGop.duration; // Only consider GOPS that start before the nal unit and end within\n        // a half-second of the nal unit\n\n        if (dtsDistance >= -allowableOverlap && dtsDistance <= halfSecond) {\n          // Always use the closest GOP we found if there is more than\n          // one candidate\n          if (!nearestGopObj || nearestDistance > dtsDistance) {\n            nearestGopObj = currentGopObj;\n            nearestDistance = dtsDistance;\n          }\n        }\n      }\n      if (nearestGopObj) {\n        return nearestGopObj.gop;\n      }\n      return null;\n    }; // trim gop list to the first gop found that has a matching pts with a gop in the list\n    // of gopsToAlignWith starting from the START of the list\n\n    this.alignGopsAtStart_ = function (gops) {\n      var alignIndex, gopIndex, align, gop, byteLength, nalCount, duration, alignedGops;\n      byteLength = gops.byteLength;\n      nalCount = gops.nalCount;\n      duration = gops.duration;\n      alignIndex = gopIndex = 0;\n      while (alignIndex < gopsToAlignWith.length && gopIndex < gops.length) {\n        align = gopsToAlignWith[alignIndex];\n        gop = gops[gopIndex];\n        if (align.pts === gop.pts) {\n          break;\n        }\n        if (gop.pts > align.pts) {\n          // this current gop starts after the current gop we want to align on, so increment\n          // align index\n          alignIndex++;\n          continue;\n        } // current gop starts before the current gop we want to align on. so increment gop\n        // index\n\n        gopIndex++;\n        byteLength -= gop.byteLength;\n        nalCount -= gop.nalCount;\n        duration -= gop.duration;\n      }\n      if (gopIndex === 0) {\n        // no gops to trim\n        return gops;\n      }\n      if (gopIndex === gops.length) {\n        // all gops trimmed, skip appending all gops\n        return null;\n      }\n      alignedGops = gops.slice(gopIndex);\n      alignedGops.byteLength = byteLength;\n      alignedGops.duration = duration;\n      alignedGops.nalCount = nalCount;\n      alignedGops.pts = alignedGops[0].pts;\n      alignedGops.dts = alignedGops[0].dts;\n      return alignedGops;\n    }; // trim gop list to the first gop found that has a matching pts with a gop in the list\n    // of gopsToAlignWith starting from the END of the list\n\n    this.alignGopsAtEnd_ = function (gops) {\n      var alignIndex, gopIndex, align, gop, alignEndIndex, matchFound;\n      alignIndex = gopsToAlignWith.length - 1;\n      gopIndex = gops.length - 1;\n      alignEndIndex = null;\n      matchFound = false;\n      while (alignIndex >= 0 && gopIndex >= 0) {\n        align = gopsToAlignWith[alignIndex];\n        gop = gops[gopIndex];\n        if (align.pts === gop.pts) {\n          matchFound = true;\n          break;\n        }\n        if (align.pts > gop.pts) {\n          alignIndex--;\n          continue;\n        }\n        if (alignIndex === gopsToAlignWith.length - 1) {\n          // gop.pts is greater than the last alignment candidate. If no match is found\n          // by the end of this loop, we still want to append gops that come after this\n          // point\n          alignEndIndex = gopIndex;\n        }\n        gopIndex--;\n      }\n      if (!matchFound && alignEndIndex === null) {\n        return null;\n      }\n      var trimIndex;\n      if (matchFound) {\n        trimIndex = gopIndex;\n      } else {\n        trimIndex = alignEndIndex;\n      }\n      if (trimIndex === 0) {\n        return gops;\n      }\n      var alignedGops = gops.slice(trimIndex);\n      var metadata = alignedGops.reduce(function (total, gop) {\n        total.byteLength += gop.byteLength;\n        total.duration += gop.duration;\n        total.nalCount += gop.nalCount;\n        return total;\n      }, {\n        byteLength: 0,\n        duration: 0,\n        nalCount: 0\n      });\n      alignedGops.byteLength = metadata.byteLength;\n      alignedGops.duration = metadata.duration;\n      alignedGops.nalCount = metadata.nalCount;\n      alignedGops.pts = alignedGops[0].pts;\n      alignedGops.dts = alignedGops[0].dts;\n      return alignedGops;\n    };\n    this.alignGopsWith = function (newGopsToAlignWith) {\n      gopsToAlignWith = newGopsToAlignWith;\n    };\n  };\n  VideoSegmentStream.prototype = new Stream();\n  /**\n   * A Stream that can combine multiple streams (ie. audio & video)\n   * into a single output segment for MSE. Also supports audio-only\n   * and video-only streams.\n   * @param options {object} transmuxer options object\n   * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n   *        in the source; false to adjust the first segment to start at media timeline start.\n   */\n\n  CoalesceStream = function (options, metadataStream) {\n    // Number of Tracks per output segment\n    // If greater than 1, we combine multiple\n    // tracks into a single segment\n    this.numberOfTracks = 0;\n    this.metadataStream = metadataStream;\n    options = options || {};\n    if (typeof options.remux !== 'undefined') {\n      this.remuxTracks = !!options.remux;\n    } else {\n      this.remuxTracks = true;\n    }\n    if (typeof options.keepOriginalTimestamps === 'boolean') {\n      this.keepOriginalTimestamps = options.keepOriginalTimestamps;\n    } else {\n      this.keepOriginalTimestamps = false;\n    }\n    this.pendingTracks = [];\n    this.videoTrack = null;\n    this.pendingBoxes = [];\n    this.pendingCaptions = [];\n    this.pendingMetadata = [];\n    this.pendingBytes = 0;\n    this.emittedTracks = 0;\n    CoalesceStream.prototype.init.call(this); // Take output from multiple\n\n    this.push = function (output) {\n      // buffer incoming captions until the associated video segment\n      // finishes\n      if (output.text) {\n        return this.pendingCaptions.push(output);\n      } // buffer incoming id3 tags until the final flush\n\n      if (output.frames) {\n        return this.pendingMetadata.push(output);\n      } // Add this track to the list of pending tracks and store\n      // important information required for the construction of\n      // the final segment\n\n      this.pendingTracks.push(output.track);\n      this.pendingBytes += output.boxes.byteLength; // TODO: is there an issue for this against chrome?\n      // We unshift audio and push video because\n      // as of Chrome 75 when switching from\n      // one init segment to another if the video\n      // mdat does not appear after the audio mdat\n      // only audio will play for the duration of our transmux.\n\n      if (output.track.type === 'video') {\n        this.videoTrack = output.track;\n        this.pendingBoxes.push(output.boxes);\n      }\n      if (output.track.type === 'audio') {\n        this.audioTrack = output.track;\n        this.pendingBoxes.unshift(output.boxes);\n      }\n    };\n  };\n  CoalesceStream.prototype = new Stream();\n  CoalesceStream.prototype.flush = function (flushSource) {\n    var offset = 0,\n      event = {\n        captions: [],\n        captionStreams: {},\n        metadata: [],\n        info: {}\n      },\n      caption,\n      id3,\n      initSegment,\n      timelineStartPts = 0,\n      i;\n    if (this.pendingTracks.length < this.numberOfTracks) {\n      if (flushSource !== 'VideoSegmentStream' && flushSource !== 'AudioSegmentStream') {\n        // Return because we haven't received a flush from a data-generating\n        // portion of the segment (meaning that we have only recieved meta-data\n        // or captions.)\n        return;\n      } else if (this.remuxTracks) {\n        // Return until we have enough tracks from the pipeline to remux (if we\n        // are remuxing audio and video into a single MP4)\n        return;\n      } else if (this.pendingTracks.length === 0) {\n        // In the case where we receive a flush without any data having been\n        // received we consider it an emitted track for the purposes of coalescing\n        // `done` events.\n        // We do this for the case where there is an audio and video track in the\n        // segment but no audio data. (seen in several playlists with alternate\n        // audio tracks and no audio present in the main TS segments.)\n        this.emittedTracks++;\n        if (this.emittedTracks >= this.numberOfTracks) {\n          this.trigger('done');\n          this.emittedTracks = 0;\n        }\n        return;\n      }\n    }\n    if (this.videoTrack) {\n      timelineStartPts = this.videoTrack.timelineStartInfo.pts;\n      VIDEO_PROPERTIES.forEach(function (prop) {\n        event.info[prop] = this.videoTrack[prop];\n      }, this);\n    } else if (this.audioTrack) {\n      timelineStartPts = this.audioTrack.timelineStartInfo.pts;\n      AUDIO_PROPERTIES.forEach(function (prop) {\n        event.info[prop] = this.audioTrack[prop];\n      }, this);\n    }\n    if (this.videoTrack || this.audioTrack) {\n      if (this.pendingTracks.length === 1) {\n        event.type = this.pendingTracks[0].type;\n      } else {\n        event.type = 'combined';\n      }\n      this.emittedTracks += this.pendingTracks.length;\n      initSegment = mp4.initSegment(this.pendingTracks); // Create a new typed array to hold the init segment\n\n      event.initSegment = new Uint8Array(initSegment.byteLength); // Create an init segment containing a moov\n      // and track definitions\n\n      event.initSegment.set(initSegment); // Create a new typed array to hold the moof+mdats\n\n      event.data = new Uint8Array(this.pendingBytes); // Append each moof+mdat (one per track) together\n\n      for (i = 0; i < this.pendingBoxes.length; i++) {\n        event.data.set(this.pendingBoxes[i], offset);\n        offset += this.pendingBoxes[i].byteLength;\n      } // Translate caption PTS times into second offsets to match the\n      // video timeline for the segment, and add track info\n\n      for (i = 0; i < this.pendingCaptions.length; i++) {\n        caption = this.pendingCaptions[i];\n        caption.startTime = clock.metadataTsToSeconds(caption.startPts, timelineStartPts, this.keepOriginalTimestamps);\n        caption.endTime = clock.metadataTsToSeconds(caption.endPts, timelineStartPts, this.keepOriginalTimestamps);\n        event.captionStreams[caption.stream] = true;\n        event.captions.push(caption);\n      } // Translate ID3 frame PTS times into second offsets to match the\n      // video timeline for the segment\n\n      for (i = 0; i < this.pendingMetadata.length; i++) {\n        id3 = this.pendingMetadata[i];\n        id3.cueTime = clock.metadataTsToSeconds(id3.pts, timelineStartPts, this.keepOriginalTimestamps);\n        event.metadata.push(id3);\n      } // We add this to every single emitted segment even though we only need\n      // it for the first\n\n      event.metadata.dispatchType = this.metadataStream.dispatchType; // Reset stream state\n\n      this.pendingTracks.length = 0;\n      this.videoTrack = null;\n      this.pendingBoxes.length = 0;\n      this.pendingCaptions.length = 0;\n      this.pendingBytes = 0;\n      this.pendingMetadata.length = 0; // Emit the built segment\n      // We include captions and ID3 tags for backwards compatibility,\n      // ideally we should send only video and audio in the data event\n\n      this.trigger('data', event); // Emit each caption to the outside world\n      // Ideally, this would happen immediately on parsing captions,\n      // but we need to ensure that video data is sent back first\n      // so that caption timing can be adjusted to match video timing\n\n      for (i = 0; i < event.captions.length; i++) {\n        caption = event.captions[i];\n        this.trigger('caption', caption);\n      } // Emit each id3 tag to the outside world\n      // Ideally, this would happen immediately on parsing the tag,\n      // but we need to ensure that video data is sent back first\n      // so that ID3 frame timing can be adjusted to match video timing\n\n      for (i = 0; i < event.metadata.length; i++) {\n        id3 = event.metadata[i];\n        this.trigger('id3Frame', id3);\n      }\n    } // Only emit `done` if all tracks have been flushed and emitted\n\n    if (this.emittedTracks >= this.numberOfTracks) {\n      this.trigger('done');\n      this.emittedTracks = 0;\n    }\n  };\n  CoalesceStream.prototype.setRemux = function (val) {\n    this.remuxTracks = val;\n  };\n  /**\n   * A Stream that expects MP2T binary data as input and produces\n   * corresponding media segments, suitable for use with Media Source\n   * Extension (MSE) implementations that support the ISO BMFF byte\n   * stream format, like Chrome.\n   */\n\n  Transmuxer = function (options) {\n    var self = this,\n      hasFlushed = true,\n      videoTrack,\n      audioTrack;\n    Transmuxer.prototype.init.call(this);\n    options = options || {};\n    this.baseMediaDecodeTime = options.baseMediaDecodeTime || 0;\n    this.transmuxPipeline_ = {};\n    this.setupAacPipeline = function () {\n      var pipeline = {};\n      this.transmuxPipeline_ = pipeline;\n      pipeline.type = 'aac';\n      pipeline.metadataStream = new m2ts.MetadataStream(); // set up the parsing pipeline\n\n      pipeline.aacStream = new AacStream();\n      pipeline.audioTimestampRolloverStream = new m2ts.TimestampRolloverStream('audio');\n      pipeline.timedMetadataTimestampRolloverStream = new m2ts.TimestampRolloverStream('timed-metadata');\n      pipeline.adtsStream = new AdtsStream();\n      pipeline.coalesceStream = new CoalesceStream(options, pipeline.metadataStream);\n      pipeline.headOfPipeline = pipeline.aacStream;\n      pipeline.aacStream.pipe(pipeline.audioTimestampRolloverStream).pipe(pipeline.adtsStream);\n      pipeline.aacStream.pipe(pipeline.timedMetadataTimestampRolloverStream).pipe(pipeline.metadataStream).pipe(pipeline.coalesceStream);\n      pipeline.metadataStream.on('timestamp', function (frame) {\n        pipeline.aacStream.setTimestamp(frame.timeStamp);\n      });\n      pipeline.aacStream.on('data', function (data) {\n        if (data.type !== 'timed-metadata' && data.type !== 'audio' || pipeline.audioSegmentStream) {\n          return;\n        }\n        audioTrack = audioTrack || {\n          timelineStartInfo: {\n            baseMediaDecodeTime: self.baseMediaDecodeTime\n          },\n          codec: 'adts',\n          type: 'audio'\n        }; // hook up the audio segment stream to the first track with aac data\n\n        pipeline.coalesceStream.numberOfTracks++;\n        pipeline.audioSegmentStream = new AudioSegmentStream(audioTrack, options);\n        pipeline.audioSegmentStream.on('log', self.getLogTrigger_('audioSegmentStream'));\n        pipeline.audioSegmentStream.on('timingInfo', self.trigger.bind(self, 'audioTimingInfo')); // Set up the final part of the audio pipeline\n\n        pipeline.adtsStream.pipe(pipeline.audioSegmentStream).pipe(pipeline.coalesceStream); // emit pmt info\n\n        self.trigger('trackinfo', {\n          hasAudio: !!audioTrack,\n          hasVideo: !!videoTrack\n        });\n      }); // Re-emit any data coming from the coalesce stream to the outside world\n\n      pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data')); // Let the consumer know we have finished flushing the entire pipeline\n\n      pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n      addPipelineLogRetriggers(this, pipeline);\n    };\n    this.setupTsPipeline = function () {\n      var pipeline = {};\n      this.transmuxPipeline_ = pipeline;\n      pipeline.type = 'ts';\n      pipeline.metadataStream = new m2ts.MetadataStream(); // set up the parsing pipeline\n\n      pipeline.packetStream = new m2ts.TransportPacketStream();\n      pipeline.parseStream = new m2ts.TransportParseStream();\n      pipeline.elementaryStream = new m2ts.ElementaryStream();\n      pipeline.timestampRolloverStream = new m2ts.TimestampRolloverStream();\n      pipeline.adtsStream = new AdtsStream();\n      pipeline.h264Stream = new H264Stream();\n      pipeline.captionStream = new m2ts.CaptionStream(options);\n      pipeline.coalesceStream = new CoalesceStream(options, pipeline.metadataStream);\n      pipeline.headOfPipeline = pipeline.packetStream; // disassemble MPEG2-TS packets into elementary streams\n\n      pipeline.packetStream.pipe(pipeline.parseStream).pipe(pipeline.elementaryStream).pipe(pipeline.timestampRolloverStream); // !!THIS ORDER IS IMPORTANT!!\n      // demux the streams\n\n      pipeline.timestampRolloverStream.pipe(pipeline.h264Stream);\n      pipeline.timestampRolloverStream.pipe(pipeline.adtsStream);\n      pipeline.timestampRolloverStream.pipe(pipeline.metadataStream).pipe(pipeline.coalesceStream); // Hook up CEA-608/708 caption stream\n\n      pipeline.h264Stream.pipe(pipeline.captionStream).pipe(pipeline.coalesceStream);\n      pipeline.elementaryStream.on('data', function (data) {\n        var i;\n        if (data.type === 'metadata') {\n          i = data.tracks.length; // scan the tracks listed in the metadata\n\n          while (i--) {\n            if (!videoTrack && data.tracks[i].type === 'video') {\n              videoTrack = data.tracks[i];\n              videoTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n            } else if (!audioTrack && data.tracks[i].type === 'audio') {\n              audioTrack = data.tracks[i];\n              audioTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n            }\n          } // hook up the video segment stream to the first track with h264 data\n\n          if (videoTrack && !pipeline.videoSegmentStream) {\n            pipeline.coalesceStream.numberOfTracks++;\n            pipeline.videoSegmentStream = new VideoSegmentStream(videoTrack, options);\n            pipeline.videoSegmentStream.on('log', self.getLogTrigger_('videoSegmentStream'));\n            pipeline.videoSegmentStream.on('timelineStartInfo', function (timelineStartInfo) {\n              // When video emits timelineStartInfo data after a flush, we forward that\n              // info to the AudioSegmentStream, if it exists, because video timeline\n              // data takes precedence.  Do not do this if keepOriginalTimestamps is set,\n              // because this is a particularly subtle form of timestamp alteration.\n              if (audioTrack && !options.keepOriginalTimestamps) {\n                audioTrack.timelineStartInfo = timelineStartInfo; // On the first segment we trim AAC frames that exist before the\n                // very earliest DTS we have seen in video because Chrome will\n                // interpret any video track with a baseMediaDecodeTime that is\n                // non-zero as a gap.\n\n                pipeline.audioSegmentStream.setEarliestDts(timelineStartInfo.dts - self.baseMediaDecodeTime);\n              }\n            });\n            pipeline.videoSegmentStream.on('processedGopsInfo', self.trigger.bind(self, 'gopInfo'));\n            pipeline.videoSegmentStream.on('segmentTimingInfo', self.trigger.bind(self, 'videoSegmentTimingInfo'));\n            pipeline.videoSegmentStream.on('baseMediaDecodeTime', function (baseMediaDecodeTime) {\n              if (audioTrack) {\n                pipeline.audioSegmentStream.setVideoBaseMediaDecodeTime(baseMediaDecodeTime);\n              }\n            });\n            pipeline.videoSegmentStream.on('timingInfo', self.trigger.bind(self, 'videoTimingInfo')); // Set up the final part of the video pipeline\n\n            pipeline.h264Stream.pipe(pipeline.videoSegmentStream).pipe(pipeline.coalesceStream);\n          }\n          if (audioTrack && !pipeline.audioSegmentStream) {\n            // hook up the audio segment stream to the first track with aac data\n            pipeline.coalesceStream.numberOfTracks++;\n            pipeline.audioSegmentStream = new AudioSegmentStream(audioTrack, options);\n            pipeline.audioSegmentStream.on('log', self.getLogTrigger_('audioSegmentStream'));\n            pipeline.audioSegmentStream.on('timingInfo', self.trigger.bind(self, 'audioTimingInfo'));\n            pipeline.audioSegmentStream.on('segmentTimingInfo', self.trigger.bind(self, 'audioSegmentTimingInfo')); // Set up the final part of the audio pipeline\n\n            pipeline.adtsStream.pipe(pipeline.audioSegmentStream).pipe(pipeline.coalesceStream);\n          } // emit pmt info\n\n          self.trigger('trackinfo', {\n            hasAudio: !!audioTrack,\n            hasVideo: !!videoTrack\n          });\n        }\n      }); // Re-emit any data coming from the coalesce stream to the outside world\n\n      pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data'));\n      pipeline.coalesceStream.on('id3Frame', function (id3Frame) {\n        id3Frame.dispatchType = pipeline.metadataStream.dispatchType;\n        self.trigger('id3Frame', id3Frame);\n      });\n      pipeline.coalesceStream.on('caption', this.trigger.bind(this, 'caption')); // Let the consumer know we have finished flushing the entire pipeline\n\n      pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n      addPipelineLogRetriggers(this, pipeline);\n    }; // hook up the segment streams once track metadata is delivered\n\n    this.setBaseMediaDecodeTime = function (baseMediaDecodeTime) {\n      var pipeline = this.transmuxPipeline_;\n      if (!options.keepOriginalTimestamps) {\n        this.baseMediaDecodeTime = baseMediaDecodeTime;\n      }\n      if (audioTrack) {\n        audioTrack.timelineStartInfo.dts = undefined;\n        audioTrack.timelineStartInfo.pts = undefined;\n        trackDecodeInfo.clearDtsInfo(audioTrack);\n        if (pipeline.audioTimestampRolloverStream) {\n          pipeline.audioTimestampRolloverStream.discontinuity();\n        }\n      }\n      if (videoTrack) {\n        if (pipeline.videoSegmentStream) {\n          pipeline.videoSegmentStream.gopCache_ = [];\n        }\n        videoTrack.timelineStartInfo.dts = undefined;\n        videoTrack.timelineStartInfo.pts = undefined;\n        trackDecodeInfo.clearDtsInfo(videoTrack);\n        pipeline.captionStream.reset();\n      }\n      if (pipeline.timestampRolloverStream) {\n        pipeline.timestampRolloverStream.discontinuity();\n      }\n    };\n    this.setAudioAppendStart = function (timestamp) {\n      if (audioTrack) {\n        this.transmuxPipeline_.audioSegmentStream.setAudioAppendStart(timestamp);\n      }\n    };\n    this.setRemux = function (val) {\n      var pipeline = this.transmuxPipeline_;\n      options.remux = val;\n      if (pipeline && pipeline.coalesceStream) {\n        pipeline.coalesceStream.setRemux(val);\n      }\n    };\n    this.alignGopsWith = function (gopsToAlignWith) {\n      if (videoTrack && this.transmuxPipeline_.videoSegmentStream) {\n        this.transmuxPipeline_.videoSegmentStream.alignGopsWith(gopsToAlignWith);\n      }\n    };\n    this.getLogTrigger_ = function (key) {\n      var self = this;\n      return function (event) {\n        event.stream = key;\n        self.trigger('log', event);\n      };\n    }; // feed incoming data to the front of the parsing pipeline\n\n    this.push = function (data) {\n      if (hasFlushed) {\n        var isAac = isLikelyAacData(data);\n        if (isAac && this.transmuxPipeline_.type !== 'aac') {\n          this.setupAacPipeline();\n        } else if (!isAac && this.transmuxPipeline_.type !== 'ts') {\n          this.setupTsPipeline();\n        }\n        hasFlushed = false;\n      }\n      this.transmuxPipeline_.headOfPipeline.push(data);\n    }; // flush any buffered data\n\n    this.flush = function () {\n      hasFlushed = true; // Start at the top of the pipeline and flush all pending work\n\n      this.transmuxPipeline_.headOfPipeline.flush();\n    };\n    this.endTimeline = function () {\n      this.transmuxPipeline_.headOfPipeline.endTimeline();\n    };\n    this.reset = function () {\n      if (this.transmuxPipeline_.headOfPipeline) {\n        this.transmuxPipeline_.headOfPipeline.reset();\n      }\n    }; // Caption data has to be reset when seeking outside buffered range\n\n    this.resetCaptions = function () {\n      if (this.transmuxPipeline_.captionStream) {\n        this.transmuxPipeline_.captionStream.reset();\n      }\n    };\n  };\n  Transmuxer.prototype = new Stream();\n  var transmuxer = {\n    Transmuxer: Transmuxer,\n    VideoSegmentStream: VideoSegmentStream,\n    AudioSegmentStream: AudioSegmentStream,\n    AUDIO_PROPERTIES: AUDIO_PROPERTIES,\n    VIDEO_PROPERTIES: VIDEO_PROPERTIES,\n    // exported for testing\n    generateSegmentTimingInfo: generateSegmentTimingInfo\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n\n  var toUnsigned$3 = function (value) {\n    return value >>> 0;\n  };\n  var toHexString$1 = function (value) {\n    return ('00' + value.toString(16)).slice(-2);\n  };\n  var bin = {\n    toUnsigned: toUnsigned$3,\n    toHexString: toHexString$1\n  };\n  var parseType$3 = function (buffer) {\n    var result = '';\n    result += String.fromCharCode(buffer[0]);\n    result += String.fromCharCode(buffer[1]);\n    result += String.fromCharCode(buffer[2]);\n    result += String.fromCharCode(buffer[3]);\n    return result;\n  };\n  var parseType_1 = parseType$3;\n  var toUnsigned$2 = bin.toUnsigned;\n  var parseType$2 = parseType_1;\n  var findBox$2 = function (data, path) {\n    var results = [],\n      i,\n      size,\n      type,\n      end,\n      subresults;\n    if (!path.length) {\n      // short-circuit the search for empty paths\n      return null;\n    }\n    for (i = 0; i < data.byteLength;) {\n      size = toUnsigned$2(data[i] << 24 | data[i + 1] << 16 | data[i + 2] << 8 | data[i + 3]);\n      type = parseType$2(data.subarray(i + 4, i + 8));\n      end = size > 1 ? i + size : data.byteLength;\n      if (type === path[0]) {\n        if (path.length === 1) {\n          // this is the end of the path and we've found the box we were\n          // looking for\n          results.push(data.subarray(i + 8, end));\n        } else {\n          // recursively search for the next box along the path\n          subresults = findBox$2(data.subarray(i + 8, end), path.slice(1));\n          if (subresults.length) {\n            results = results.concat(subresults);\n          }\n        }\n      }\n      i = end;\n    } // we've finished searching all of data\n\n    return results;\n  };\n  var findBox_1 = findBox$2;\n  var toUnsigned$1 = bin.toUnsigned;\n  var getUint64$2 = numbers.getUint64;\n  var tfdt = function (data) {\n    var result = {\n      version: data[0],\n      flags: new Uint8Array(data.subarray(1, 4))\n    };\n    if (result.version === 1) {\n      result.baseMediaDecodeTime = getUint64$2(data.subarray(4));\n    } else {\n      result.baseMediaDecodeTime = toUnsigned$1(data[4] << 24 | data[5] << 16 | data[6] << 8 | data[7]);\n    }\n    return result;\n  };\n  var parseTfdt$2 = tfdt;\n  var parseSampleFlags$1 = function (flags) {\n    return {\n      isLeading: (flags[0] & 0x0c) >>> 2,\n      dependsOn: flags[0] & 0x03,\n      isDependedOn: (flags[1] & 0xc0) >>> 6,\n      hasRedundancy: (flags[1] & 0x30) >>> 4,\n      paddingValue: (flags[1] & 0x0e) >>> 1,\n      isNonSyncSample: flags[1] & 0x01,\n      degradationPriority: flags[2] << 8 | flags[3]\n    };\n  };\n  var parseSampleFlags_1 = parseSampleFlags$1;\n  var parseSampleFlags = parseSampleFlags_1;\n  var trun = function (data) {\n    var result = {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        samples: []\n      },\n      view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n      // Flag interpretation\n      dataOffsetPresent = result.flags[2] & 0x01,\n      // compare with 2nd byte of 0x1\n      firstSampleFlagsPresent = result.flags[2] & 0x04,\n      // compare with 2nd byte of 0x4\n      sampleDurationPresent = result.flags[1] & 0x01,\n      // compare with 2nd byte of 0x100\n      sampleSizePresent = result.flags[1] & 0x02,\n      // compare with 2nd byte of 0x200\n      sampleFlagsPresent = result.flags[1] & 0x04,\n      // compare with 2nd byte of 0x400\n      sampleCompositionTimeOffsetPresent = result.flags[1] & 0x08,\n      // compare with 2nd byte of 0x800\n      sampleCount = view.getUint32(4),\n      offset = 8,\n      sample;\n    if (dataOffsetPresent) {\n      // 32 bit signed integer\n      result.dataOffset = view.getInt32(offset);\n      offset += 4;\n    } // Overrides the flags for the first sample only. The order of\n    // optional values will be: duration, size, compositionTimeOffset\n\n    if (firstSampleFlagsPresent && sampleCount) {\n      sample = {\n        flags: parseSampleFlags(data.subarray(offset, offset + 4))\n      };\n      offset += 4;\n      if (sampleDurationPresent) {\n        sample.duration = view.getUint32(offset);\n        offset += 4;\n      }\n      if (sampleSizePresent) {\n        sample.size = view.getUint32(offset);\n        offset += 4;\n      }\n      if (sampleCompositionTimeOffsetPresent) {\n        if (result.version === 1) {\n          sample.compositionTimeOffset = view.getInt32(offset);\n        } else {\n          sample.compositionTimeOffset = view.getUint32(offset);\n        }\n        offset += 4;\n      }\n      result.samples.push(sample);\n      sampleCount--;\n    }\n    while (sampleCount--) {\n      sample = {};\n      if (sampleDurationPresent) {\n        sample.duration = view.getUint32(offset);\n        offset += 4;\n      }\n      if (sampleSizePresent) {\n        sample.size = view.getUint32(offset);\n        offset += 4;\n      }\n      if (sampleFlagsPresent) {\n        sample.flags = parseSampleFlags(data.subarray(offset, offset + 4));\n        offset += 4;\n      }\n      if (sampleCompositionTimeOffsetPresent) {\n        if (result.version === 1) {\n          sample.compositionTimeOffset = view.getInt32(offset);\n        } else {\n          sample.compositionTimeOffset = view.getUint32(offset);\n        }\n        offset += 4;\n      }\n      result.samples.push(sample);\n    }\n    return result;\n  };\n  var parseTrun$2 = trun;\n  var tfhd = function (data) {\n    var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n      result = {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        trackId: view.getUint32(4)\n      },\n      baseDataOffsetPresent = result.flags[2] & 0x01,\n      sampleDescriptionIndexPresent = result.flags[2] & 0x02,\n      defaultSampleDurationPresent = result.flags[2] & 0x08,\n      defaultSampleSizePresent = result.flags[2] & 0x10,\n      defaultSampleFlagsPresent = result.flags[2] & 0x20,\n      durationIsEmpty = result.flags[0] & 0x010000,\n      defaultBaseIsMoof = result.flags[0] & 0x020000,\n      i;\n    i = 8;\n    if (baseDataOffsetPresent) {\n      i += 4; // truncate top 4 bytes\n      // FIXME: should we read the full 64 bits?\n\n      result.baseDataOffset = view.getUint32(12);\n      i += 4;\n    }\n    if (sampleDescriptionIndexPresent) {\n      result.sampleDescriptionIndex = view.getUint32(i);\n      i += 4;\n    }\n    if (defaultSampleDurationPresent) {\n      result.defaultSampleDuration = view.getUint32(i);\n      i += 4;\n    }\n    if (defaultSampleSizePresent) {\n      result.defaultSampleSize = view.getUint32(i);\n      i += 4;\n    }\n    if (defaultSampleFlagsPresent) {\n      result.defaultSampleFlags = view.getUint32(i);\n    }\n    if (durationIsEmpty) {\n      result.durationIsEmpty = true;\n    }\n    if (!baseDataOffsetPresent && defaultBaseIsMoof) {\n      result.baseDataOffsetIsMoof = true;\n    }\n    return result;\n  };\n  var parseTfhd$2 = tfhd;\n  var win;\n  if (typeof window !== \"undefined\") {\n    win = window;\n  } else if (typeof commonjsGlobal !== \"undefined\") {\n    win = commonjsGlobal;\n  } else if (typeof self !== \"undefined\") {\n    win = self;\n  } else {\n    win = {};\n  }\n  var window_1 = win;\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * Reads in-band CEA-708 captions out of FMP4 segments.\n   * @see https://en.wikipedia.org/wiki/CEA-708\n   */\n\n  var discardEmulationPreventionBytes = captionPacketParser.discardEmulationPreventionBytes;\n  var CaptionStream = captionStream.CaptionStream;\n  var findBox$1 = findBox_1;\n  var parseTfdt$1 = parseTfdt$2;\n  var parseTrun$1 = parseTrun$2;\n  var parseTfhd$1 = parseTfhd$2;\n  var window$2 = window_1;\n  /**\n    * Maps an offset in the mdat to a sample based on the the size of the samples.\n    * Assumes that `parseSamples` has been called first.\n    *\n    * @param {Number} offset - The offset into the mdat\n    * @param {Object[]} samples - An array of samples, parsed using `parseSamples`\n    * @return {?Object} The matching sample, or null if no match was found.\n    *\n    * @see ISO-BMFF-12/2015, Section 8.8.8\n   **/\n\n  var mapToSample = function (offset, samples) {\n    var approximateOffset = offset;\n    for (var i = 0; i < samples.length; i++) {\n      var sample = samples[i];\n      if (approximateOffset < sample.size) {\n        return sample;\n      }\n      approximateOffset -= sample.size;\n    }\n    return null;\n  };\n  /**\n    * Finds SEI nal units contained in a Media Data Box.\n    * Assumes that `parseSamples` has been called first.\n    *\n    * @param {Uint8Array} avcStream - The bytes of the mdat\n    * @param {Object[]} samples - The samples parsed out by `parseSamples`\n    * @param {Number} trackId - The trackId of this video track\n    * @return {Object[]} seiNals - the parsed SEI NALUs found.\n    *   The contents of the seiNal should match what is expected by\n    *   CaptionStream.push (nalUnitType, size, data, escapedRBSP, pts, dts)\n    *\n    * @see ISO-BMFF-12/2015, Section 8.1.1\n    * @see Rec. ITU-T H.264, 7.3.2.3.1\n   **/\n\n  var findSeiNals = function (avcStream, samples, trackId) {\n    var avcView = new DataView(avcStream.buffer, avcStream.byteOffset, avcStream.byteLength),\n      result = {\n        logs: [],\n        seiNals: []\n      },\n      seiNal,\n      i,\n      length,\n      lastMatchedSample;\n    for (i = 0; i + 4 < avcStream.length; i += length) {\n      length = avcView.getUint32(i);\n      i += 4; // Bail if this doesn't appear to be an H264 stream\n\n      if (length <= 0) {\n        continue;\n      }\n      switch (avcStream[i] & 0x1F) {\n        case 0x06:\n          var data = avcStream.subarray(i + 1, i + 1 + length);\n          var matchingSample = mapToSample(i, samples);\n          seiNal = {\n            nalUnitType: 'sei_rbsp',\n            size: length,\n            data: data,\n            escapedRBSP: discardEmulationPreventionBytes(data),\n            trackId: trackId\n          };\n          if (matchingSample) {\n            seiNal.pts = matchingSample.pts;\n            seiNal.dts = matchingSample.dts;\n            lastMatchedSample = matchingSample;\n          } else if (lastMatchedSample) {\n            // If a matching sample cannot be found, use the last\n            // sample's values as they should be as close as possible\n            seiNal.pts = lastMatchedSample.pts;\n            seiNal.dts = lastMatchedSample.dts;\n          } else {\n            result.logs.push({\n              level: 'warn',\n              message: 'We\\'ve encountered a nal unit without data at ' + i + ' for trackId ' + trackId + '. See mux.js#223.'\n            });\n            break;\n          }\n          result.seiNals.push(seiNal);\n          break;\n      }\n    }\n    return result;\n  };\n  /**\n    * Parses sample information out of Track Run Boxes and calculates\n    * the absolute presentation and decode timestamps of each sample.\n    *\n    * @param {Array<Uint8Array>} truns - The Trun Run boxes to be parsed\n    * @param {Number|BigInt} baseMediaDecodeTime - base media decode time from tfdt\n        @see ISO-BMFF-12/2015, Section 8.8.12\n    * @param {Object} tfhd - The parsed Track Fragment Header\n    *   @see inspect.parseTfhd\n    * @return {Object[]} the parsed samples\n    *\n    * @see ISO-BMFF-12/2015, Section 8.8.8\n   **/\n\n  var parseSamples = function (truns, baseMediaDecodeTime, tfhd) {\n    var currentDts = baseMediaDecodeTime;\n    var defaultSampleDuration = tfhd.defaultSampleDuration || 0;\n    var defaultSampleSize = tfhd.defaultSampleSize || 0;\n    var trackId = tfhd.trackId;\n    var allSamples = [];\n    truns.forEach(function (trun) {\n      // Note: We currently do not parse the sample table as well\n      // as the trun. It's possible some sources will require this.\n      // moov > trak > mdia > minf > stbl\n      var trackRun = parseTrun$1(trun);\n      var samples = trackRun.samples;\n      samples.forEach(function (sample) {\n        if (sample.duration === undefined) {\n          sample.duration = defaultSampleDuration;\n        }\n        if (sample.size === undefined) {\n          sample.size = defaultSampleSize;\n        }\n        sample.trackId = trackId;\n        sample.dts = currentDts;\n        if (sample.compositionTimeOffset === undefined) {\n          sample.compositionTimeOffset = 0;\n        }\n        if (typeof currentDts === 'bigint') {\n          sample.pts = currentDts + window$2.BigInt(sample.compositionTimeOffset);\n          currentDts += window$2.BigInt(sample.duration);\n        } else {\n          sample.pts = currentDts + sample.compositionTimeOffset;\n          currentDts += sample.duration;\n        }\n      });\n      allSamples = allSamples.concat(samples);\n    });\n    return allSamples;\n  };\n  /**\n    * Parses out caption nals from an FMP4 segment's video tracks.\n    *\n    * @param {Uint8Array} segment - The bytes of a single segment\n    * @param {Number} videoTrackId - The trackId of a video track in the segment\n    * @return {Object.<Number, Object[]>} A mapping of video trackId to\n    *   a list of seiNals found in that track\n   **/\n\n  var parseCaptionNals = function (segment, videoTrackId) {\n    // To get the samples\n    var trafs = findBox$1(segment, ['moof', 'traf']); // To get SEI NAL units\n\n    var mdats = findBox$1(segment, ['mdat']);\n    var captionNals = {};\n    var mdatTrafPairs = []; // Pair up each traf with a mdat as moofs and mdats are in pairs\n\n    mdats.forEach(function (mdat, index) {\n      var matchingTraf = trafs[index];\n      mdatTrafPairs.push({\n        mdat: mdat,\n        traf: matchingTraf\n      });\n    });\n    mdatTrafPairs.forEach(function (pair) {\n      var mdat = pair.mdat;\n      var traf = pair.traf;\n      var tfhd = findBox$1(traf, ['tfhd']); // Exactly 1 tfhd per traf\n\n      var headerInfo = parseTfhd$1(tfhd[0]);\n      var trackId = headerInfo.trackId;\n      var tfdt = findBox$1(traf, ['tfdt']); // Either 0 or 1 tfdt per traf\n\n      var baseMediaDecodeTime = tfdt.length > 0 ? parseTfdt$1(tfdt[0]).baseMediaDecodeTime : 0;\n      var truns = findBox$1(traf, ['trun']);\n      var samples;\n      var result; // Only parse video data for the chosen video track\n\n      if (videoTrackId === trackId && truns.length > 0) {\n        samples = parseSamples(truns, baseMediaDecodeTime, headerInfo);\n        result = findSeiNals(mdat, samples, trackId);\n        if (!captionNals[trackId]) {\n          captionNals[trackId] = {\n            seiNals: [],\n            logs: []\n          };\n        }\n        captionNals[trackId].seiNals = captionNals[trackId].seiNals.concat(result.seiNals);\n        captionNals[trackId].logs = captionNals[trackId].logs.concat(result.logs);\n      }\n    });\n    return captionNals;\n  };\n  /**\n    * Parses out inband captions from an MP4 container and returns\n    * caption objects that can be used by WebVTT and the TextTrack API.\n    * @see https://developer.mozilla.org/en-US/docs/Web/API/VTTCue\n    * @see https://developer.mozilla.org/en-US/docs/Web/API/TextTrack\n    * Assumes that `probe.getVideoTrackIds` and `probe.timescale` have been called first\n    *\n    * @param {Uint8Array} segment - The fmp4 segment containing embedded captions\n    * @param {Number} trackId - The id of the video track to parse\n    * @param {Number} timescale - The timescale for the video track from the init segment\n    *\n    * @return {?Object[]} parsedCaptions - A list of captions or null if no video tracks\n    * @return {Number} parsedCaptions[].startTime - The time to show the caption in seconds\n    * @return {Number} parsedCaptions[].endTime - The time to stop showing the caption in seconds\n    * @return {String} parsedCaptions[].text - The visible content of the caption\n   **/\n\n  var parseEmbeddedCaptions = function (segment, trackId, timescale) {\n    var captionNals; // the ISO-BMFF spec says that trackId can't be zero, but there's some broken content out there\n\n    if (trackId === null) {\n      return null;\n    }\n    captionNals = parseCaptionNals(segment, trackId);\n    var trackNals = captionNals[trackId] || {};\n    return {\n      seiNals: trackNals.seiNals,\n      logs: trackNals.logs,\n      timescale: timescale\n    };\n  };\n  /**\n    * Converts SEI NALUs into captions that can be used by video.js\n   **/\n\n  var CaptionParser = function () {\n    var isInitialized = false;\n    var captionStream; // Stores segments seen before trackId and timescale are set\n\n    var segmentCache; // Stores video track ID of the track being parsed\n\n    var trackId; // Stores the timescale of the track being parsed\n\n    var timescale; // Stores captions parsed so far\n\n    var parsedCaptions; // Stores whether we are receiving partial data or not\n\n    var parsingPartial;\n    /**\n      * A method to indicate whether a CaptionParser has been initalized\n      * @returns {Boolean}\n     **/\n\n    this.isInitialized = function () {\n      return isInitialized;\n    };\n    /**\n      * Initializes the underlying CaptionStream, SEI NAL parsing\n      * and management, and caption collection\n     **/\n\n    this.init = function (options) {\n      captionStream = new CaptionStream();\n      isInitialized = true;\n      parsingPartial = options ? options.isPartial : false; // Collect dispatched captions\n\n      captionStream.on('data', function (event) {\n        // Convert to seconds in the source's timescale\n        event.startTime = event.startPts / timescale;\n        event.endTime = event.endPts / timescale;\n        parsedCaptions.captions.push(event);\n        parsedCaptions.captionStreams[event.stream] = true;\n      });\n      captionStream.on('log', function (log) {\n        parsedCaptions.logs.push(log);\n      });\n    };\n    /**\n      * Determines if a new video track will be selected\n      * or if the timescale changed\n      * @return {Boolean}\n     **/\n\n    this.isNewInit = function (videoTrackIds, timescales) {\n      if (videoTrackIds && videoTrackIds.length === 0 || timescales && typeof timescales === 'object' && Object.keys(timescales).length === 0) {\n        return false;\n      }\n      return trackId !== videoTrackIds[0] || timescale !== timescales[trackId];\n    };\n    /**\n      * Parses out SEI captions and interacts with underlying\n      * CaptionStream to return dispatched captions\n      *\n      * @param {Uint8Array} segment - The fmp4 segment containing embedded captions\n      * @param {Number[]} videoTrackIds - A list of video tracks found in the init segment\n      * @param {Object.<Number, Number>} timescales - The timescales found in the init segment\n      * @see parseEmbeddedCaptions\n      * @see m2ts/caption-stream.js\n     **/\n\n    this.parse = function (segment, videoTrackIds, timescales) {\n      var parsedData;\n      if (!this.isInitialized()) {\n        return null; // This is not likely to be a video segment\n      } else if (!videoTrackIds || !timescales) {\n        return null;\n      } else if (this.isNewInit(videoTrackIds, timescales)) {\n        // Use the first video track only as there is no\n        // mechanism to switch to other video tracks\n        trackId = videoTrackIds[0];\n        timescale = timescales[trackId]; // If an init segment has not been seen yet, hold onto segment\n        // data until we have one.\n        // the ISO-BMFF spec says that trackId can't be zero, but there's some broken content out there\n      } else if (trackId === null || !timescale) {\n        segmentCache.push(segment);\n        return null;\n      } // Now that a timescale and trackId is set, parse cached segments\n\n      while (segmentCache.length > 0) {\n        var cachedSegment = segmentCache.shift();\n        this.parse(cachedSegment, videoTrackIds, timescales);\n      }\n      parsedData = parseEmbeddedCaptions(segment, trackId, timescale);\n      if (parsedData && parsedData.logs) {\n        parsedCaptions.logs = parsedCaptions.logs.concat(parsedData.logs);\n      }\n      if (parsedData === null || !parsedData.seiNals) {\n        if (parsedCaptions.logs.length) {\n          return {\n            logs: parsedCaptions.logs,\n            captions: [],\n            captionStreams: []\n          };\n        }\n        return null;\n      }\n      this.pushNals(parsedData.seiNals); // Force the parsed captions to be dispatched\n\n      this.flushStream();\n      return parsedCaptions;\n    };\n    /**\n      * Pushes SEI NALUs onto CaptionStream\n      * @param {Object[]} nals - A list of SEI nals parsed using `parseCaptionNals`\n      * Assumes that `parseCaptionNals` has been called first\n      * @see m2ts/caption-stream.js\n      **/\n\n    this.pushNals = function (nals) {\n      if (!this.isInitialized() || !nals || nals.length === 0) {\n        return null;\n      }\n      nals.forEach(function (nal) {\n        captionStream.push(nal);\n      });\n    };\n    /**\n      * Flushes underlying CaptionStream to dispatch processed, displayable captions\n      * @see m2ts/caption-stream.js\n     **/\n\n    this.flushStream = function () {\n      if (!this.isInitialized()) {\n        return null;\n      }\n      if (!parsingPartial) {\n        captionStream.flush();\n      } else {\n        captionStream.partialFlush();\n      }\n    };\n    /**\n      * Reset caption buckets for new data\n     **/\n\n    this.clearParsedCaptions = function () {\n      parsedCaptions.captions = [];\n      parsedCaptions.captionStreams = {};\n      parsedCaptions.logs = [];\n    };\n    /**\n      * Resets underlying CaptionStream\n      * @see m2ts/caption-stream.js\n     **/\n\n    this.resetCaptionStream = function () {\n      if (!this.isInitialized()) {\n        return null;\n      }\n      captionStream.reset();\n    };\n    /**\n      * Convenience method to clear all captions flushed from the\n      * CaptionStream and still being parsed\n      * @see m2ts/caption-stream.js\n     **/\n\n    this.clearAllCaptions = function () {\n      this.clearParsedCaptions();\n      this.resetCaptionStream();\n    };\n    /**\n      * Reset caption parser\n     **/\n\n    this.reset = function () {\n      segmentCache = [];\n      trackId = null;\n      timescale = null;\n      if (!parsedCaptions) {\n        parsedCaptions = {\n          captions: [],\n          // CC1, CC2, CC3, CC4\n          captionStreams: {},\n          logs: []\n        };\n      } else {\n        this.clearParsedCaptions();\n      }\n      this.resetCaptionStream();\n    };\n    this.reset();\n  };\n  var captionParser = CaptionParser;\n  /**\n   * Returns the first string in the data array ending with a null char '\\0'\n   * @param {UInt8} data \n   * @returns the string with the null char\n   */\n\n  var uint8ToCString$1 = function (data) {\n    var index = 0;\n    var curChar = String.fromCharCode(data[index]);\n    var retString = '';\n    while (curChar !== '\\0') {\n      retString += curChar;\n      index++;\n      curChar = String.fromCharCode(data[index]);\n    } // Add nullChar\n\n    retString += curChar;\n    return retString;\n  };\n  var string = {\n    uint8ToCString: uint8ToCString$1\n  };\n  var uint8ToCString = string.uint8ToCString;\n  var getUint64$1 = numbers.getUint64;\n  /**\n   * Based on: ISO/IEC 23009 Section: 5.10.3.3\n   * References:\n   * https://dashif-documents.azurewebsites.net/Events/master/event.html#emsg-format\n   * https://aomediacodec.github.io/id3-emsg/\n   * \n   * Takes emsg box data as a uint8 array and returns a emsg box object\n   * @param {UInt8Array} boxData data from emsg box\n   * @returns A parsed emsg box object\n   */\n\n  var parseEmsgBox = function (boxData) {\n    // version + flags\n    var offset = 4;\n    var version = boxData[0];\n    var scheme_id_uri, value, timescale, presentation_time, presentation_time_delta, event_duration, id, message_data;\n    if (version === 0) {\n      scheme_id_uri = uint8ToCString(boxData.subarray(offset));\n      offset += scheme_id_uri.length;\n      value = uint8ToCString(boxData.subarray(offset));\n      offset += value.length;\n      var dv = new DataView(boxData.buffer);\n      timescale = dv.getUint32(offset);\n      offset += 4;\n      presentation_time_delta = dv.getUint32(offset);\n      offset += 4;\n      event_duration = dv.getUint32(offset);\n      offset += 4;\n      id = dv.getUint32(offset);\n      offset += 4;\n    } else if (version === 1) {\n      var dv = new DataView(boxData.buffer);\n      timescale = dv.getUint32(offset);\n      offset += 4;\n      presentation_time = getUint64$1(boxData.subarray(offset));\n      offset += 8;\n      event_duration = dv.getUint32(offset);\n      offset += 4;\n      id = dv.getUint32(offset);\n      offset += 4;\n      scheme_id_uri = uint8ToCString(boxData.subarray(offset));\n      offset += scheme_id_uri.length;\n      value = uint8ToCString(boxData.subarray(offset));\n      offset += value.length;\n    }\n    message_data = new Uint8Array(boxData.subarray(offset, boxData.byteLength));\n    var emsgBox = {\n      scheme_id_uri,\n      value,\n      // if timescale is undefined or 0 set to 1 \n      timescale: timescale ? timescale : 1,\n      presentation_time,\n      presentation_time_delta,\n      event_duration,\n      id,\n      message_data\n    };\n    return isValidEmsgBox(version, emsgBox) ? emsgBox : undefined;\n  };\n  /**\n   * Scales a presentation time or time delta with an offset with a provided timescale\n   * @param {number} presentationTime \n   * @param {number} timescale \n   * @param {number} timeDelta \n   * @param {number} offset \n   * @returns the scaled time as a number\n   */\n\n  var scaleTime = function (presentationTime, timescale, timeDelta, offset) {\n    return presentationTime || presentationTime === 0 ? presentationTime / timescale : offset + timeDelta / timescale;\n  };\n  /**\n   * Checks the emsg box data for validity based on the version\n   * @param {number} version of the emsg box to validate\n   * @param {Object} emsg the emsg data to validate\n   * @returns if the box is valid as a boolean\n   */\n\n  var isValidEmsgBox = function (version, emsg) {\n    var hasScheme = emsg.scheme_id_uri !== '\\0';\n    var isValidV0Box = version === 0 && isDefined(emsg.presentation_time_delta) && hasScheme;\n    var isValidV1Box = version === 1 && isDefined(emsg.presentation_time) && hasScheme; // Only valid versions of emsg are 0 and 1\n\n    return !(version > 1) && isValidV0Box || isValidV1Box;\n  }; // Utility function to check if an object is defined\n\n  var isDefined = function (data) {\n    return data !== undefined || data !== null;\n  };\n  var emsg$1 = {\n    parseEmsgBox: parseEmsgBox,\n    scaleTime: scaleTime\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * Utilities to detect basic properties and metadata about MP4s.\n   */\n\n  var toUnsigned = bin.toUnsigned;\n  var toHexString = bin.toHexString;\n  var findBox = findBox_1;\n  var parseType$1 = parseType_1;\n  var emsg = emsg$1;\n  var parseTfhd = parseTfhd$2;\n  var parseTrun = parseTrun$2;\n  var parseTfdt = parseTfdt$2;\n  var getUint64 = numbers.getUint64;\n  var timescale, startTime, compositionStartTime, getVideoTrackIds, getTracks, getTimescaleFromMediaHeader, getEmsgID3;\n  var window$1 = window_1;\n  var parseId3Frames = parseId3.parseId3Frames;\n  /**\n   * Parses an MP4 initialization segment and extracts the timescale\n   * values for any declared tracks. Timescale values indicate the\n   * number of clock ticks per second to assume for time-based values\n   * elsewhere in the MP4.\n   *\n   * To determine the start time of an MP4, you need two pieces of\n   * information: the timescale unit and the earliest base media decode\n   * time. Multiple timescales can be specified within an MP4 but the\n   * base media decode time is always expressed in the timescale from\n   * the media header box for the track:\n   * ```\n   * moov > trak > mdia > mdhd.timescale\n   * ```\n   * @param init {Uint8Array} the bytes of the init segment\n   * @return {object} a hash of track ids to timescale values or null if\n   * the init segment is malformed.\n   */\n\n  timescale = function (init) {\n    var result = {},\n      traks = findBox(init, ['moov', 'trak']); // mdhd timescale\n\n    return traks.reduce(function (result, trak) {\n      var tkhd, version, index, id, mdhd;\n      tkhd = findBox(trak, ['tkhd'])[0];\n      if (!tkhd) {\n        return null;\n      }\n      version = tkhd[0];\n      index = version === 0 ? 12 : 20;\n      id = toUnsigned(tkhd[index] << 24 | tkhd[index + 1] << 16 | tkhd[index + 2] << 8 | tkhd[index + 3]);\n      mdhd = findBox(trak, ['mdia', 'mdhd'])[0];\n      if (!mdhd) {\n        return null;\n      }\n      version = mdhd[0];\n      index = version === 0 ? 12 : 20;\n      result[id] = toUnsigned(mdhd[index] << 24 | mdhd[index + 1] << 16 | mdhd[index + 2] << 8 | mdhd[index + 3]);\n      return result;\n    }, result);\n  };\n  /**\n   * Determine the base media decode start time, in seconds, for an MP4\n   * fragment. If multiple fragments are specified, the earliest time is\n   * returned.\n   *\n   * The base media decode time can be parsed from track fragment\n   * metadata:\n   * ```\n   * moof > traf > tfdt.baseMediaDecodeTime\n   * ```\n   * It requires the timescale value from the mdhd to interpret.\n   *\n   * @param timescale {object} a hash of track ids to timescale values.\n   * @return {number} the earliest base media decode start time for the\n   * fragment, in seconds\n   */\n\n  startTime = function (timescale, fragment) {\n    var trafs; // we need info from two childrend of each track fragment box\n\n    trafs = findBox(fragment, ['moof', 'traf']); // determine the start times for each track\n\n    var lowestTime = trafs.reduce(function (acc, traf) {\n      var tfhd = findBox(traf, ['tfhd'])[0]; // get the track id from the tfhd\n\n      var id = toUnsigned(tfhd[4] << 24 | tfhd[5] << 16 | tfhd[6] << 8 | tfhd[7]); // assume a 90kHz clock if no timescale was specified\n\n      var scale = timescale[id] || 90e3; // get the base media decode time from the tfdt\n\n      var tfdt = findBox(traf, ['tfdt'])[0];\n      var dv = new DataView(tfdt.buffer, tfdt.byteOffset, tfdt.byteLength);\n      var baseTime; // version 1 is 64 bit\n\n      if (tfdt[0] === 1) {\n        baseTime = getUint64(tfdt.subarray(4, 12));\n      } else {\n        baseTime = dv.getUint32(4);\n      } // convert base time to seconds if it is a valid number.\n\n      let seconds;\n      if (typeof baseTime === 'bigint') {\n        seconds = baseTime / window$1.BigInt(scale);\n      } else if (typeof baseTime === 'number' && !isNaN(baseTime)) {\n        seconds = baseTime / scale;\n      }\n      if (seconds < Number.MAX_SAFE_INTEGER) {\n        seconds = Number(seconds);\n      }\n      if (seconds < acc) {\n        acc = seconds;\n      }\n      return acc;\n    }, Infinity);\n    return typeof lowestTime === 'bigint' || isFinite(lowestTime) ? lowestTime : 0;\n  };\n  /**\n   * Determine the composition start, in seconds, for an MP4\n   * fragment.\n   *\n   * The composition start time of a fragment can be calculated using the base\n   * media decode time, composition time offset, and timescale, as follows:\n   *\n   * compositionStartTime = (baseMediaDecodeTime + compositionTimeOffset) / timescale\n   *\n   * All of the aforementioned information is contained within a media fragment's\n   * `traf` box, except for timescale info, which comes from the initialization\n   * segment, so a track id (also contained within a `traf`) is also necessary to\n   * associate it with a timescale\n   *\n   *\n   * @param timescales {object} - a hash of track ids to timescale values.\n   * @param fragment {Unit8Array} - the bytes of a media segment\n   * @return {number} the composition start time for the fragment, in seconds\n   **/\n\n  compositionStartTime = function (timescales, fragment) {\n    var trafBoxes = findBox(fragment, ['moof', 'traf']);\n    var baseMediaDecodeTime = 0;\n    var compositionTimeOffset = 0;\n    var trackId;\n    if (trafBoxes && trafBoxes.length) {\n      // The spec states that track run samples contained within a `traf` box are contiguous, but\n      // it does not explicitly state whether the `traf` boxes themselves are contiguous.\n      // We will assume that they are, so we only need the first to calculate start time.\n      var tfhd = findBox(trafBoxes[0], ['tfhd'])[0];\n      var trun = findBox(trafBoxes[0], ['trun'])[0];\n      var tfdt = findBox(trafBoxes[0], ['tfdt'])[0];\n      if (tfhd) {\n        var parsedTfhd = parseTfhd(tfhd);\n        trackId = parsedTfhd.trackId;\n      }\n      if (tfdt) {\n        var parsedTfdt = parseTfdt(tfdt);\n        baseMediaDecodeTime = parsedTfdt.baseMediaDecodeTime;\n      }\n      if (trun) {\n        var parsedTrun = parseTrun(trun);\n        if (parsedTrun.samples && parsedTrun.samples.length) {\n          compositionTimeOffset = parsedTrun.samples[0].compositionTimeOffset || 0;\n        }\n      }\n    } // Get timescale for this specific track. Assume a 90kHz clock if no timescale was\n    // specified.\n\n    var timescale = timescales[trackId] || 90e3; // return the composition start time, in seconds\n\n    if (typeof baseMediaDecodeTime === 'bigint') {\n      compositionTimeOffset = window$1.BigInt(compositionTimeOffset);\n      timescale = window$1.BigInt(timescale);\n    }\n    var result = (baseMediaDecodeTime + compositionTimeOffset) / timescale;\n    if (typeof result === 'bigint' && result < Number.MAX_SAFE_INTEGER) {\n      result = Number(result);\n    }\n    return result;\n  };\n  /**\n    * Find the trackIds of the video tracks in this source.\n    * Found by parsing the Handler Reference and Track Header Boxes:\n    *   moov > trak > mdia > hdlr\n    *   moov > trak > tkhd\n    *\n    * @param {Uint8Array} init - The bytes of the init segment for this source\n    * @return {Number[]} A list of trackIds\n    *\n    * @see ISO-BMFF-12/2015, Section 8.4.3\n   **/\n\n  getVideoTrackIds = function (init) {\n    var traks = findBox(init, ['moov', 'trak']);\n    var videoTrackIds = [];\n    traks.forEach(function (trak) {\n      var hdlrs = findBox(trak, ['mdia', 'hdlr']);\n      var tkhds = findBox(trak, ['tkhd']);\n      hdlrs.forEach(function (hdlr, index) {\n        var handlerType = parseType$1(hdlr.subarray(8, 12));\n        var tkhd = tkhds[index];\n        var view;\n        var version;\n        var trackId;\n        if (handlerType === 'vide') {\n          view = new DataView(tkhd.buffer, tkhd.byteOffset, tkhd.byteLength);\n          version = view.getUint8(0);\n          trackId = version === 0 ? view.getUint32(12) : view.getUint32(20);\n          videoTrackIds.push(trackId);\n        }\n      });\n    });\n    return videoTrackIds;\n  };\n  getTimescaleFromMediaHeader = function (mdhd) {\n    // mdhd is a FullBox, meaning it will have its own version as the first byte\n    var version = mdhd[0];\n    var index = version === 0 ? 12 : 20;\n    return toUnsigned(mdhd[index] << 24 | mdhd[index + 1] << 16 | mdhd[index + 2] << 8 | mdhd[index + 3]);\n  };\n  /**\n   * Get all the video, audio, and hint tracks from a non fragmented\n   * mp4 segment\n   */\n\n  getTracks = function (init) {\n    var traks = findBox(init, ['moov', 'trak']);\n    var tracks = [];\n    traks.forEach(function (trak) {\n      var track = {};\n      var tkhd = findBox(trak, ['tkhd'])[0];\n      var view, tkhdVersion; // id\n\n      if (tkhd) {\n        view = new DataView(tkhd.buffer, tkhd.byteOffset, tkhd.byteLength);\n        tkhdVersion = view.getUint8(0);\n        track.id = tkhdVersion === 0 ? view.getUint32(12) : view.getUint32(20);\n      }\n      var hdlr = findBox(trak, ['mdia', 'hdlr'])[0]; // type\n\n      if (hdlr) {\n        var type = parseType$1(hdlr.subarray(8, 12));\n        if (type === 'vide') {\n          track.type = 'video';\n        } else if (type === 'soun') {\n          track.type = 'audio';\n        } else {\n          track.type = type;\n        }\n      } // codec\n\n      var stsd = findBox(trak, ['mdia', 'minf', 'stbl', 'stsd'])[0];\n      if (stsd) {\n        var sampleDescriptions = stsd.subarray(8); // gives the codec type string\n\n        track.codec = parseType$1(sampleDescriptions.subarray(4, 8));\n        var codecBox = findBox(sampleDescriptions, [track.codec])[0];\n        var codecConfig, codecConfigType;\n        if (codecBox) {\n          // https://tools.ietf.org/html/rfc6381#section-3.3\n          if (/^[asm]vc[1-9]$/i.test(track.codec)) {\n            // we don't need anything but the \"config\" parameter of the\n            // avc1 codecBox\n            codecConfig = codecBox.subarray(78);\n            codecConfigType = parseType$1(codecConfig.subarray(4, 8));\n            if (codecConfigType === 'avcC' && codecConfig.length > 11) {\n              track.codec += '.'; // left padded with zeroes for single digit hex\n              // profile idc\n\n              track.codec += toHexString(codecConfig[9]); // the byte containing the constraint_set flags\n\n              track.codec += toHexString(codecConfig[10]); // level idc\n\n              track.codec += toHexString(codecConfig[11]);\n            } else {\n              // TODO: show a warning that we couldn't parse the codec\n              // and are using the default\n              track.codec = 'avc1.4d400d';\n            }\n          } else if (/^mp4[a,v]$/i.test(track.codec)) {\n            // we do not need anything but the streamDescriptor of the mp4a codecBox\n            codecConfig = codecBox.subarray(28);\n            codecConfigType = parseType$1(codecConfig.subarray(4, 8));\n            if (codecConfigType === 'esds' && codecConfig.length > 20 && codecConfig[19] !== 0) {\n              track.codec += '.' + toHexString(codecConfig[19]); // this value is only a single digit\n\n              track.codec += '.' + toHexString(codecConfig[20] >>> 2 & 0x3f).replace(/^0/, '');\n            } else {\n              // TODO: show a warning that we couldn't parse the codec\n              // and are using the default\n              track.codec = 'mp4a.40.2';\n            }\n          } else {\n            // flac, opus, etc\n            track.codec = track.codec.toLowerCase();\n          }\n        }\n      }\n      var mdhd = findBox(trak, ['mdia', 'mdhd'])[0];\n      if (mdhd) {\n        track.timescale = getTimescaleFromMediaHeader(mdhd);\n      }\n      tracks.push(track);\n    });\n    return tracks;\n  };\n  /**\n   * Returns an array of emsg ID3 data from the provided segmentData.\n   * An offset can also be provided as the Latest Arrival Time to calculate \n   * the Event Start Time of v0 EMSG boxes. \n   * See: https://dashif-documents.azurewebsites.net/Events/master/event.html#Inband-event-timing\n   * \n   * @param {Uint8Array} segmentData the segment byte array.\n   * @param {number} offset the segment start time or Latest Arrival Time, \n   * @return {Object[]} an array of ID3 parsed from EMSG boxes\n   */\n\n  getEmsgID3 = function (segmentData, offset = 0) {\n    var emsgBoxes = findBox(segmentData, ['emsg']);\n    return emsgBoxes.map(data => {\n      var parsedBox = emsg.parseEmsgBox(new Uint8Array(data));\n      var parsedId3Frames = parseId3Frames(parsedBox.message_data);\n      return {\n        cueTime: emsg.scaleTime(parsedBox.presentation_time, parsedBox.timescale, parsedBox.presentation_time_delta, offset),\n        duration: emsg.scaleTime(parsedBox.event_duration, parsedBox.timescale),\n        frames: parsedId3Frames\n      };\n    });\n  };\n  var probe$2 = {\n    // export mp4 inspector's findBox and parseType for backwards compatibility\n    findBox: findBox,\n    parseType: parseType$1,\n    timescale: timescale,\n    startTime: startTime,\n    compositionStartTime: compositionStartTime,\n    videoTrackIds: getVideoTrackIds,\n    tracks: getTracks,\n    getTimescaleFromMediaHeader: getTimescaleFromMediaHeader,\n    getEmsgID3: getEmsgID3\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * Utilities to detect basic properties and metadata about TS Segments.\n   */\n\n  var StreamTypes$1 = streamTypes;\n  var parsePid = function (packet) {\n    var pid = packet[1] & 0x1f;\n    pid <<= 8;\n    pid |= packet[2];\n    return pid;\n  };\n  var parsePayloadUnitStartIndicator = function (packet) {\n    return !!(packet[1] & 0x40);\n  };\n  var parseAdaptionField = function (packet) {\n    var offset = 0; // if an adaption field is present, its length is specified by the\n    // fifth byte of the TS packet header. The adaptation field is\n    // used to add stuffing to PES packets that don't fill a complete\n    // TS packet, and to specify some forms of timing and control data\n    // that we do not currently use.\n\n    if ((packet[3] & 0x30) >>> 4 > 0x01) {\n      offset += packet[4] + 1;\n    }\n    return offset;\n  };\n  var parseType = function (packet, pmtPid) {\n    var pid = parsePid(packet);\n    if (pid === 0) {\n      return 'pat';\n    } else if (pid === pmtPid) {\n      return 'pmt';\n    } else if (pmtPid) {\n      return 'pes';\n    }\n    return null;\n  };\n  var parsePat = function (packet) {\n    var pusi = parsePayloadUnitStartIndicator(packet);\n    var offset = 4 + parseAdaptionField(packet);\n    if (pusi) {\n      offset += packet[offset] + 1;\n    }\n    return (packet[offset + 10] & 0x1f) << 8 | packet[offset + 11];\n  };\n  var parsePmt = function (packet) {\n    var programMapTable = {};\n    var pusi = parsePayloadUnitStartIndicator(packet);\n    var payloadOffset = 4 + parseAdaptionField(packet);\n    if (pusi) {\n      payloadOffset += packet[payloadOffset] + 1;\n    } // PMTs can be sent ahead of the time when they should actually\n    // take effect. We don't believe this should ever be the case\n    // for HLS but we'll ignore \"forward\" PMT declarations if we see\n    // them. Future PMT declarations have the current_next_indicator\n    // set to zero.\n\n    if (!(packet[payloadOffset + 5] & 0x01)) {\n      return;\n    }\n    var sectionLength, tableEnd, programInfoLength; // the mapping table ends at the end of the current section\n\n    sectionLength = (packet[payloadOffset + 1] & 0x0f) << 8 | packet[payloadOffset + 2];\n    tableEnd = 3 + sectionLength - 4; // to determine where the table is, we have to figure out how\n    // long the program info descriptors are\n\n    programInfoLength = (packet[payloadOffset + 10] & 0x0f) << 8 | packet[payloadOffset + 11]; // advance the offset to the first entry in the mapping table\n\n    var offset = 12 + programInfoLength;\n    while (offset < tableEnd) {\n      var i = payloadOffset + offset; // add an entry that maps the elementary_pid to the stream_type\n\n      programMapTable[(packet[i + 1] & 0x1F) << 8 | packet[i + 2]] = packet[i]; // move to the next table entry\n      // skip past the elementary stream descriptors, if present\n\n      offset += ((packet[i + 3] & 0x0F) << 8 | packet[i + 4]) + 5;\n    }\n    return programMapTable;\n  };\n  var parsePesType = function (packet, programMapTable) {\n    var pid = parsePid(packet);\n    var type = programMapTable[pid];\n    switch (type) {\n      case StreamTypes$1.H264_STREAM_TYPE:\n        return 'video';\n      case StreamTypes$1.ADTS_STREAM_TYPE:\n        return 'audio';\n      case StreamTypes$1.METADATA_STREAM_TYPE:\n        return 'timed-metadata';\n      default:\n        return null;\n    }\n  };\n  var parsePesTime = function (packet) {\n    var pusi = parsePayloadUnitStartIndicator(packet);\n    if (!pusi) {\n      return null;\n    }\n    var offset = 4 + parseAdaptionField(packet);\n    if (offset >= packet.byteLength) {\n      // From the H 222.0 MPEG-TS spec\n      // \"For transport stream packets carrying PES packets, stuffing is needed when there\n      //  is insufficient PES packet data to completely fill the transport stream packet\n      //  payload bytes. Stuffing is accomplished by defining an adaptation field longer than\n      //  the sum of the lengths of the data elements in it, so that the payload bytes\n      //  remaining after the adaptation field exactly accommodates the available PES packet\n      //  data.\"\n      //\n      // If the offset is >= the length of the packet, then the packet contains no data\n      // and instead is just adaption field stuffing bytes\n      return null;\n    }\n    var pes = null;\n    var ptsDtsFlags; // PES packets may be annotated with a PTS value, or a PTS value\n    // and a DTS value. Determine what combination of values is\n    // available to work with.\n\n    ptsDtsFlags = packet[offset + 7]; // PTS and DTS are normally stored as a 33-bit number.  Javascript\n    // performs all bitwise operations on 32-bit integers but javascript\n    // supports a much greater range (52-bits) of integer using standard\n    // mathematical operations.\n    // We construct a 31-bit value using bitwise operators over the 31\n    // most significant bits and then multiply by 4 (equal to a left-shift\n    // of 2) before we add the final 2 least significant bits of the\n    // timestamp (equal to an OR.)\n\n    if (ptsDtsFlags & 0xC0) {\n      pes = {}; // the PTS and DTS are not written out directly. For information\n      // on how they are encoded, see\n      // http://dvd.sourceforge.net/dvdinfo/pes-hdr.html\n\n      pes.pts = (packet[offset + 9] & 0x0E) << 27 | (packet[offset + 10] & 0xFF) << 20 | (packet[offset + 11] & 0xFE) << 12 | (packet[offset + 12] & 0xFF) << 5 | (packet[offset + 13] & 0xFE) >>> 3;\n      pes.pts *= 4; // Left shift by 2\n\n      pes.pts += (packet[offset + 13] & 0x06) >>> 1; // OR by the two LSBs\n\n      pes.dts = pes.pts;\n      if (ptsDtsFlags & 0x40) {\n        pes.dts = (packet[offset + 14] & 0x0E) << 27 | (packet[offset + 15] & 0xFF) << 20 | (packet[offset + 16] & 0xFE) << 12 | (packet[offset + 17] & 0xFF) << 5 | (packet[offset + 18] & 0xFE) >>> 3;\n        pes.dts *= 4; // Left shift by 2\n\n        pes.dts += (packet[offset + 18] & 0x06) >>> 1; // OR by the two LSBs\n      }\n    }\n\n    return pes;\n  };\n  var parseNalUnitType = function (type) {\n    switch (type) {\n      case 0x05:\n        return 'slice_layer_without_partitioning_rbsp_idr';\n      case 0x06:\n        return 'sei_rbsp';\n      case 0x07:\n        return 'seq_parameter_set_rbsp';\n      case 0x08:\n        return 'pic_parameter_set_rbsp';\n      case 0x09:\n        return 'access_unit_delimiter_rbsp';\n      default:\n        return null;\n    }\n  };\n  var videoPacketContainsKeyFrame = function (packet) {\n    var offset = 4 + parseAdaptionField(packet);\n    var frameBuffer = packet.subarray(offset);\n    var frameI = 0;\n    var frameSyncPoint = 0;\n    var foundKeyFrame = false;\n    var nalType; // advance the sync point to a NAL start, if necessary\n\n    for (; frameSyncPoint < frameBuffer.byteLength - 3; frameSyncPoint++) {\n      if (frameBuffer[frameSyncPoint + 2] === 1) {\n        // the sync point is properly aligned\n        frameI = frameSyncPoint + 5;\n        break;\n      }\n    }\n    while (frameI < frameBuffer.byteLength) {\n      // look at the current byte to determine if we've hit the end of\n      // a NAL unit boundary\n      switch (frameBuffer[frameI]) {\n        case 0:\n          // skip past non-sync sequences\n          if (frameBuffer[frameI - 1] !== 0) {\n            frameI += 2;\n            break;\n          } else if (frameBuffer[frameI - 2] !== 0) {\n            frameI++;\n            break;\n          }\n          if (frameSyncPoint + 3 !== frameI - 2) {\n            nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n            if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n              foundKeyFrame = true;\n            }\n          } // drop trailing zeroes\n\n          do {\n            frameI++;\n          } while (frameBuffer[frameI] !== 1 && frameI < frameBuffer.length);\n          frameSyncPoint = frameI - 2;\n          frameI += 3;\n          break;\n        case 1:\n          // skip past non-sync sequences\n          if (frameBuffer[frameI - 1] !== 0 || frameBuffer[frameI - 2] !== 0) {\n            frameI += 3;\n            break;\n          }\n          nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n          if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n            foundKeyFrame = true;\n          }\n          frameSyncPoint = frameI - 2;\n          frameI += 3;\n          break;\n        default:\n          // the current byte isn't a one or zero, so it cannot be part\n          // of a sync sequence\n          frameI += 3;\n          break;\n      }\n    }\n    frameBuffer = frameBuffer.subarray(frameSyncPoint);\n    frameI -= frameSyncPoint;\n    frameSyncPoint = 0; // parse the final nal\n\n    if (frameBuffer && frameBuffer.byteLength > 3) {\n      nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n      if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n        foundKeyFrame = true;\n      }\n    }\n    return foundKeyFrame;\n  };\n  var probe$1 = {\n    parseType: parseType,\n    parsePat: parsePat,\n    parsePmt: parsePmt,\n    parsePayloadUnitStartIndicator: parsePayloadUnitStartIndicator,\n    parsePesType: parsePesType,\n    parsePesTime: parsePesTime,\n    videoPacketContainsKeyFrame: videoPacketContainsKeyFrame\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * Parse mpeg2 transport stream packets to extract basic timing information\n   */\n\n  var StreamTypes = streamTypes;\n  var handleRollover = timestampRolloverStream.handleRollover;\n  var probe = {};\n  probe.ts = probe$1;\n  probe.aac = utils;\n  var ONE_SECOND_IN_TS = clock$2.ONE_SECOND_IN_TS;\n  var MP2T_PACKET_LENGTH = 188,\n    // bytes\n    SYNC_BYTE = 0x47;\n  /**\n   * walks through segment data looking for pat and pmt packets to parse out\n   * program map table information\n   */\n\n  var parsePsi_ = function (bytes, pmt) {\n    var startIndex = 0,\n      endIndex = MP2T_PACKET_LENGTH,\n      packet,\n      type;\n    while (endIndex < bytes.byteLength) {\n      // Look for a pair of start and end sync bytes in the data..\n      if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n        // We found a packet\n        packet = bytes.subarray(startIndex, endIndex);\n        type = probe.ts.parseType(packet, pmt.pid);\n        switch (type) {\n          case 'pat':\n            pmt.pid = probe.ts.parsePat(packet);\n            break;\n          case 'pmt':\n            var table = probe.ts.parsePmt(packet);\n            pmt.table = pmt.table || {};\n            Object.keys(table).forEach(function (key) {\n              pmt.table[key] = table[key];\n            });\n            break;\n        }\n        startIndex += MP2T_PACKET_LENGTH;\n        endIndex += MP2T_PACKET_LENGTH;\n        continue;\n      } // If we get here, we have somehow become de-synchronized and we need to step\n      // forward one byte at a time until we find a pair of sync bytes that denote\n      // a packet\n\n      startIndex++;\n      endIndex++;\n    }\n  };\n  /**\n   * walks through the segment data from the start and end to get timing information\n   * for the first and last audio pes packets\n   */\n\n  var parseAudioPes_ = function (bytes, pmt, result) {\n    var startIndex = 0,\n      endIndex = MP2T_PACKET_LENGTH,\n      packet,\n      type,\n      pesType,\n      pusi,\n      parsed;\n    var endLoop = false; // Start walking from start of segment to get first audio packet\n\n    while (endIndex <= bytes.byteLength) {\n      // Look for a pair of start and end sync bytes in the data..\n      if (bytes[startIndex] === SYNC_BYTE && (bytes[endIndex] === SYNC_BYTE || endIndex === bytes.byteLength)) {\n        // We found a packet\n        packet = bytes.subarray(startIndex, endIndex);\n        type = probe.ts.parseType(packet, pmt.pid);\n        switch (type) {\n          case 'pes':\n            pesType = probe.ts.parsePesType(packet, pmt.table);\n            pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n            if (pesType === 'audio' && pusi) {\n              parsed = probe.ts.parsePesTime(packet);\n              if (parsed) {\n                parsed.type = 'audio';\n                result.audio.push(parsed);\n                endLoop = true;\n              }\n            }\n            break;\n        }\n        if (endLoop) {\n          break;\n        }\n        startIndex += MP2T_PACKET_LENGTH;\n        endIndex += MP2T_PACKET_LENGTH;\n        continue;\n      } // If we get here, we have somehow become de-synchronized and we need to step\n      // forward one byte at a time until we find a pair of sync bytes that denote\n      // a packet\n\n      startIndex++;\n      endIndex++;\n    } // Start walking from end of segment to get last audio packet\n\n    endIndex = bytes.byteLength;\n    startIndex = endIndex - MP2T_PACKET_LENGTH;\n    endLoop = false;\n    while (startIndex >= 0) {\n      // Look for a pair of start and end sync bytes in the data..\n      if (bytes[startIndex] === SYNC_BYTE && (bytes[endIndex] === SYNC_BYTE || endIndex === bytes.byteLength)) {\n        // We found a packet\n        packet = bytes.subarray(startIndex, endIndex);\n        type = probe.ts.parseType(packet, pmt.pid);\n        switch (type) {\n          case 'pes':\n            pesType = probe.ts.parsePesType(packet, pmt.table);\n            pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n            if (pesType === 'audio' && pusi) {\n              parsed = probe.ts.parsePesTime(packet);\n              if (parsed) {\n                parsed.type = 'audio';\n                result.audio.push(parsed);\n                endLoop = true;\n              }\n            }\n            break;\n        }\n        if (endLoop) {\n          break;\n        }\n        startIndex -= MP2T_PACKET_LENGTH;\n        endIndex -= MP2T_PACKET_LENGTH;\n        continue;\n      } // If we get here, we have somehow become de-synchronized and we need to step\n      // forward one byte at a time until we find a pair of sync bytes that denote\n      // a packet\n\n      startIndex--;\n      endIndex--;\n    }\n  };\n  /**\n   * walks through the segment data from the start and end to get timing information\n   * for the first and last video pes packets as well as timing information for the first\n   * key frame.\n   */\n\n  var parseVideoPes_ = function (bytes, pmt, result) {\n    var startIndex = 0,\n      endIndex = MP2T_PACKET_LENGTH,\n      packet,\n      type,\n      pesType,\n      pusi,\n      parsed,\n      frame,\n      i,\n      pes;\n    var endLoop = false;\n    var currentFrame = {\n      data: [],\n      size: 0\n    }; // Start walking from start of segment to get first video packet\n\n    while (endIndex < bytes.byteLength) {\n      // Look for a pair of start and end sync bytes in the data..\n      if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n        // We found a packet\n        packet = bytes.subarray(startIndex, endIndex);\n        type = probe.ts.parseType(packet, pmt.pid);\n        switch (type) {\n          case 'pes':\n            pesType = probe.ts.parsePesType(packet, pmt.table);\n            pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n            if (pesType === 'video') {\n              if (pusi && !endLoop) {\n                parsed = probe.ts.parsePesTime(packet);\n                if (parsed) {\n                  parsed.type = 'video';\n                  result.video.push(parsed);\n                  endLoop = true;\n                }\n              }\n              if (!result.firstKeyFrame) {\n                if (pusi) {\n                  if (currentFrame.size !== 0) {\n                    frame = new Uint8Array(currentFrame.size);\n                    i = 0;\n                    while (currentFrame.data.length) {\n                      pes = currentFrame.data.shift();\n                      frame.set(pes, i);\n                      i += pes.byteLength;\n                    }\n                    if (probe.ts.videoPacketContainsKeyFrame(frame)) {\n                      var firstKeyFrame = probe.ts.parsePesTime(frame); // PTS/DTS may not be available. Simply *not* setting\n                      // the keyframe seems to work fine with HLS playback\n                      // and definitely preferable to a crash with TypeError...\n\n                      if (firstKeyFrame) {\n                        result.firstKeyFrame = firstKeyFrame;\n                        result.firstKeyFrame.type = 'video';\n                      } else {\n                        // eslint-disable-next-line\n                        console.warn('Failed to extract PTS/DTS from PES at first keyframe. ' + 'This could be an unusual TS segment, or else mux.js did not ' + 'parse your TS segment correctly. If you know your TS ' + 'segments do contain PTS/DTS on keyframes please file a bug ' + 'report! You can try ffprobe to double check for yourself.');\n                      }\n                    }\n                    currentFrame.size = 0;\n                  }\n                }\n                currentFrame.data.push(packet);\n                currentFrame.size += packet.byteLength;\n              }\n            }\n            break;\n        }\n        if (endLoop && result.firstKeyFrame) {\n          break;\n        }\n        startIndex += MP2T_PACKET_LENGTH;\n        endIndex += MP2T_PACKET_LENGTH;\n        continue;\n      } // If we get here, we have somehow become de-synchronized and we need to step\n      // forward one byte at a time until we find a pair of sync bytes that denote\n      // a packet\n\n      startIndex++;\n      endIndex++;\n    } // Start walking from end of segment to get last video packet\n\n    endIndex = bytes.byteLength;\n    startIndex = endIndex - MP2T_PACKET_LENGTH;\n    endLoop = false;\n    while (startIndex >= 0) {\n      // Look for a pair of start and end sync bytes in the data..\n      if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n        // We found a packet\n        packet = bytes.subarray(startIndex, endIndex);\n        type = probe.ts.parseType(packet, pmt.pid);\n        switch (type) {\n          case 'pes':\n            pesType = probe.ts.parsePesType(packet, pmt.table);\n            pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n            if (pesType === 'video' && pusi) {\n              parsed = probe.ts.parsePesTime(packet);\n              if (parsed) {\n                parsed.type = 'video';\n                result.video.push(parsed);\n                endLoop = true;\n              }\n            }\n            break;\n        }\n        if (endLoop) {\n          break;\n        }\n        startIndex -= MP2T_PACKET_LENGTH;\n        endIndex -= MP2T_PACKET_LENGTH;\n        continue;\n      } // If we get here, we have somehow become de-synchronized and we need to step\n      // forward one byte at a time until we find a pair of sync bytes that denote\n      // a packet\n\n      startIndex--;\n      endIndex--;\n    }\n  };\n  /**\n   * Adjusts the timestamp information for the segment to account for\n   * rollover and convert to seconds based on pes packet timescale (90khz clock)\n   */\n\n  var adjustTimestamp_ = function (segmentInfo, baseTimestamp) {\n    if (segmentInfo.audio && segmentInfo.audio.length) {\n      var audioBaseTimestamp = baseTimestamp;\n      if (typeof audioBaseTimestamp === 'undefined' || isNaN(audioBaseTimestamp)) {\n        audioBaseTimestamp = segmentInfo.audio[0].dts;\n      }\n      segmentInfo.audio.forEach(function (info) {\n        info.dts = handleRollover(info.dts, audioBaseTimestamp);\n        info.pts = handleRollover(info.pts, audioBaseTimestamp); // time in seconds\n\n        info.dtsTime = info.dts / ONE_SECOND_IN_TS;\n        info.ptsTime = info.pts / ONE_SECOND_IN_TS;\n      });\n    }\n    if (segmentInfo.video && segmentInfo.video.length) {\n      var videoBaseTimestamp = baseTimestamp;\n      if (typeof videoBaseTimestamp === 'undefined' || isNaN(videoBaseTimestamp)) {\n        videoBaseTimestamp = segmentInfo.video[0].dts;\n      }\n      segmentInfo.video.forEach(function (info) {\n        info.dts = handleRollover(info.dts, videoBaseTimestamp);\n        info.pts = handleRollover(info.pts, videoBaseTimestamp); // time in seconds\n\n        info.dtsTime = info.dts / ONE_SECOND_IN_TS;\n        info.ptsTime = info.pts / ONE_SECOND_IN_TS;\n      });\n      if (segmentInfo.firstKeyFrame) {\n        var frame = segmentInfo.firstKeyFrame;\n        frame.dts = handleRollover(frame.dts, videoBaseTimestamp);\n        frame.pts = handleRollover(frame.pts, videoBaseTimestamp); // time in seconds\n\n        frame.dtsTime = frame.dts / ONE_SECOND_IN_TS;\n        frame.ptsTime = frame.pts / ONE_SECOND_IN_TS;\n      }\n    }\n  };\n  /**\n   * inspects the aac data stream for start and end time information\n   */\n\n  var inspectAac_ = function (bytes) {\n    var endLoop = false,\n      audioCount = 0,\n      sampleRate = null,\n      timestamp = null,\n      frameSize = 0,\n      byteIndex = 0,\n      packet;\n    while (bytes.length - byteIndex >= 3) {\n      var type = probe.aac.parseType(bytes, byteIndex);\n      switch (type) {\n        case 'timed-metadata':\n          // Exit early because we don't have enough to parse\n          // the ID3 tag header\n          if (bytes.length - byteIndex < 10) {\n            endLoop = true;\n            break;\n          }\n          frameSize = probe.aac.parseId3TagSize(bytes, byteIndex); // Exit early if we don't have enough in the buffer\n          // to emit a full packet\n\n          if (frameSize > bytes.length) {\n            endLoop = true;\n            break;\n          }\n          if (timestamp === null) {\n            packet = bytes.subarray(byteIndex, byteIndex + frameSize);\n            timestamp = probe.aac.parseAacTimestamp(packet);\n          }\n          byteIndex += frameSize;\n          break;\n        case 'audio':\n          // Exit early because we don't have enough to parse\n          // the ADTS frame header\n          if (bytes.length - byteIndex < 7) {\n            endLoop = true;\n            break;\n          }\n          frameSize = probe.aac.parseAdtsSize(bytes, byteIndex); // Exit early if we don't have enough in the buffer\n          // to emit a full packet\n\n          if (frameSize > bytes.length) {\n            endLoop = true;\n            break;\n          }\n          if (sampleRate === null) {\n            packet = bytes.subarray(byteIndex, byteIndex + frameSize);\n            sampleRate = probe.aac.parseSampleRate(packet);\n          }\n          audioCount++;\n          byteIndex += frameSize;\n          break;\n        default:\n          byteIndex++;\n          break;\n      }\n      if (endLoop) {\n        return null;\n      }\n    }\n    if (sampleRate === null || timestamp === null) {\n      return null;\n    }\n    var audioTimescale = ONE_SECOND_IN_TS / sampleRate;\n    var result = {\n      audio: [{\n        type: 'audio',\n        dts: timestamp,\n        pts: timestamp\n      }, {\n        type: 'audio',\n        dts: timestamp + audioCount * 1024 * audioTimescale,\n        pts: timestamp + audioCount * 1024 * audioTimescale\n      }]\n    };\n    return result;\n  };\n  /**\n   * inspects the transport stream segment data for start and end time information\n   * of the audio and video tracks (when present) as well as the first key frame's\n   * start time.\n   */\n\n  var inspectTs_ = function (bytes) {\n    var pmt = {\n      pid: null,\n      table: null\n    };\n    var result = {};\n    parsePsi_(bytes, pmt);\n    for (var pid in pmt.table) {\n      if (pmt.table.hasOwnProperty(pid)) {\n        var type = pmt.table[pid];\n        switch (type) {\n          case StreamTypes.H264_STREAM_TYPE:\n            result.video = [];\n            parseVideoPes_(bytes, pmt, result);\n            if (result.video.length === 0) {\n              delete result.video;\n            }\n            break;\n          case StreamTypes.ADTS_STREAM_TYPE:\n            result.audio = [];\n            parseAudioPes_(bytes, pmt, result);\n            if (result.audio.length === 0) {\n              delete result.audio;\n            }\n            break;\n        }\n      }\n    }\n    return result;\n  };\n  /**\n   * Inspects segment byte data and returns an object with start and end timing information\n   *\n   * @param {Uint8Array} bytes The segment byte data\n   * @param {Number} baseTimestamp Relative reference timestamp used when adjusting frame\n   *  timestamps for rollover. This value must be in 90khz clock.\n   * @return {Object} Object containing start and end frame timing info of segment.\n   */\n\n  var inspect = function (bytes, baseTimestamp) {\n    var isAacData = probe.aac.isLikelyAacData(bytes);\n    var result;\n    if (isAacData) {\n      result = inspectAac_(bytes);\n    } else {\n      result = inspectTs_(bytes);\n    }\n    if (!result || !result.audio && !result.video) {\n      return null;\n    }\n    adjustTimestamp_(result, baseTimestamp);\n    return result;\n  };\n  var tsInspector = {\n    inspect: inspect,\n    parseAudioPes_: parseAudioPes_\n  };\n  /* global self */\n\n  /**\n   * Re-emits transmuxer events by converting them into messages to the\n   * world outside the worker.\n   *\n   * @param {Object} transmuxer the transmuxer to wire events on\n   * @private\n   */\n\n  const wireTransmuxerEvents = function (self, transmuxer) {\n    transmuxer.on('data', function (segment) {\n      // transfer ownership of the underlying ArrayBuffer\n      // instead of doing a copy to save memory\n      // ArrayBuffers are transferable but generic TypedArrays are not\n      // @link https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Using_web_workers#Passing_data_by_transferring_ownership_(transferable_objects)\n      const initArray = segment.initSegment;\n      segment.initSegment = {\n        data: initArray.buffer,\n        byteOffset: initArray.byteOffset,\n        byteLength: initArray.byteLength\n      };\n      const typedArray = segment.data;\n      segment.data = typedArray.buffer;\n      self.postMessage({\n        action: 'data',\n        segment,\n        byteOffset: typedArray.byteOffset,\n        byteLength: typedArray.byteLength\n      }, [segment.data]);\n    });\n    transmuxer.on('done', function (data) {\n      self.postMessage({\n        action: 'done'\n      });\n    });\n    transmuxer.on('gopInfo', function (gopInfo) {\n      self.postMessage({\n        action: 'gopInfo',\n        gopInfo\n      });\n    });\n    transmuxer.on('videoSegmentTimingInfo', function (timingInfo) {\n      const videoSegmentTimingInfo = {\n        start: {\n          decode: clock$2.videoTsToSeconds(timingInfo.start.dts),\n          presentation: clock$2.videoTsToSeconds(timingInfo.start.pts)\n        },\n        end: {\n          decode: clock$2.videoTsToSeconds(timingInfo.end.dts),\n          presentation: clock$2.videoTsToSeconds(timingInfo.end.pts)\n        },\n        baseMediaDecodeTime: clock$2.videoTsToSeconds(timingInfo.baseMediaDecodeTime)\n      };\n      if (timingInfo.prependedContentDuration) {\n        videoSegmentTimingInfo.prependedContentDuration = clock$2.videoTsToSeconds(timingInfo.prependedContentDuration);\n      }\n      self.postMessage({\n        action: 'videoSegmentTimingInfo',\n        videoSegmentTimingInfo\n      });\n    });\n    transmuxer.on('audioSegmentTimingInfo', function (timingInfo) {\n      // Note that all times for [audio/video]SegmentTimingInfo events are in video clock\n      const audioSegmentTimingInfo = {\n        start: {\n          decode: clock$2.videoTsToSeconds(timingInfo.start.dts),\n          presentation: clock$2.videoTsToSeconds(timingInfo.start.pts)\n        },\n        end: {\n          decode: clock$2.videoTsToSeconds(timingInfo.end.dts),\n          presentation: clock$2.videoTsToSeconds(timingInfo.end.pts)\n        },\n        baseMediaDecodeTime: clock$2.videoTsToSeconds(timingInfo.baseMediaDecodeTime)\n      };\n      if (timingInfo.prependedContentDuration) {\n        audioSegmentTimingInfo.prependedContentDuration = clock$2.videoTsToSeconds(timingInfo.prependedContentDuration);\n      }\n      self.postMessage({\n        action: 'audioSegmentTimingInfo',\n        audioSegmentTimingInfo\n      });\n    });\n    transmuxer.on('id3Frame', function (id3Frame) {\n      self.postMessage({\n        action: 'id3Frame',\n        id3Frame\n      });\n    });\n    transmuxer.on('caption', function (caption) {\n      self.postMessage({\n        action: 'caption',\n        caption\n      });\n    });\n    transmuxer.on('trackinfo', function (trackInfo) {\n      self.postMessage({\n        action: 'trackinfo',\n        trackInfo\n      });\n    });\n    transmuxer.on('audioTimingInfo', function (audioTimingInfo) {\n      // convert to video TS since we prioritize video time over audio\n      self.postMessage({\n        action: 'audioTimingInfo',\n        audioTimingInfo: {\n          start: clock$2.videoTsToSeconds(audioTimingInfo.start),\n          end: clock$2.videoTsToSeconds(audioTimingInfo.end)\n        }\n      });\n    });\n    transmuxer.on('videoTimingInfo', function (videoTimingInfo) {\n      self.postMessage({\n        action: 'videoTimingInfo',\n        videoTimingInfo: {\n          start: clock$2.videoTsToSeconds(videoTimingInfo.start),\n          end: clock$2.videoTsToSeconds(videoTimingInfo.end)\n        }\n      });\n    });\n    transmuxer.on('log', function (log) {\n      self.postMessage({\n        action: 'log',\n        log\n      });\n    });\n  };\n  /**\n   * All incoming messages route through this hash. If no function exists\n   * to handle an incoming message, then we ignore the message.\n   *\n   * @class MessageHandlers\n   * @param {Object} options the options to initialize with\n   */\n\n  class MessageHandlers {\n    constructor(self, options) {\n      this.options = options || {};\n      this.self = self;\n      this.init();\n    }\n    /**\n     * initialize our web worker and wire all the events.\n     */\n\n    init() {\n      if (this.transmuxer) {\n        this.transmuxer.dispose();\n      }\n      this.transmuxer = new transmuxer.Transmuxer(this.options);\n      wireTransmuxerEvents(this.self, this.transmuxer);\n    }\n    pushMp4Captions(data) {\n      if (!this.captionParser) {\n        this.captionParser = new captionParser();\n        this.captionParser.init();\n      }\n      const segment = new Uint8Array(data.data, data.byteOffset, data.byteLength);\n      const parsed = this.captionParser.parse(segment, data.trackIds, data.timescales);\n      this.self.postMessage({\n        action: 'mp4Captions',\n        captions: parsed && parsed.captions || [],\n        logs: parsed && parsed.logs || [],\n        data: segment.buffer\n      }, [segment.buffer]);\n    }\n    probeMp4StartTime({\n      timescales,\n      data\n    }) {\n      const startTime = probe$2.startTime(timescales, data);\n      this.self.postMessage({\n        action: 'probeMp4StartTime',\n        startTime,\n        data\n      }, [data.buffer]);\n    }\n    probeMp4Tracks({\n      data\n    }) {\n      const tracks = probe$2.tracks(data);\n      this.self.postMessage({\n        action: 'probeMp4Tracks',\n        tracks,\n        data\n      }, [data.buffer]);\n    }\n    /**\n     * Probe an mpeg2-ts segment to determine the start time of the segment in it's\n     * internal \"media time,\" as well as whether it contains video and/or audio.\n     *\n     * @private\n     * @param {Uint8Array} bytes - segment bytes\n     * @param {number} baseStartTime\n     *        Relative reference timestamp used when adjusting frame timestamps for rollover.\n     *        This value should be in seconds, as it's converted to a 90khz clock within the\n     *        function body.\n     * @return {Object} The start time of the current segment in \"media time\" as well as\n     *                  whether it contains video and/or audio\n     */\n\n    probeTs({\n      data,\n      baseStartTime\n    }) {\n      const tsStartTime = typeof baseStartTime === 'number' && !isNaN(baseStartTime) ? baseStartTime * clock$2.ONE_SECOND_IN_TS : void 0;\n      const timeInfo = tsInspector.inspect(data, tsStartTime);\n      let result = null;\n      if (timeInfo) {\n        result = {\n          // each type's time info comes back as an array of 2 times, start and end\n          hasVideo: timeInfo.video && timeInfo.video.length === 2 || false,\n          hasAudio: timeInfo.audio && timeInfo.audio.length === 2 || false\n        };\n        if (result.hasVideo) {\n          result.videoStart = timeInfo.video[0].ptsTime;\n        }\n        if (result.hasAudio) {\n          result.audioStart = timeInfo.audio[0].ptsTime;\n        }\n      }\n      this.self.postMessage({\n        action: 'probeTs',\n        result,\n        data\n      }, [data.buffer]);\n    }\n    clearAllMp4Captions() {\n      if (this.captionParser) {\n        this.captionParser.clearAllCaptions();\n      }\n    }\n    clearParsedMp4Captions() {\n      if (this.captionParser) {\n        this.captionParser.clearParsedCaptions();\n      }\n    }\n    /**\n     * Adds data (a ts segment) to the start of the transmuxer pipeline for\n     * processing.\n     *\n     * @param {ArrayBuffer} data data to push into the muxer\n     */\n\n    push(data) {\n      // Cast array buffer to correct type for transmuxer\n      const segment = new Uint8Array(data.data, data.byteOffset, data.byteLength);\n      this.transmuxer.push(segment);\n    }\n    /**\n     * Recreate the transmuxer so that the next segment added via `push`\n     * start with a fresh transmuxer.\n     */\n\n    reset() {\n      this.transmuxer.reset();\n    }\n    /**\n     * Set the value that will be used as the `baseMediaDecodeTime` time for the\n     * next segment pushed in. Subsequent segments will have their `baseMediaDecodeTime`\n     * set relative to the first based on the PTS values.\n     *\n     * @param {Object} data used to set the timestamp offset in the muxer\n     */\n\n    setTimestampOffset(data) {\n      const timestampOffset = data.timestampOffset || 0;\n      this.transmuxer.setBaseMediaDecodeTime(Math.round(clock$2.secondsToVideoTs(timestampOffset)));\n    }\n    setAudioAppendStart(data) {\n      this.transmuxer.setAudioAppendStart(Math.ceil(clock$2.secondsToVideoTs(data.appendStart)));\n    }\n    setRemux(data) {\n      this.transmuxer.setRemux(data.remux);\n    }\n    /**\n     * Forces the pipeline to finish processing the last segment and emit it's\n     * results.\n     *\n     * @param {Object} data event data, not really used\n     */\n\n    flush(data) {\n      this.transmuxer.flush(); // transmuxed done action is fired after both audio/video pipelines are flushed\n\n      self.postMessage({\n        action: 'done',\n        type: 'transmuxed'\n      });\n    }\n    endTimeline() {\n      this.transmuxer.endTimeline(); // transmuxed endedtimeline action is fired after both audio/video pipelines end their\n      // timelines\n\n      self.postMessage({\n        action: 'endedtimeline',\n        type: 'transmuxed'\n      });\n    }\n    alignGopsWith(data) {\n      this.transmuxer.alignGopsWith(data.gopsToAlignWith.slice());\n    }\n  }\n  /**\n   * Our web worker interface so that things can talk to mux.js\n   * that will be running in a web worker. the scope is passed to this by\n   * webworkify.\n   *\n   * @param {Object} self the scope for the web worker\n   */\n\n  self.onmessage = function (event) {\n    if (event.data.action === 'init' && event.data.options) {\n      this.messageHandlers = new MessageHandlers(self, event.data.options);\n      return;\n    }\n    if (!this.messageHandlers) {\n      this.messageHandlers = new MessageHandlers(self);\n    }\n    if (event.data && event.data.action && event.data.action !== 'init') {\n      if (this.messageHandlers[event.data.action]) {\n        this.messageHandlers[event.data.action](event.data);\n      }\n    }\n  };\n}));\nvar TransmuxWorker = factory(workerCode$1);\n/* rollup-plugin-worker-factory end for worker!/Users/ddashkevich/projects/http-streaming/src/transmuxer-worker.js */\n\nconst handleData_ = (event, transmuxedData, callback) => {\n  const {\n    type,\n    initSegment,\n    captions,\n    captionStreams,\n    metadata,\n    videoFrameDtsTime,\n    videoFramePtsTime\n  } = event.data.segment;\n  transmuxedData.buffer.push({\n    captions,\n    captionStreams,\n    metadata\n  });\n  const boxes = event.data.segment.boxes || {\n    data: event.data.segment.data\n  };\n  const result = {\n    type,\n    // cast ArrayBuffer to TypedArray\n    data: new Uint8Array(boxes.data, boxes.data.byteOffset, boxes.data.byteLength),\n    initSegment: new Uint8Array(initSegment.data, initSegment.byteOffset, initSegment.byteLength)\n  };\n  if (typeof videoFrameDtsTime !== 'undefined') {\n    result.videoFrameDtsTime = videoFrameDtsTime;\n  }\n  if (typeof videoFramePtsTime !== 'undefined') {\n    result.videoFramePtsTime = videoFramePtsTime;\n  }\n  callback(result);\n};\nconst handleDone_ = ({\n  transmuxedData,\n  callback\n}) => {\n  // Previously we only returned data on data events,\n  // not on done events. Clear out the buffer to keep that consistent.\n  transmuxedData.buffer = []; // all buffers should have been flushed from the muxer, so start processing anything we\n  // have received\n\n  callback(transmuxedData);\n};\nconst handleGopInfo_ = (event, transmuxedData) => {\n  transmuxedData.gopInfo = event.data.gopInfo;\n};\nconst processTransmux = options => {\n  const {\n    transmuxer,\n    bytes,\n    audioAppendStart,\n    gopsToAlignWith,\n    remux,\n    onData,\n    onTrackInfo,\n    onAudioTimingInfo,\n    onVideoTimingInfo,\n    onVideoSegmentTimingInfo,\n    onAudioSegmentTimingInfo,\n    onId3,\n    onCaptions,\n    onDone,\n    onEndedTimeline,\n    onTransmuxerLog,\n    isEndOfTimeline\n  } = options;\n  const transmuxedData = {\n    buffer: []\n  };\n  let waitForEndedTimelineEvent = isEndOfTimeline;\n  const handleMessage = event => {\n    if (transmuxer.currentTransmux !== options) {\n      // disposed\n      return;\n    }\n    if (event.data.action === 'data') {\n      handleData_(event, transmuxedData, onData);\n    }\n    if (event.data.action === 'trackinfo') {\n      onTrackInfo(event.data.trackInfo);\n    }\n    if (event.data.action === 'gopInfo') {\n      handleGopInfo_(event, transmuxedData);\n    }\n    if (event.data.action === 'audioTimingInfo') {\n      onAudioTimingInfo(event.data.audioTimingInfo);\n    }\n    if (event.data.action === 'videoTimingInfo') {\n      onVideoTimingInfo(event.data.videoTimingInfo);\n    }\n    if (event.data.action === 'videoSegmentTimingInfo') {\n      onVideoSegmentTimingInfo(event.data.videoSegmentTimingInfo);\n    }\n    if (event.data.action === 'audioSegmentTimingInfo') {\n      onAudioSegmentTimingInfo(event.data.audioSegmentTimingInfo);\n    }\n    if (event.data.action === 'id3Frame') {\n      onId3([event.data.id3Frame], event.data.id3Frame.dispatchType);\n    }\n    if (event.data.action === 'caption') {\n      onCaptions(event.data.caption);\n    }\n    if (event.data.action === 'endedtimeline') {\n      waitForEndedTimelineEvent = false;\n      onEndedTimeline();\n    }\n    if (event.data.action === 'log') {\n      onTransmuxerLog(event.data.log);\n    } // wait for the transmuxed event since we may have audio and video\n\n    if (event.data.type !== 'transmuxed') {\n      return;\n    } // If the \"endedtimeline\" event has not yet fired, and this segment represents the end\n    // of a timeline, that means there may still be data events before the segment\n    // processing can be considerred complete. In that case, the final event should be\n    // an \"endedtimeline\" event with the type \"transmuxed.\"\n\n    if (waitForEndedTimelineEvent) {\n      return;\n    }\n    transmuxer.onmessage = null;\n    handleDone_({\n      transmuxedData,\n      callback: onDone\n    });\n    /* eslint-disable no-use-before-define */\n\n    dequeue(transmuxer);\n    /* eslint-enable */\n  };\n\n  transmuxer.onmessage = handleMessage;\n  if (audioAppendStart) {\n    transmuxer.postMessage({\n      action: 'setAudioAppendStart',\n      appendStart: audioAppendStart\n    });\n  } // allow empty arrays to be passed to clear out GOPs\n\n  if (Array.isArray(gopsToAlignWith)) {\n    transmuxer.postMessage({\n      action: 'alignGopsWith',\n      gopsToAlignWith\n    });\n  }\n  if (typeof remux !== 'undefined') {\n    transmuxer.postMessage({\n      action: 'setRemux',\n      remux\n    });\n  }\n  if (bytes.byteLength) {\n    const buffer = bytes instanceof ArrayBuffer ? bytes : bytes.buffer;\n    const byteOffset = bytes instanceof ArrayBuffer ? 0 : bytes.byteOffset;\n    transmuxer.postMessage({\n      action: 'push',\n      // Send the typed-array of data as an ArrayBuffer so that\n      // it can be sent as a \"Transferable\" and avoid the costly\n      // memory copy\n      data: buffer,\n      // To recreate the original typed-array, we need information\n      // about what portion of the ArrayBuffer it was a view into\n      byteOffset,\n      byteLength: bytes.byteLength\n    }, [buffer]);\n  }\n  if (isEndOfTimeline) {\n    transmuxer.postMessage({\n      action: 'endTimeline'\n    });\n  } // even if we didn't push any bytes, we have to make sure we flush in case we reached\n  // the end of the segment\n\n  transmuxer.postMessage({\n    action: 'flush'\n  });\n};\nconst dequeue = transmuxer => {\n  transmuxer.currentTransmux = null;\n  if (transmuxer.transmuxQueue.length) {\n    transmuxer.currentTransmux = transmuxer.transmuxQueue.shift();\n    if (typeof transmuxer.currentTransmux === 'function') {\n      transmuxer.currentTransmux();\n    } else {\n      processTransmux(transmuxer.currentTransmux);\n    }\n  }\n};\nconst processAction = (transmuxer, action) => {\n  transmuxer.postMessage({\n    action\n  });\n  dequeue(transmuxer);\n};\nconst enqueueAction = (action, transmuxer) => {\n  if (!transmuxer.currentTransmux) {\n    transmuxer.currentTransmux = action;\n    processAction(transmuxer, action);\n    return;\n  }\n  transmuxer.transmuxQueue.push(processAction.bind(null, transmuxer, action));\n};\nconst reset = transmuxer => {\n  enqueueAction('reset', transmuxer);\n};\nconst endTimeline = transmuxer => {\n  enqueueAction('endTimeline', transmuxer);\n};\nconst transmux = options => {\n  if (!options.transmuxer.currentTransmux) {\n    options.transmuxer.currentTransmux = options;\n    processTransmux(options);\n    return;\n  }\n  options.transmuxer.transmuxQueue.push(options);\n};\nconst createTransmuxer = options => {\n  const transmuxer = new TransmuxWorker();\n  transmuxer.currentTransmux = null;\n  transmuxer.transmuxQueue = [];\n  const term = transmuxer.terminate;\n  transmuxer.terminate = () => {\n    transmuxer.currentTransmux = null;\n    transmuxer.transmuxQueue.length = 0;\n    return term.call(transmuxer);\n  };\n  transmuxer.postMessage({\n    action: 'init',\n    options\n  });\n  return transmuxer;\n};\nvar segmentTransmuxer = {\n  reset,\n  endTimeline,\n  transmux,\n  createTransmuxer\n};\nconst workerCallback = function (options) {\n  const transmuxer = options.transmuxer;\n  const endAction = options.endAction || options.action;\n  const callback = options.callback;\n  const message = _extends({}, options, {\n    endAction: null,\n    transmuxer: null,\n    callback: null\n  });\n  const listenForEndEvent = event => {\n    if (event.data.action !== endAction) {\n      return;\n    }\n    transmuxer.removeEventListener('message', listenForEndEvent); // transfer ownership of bytes back to us.\n\n    if (event.data.data) {\n      event.data.data = new Uint8Array(event.data.data, options.byteOffset || 0, options.byteLength || event.data.data.byteLength);\n      if (options.data) {\n        options.data = event.data.data;\n      }\n    }\n    callback(event.data);\n  };\n  transmuxer.addEventListener('message', listenForEndEvent);\n  if (options.data) {\n    const isArrayBuffer = options.data instanceof ArrayBuffer;\n    message.byteOffset = isArrayBuffer ? 0 : options.data.byteOffset;\n    message.byteLength = options.data.byteLength;\n    const transfers = [isArrayBuffer ? options.data : options.data.buffer];\n    transmuxer.postMessage(message, transfers);\n  } else {\n    transmuxer.postMessage(message);\n  }\n};\nconst REQUEST_ERRORS = {\n  FAILURE: 2,\n  TIMEOUT: -101,\n  ABORTED: -102\n};\n/**\n * Abort all requests\n *\n * @param {Object} activeXhrs - an object that tracks all XHR requests\n */\n\nconst abortAll = activeXhrs => {\n  activeXhrs.forEach(xhr => {\n    xhr.abort();\n  });\n};\n/**\n * Gather important bandwidth stats once a request has completed\n *\n * @param {Object} request - the XHR request from which to gather stats\n */\n\nconst getRequestStats = request => {\n  return {\n    bandwidth: request.bandwidth,\n    bytesReceived: request.bytesReceived || 0,\n    roundTripTime: request.roundTripTime || 0\n  };\n};\n/**\n * If possible gather bandwidth stats as a request is in\n * progress\n *\n * @param {Event} progressEvent - an event object from an XHR's progress event\n */\n\nconst getProgressStats = progressEvent => {\n  const request = progressEvent.target;\n  const roundTripTime = Date.now() - request.requestTime;\n  const stats = {\n    bandwidth: Infinity,\n    bytesReceived: 0,\n    roundTripTime: roundTripTime || 0\n  };\n  stats.bytesReceived = progressEvent.loaded; // This can result in Infinity if stats.roundTripTime is 0 but that is ok\n  // because we should only use bandwidth stats on progress to determine when\n  // abort a request early due to insufficient bandwidth\n\n  stats.bandwidth = Math.floor(stats.bytesReceived / stats.roundTripTime * 8 * 1000);\n  return stats;\n};\n/**\n * Handle all error conditions in one place and return an object\n * with all the information\n *\n * @param {Error|null} error - if non-null signals an error occured with the XHR\n * @param {Object} request -  the XHR request that possibly generated the error\n */\n\nconst handleErrors = (error, request) => {\n  if (request.timedout) {\n    return {\n      status: request.status,\n      message: 'HLS request timed-out at URL: ' + request.uri,\n      code: REQUEST_ERRORS.TIMEOUT,\n      xhr: request\n    };\n  }\n  if (request.aborted) {\n    return {\n      status: request.status,\n      message: 'HLS request aborted at URL: ' + request.uri,\n      code: REQUEST_ERRORS.ABORTED,\n      xhr: request\n    };\n  }\n  if (error) {\n    return {\n      status: request.status,\n      message: 'HLS request errored at URL: ' + request.uri,\n      code: REQUEST_ERRORS.FAILURE,\n      xhr: request\n    };\n  }\n  if (request.responseType === 'arraybuffer' && request.response.byteLength === 0) {\n    return {\n      status: request.status,\n      message: 'Empty HLS response at URL: ' + request.uri,\n      code: REQUEST_ERRORS.FAILURE,\n      xhr: request\n    };\n  }\n  return null;\n};\n/**\n * Handle responses for key data and convert the key data to the correct format\n * for the decryption step later\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Array} objects - objects to add the key bytes to.\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\n *                                        this request\n */\n\nconst handleKeyResponse = (segment, objects, finishProcessingFn) => (error, request) => {\n  const response = request.response;\n  const errorObj = handleErrors(error, request);\n  if (errorObj) {\n    return finishProcessingFn(errorObj, segment);\n  }\n  if (response.byteLength !== 16) {\n    return finishProcessingFn({\n      status: request.status,\n      message: 'Invalid HLS key at URL: ' + request.uri,\n      code: REQUEST_ERRORS.FAILURE,\n      xhr: request\n    }, segment);\n  }\n  const view = new DataView(response);\n  const bytes = new Uint32Array([view.getUint32(0), view.getUint32(4), view.getUint32(8), view.getUint32(12)]);\n  for (let i = 0; i < objects.length; i++) {\n    objects[i].bytes = bytes;\n  }\n  return finishProcessingFn(null, segment);\n};\nconst parseInitSegment = (segment, callback) => {\n  const type = detectContainerForBytes(segment.map.bytes); // TODO: We should also handle ts init segments here, but we\n  // only know how to parse mp4 init segments at the moment\n\n  if (type !== 'mp4') {\n    const uri = segment.map.resolvedUri || segment.map.uri;\n    return callback({\n      internal: true,\n      message: `Found unsupported ${type || 'unknown'} container for initialization segment at URL: ${uri}`,\n      code: REQUEST_ERRORS.FAILURE\n    });\n  }\n  workerCallback({\n    action: 'probeMp4Tracks',\n    data: segment.map.bytes,\n    transmuxer: segment.transmuxer,\n    callback: ({\n      tracks,\n      data\n    }) => {\n      // transfer bytes back to us\n      segment.map.bytes = data;\n      tracks.forEach(function (track) {\n        segment.map.tracks = segment.map.tracks || {}; // only support one track of each type for now\n\n        if (segment.map.tracks[track.type]) {\n          return;\n        }\n        segment.map.tracks[track.type] = track;\n        if (typeof track.id === 'number' && track.timescale) {\n          segment.map.timescales = segment.map.timescales || {};\n          segment.map.timescales[track.id] = track.timescale;\n        }\n      });\n      return callback(null);\n    }\n  });\n};\n/**\n * Handle init-segment responses\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\n *                                        this request\n */\n\nconst handleInitSegmentResponse = ({\n  segment,\n  finishProcessingFn\n}) => (error, request) => {\n  const errorObj = handleErrors(error, request);\n  if (errorObj) {\n    return finishProcessingFn(errorObj, segment);\n  }\n  const bytes = new Uint8Array(request.response); // init segment is encypted, we will have to wait\n  // until the key request is done to decrypt.\n\n  if (segment.map.key) {\n    segment.map.encryptedBytes = bytes;\n    return finishProcessingFn(null, segment);\n  }\n  segment.map.bytes = bytes;\n  parseInitSegment(segment, function (parseError) {\n    if (parseError) {\n      parseError.xhr = request;\n      parseError.status = request.status;\n      return finishProcessingFn(parseError, segment);\n    }\n    finishProcessingFn(null, segment);\n  });\n};\n/**\n * Response handler for segment-requests being sure to set the correct\n * property depending on whether the segment is encryped or not\n * Also records and keeps track of stats that are used for ABR purposes\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\n *                                        this request\n */\n\nconst handleSegmentResponse = ({\n  segment,\n  finishProcessingFn,\n  responseType\n}) => (error, request) => {\n  const errorObj = handleErrors(error, request);\n  if (errorObj) {\n    return finishProcessingFn(errorObj, segment);\n  }\n  const newBytes =\n  // although responseText \"should\" exist, this guard serves to prevent an error being\n  // thrown for two primary cases:\n  // 1. the mime type override stops working, or is not implemented for a specific\n  //    browser\n  // 2. when using mock XHR libraries like sinon that do not allow the override behavior\n  responseType === 'arraybuffer' || !request.responseText ? request.response : stringToArrayBuffer(request.responseText.substring(segment.lastReachedChar || 0));\n  segment.stats = getRequestStats(request);\n  if (segment.key) {\n    segment.encryptedBytes = new Uint8Array(newBytes);\n  } else {\n    segment.bytes = new Uint8Array(newBytes);\n  }\n  return finishProcessingFn(null, segment);\n};\nconst transmuxAndNotify = ({\n  segment,\n  bytes,\n  trackInfoFn,\n  timingInfoFn,\n  videoSegmentTimingInfoFn,\n  audioSegmentTimingInfoFn,\n  id3Fn,\n  captionsFn,\n  isEndOfTimeline,\n  endedTimelineFn,\n  dataFn,\n  doneFn,\n  onTransmuxerLog\n}) => {\n  const fmp4Tracks = segment.map && segment.map.tracks || {};\n  const isMuxed = Boolean(fmp4Tracks.audio && fmp4Tracks.video); // Keep references to each function so we can null them out after we're done with them.\n  // One reason for this is that in the case of full segments, we want to trust start\n  // times from the probe, rather than the transmuxer.\n\n  let audioStartFn = timingInfoFn.bind(null, segment, 'audio', 'start');\n  const audioEndFn = timingInfoFn.bind(null, segment, 'audio', 'end');\n  let videoStartFn = timingInfoFn.bind(null, segment, 'video', 'start');\n  const videoEndFn = timingInfoFn.bind(null, segment, 'video', 'end');\n  const finish = () => transmux({\n    bytes,\n    transmuxer: segment.transmuxer,\n    audioAppendStart: segment.audioAppendStart,\n    gopsToAlignWith: segment.gopsToAlignWith,\n    remux: isMuxed,\n    onData: result => {\n      result.type = result.type === 'combined' ? 'video' : result.type;\n      dataFn(segment, result);\n    },\n    onTrackInfo: trackInfo => {\n      if (trackInfoFn) {\n        if (isMuxed) {\n          trackInfo.isMuxed = true;\n        }\n        trackInfoFn(segment, trackInfo);\n      }\n    },\n    onAudioTimingInfo: audioTimingInfo => {\n      // we only want the first start value we encounter\n      if (audioStartFn && typeof audioTimingInfo.start !== 'undefined') {\n        audioStartFn(audioTimingInfo.start);\n        audioStartFn = null;\n      } // we want to continually update the end time\n\n      if (audioEndFn && typeof audioTimingInfo.end !== 'undefined') {\n        audioEndFn(audioTimingInfo.end);\n      }\n    },\n    onVideoTimingInfo: videoTimingInfo => {\n      // we only want the first start value we encounter\n      if (videoStartFn && typeof videoTimingInfo.start !== 'undefined') {\n        videoStartFn(videoTimingInfo.start);\n        videoStartFn = null;\n      } // we want to continually update the end time\n\n      if (videoEndFn && typeof videoTimingInfo.end !== 'undefined') {\n        videoEndFn(videoTimingInfo.end);\n      }\n    },\n    onVideoSegmentTimingInfo: videoSegmentTimingInfo => {\n      videoSegmentTimingInfoFn(videoSegmentTimingInfo);\n    },\n    onAudioSegmentTimingInfo: audioSegmentTimingInfo => {\n      audioSegmentTimingInfoFn(audioSegmentTimingInfo);\n    },\n    onId3: (id3Frames, dispatchType) => {\n      id3Fn(segment, id3Frames, dispatchType);\n    },\n    onCaptions: captions => {\n      captionsFn(segment, [captions]);\n    },\n    isEndOfTimeline,\n    onEndedTimeline: () => {\n      endedTimelineFn();\n    },\n    onTransmuxerLog,\n    onDone: result => {\n      if (!doneFn) {\n        return;\n      }\n      result.type = result.type === 'combined' ? 'video' : result.type;\n      doneFn(null, segment, result);\n    }\n  }); // In the transmuxer, we don't yet have the ability to extract a \"proper\" start time.\n  // Meaning cached frame data may corrupt our notion of where this segment\n  // really starts. To get around this, probe for the info needed.\n\n  workerCallback({\n    action: 'probeTs',\n    transmuxer: segment.transmuxer,\n    data: bytes,\n    baseStartTime: segment.baseStartTime,\n    callback: data => {\n      segment.bytes = bytes = data.data;\n      const probeResult = data.result;\n      if (probeResult) {\n        trackInfoFn(segment, {\n          hasAudio: probeResult.hasAudio,\n          hasVideo: probeResult.hasVideo,\n          isMuxed\n        });\n        trackInfoFn = null;\n        if (probeResult.hasAudio && !isMuxed) {\n          audioStartFn(probeResult.audioStart);\n        }\n        if (probeResult.hasVideo) {\n          videoStartFn(probeResult.videoStart);\n        }\n        audioStartFn = null;\n        videoStartFn = null;\n      }\n      finish();\n    }\n  });\n};\nconst handleSegmentBytes = ({\n  segment,\n  bytes,\n  trackInfoFn,\n  timingInfoFn,\n  videoSegmentTimingInfoFn,\n  audioSegmentTimingInfoFn,\n  id3Fn,\n  captionsFn,\n  isEndOfTimeline,\n  endedTimelineFn,\n  dataFn,\n  doneFn,\n  onTransmuxerLog\n}) => {\n  let bytesAsUint8Array = new Uint8Array(bytes); // TODO:\n  // We should have a handler that fetches the number of bytes required\n  // to check if something is fmp4. This will allow us to save bandwidth\n  // because we can only exclude a playlist and abort requests\n  // by codec after trackinfo triggers.\n\n  if (isLikelyFmp4MediaSegment(bytesAsUint8Array)) {\n    segment.isFmp4 = true;\n    const {\n      tracks\n    } = segment.map;\n    const trackInfo = {\n      isFmp4: true,\n      hasVideo: !!tracks.video,\n      hasAudio: !!tracks.audio\n    }; // if we have a audio track, with a codec that is not set to\n    // encrypted audio\n\n    if (tracks.audio && tracks.audio.codec && tracks.audio.codec !== 'enca') {\n      trackInfo.audioCodec = tracks.audio.codec;\n    } // if we have a video track, with a codec that is not set to\n    // encrypted video\n\n    if (tracks.video && tracks.video.codec && tracks.video.codec !== 'encv') {\n      trackInfo.videoCodec = tracks.video.codec;\n    }\n    if (tracks.video && tracks.audio) {\n      trackInfo.isMuxed = true;\n    } // since we don't support appending fmp4 data on progress, we know we have the full\n    // segment here\n\n    trackInfoFn(segment, trackInfo); // The probe doesn't provide the segment end time, so only callback with the start\n    // time. The end time can be roughly calculated by the receiver using the duration.\n    //\n    // Note that the start time returned by the probe reflects the baseMediaDecodeTime, as\n    // that is the true start of the segment (where the playback engine should begin\n    // decoding).\n\n    const finishLoading = captions => {\n      // if the track still has audio at this point it is only possible\n      // for it to be audio only. See `tracks.video && tracks.audio` if statement\n      // above.\n      // we make sure to use segment.bytes here as that\n      dataFn(segment, {\n        data: bytesAsUint8Array,\n        type: trackInfo.hasAudio && !trackInfo.isMuxed ? 'audio' : 'video'\n      });\n      if (captions && captions.length) {\n        captionsFn(segment, captions);\n      }\n      doneFn(null, segment, {});\n    };\n    workerCallback({\n      action: 'probeMp4StartTime',\n      timescales: segment.map.timescales,\n      data: bytesAsUint8Array,\n      transmuxer: segment.transmuxer,\n      callback: ({\n        data,\n        startTime\n      }) => {\n        // transfer bytes back to us\n        bytes = data.buffer;\n        segment.bytes = bytesAsUint8Array = data;\n        if (trackInfo.hasAudio && !trackInfo.isMuxed) {\n          timingInfoFn(segment, 'audio', 'start', startTime);\n        }\n        if (trackInfo.hasVideo) {\n          timingInfoFn(segment, 'video', 'start', startTime);\n        } // Run through the CaptionParser in case there are captions.\n        // Initialize CaptionParser if it hasn't been yet\n\n        if (!tracks.video || !data.byteLength || !segment.transmuxer) {\n          finishLoading();\n          return;\n        }\n        workerCallback({\n          action: 'pushMp4Captions',\n          endAction: 'mp4Captions',\n          transmuxer: segment.transmuxer,\n          data: bytesAsUint8Array,\n          timescales: segment.map.timescales,\n          trackIds: [tracks.video.id],\n          callback: message => {\n            // transfer bytes back to us\n            bytes = message.data.buffer;\n            segment.bytes = bytesAsUint8Array = message.data;\n            message.logs.forEach(function (log) {\n              onTransmuxerLog(merge(log, {\n                stream: 'mp4CaptionParser'\n              }));\n            });\n            finishLoading(message.captions);\n          }\n        });\n      }\n    });\n    return;\n  } // VTT or other segments that don't need processing\n\n  if (!segment.transmuxer) {\n    doneFn(null, segment, {});\n    return;\n  }\n  if (typeof segment.container === 'undefined') {\n    segment.container = detectContainerForBytes(bytesAsUint8Array);\n  }\n  if (segment.container !== 'ts' && segment.container !== 'aac') {\n    trackInfoFn(segment, {\n      hasAudio: false,\n      hasVideo: false\n    });\n    doneFn(null, segment, {});\n    return;\n  } // ts or aac\n\n  transmuxAndNotify({\n    segment,\n    bytes,\n    trackInfoFn,\n    timingInfoFn,\n    videoSegmentTimingInfoFn,\n    audioSegmentTimingInfoFn,\n    id3Fn,\n    captionsFn,\n    isEndOfTimeline,\n    endedTimelineFn,\n    dataFn,\n    doneFn,\n    onTransmuxerLog\n  });\n};\nconst decrypt = function ({\n  id,\n  key,\n  encryptedBytes,\n  decryptionWorker\n}, callback) {\n  const decryptionHandler = event => {\n    if (event.data.source === id) {\n      decryptionWorker.removeEventListener('message', decryptionHandler);\n      const decrypted = event.data.decrypted;\n      callback(new Uint8Array(decrypted.bytes, decrypted.byteOffset, decrypted.byteLength));\n    }\n  };\n  decryptionWorker.addEventListener('message', decryptionHandler);\n  let keyBytes;\n  if (key.bytes.slice) {\n    keyBytes = key.bytes.slice();\n  } else {\n    keyBytes = new Uint32Array(Array.prototype.slice.call(key.bytes));\n  } // incrementally decrypt the bytes\n\n  decryptionWorker.postMessage(createTransferableMessage({\n    source: id,\n    encrypted: encryptedBytes,\n    key: keyBytes,\n    iv: key.iv\n  }), [encryptedBytes.buffer, keyBytes.buffer]);\n};\n/**\n * Decrypt the segment via the decryption web worker\n *\n * @param {WebWorker} decryptionWorker - a WebWorker interface to AES-128 decryption\n *                                       routines\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} trackInfoFn - a callback that receives track info\n * @param {Function} timingInfoFn - a callback that receives timing info\n * @param {Function} videoSegmentTimingInfoFn\n *                   a callback that receives video timing info based on media times and\n *                   any adjustments made by the transmuxer\n * @param {Function} audioSegmentTimingInfoFn\n *                   a callback that receives audio timing info based on media times and\n *                   any adjustments made by the transmuxer\n * @param {boolean}  isEndOfTimeline\n *                   true if this segment represents the last segment in a timeline\n * @param {Function} endedTimelineFn\n *                   a callback made when a timeline is ended, will only be called if\n *                   isEndOfTimeline is true\n * @param {Function} dataFn - a callback that is executed when segment bytes are available\n *                            and ready to use\n * @param {Function} doneFn - a callback that is executed after decryption has completed\n */\n\nconst decryptSegment = ({\n  decryptionWorker,\n  segment,\n  trackInfoFn,\n  timingInfoFn,\n  videoSegmentTimingInfoFn,\n  audioSegmentTimingInfoFn,\n  id3Fn,\n  captionsFn,\n  isEndOfTimeline,\n  endedTimelineFn,\n  dataFn,\n  doneFn,\n  onTransmuxerLog\n}) => {\n  decrypt({\n    id: segment.requestId,\n    key: segment.key,\n    encryptedBytes: segment.encryptedBytes,\n    decryptionWorker\n  }, decryptedBytes => {\n    segment.bytes = decryptedBytes;\n    handleSegmentBytes({\n      segment,\n      bytes: segment.bytes,\n      trackInfoFn,\n      timingInfoFn,\n      videoSegmentTimingInfoFn,\n      audioSegmentTimingInfoFn,\n      id3Fn,\n      captionsFn,\n      isEndOfTimeline,\n      endedTimelineFn,\n      dataFn,\n      doneFn,\n      onTransmuxerLog\n    });\n  });\n};\n/**\n * This function waits for all XHRs to finish (with either success or failure)\n * before continueing processing via it's callback. The function gathers errors\n * from each request into a single errors array so that the error status for\n * each request can be examined later.\n *\n * @param {Object} activeXhrs - an object that tracks all XHR requests\n * @param {WebWorker} decryptionWorker - a WebWorker interface to AES-128 decryption\n *                                       routines\n * @param {Function} trackInfoFn - a callback that receives track info\n * @param {Function} timingInfoFn - a callback that receives timing info\n * @param {Function} videoSegmentTimingInfoFn\n *                   a callback that receives video timing info based on media times and\n *                   any adjustments made by the transmuxer\n * @param {Function} audioSegmentTimingInfoFn\n *                   a callback that receives audio timing info based on media times and\n *                   any adjustments made by the transmuxer\n * @param {Function} id3Fn - a callback that receives ID3 metadata\n * @param {Function} captionsFn - a callback that receives captions\n * @param {boolean}  isEndOfTimeline\n *                   true if this segment represents the last segment in a timeline\n * @param {Function} endedTimelineFn\n *                   a callback made when a timeline is ended, will only be called if\n *                   isEndOfTimeline is true\n * @param {Function} dataFn - a callback that is executed when segment bytes are available\n *                            and ready to use\n * @param {Function} doneFn - a callback that is executed after all resources have been\n *                            downloaded and any decryption completed\n */\n\nconst waitForCompletion = ({\n  activeXhrs,\n  decryptionWorker,\n  trackInfoFn,\n  timingInfoFn,\n  videoSegmentTimingInfoFn,\n  audioSegmentTimingInfoFn,\n  id3Fn,\n  captionsFn,\n  isEndOfTimeline,\n  endedTimelineFn,\n  dataFn,\n  doneFn,\n  onTransmuxerLog\n}) => {\n  let count = 0;\n  let didError = false;\n  return (error, segment) => {\n    if (didError) {\n      return;\n    }\n    if (error) {\n      didError = true; // If there are errors, we have to abort any outstanding requests\n\n      abortAll(activeXhrs); // Even though the requests above are aborted, and in theory we could wait until we\n      // handle the aborted events from those requests, there are some cases where we may\n      // never get an aborted event. For instance, if the network connection is lost and\n      // there were two requests, the first may have triggered an error immediately, while\n      // the second request remains unsent. In that case, the aborted algorithm will not\n      // trigger an abort: see https://xhr.spec.whatwg.org/#the-abort()-method\n      //\n      // We also can't rely on the ready state of the XHR, since the request that\n      // triggered the connection error may also show as a ready state of 0 (unsent).\n      // Therefore, we have to finish this group of requests immediately after the first\n      // seen error.\n\n      return doneFn(error, segment);\n    }\n    count += 1;\n    if (count === activeXhrs.length) {\n      const segmentFinish = function () {\n        if (segment.encryptedBytes) {\n          return decryptSegment({\n            decryptionWorker,\n            segment,\n            trackInfoFn,\n            timingInfoFn,\n            videoSegmentTimingInfoFn,\n            audioSegmentTimingInfoFn,\n            id3Fn,\n            captionsFn,\n            isEndOfTimeline,\n            endedTimelineFn,\n            dataFn,\n            doneFn,\n            onTransmuxerLog\n          });\n        } // Otherwise, everything is ready just continue\n\n        handleSegmentBytes({\n          segment,\n          bytes: segment.bytes,\n          trackInfoFn,\n          timingInfoFn,\n          videoSegmentTimingInfoFn,\n          audioSegmentTimingInfoFn,\n          id3Fn,\n          captionsFn,\n          isEndOfTimeline,\n          endedTimelineFn,\n          dataFn,\n          doneFn,\n          onTransmuxerLog\n        });\n      }; // Keep track of when *all* of the requests have completed\n\n      segment.endOfAllRequests = Date.now();\n      if (segment.map && segment.map.encryptedBytes && !segment.map.bytes) {\n        return decrypt({\n          decryptionWorker,\n          // add -init to the \"id\" to differentiate between segment\n          // and init segment decryption, just in case they happen\n          // at the same time at some point in the future.\n          id: segment.requestId + '-init',\n          encryptedBytes: segment.map.encryptedBytes,\n          key: segment.map.key\n        }, decryptedBytes => {\n          segment.map.bytes = decryptedBytes;\n          parseInitSegment(segment, parseError => {\n            if (parseError) {\n              abortAll(activeXhrs);\n              return doneFn(parseError, segment);\n            }\n            segmentFinish();\n          });\n        });\n      }\n      segmentFinish();\n    }\n  };\n};\n/**\n * Calls the abort callback if any request within the batch was aborted. Will only call\n * the callback once per batch of requests, even if multiple were aborted.\n *\n * @param {Object} loadendState - state to check to see if the abort function was called\n * @param {Function} abortFn - callback to call for abort\n */\n\nconst handleLoadEnd = ({\n  loadendState,\n  abortFn\n}) => event => {\n  const request = event.target;\n  if (request.aborted && abortFn && !loadendState.calledAbortFn) {\n    abortFn();\n    loadendState.calledAbortFn = true;\n  }\n};\n/**\n * Simple progress event callback handler that gathers some stats before\n * executing a provided callback with the `segment` object\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} progressFn - a callback that is executed each time a progress event\n *                                is received\n * @param {Function} trackInfoFn - a callback that receives track info\n * @param {Function} timingInfoFn - a callback that receives timing info\n * @param {Function} videoSegmentTimingInfoFn\n *                   a callback that receives video timing info based on media times and\n *                   any adjustments made by the transmuxer\n * @param {Function} audioSegmentTimingInfoFn\n *                   a callback that receives audio timing info based on media times and\n *                   any adjustments made by the transmuxer\n * @param {boolean}  isEndOfTimeline\n *                   true if this segment represents the last segment in a timeline\n * @param {Function} endedTimelineFn\n *                   a callback made when a timeline is ended, will only be called if\n *                   isEndOfTimeline is true\n * @param {Function} dataFn - a callback that is executed when segment bytes are available\n *                            and ready to use\n * @param {Event} event - the progress event object from XMLHttpRequest\n */\n\nconst handleProgress = ({\n  segment,\n  progressFn,\n  trackInfoFn,\n  timingInfoFn,\n  videoSegmentTimingInfoFn,\n  audioSegmentTimingInfoFn,\n  id3Fn,\n  captionsFn,\n  isEndOfTimeline,\n  endedTimelineFn,\n  dataFn\n}) => event => {\n  const request = event.target;\n  if (request.aborted) {\n    return;\n  }\n  segment.stats = merge(segment.stats, getProgressStats(event)); // record the time that we receive the first byte of data\n\n  if (!segment.stats.firstBytesReceivedAt && segment.stats.bytesReceived) {\n    segment.stats.firstBytesReceivedAt = Date.now();\n  }\n  return progressFn(event, segment);\n};\n/**\n * Load all resources and does any processing necessary for a media-segment\n *\n * Features:\n *   decrypts the media-segment if it has a key uri and an iv\n *   aborts *all* requests if *any* one request fails\n *\n * The segment object, at minimum, has the following format:\n * {\n *   resolvedUri: String,\n *   [transmuxer]: Object,\n *   [byterange]: {\n *     offset: Number,\n *     length: Number\n *   },\n *   [key]: {\n *     resolvedUri: String\n *     [byterange]: {\n *       offset: Number,\n *       length: Number\n *     },\n *     iv: {\n *       bytes: Uint32Array\n *     }\n *   },\n *   [map]: {\n *     resolvedUri: String,\n *     [byterange]: {\n *       offset: Number,\n *       length: Number\n *     },\n *     [bytes]: Uint8Array\n *   }\n * }\n * ...where [name] denotes optional properties\n *\n * @param {Function} xhr - an instance of the xhr wrapper in xhr.js\n * @param {Object} xhrOptions - the base options to provide to all xhr requests\n * @param {WebWorker} decryptionWorker - a WebWorker interface to AES-128\n *                                       decryption routines\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} abortFn - a callback called (only once) if any piece of a request was\n *                             aborted\n * @param {Function} progressFn - a callback that receives progress events from the main\n *                                segment's xhr request\n * @param {Function} trackInfoFn - a callback that receives track info\n * @param {Function} timingInfoFn - a callback that receives timing info\n * @param {Function} videoSegmentTimingInfoFn\n *                   a callback that receives video timing info based on media times and\n *                   any adjustments made by the transmuxer\n * @param {Function} audioSegmentTimingInfoFn\n *                   a callback that receives audio timing info based on media times and\n *                   any adjustments made by the transmuxer\n * @param {Function} id3Fn - a callback that receives ID3 metadata\n * @param {Function} captionsFn - a callback that receives captions\n * @param {boolean}  isEndOfTimeline\n *                   true if this segment represents the last segment in a timeline\n * @param {Function} endedTimelineFn\n *                   a callback made when a timeline is ended, will only be called if\n *                   isEndOfTimeline is true\n * @param {Function} dataFn - a callback that receives data from the main segment's xhr\n *                            request, transmuxed if needed\n * @param {Function} doneFn - a callback that is executed only once all requests have\n *                            succeeded or failed\n * @return {Function} a function that, when invoked, immediately aborts all\n *                     outstanding requests\n */\n\nconst mediaSegmentRequest = ({\n  xhr,\n  xhrOptions,\n  decryptionWorker,\n  segment,\n  abortFn,\n  progressFn,\n  trackInfoFn,\n  timingInfoFn,\n  videoSegmentTimingInfoFn,\n  audioSegmentTimingInfoFn,\n  id3Fn,\n  captionsFn,\n  isEndOfTimeline,\n  endedTimelineFn,\n  dataFn,\n  doneFn,\n  onTransmuxerLog\n}) => {\n  const activeXhrs = [];\n  const finishProcessingFn = waitForCompletion({\n    activeXhrs,\n    decryptionWorker,\n    trackInfoFn,\n    timingInfoFn,\n    videoSegmentTimingInfoFn,\n    audioSegmentTimingInfoFn,\n    id3Fn,\n    captionsFn,\n    isEndOfTimeline,\n    endedTimelineFn,\n    dataFn,\n    doneFn,\n    onTransmuxerLog\n  }); // optionally, request the decryption key\n\n  if (segment.key && !segment.key.bytes) {\n    const objects = [segment.key];\n    if (segment.map && !segment.map.bytes && segment.map.key && segment.map.key.resolvedUri === segment.key.resolvedUri) {\n      objects.push(segment.map.key);\n    }\n    const keyRequestOptions = merge(xhrOptions, {\n      uri: segment.key.resolvedUri,\n      responseType: 'arraybuffer'\n    });\n    const keyRequestCallback = handleKeyResponse(segment, objects, finishProcessingFn);\n    const keyXhr = xhr(keyRequestOptions, keyRequestCallback);\n    activeXhrs.push(keyXhr);\n  } // optionally, request the associated media init segment\n\n  if (segment.map && !segment.map.bytes) {\n    const differentMapKey = segment.map.key && (!segment.key || segment.key.resolvedUri !== segment.map.key.resolvedUri);\n    if (differentMapKey) {\n      const mapKeyRequestOptions = merge(xhrOptions, {\n        uri: segment.map.key.resolvedUri,\n        responseType: 'arraybuffer'\n      });\n      const mapKeyRequestCallback = handleKeyResponse(segment, [segment.map.key], finishProcessingFn);\n      const mapKeyXhr = xhr(mapKeyRequestOptions, mapKeyRequestCallback);\n      activeXhrs.push(mapKeyXhr);\n    }\n    const initSegmentOptions = merge(xhrOptions, {\n      uri: segment.map.resolvedUri,\n      responseType: 'arraybuffer',\n      headers: segmentXhrHeaders(segment.map)\n    });\n    const initSegmentRequestCallback = handleInitSegmentResponse({\n      segment,\n      finishProcessingFn\n    });\n    const initSegmentXhr = xhr(initSegmentOptions, initSegmentRequestCallback);\n    activeXhrs.push(initSegmentXhr);\n  }\n  const segmentRequestOptions = merge(xhrOptions, {\n    uri: segment.part && segment.part.resolvedUri || segment.resolvedUri,\n    responseType: 'arraybuffer',\n    headers: segmentXhrHeaders(segment)\n  });\n  const segmentRequestCallback = handleSegmentResponse({\n    segment,\n    finishProcessingFn,\n    responseType: segmentRequestOptions.responseType\n  });\n  const segmentXhr = xhr(segmentRequestOptions, segmentRequestCallback);\n  segmentXhr.addEventListener('progress', handleProgress({\n    segment,\n    progressFn,\n    trackInfoFn,\n    timingInfoFn,\n    videoSegmentTimingInfoFn,\n    audioSegmentTimingInfoFn,\n    id3Fn,\n    captionsFn,\n    isEndOfTimeline,\n    endedTimelineFn,\n    dataFn\n  }));\n  activeXhrs.push(segmentXhr); // since all parts of the request must be considered, but should not make callbacks\n  // multiple times, provide a shared state object\n\n  const loadendState = {};\n  activeXhrs.forEach(activeXhr => {\n    activeXhr.addEventListener('loadend', handleLoadEnd({\n      loadendState,\n      abortFn\n    }));\n  });\n  return () => abortAll(activeXhrs);\n};\n\n/**\n * @file - codecs.js - Handles tasks regarding codec strings such as translating them to\n * codec strings, or translating codec strings into objects that can be examined.\n */\nconst logFn$1 = logger('CodecUtils');\n/**\n * Returns a set of codec strings parsed from the playlist or the default\n * codec strings if no codecs were specified in the playlist\n *\n * @param {Playlist} media the current media playlist\n * @return {Object} an object with the video and audio codecs\n */\n\nconst getCodecs = function (media) {\n  // if the codecs were explicitly specified, use them instead of the\n  // defaults\n  const mediaAttributes = media.attributes || {};\n  if (mediaAttributes.CODECS) {\n    return parseCodecs(mediaAttributes.CODECS);\n  }\n};\nconst isMaat = (main, media) => {\n  const mediaAttributes = media.attributes || {};\n  return main && main.mediaGroups && main.mediaGroups.AUDIO && mediaAttributes.AUDIO && main.mediaGroups.AUDIO[mediaAttributes.AUDIO];\n};\nconst isMuxed = (main, media) => {\n  if (!isMaat(main, media)) {\n    return true;\n  }\n  const mediaAttributes = media.attributes || {};\n  const audioGroup = main.mediaGroups.AUDIO[mediaAttributes.AUDIO];\n  for (const groupId in audioGroup) {\n    // If an audio group has a URI (the case for HLS, as HLS will use external playlists),\n    // or there are listed playlists (the case for DASH, as the manifest will have already\n    // provided all of the details necessary to generate the audio playlist, as opposed to\n    // HLS' externally requested playlists), then the content is demuxed.\n    if (!audioGroup[groupId].uri && !audioGroup[groupId].playlists) {\n      return true;\n    }\n  }\n  return false;\n};\nconst unwrapCodecList = function (codecList) {\n  const codecs = {};\n  codecList.forEach(({\n    mediaType,\n    type,\n    details\n  }) => {\n    codecs[mediaType] = codecs[mediaType] || [];\n    codecs[mediaType].push(translateLegacyCodec(`${type}${details}`));\n  });\n  Object.keys(codecs).forEach(function (mediaType) {\n    if (codecs[mediaType].length > 1) {\n      logFn$1(`multiple ${mediaType} codecs found as attributes: ${codecs[mediaType].join(', ')}. Setting playlist codecs to null so that we wait for mux.js to probe segments for real codecs.`);\n      codecs[mediaType] = null;\n      return;\n    }\n    codecs[mediaType] = codecs[mediaType][0];\n  });\n  return codecs;\n};\nconst codecCount = function (codecObj) {\n  let count = 0;\n  if (codecObj.audio) {\n    count++;\n  }\n  if (codecObj.video) {\n    count++;\n  }\n  return count;\n};\n/**\n * Calculates the codec strings for a working configuration of\n * SourceBuffers to play variant streams in a main playlist. If\n * there is no possible working configuration, an empty object will be\n * returned.\n *\n * @param main {Object} the m3u8 object for the main playlist\n * @param media {Object} the m3u8 object for the variant playlist\n * @return {Object} the codec strings.\n *\n * @private\n */\n\nconst codecsForPlaylist = function (main, media) {\n  const mediaAttributes = media.attributes || {};\n  const codecInfo = unwrapCodecList(getCodecs(media) || []); // HLS with multiple-audio tracks must always get an audio codec.\n  // Put another way, there is no way to have a video-only multiple-audio HLS!\n\n  if (isMaat(main, media) && !codecInfo.audio) {\n    if (!isMuxed(main, media)) {\n      // It is possible for codecs to be specified on the audio media group playlist but\n      // not on the rendition playlist. This is mostly the case for DASH, where audio and\n      // video are always separate (and separately specified).\n      const defaultCodecs = unwrapCodecList(codecsFromDefault(main, mediaAttributes.AUDIO) || []);\n      if (defaultCodecs.audio) {\n        codecInfo.audio = defaultCodecs.audio;\n      }\n    }\n  }\n  return codecInfo;\n};\nconst logFn = logger('PlaylistSelector');\nconst representationToString = function (representation) {\n  if (!representation || !representation.playlist) {\n    return;\n  }\n  const playlist = representation.playlist;\n  return JSON.stringify({\n    id: playlist.id,\n    bandwidth: representation.bandwidth,\n    width: representation.width,\n    height: representation.height,\n    codecs: playlist.attributes && playlist.attributes.CODECS || ''\n  });\n}; // Utilities\n\n/**\n * Returns the CSS value for the specified property on an element\n * using `getComputedStyle`. Firefox has a long-standing issue where\n * getComputedStyle() may return null when running in an iframe with\n * `display: none`.\n *\n * @see https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n * @param {HTMLElement} el the htmlelement to work on\n * @param {string} the proprety to get the style for\n */\n\nconst safeGetComputedStyle = function (el, property) {\n  if (!el) {\n    return '';\n  }\n  const result = window$1.getComputedStyle(el);\n  if (!result) {\n    return '';\n  }\n  return result[property];\n};\n/**\n * Resuable stable sort function\n *\n * @param {Playlists} array\n * @param {Function} sortFn Different comparators\n * @function stableSort\n */\n\nconst stableSort = function (array, sortFn) {\n  const newArray = array.slice();\n  array.sort(function (left, right) {\n    const cmp = sortFn(left, right);\n    if (cmp === 0) {\n      return newArray.indexOf(left) - newArray.indexOf(right);\n    }\n    return cmp;\n  });\n};\n/**\n * A comparator function to sort two playlist object by bandwidth.\n *\n * @param {Object} left a media playlist object\n * @param {Object} right a media playlist object\n * @return {number} Greater than zero if the bandwidth attribute of\n * left is greater than the corresponding attribute of right. Less\n * than zero if the bandwidth of right is greater than left and\n * exactly zero if the two are equal.\n */\n\nconst comparePlaylistBandwidth = function (left, right) {\n  let leftBandwidth;\n  let rightBandwidth;\n  if (left.attributes.BANDWIDTH) {\n    leftBandwidth = left.attributes.BANDWIDTH;\n  }\n  leftBandwidth = leftBandwidth || window$1.Number.MAX_VALUE;\n  if (right.attributes.BANDWIDTH) {\n    rightBandwidth = right.attributes.BANDWIDTH;\n  }\n  rightBandwidth = rightBandwidth || window$1.Number.MAX_VALUE;\n  return leftBandwidth - rightBandwidth;\n};\n/**\n * A comparator function to sort two playlist object by resolution (width).\n *\n * @param {Object} left a media playlist object\n * @param {Object} right a media playlist object\n * @return {number} Greater than zero if the resolution.width attribute of\n * left is greater than the corresponding attribute of right. Less\n * than zero if the resolution.width of right is greater than left and\n * exactly zero if the two are equal.\n */\n\nconst comparePlaylistResolution = function (left, right) {\n  let leftWidth;\n  let rightWidth;\n  if (left.attributes.RESOLUTION && left.attributes.RESOLUTION.width) {\n    leftWidth = left.attributes.RESOLUTION.width;\n  }\n  leftWidth = leftWidth || window$1.Number.MAX_VALUE;\n  if (right.attributes.RESOLUTION && right.attributes.RESOLUTION.width) {\n    rightWidth = right.attributes.RESOLUTION.width;\n  }\n  rightWidth = rightWidth || window$1.Number.MAX_VALUE; // NOTE - Fallback to bandwidth sort as appropriate in cases where multiple renditions\n  // have the same media dimensions/ resolution\n\n  if (leftWidth === rightWidth && left.attributes.BANDWIDTH && right.attributes.BANDWIDTH) {\n    return left.attributes.BANDWIDTH - right.attributes.BANDWIDTH;\n  }\n  return leftWidth - rightWidth;\n};\n/**\n * Chooses the appropriate media playlist based on bandwidth and player size\n *\n * @param {Object} main\n *        Object representation of the main manifest\n * @param {number} playerBandwidth\n *        Current calculated bandwidth of the player\n * @param {number} playerWidth\n *        Current width of the player element (should account for the device pixel ratio)\n * @param {number} playerHeight\n *        Current height of the player element (should account for the device pixel ratio)\n * @param {boolean} limitRenditionByPlayerDimensions\n *        True if the player width and height should be used during the selection, false otherwise\n * @param {Object} playlistController\n *        the current playlistController object\n * @return {Playlist} the highest bitrate playlist less than the\n * currently detected bandwidth, accounting for some amount of\n * bandwidth variance\n */\n\nlet simpleSelector = function (main, playerBandwidth, playerWidth, playerHeight, limitRenditionByPlayerDimensions, playlistController) {\n  // If we end up getting called before `main` is available, exit early\n  if (!main) {\n    return;\n  }\n  const options = {\n    bandwidth: playerBandwidth,\n    width: playerWidth,\n    height: playerHeight,\n    limitRenditionByPlayerDimensions\n  };\n  let playlists = main.playlists; // if playlist is audio only, select between currently active audio group playlists.\n\n  if (Playlist.isAudioOnly(main)) {\n    playlists = playlistController.getAudioTrackPlaylists_(); // add audioOnly to options so that we log audioOnly: true\n    // at the buttom of this function for debugging.\n\n    options.audioOnly = true;\n  } // convert the playlists to an intermediary representation to make comparisons easier\n\n  let sortedPlaylistReps = playlists.map(playlist => {\n    let bandwidth;\n    const width = playlist.attributes && playlist.attributes.RESOLUTION && playlist.attributes.RESOLUTION.width;\n    const height = playlist.attributes && playlist.attributes.RESOLUTION && playlist.attributes.RESOLUTION.height;\n    bandwidth = playlist.attributes && playlist.attributes.BANDWIDTH;\n    bandwidth = bandwidth || window$1.Number.MAX_VALUE;\n    return {\n      bandwidth,\n      width,\n      height,\n      playlist\n    };\n  });\n  stableSort(sortedPlaylistReps, (left, right) => left.bandwidth - right.bandwidth); // filter out any playlists that have been excluded due to\n  // incompatible configurations\n\n  sortedPlaylistReps = sortedPlaylistReps.filter(rep => !Playlist.isIncompatible(rep.playlist)); // filter out any playlists that have been disabled manually through the representations\n  // api or excluded temporarily due to playback errors.\n\n  let enabledPlaylistReps = sortedPlaylistReps.filter(rep => Playlist.isEnabled(rep.playlist));\n  if (!enabledPlaylistReps.length) {\n    // if there are no enabled playlists, then they have all been excluded or disabled\n    // by the user through the representations api. In this case, ignore exclusion and\n    // fallback to what the user wants by using playlists the user has not disabled.\n    enabledPlaylistReps = sortedPlaylistReps.filter(rep => !Playlist.isDisabled(rep.playlist));\n  } // filter out any variant that has greater effective bitrate\n  // than the current estimated bandwidth\n\n  const bandwidthPlaylistReps = enabledPlaylistReps.filter(rep => rep.bandwidth * Config.BANDWIDTH_VARIANCE < playerBandwidth);\n  let highestRemainingBandwidthRep = bandwidthPlaylistReps[bandwidthPlaylistReps.length - 1]; // get all of the renditions with the same (highest) bandwidth\n  // and then taking the very first element\n\n  const bandwidthBestRep = bandwidthPlaylistReps.filter(rep => rep.bandwidth === highestRemainingBandwidthRep.bandwidth)[0]; // if we're not going to limit renditions by player size, make an early decision.\n\n  if (limitRenditionByPlayerDimensions === false) {\n    const chosenRep = bandwidthBestRep || enabledPlaylistReps[0] || sortedPlaylistReps[0];\n    if (chosenRep && chosenRep.playlist) {\n      let type = 'sortedPlaylistReps';\n      if (bandwidthBestRep) {\n        type = 'bandwidthBestRep';\n      }\n      if (enabledPlaylistReps[0]) {\n        type = 'enabledPlaylistReps';\n      }\n      logFn(`choosing ${representationToString(chosenRep)} using ${type} with options`, options);\n      return chosenRep.playlist;\n    }\n    logFn('could not choose a playlist with options', options);\n    return null;\n  } // filter out playlists without resolution information\n\n  const haveResolution = bandwidthPlaylistReps.filter(rep => rep.width && rep.height); // sort variants by resolution\n\n  stableSort(haveResolution, (left, right) => left.width - right.width); // if we have the exact resolution as the player use it\n\n  const resolutionBestRepList = haveResolution.filter(rep => rep.width === playerWidth && rep.height === playerHeight);\n  highestRemainingBandwidthRep = resolutionBestRepList[resolutionBestRepList.length - 1]; // ensure that we pick the highest bandwidth variant that have exact resolution\n\n  const resolutionBestRep = resolutionBestRepList.filter(rep => rep.bandwidth === highestRemainingBandwidthRep.bandwidth)[0];\n  let resolutionPlusOneList;\n  let resolutionPlusOneSmallest;\n  let resolutionPlusOneRep; // find the smallest variant that is larger than the player\n  // if there is no match of exact resolution\n\n  if (!resolutionBestRep) {\n    resolutionPlusOneList = haveResolution.filter(rep => rep.width > playerWidth || rep.height > playerHeight); // find all the variants have the same smallest resolution\n\n    resolutionPlusOneSmallest = resolutionPlusOneList.filter(rep => rep.width === resolutionPlusOneList[0].width && rep.height === resolutionPlusOneList[0].height); // ensure that we also pick the highest bandwidth variant that\n    // is just-larger-than the video player\n\n    highestRemainingBandwidthRep = resolutionPlusOneSmallest[resolutionPlusOneSmallest.length - 1];\n    resolutionPlusOneRep = resolutionPlusOneSmallest.filter(rep => rep.bandwidth === highestRemainingBandwidthRep.bandwidth)[0];\n  }\n  let leastPixelDiffRep; // If this selector proves to be better than others,\n  // resolutionPlusOneRep and resolutionBestRep and all\n  // the code involving them should be removed.\n\n  if (playlistController.leastPixelDiffSelector) {\n    // find the variant that is closest to the player's pixel size\n    const leastPixelDiffList = haveResolution.map(rep => {\n      rep.pixelDiff = Math.abs(rep.width - playerWidth) + Math.abs(rep.height - playerHeight);\n      return rep;\n    }); // get the highest bandwidth, closest resolution playlist\n\n    stableSort(leastPixelDiffList, (left, right) => {\n      // sort by highest bandwidth if pixelDiff is the same\n      if (left.pixelDiff === right.pixelDiff) {\n        return right.bandwidth - left.bandwidth;\n      }\n      return left.pixelDiff - right.pixelDiff;\n    });\n    leastPixelDiffRep = leastPixelDiffList[0];\n  } // fallback chain of variants\n\n  const chosenRep = leastPixelDiffRep || resolutionPlusOneRep || resolutionBestRep || bandwidthBestRep || enabledPlaylistReps[0] || sortedPlaylistReps[0];\n  if (chosenRep && chosenRep.playlist) {\n    let type = 'sortedPlaylistReps';\n    if (leastPixelDiffRep) {\n      type = 'leastPixelDiffRep';\n    } else if (resolutionPlusOneRep) {\n      type = 'resolutionPlusOneRep';\n    } else if (resolutionBestRep) {\n      type = 'resolutionBestRep';\n    } else if (bandwidthBestRep) {\n      type = 'bandwidthBestRep';\n    } else if (enabledPlaylistReps[0]) {\n      type = 'enabledPlaylistReps';\n    }\n    logFn(`choosing ${representationToString(chosenRep)} using ${type} with options`, options);\n    return chosenRep.playlist;\n  }\n  logFn('could not choose a playlist with options', options);\n  return null;\n};\n\n/**\n * Chooses the appropriate media playlist based on the most recent\n * bandwidth estimate and the player size.\n *\n * Expects to be called within the context of an instance of VhsHandler\n *\n * @return {Playlist} the highest bitrate playlist less than the\n * currently detected bandwidth, accounting for some amount of\n * bandwidth variance\n */\n\nconst lastBandwidthSelector = function () {\n  const pixelRatio = this.useDevicePixelRatio ? window$1.devicePixelRatio || 1 : 1;\n  return simpleSelector(this.playlists.main, this.systemBandwidth, parseInt(safeGetComputedStyle(this.tech_.el(), 'width'), 10) * pixelRatio, parseInt(safeGetComputedStyle(this.tech_.el(), 'height'), 10) * pixelRatio, this.limitRenditionByPlayerDimensions, this.playlistController_);\n};\n/**\n * Chooses the appropriate media playlist based on an\n * exponential-weighted moving average of the bandwidth after\n * filtering for player size.\n *\n * Expects to be called within the context of an instance of VhsHandler\n *\n * @param {number} decay - a number between 0 and 1. Higher values of\n * this parameter will cause previous bandwidth estimates to lose\n * significance more quickly.\n * @return {Function} a function which can be invoked to create a new\n * playlist selector function.\n * @see https://en.wikipedia.org/wiki/Moving_average#Exponential_moving_average\n */\n\nconst movingAverageBandwidthSelector = function (decay) {\n  let average = -1;\n  let lastSystemBandwidth = -1;\n  if (decay < 0 || decay > 1) {\n    throw new Error('Moving average bandwidth decay must be between 0 and 1.');\n  }\n  return function () {\n    const pixelRatio = this.useDevicePixelRatio ? window$1.devicePixelRatio || 1 : 1;\n    if (average < 0) {\n      average = this.systemBandwidth;\n      lastSystemBandwidth = this.systemBandwidth;\n    } // stop the average value from decaying for every 250ms\n    // when the systemBandwidth is constant\n    // and\n    // stop average from setting to a very low value when the\n    // systemBandwidth becomes 0 in case of chunk cancellation\n\n    if (this.systemBandwidth > 0 && this.systemBandwidth !== lastSystemBandwidth) {\n      average = decay * this.systemBandwidth + (1 - decay) * average;\n      lastSystemBandwidth = this.systemBandwidth;\n    }\n    return simpleSelector(this.playlists.main, average, parseInt(safeGetComputedStyle(this.tech_.el(), 'width'), 10) * pixelRatio, parseInt(safeGetComputedStyle(this.tech_.el(), 'height'), 10) * pixelRatio, this.limitRenditionByPlayerDimensions, this.playlistController_);\n  };\n};\n/**\n * Chooses the appropriate media playlist based on the potential to rebuffer\n *\n * @param {Object} settings\n *        Object of information required to use this selector\n * @param {Object} settings.main\n *        Object representation of the main manifest\n * @param {number} settings.currentTime\n *        The current time of the player\n * @param {number} settings.bandwidth\n *        Current measured bandwidth\n * @param {number} settings.duration\n *        Duration of the media\n * @param {number} settings.segmentDuration\n *        Segment duration to be used in round trip time calculations\n * @param {number} settings.timeUntilRebuffer\n *        Time left in seconds until the player has to rebuffer\n * @param {number} settings.currentTimeline\n *        The current timeline segments are being loaded from\n * @param {SyncController} settings.syncController\n *        SyncController for determining if we have a sync point for a given playlist\n * @return {Object|null}\n *         {Object} return.playlist\n *         The highest bandwidth playlist with the least amount of rebuffering\n *         {Number} return.rebufferingImpact\n *         The amount of time in seconds switching to this playlist will rebuffer. A\n *         negative value means that switching will cause zero rebuffering.\n */\n\nconst minRebufferMaxBandwidthSelector = function (settings) {\n  const {\n    main,\n    currentTime,\n    bandwidth,\n    duration,\n    segmentDuration,\n    timeUntilRebuffer,\n    currentTimeline,\n    syncController\n  } = settings; // filter out any playlists that have been excluded due to\n  // incompatible configurations\n\n  const compatiblePlaylists = main.playlists.filter(playlist => !Playlist.isIncompatible(playlist)); // filter out any playlists that have been disabled manually through the representations\n  // api or excluded temporarily due to playback errors.\n\n  let enabledPlaylists = compatiblePlaylists.filter(Playlist.isEnabled);\n  if (!enabledPlaylists.length) {\n    // if there are no enabled playlists, then they have all been excluded or disabled\n    // by the user through the representations api. In this case, ignore exclusion and\n    // fallback to what the user wants by using playlists the user has not disabled.\n    enabledPlaylists = compatiblePlaylists.filter(playlist => !Playlist.isDisabled(playlist));\n  }\n  const bandwidthPlaylists = enabledPlaylists.filter(Playlist.hasAttribute.bind(null, 'BANDWIDTH'));\n  const rebufferingEstimates = bandwidthPlaylists.map(playlist => {\n    const syncPoint = syncController.getSyncPoint(playlist, duration, currentTimeline, currentTime); // If there is no sync point for this playlist, switching to it will require a\n    // sync request first. This will double the request time\n\n    const numRequests = syncPoint ? 1 : 2;\n    const requestTimeEstimate = Playlist.estimateSegmentRequestTime(segmentDuration, bandwidth, playlist);\n    const rebufferingImpact = requestTimeEstimate * numRequests - timeUntilRebuffer;\n    return {\n      playlist,\n      rebufferingImpact\n    };\n  });\n  const noRebufferingPlaylists = rebufferingEstimates.filter(estimate => estimate.rebufferingImpact <= 0); // Sort by bandwidth DESC\n\n  stableSort(noRebufferingPlaylists, (a, b) => comparePlaylistBandwidth(b.playlist, a.playlist));\n  if (noRebufferingPlaylists.length) {\n    return noRebufferingPlaylists[0];\n  }\n  stableSort(rebufferingEstimates, (a, b) => a.rebufferingImpact - b.rebufferingImpact);\n  return rebufferingEstimates[0] || null;\n};\n/**\n * Chooses the appropriate media playlist, which in this case is the lowest bitrate\n * one with video.  If no renditions with video exist, return the lowest audio rendition.\n *\n * Expects to be called within the context of an instance of VhsHandler\n *\n * @return {Object|null}\n *         {Object} return.playlist\n *         The lowest bitrate playlist that contains a video codec.  If no such rendition\n *         exists pick the lowest audio rendition.\n */\n\nconst lowestBitrateCompatibleVariantSelector = function () {\n  // filter out any playlists that have been excluded due to\n  // incompatible configurations or playback errors\n  const playlists = this.playlists.main.playlists.filter(Playlist.isEnabled); // Sort ascending by bitrate\n\n  stableSort(playlists, (a, b) => comparePlaylistBandwidth(a, b)); // Parse and assume that playlists with no video codec have no video\n  // (this is not necessarily true, although it is generally true).\n  //\n  // If an entire manifest has no valid videos everything will get filtered\n  // out.\n\n  const playlistsWithVideo = playlists.filter(playlist => !!codecsForPlaylist(this.playlists.main, playlist).video);\n  return playlistsWithVideo[0] || null;\n};\n\n/**\n * Combine all segments into a single Uint8Array\n *\n * @param {Object} segmentObj\n * @return {Uint8Array} concatenated bytes\n * @private\n */\nconst concatSegments = segmentObj => {\n  let offset = 0;\n  let tempBuffer;\n  if (segmentObj.bytes) {\n    tempBuffer = new Uint8Array(segmentObj.bytes); // combine the individual segments into one large typed-array\n\n    segmentObj.segments.forEach(segment => {\n      tempBuffer.set(segment, offset);\n      offset += segment.byteLength;\n    });\n  }\n  return tempBuffer;\n};\n\n/**\n * @file text-tracks.js\n */\n/**\n * Create captions text tracks on video.js if they do not exist\n *\n * @param {Object} inbandTextTracks a reference to current inbandTextTracks\n * @param {Object} tech the video.js tech\n * @param {Object} captionStream the caption stream to create\n * @private\n */\n\nconst createCaptionsTrackIfNotExists = function (inbandTextTracks, tech, captionStream) {\n  if (!inbandTextTracks[captionStream]) {\n    tech.trigger({\n      type: 'usage',\n      name: 'vhs-608'\n    });\n    let instreamId = captionStream; // we need to translate SERVICEn for 708 to how mux.js currently labels them\n\n    if (/^cc708_/.test(captionStream)) {\n      instreamId = 'SERVICE' + captionStream.split('_')[1];\n    }\n    const track = tech.textTracks().getTrackById(instreamId);\n    if (track) {\n      // Resuse an existing track with a CC# id because this was\n      // very likely created by videojs-contrib-hls from information\n      // in the m3u8 for us to use\n      inbandTextTracks[captionStream] = track;\n    } else {\n      // This section gets called when we have caption services that aren't specified in the manifest.\n      // Manifest level caption services are handled in media-groups.js under CLOSED-CAPTIONS.\n      const captionServices = tech.options_.vhs && tech.options_.vhs.captionServices || {};\n      let label = captionStream;\n      let language = captionStream;\n      let def = false;\n      const captionService = captionServices[instreamId];\n      if (captionService) {\n        label = captionService.label;\n        language = captionService.language;\n        def = captionService.default;\n      } // Otherwise, create a track with the default `CC#` label and\n      // without a language\n\n      inbandTextTracks[captionStream] = tech.addRemoteTextTrack({\n        kind: 'captions',\n        id: instreamId,\n        // TODO: investigate why this doesn't seem to turn the caption on by default\n        default: def,\n        label,\n        language\n      }, false).track;\n    }\n  }\n};\n/**\n * Add caption text track data to a source handler given an array of captions\n *\n * @param {Object}\n *   @param {Object} inbandTextTracks the inband text tracks\n *   @param {number} timestampOffset the timestamp offset of the source buffer\n *   @param {Array} captionArray an array of caption data\n * @private\n */\n\nconst addCaptionData = function ({\n  inbandTextTracks,\n  captionArray,\n  timestampOffset\n}) {\n  if (!captionArray) {\n    return;\n  }\n  const Cue = window$1.WebKitDataCue || window$1.VTTCue;\n  captionArray.forEach(caption => {\n    const track = caption.stream;\n    inbandTextTracks[track].addCue(new Cue(caption.startTime + timestampOffset, caption.endTime + timestampOffset, caption.text));\n  });\n};\n/**\n * Define properties on a cue for backwards compatability,\n * but warn the user that the way that they are using it\n * is depricated and will be removed at a later date.\n *\n * @param {Cue} cue the cue to add the properties on\n * @private\n */\n\nconst deprecateOldCue = function (cue) {\n  Object.defineProperties(cue.frame, {\n    id: {\n      get() {\n        videojs.log.warn('cue.frame.id is deprecated. Use cue.value.key instead.');\n        return cue.value.key;\n      }\n    },\n    value: {\n      get() {\n        videojs.log.warn('cue.frame.value is deprecated. Use cue.value.data instead.');\n        return cue.value.data;\n      }\n    },\n    privateData: {\n      get() {\n        videojs.log.warn('cue.frame.privateData is deprecated. Use cue.value.data instead.');\n        return cue.value.data;\n      }\n    }\n  });\n};\n/**\n * Add metadata text track data to a source handler given an array of metadata\n *\n * @param {Object}\n *   @param {Object} inbandTextTracks the inband text tracks\n *   @param {Array} metadataArray an array of meta data\n *   @param {number} timestampOffset the timestamp offset of the source buffer\n *   @param {number} videoDuration the duration of the video\n * @private\n */\n\nconst addMetadata = ({\n  inbandTextTracks,\n  metadataArray,\n  timestampOffset,\n  videoDuration\n}) => {\n  if (!metadataArray) {\n    return;\n  }\n  const Cue = window$1.WebKitDataCue || window$1.VTTCue;\n  const metadataTrack = inbandTextTracks.metadataTrack_;\n  if (!metadataTrack) {\n    return;\n  }\n  metadataArray.forEach(metadata => {\n    const time = metadata.cueTime + timestampOffset; // if time isn't a finite number between 0 and Infinity, like NaN,\n    // ignore this bit of metadata.\n    // This likely occurs when you have an non-timed ID3 tag like TIT2,\n    // which is the \"Title/Songname/Content description\" frame\n\n    if (typeof time !== 'number' || window$1.isNaN(time) || time < 0 || !(time < Infinity)) {\n      return;\n    }\n    metadata.frames.forEach(frame => {\n      const cue = new Cue(time, time, frame.value || frame.url || frame.data || '');\n      cue.frame = frame;\n      cue.value = frame;\n      deprecateOldCue(cue);\n      metadataTrack.addCue(cue);\n    });\n  });\n  if (!metadataTrack.cues || !metadataTrack.cues.length) {\n    return;\n  } // Updating the metadeta cues so that\n  // the endTime of each cue is the startTime of the next cue\n  // the endTime of last cue is the duration of the video\n\n  const cues = metadataTrack.cues;\n  const cuesArray = []; // Create a copy of the TextTrackCueList...\n  // ...disregarding cues with a falsey value\n\n  for (let i = 0; i < cues.length; i++) {\n    if (cues[i]) {\n      cuesArray.push(cues[i]);\n    }\n  } // Group cues by their startTime value\n\n  const cuesGroupedByStartTime = cuesArray.reduce((obj, cue) => {\n    const timeSlot = obj[cue.startTime] || [];\n    timeSlot.push(cue);\n    obj[cue.startTime] = timeSlot;\n    return obj;\n  }, {}); // Sort startTimes by ascending order\n\n  const sortedStartTimes = Object.keys(cuesGroupedByStartTime).sort((a, b) => Number(a) - Number(b)); // Map each cue group's endTime to the next group's startTime\n\n  sortedStartTimes.forEach((startTime, idx) => {\n    const cueGroup = cuesGroupedByStartTime[startTime];\n    const nextTime = Number(sortedStartTimes[idx + 1]) || videoDuration; // Map each cue's endTime the next group's startTime\n\n    cueGroup.forEach(cue => {\n      cue.endTime = nextTime;\n    });\n  });\n};\n/**\n * Create metadata text track on video.js if it does not exist\n *\n * @param {Object} inbandTextTracks a reference to current inbandTextTracks\n * @param {string} dispatchType the inband metadata track dispatch type\n * @param {Object} tech the video.js tech\n * @private\n */\n\nconst createMetadataTrackIfNotExists = (inbandTextTracks, dispatchType, tech) => {\n  if (inbandTextTracks.metadataTrack_) {\n    return;\n  }\n  inbandTextTracks.metadataTrack_ = tech.addRemoteTextTrack({\n    kind: 'metadata',\n    label: 'Timed Metadata'\n  }, false).track;\n  inbandTextTracks.metadataTrack_.inBandMetadataTrackDispatchType = dispatchType;\n};\n/**\n * Remove cues from a track on video.js.\n *\n * @param {Double} start start of where we should remove the cue\n * @param {Double} end end of where the we should remove the cue\n * @param {Object} track the text track to remove the cues from\n * @private\n */\n\nconst removeCuesFromTrack = function (start, end, track) {\n  let i;\n  let cue;\n  if (!track) {\n    return;\n  }\n  if (!track.cues) {\n    return;\n  }\n  i = track.cues.length;\n  while (i--) {\n    cue = track.cues[i]; // Remove any cue within the provided start and end time\n\n    if (cue.startTime >= start && cue.endTime <= end) {\n      track.removeCue(cue);\n    }\n  }\n};\n/**\n * Remove duplicate cues from a track on video.js (a cue is considered a\n * duplicate if it has the same time interval and text as another)\n *\n * @param {Object} track the text track to remove the duplicate cues from\n * @private\n */\n\nconst removeDuplicateCuesFromTrack = function (track) {\n  const cues = track.cues;\n  if (!cues) {\n    return;\n  }\n  for (let i = 0; i < cues.length; i++) {\n    const duplicates = [];\n    let occurrences = 0;\n    for (let j = 0; j < cues.length; j++) {\n      if (cues[i].startTime === cues[j].startTime && cues[i].endTime === cues[j].endTime && cues[i].text === cues[j].text) {\n        occurrences++;\n        if (occurrences > 1) {\n          duplicates.push(cues[j]);\n        }\n      }\n    }\n    if (duplicates.length) {\n      duplicates.forEach(dupe => track.removeCue(dupe));\n    }\n  }\n};\n\n/**\n * Returns a list of gops in the buffer that have a pts value of 3 seconds or more in\n * front of current time.\n *\n * @param {Array} buffer\n *        The current buffer of gop information\n * @param {number} currentTime\n *        The current time\n * @param {Double} mapping\n *        Offset to map display time to stream presentation time\n * @return {Array}\n *         List of gops considered safe to append over\n */\n\nconst gopsSafeToAlignWith = (buffer, currentTime, mapping) => {\n  if (typeof currentTime === 'undefined' || currentTime === null || !buffer.length) {\n    return [];\n  } // pts value for current time + 3 seconds to give a bit more wiggle room\n\n  const currentTimePts = Math.ceil((currentTime - mapping + 3) * ONE_SECOND_IN_TS);\n  let i;\n  for (i = 0; i < buffer.length; i++) {\n    if (buffer[i].pts > currentTimePts) {\n      break;\n    }\n  }\n  return buffer.slice(i);\n};\n/**\n * Appends gop information (timing and byteLength) received by the transmuxer for the\n * gops appended in the last call to appendBuffer\n *\n * @param {Array} buffer\n *        The current buffer of gop information\n * @param {Array} gops\n *        List of new gop information\n * @param {boolean} replace\n *        If true, replace the buffer with the new gop information. If false, append the\n *        new gop information to the buffer in the right location of time.\n * @return {Array}\n *         Updated list of gop information\n */\n\nconst updateGopBuffer = (buffer, gops, replace) => {\n  if (!gops.length) {\n    return buffer;\n  }\n  if (replace) {\n    // If we are in safe append mode, then completely overwrite the gop buffer\n    // with the most recent appeneded data. This will make sure that when appending\n    // future segments, we only try to align with gops that are both ahead of current\n    // time and in the last segment appended.\n    return gops.slice();\n  }\n  const start = gops[0].pts;\n  let i = 0;\n  for (i; i < buffer.length; i++) {\n    if (buffer[i].pts >= start) {\n      break;\n    }\n  }\n  return buffer.slice(0, i).concat(gops);\n};\n/**\n * Removes gop information in buffer that overlaps with provided start and end\n *\n * @param {Array} buffer\n *        The current buffer of gop information\n * @param {Double} start\n *        position to start the remove at\n * @param {Double} end\n *        position to end the remove at\n * @param {Double} mapping\n *        Offset to map display time to stream presentation time\n */\n\nconst removeGopBuffer = (buffer, start, end, mapping) => {\n  const startPts = Math.ceil((start - mapping) * ONE_SECOND_IN_TS);\n  const endPts = Math.ceil((end - mapping) * ONE_SECOND_IN_TS);\n  const updatedBuffer = buffer.slice();\n  let i = buffer.length;\n  while (i--) {\n    if (buffer[i].pts <= endPts) {\n      break;\n    }\n  }\n  if (i === -1) {\n    // no removal because end of remove range is before start of buffer\n    return updatedBuffer;\n  }\n  let j = i + 1;\n  while (j--) {\n    if (buffer[j].pts <= startPts) {\n      break;\n    }\n  } // clamp remove range start to 0 index\n\n  j = Math.max(j, 0);\n  updatedBuffer.splice(j, i - j + 1);\n  return updatedBuffer;\n};\nconst shallowEqual = function (a, b) {\n  // if both are undefined\n  // or one or the other is undefined\n  // they are not equal\n  if (!a && !b || !a && b || a && !b) {\n    return false;\n  } // they are the same object and thus, equal\n\n  if (a === b) {\n    return true;\n  } // sort keys so we can make sure they have\n  // all the same keys later.\n\n  const akeys = Object.keys(a).sort();\n  const bkeys = Object.keys(b).sort(); // different number of keys, not equal\n\n  if (akeys.length !== bkeys.length) {\n    return false;\n  }\n  for (let i = 0; i < akeys.length; i++) {\n    const key = akeys[i]; // different sorted keys, not equal\n\n    if (key !== bkeys[i]) {\n      return false;\n    } // different values, not equal\n\n    if (a[key] !== b[key]) {\n      return false;\n    }\n  }\n  return true;\n};\n\n// https://www.w3.org/TR/WebIDL-1/#quotaexceedederror\nconst QUOTA_EXCEEDED_ERR = 22;\n\n/**\n * The segment loader has no recourse except to fetch a segment in the\n * current playlist and use the internal timestamps in that segment to\n * generate a syncPoint. This function returns a good candidate index\n * for that process.\n *\n * @param {Array} segments - the segments array from a playlist.\n * @return {number} An index of a segment from the playlist to load\n */\n\nconst getSyncSegmentCandidate = function (currentTimeline, segments, targetTime) {\n  segments = segments || [];\n  const timelineSegments = [];\n  let time = 0;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    if (currentTimeline === segment.timeline) {\n      timelineSegments.push(i);\n      time += segment.duration;\n      if (time > targetTime) {\n        return i;\n      }\n    }\n  }\n  if (timelineSegments.length === 0) {\n    return 0;\n  } // default to the last timeline segment\n\n  return timelineSegments[timelineSegments.length - 1];\n}; // In the event of a quota exceeded error, keep at least one second of back buffer. This\n// number was arbitrarily chosen and may be updated in the future, but seemed reasonable\n// as a start to prevent any potential issues with removing content too close to the\n// playhead.\n\nconst MIN_BACK_BUFFER = 1; // in ms\n\nconst CHECK_BUFFER_DELAY = 500;\nconst finite = num => typeof num === 'number' && isFinite(num); // With most content hovering around 30fps, if a segment has a duration less than a half\n// frame at 30fps or one frame at 60fps, the bandwidth and throughput calculations will\n// not accurately reflect the rest of the content.\n\nconst MIN_SEGMENT_DURATION_TO_SAVE_STATS = 1 / 60;\nconst illegalMediaSwitch = (loaderType, startingMedia, trackInfo) => {\n  // Although these checks should most likely cover non 'main' types, for now it narrows\n  // the scope of our checks.\n  if (loaderType !== 'main' || !startingMedia || !trackInfo) {\n    return null;\n  }\n  if (!trackInfo.hasAudio && !trackInfo.hasVideo) {\n    return 'Neither audio nor video found in segment.';\n  }\n  if (startingMedia.hasVideo && !trackInfo.hasVideo) {\n    return 'Only audio found in segment when we expected video.' + ' We can\\'t switch to audio only from a stream that had video.' + ' To get rid of this message, please add codec information to the manifest.';\n  }\n  if (!startingMedia.hasVideo && trackInfo.hasVideo) {\n    return 'Video found in segment when we expected only audio.' + ' We can\\'t switch to a stream with video from an audio only stream.' + ' To get rid of this message, please add codec information to the manifest.';\n  }\n  return null;\n};\n/**\n * Calculates a time value that is safe to remove from the back buffer without interrupting\n * playback.\n *\n * @param {TimeRange} seekable\n *        The current seekable range\n * @param {number} currentTime\n *        The current time of the player\n * @param {number} targetDuration\n *        The target duration of the current playlist\n * @return {number}\n *         Time that is safe to remove from the back buffer without interrupting playback\n */\n\nconst safeBackBufferTrimTime = (seekable, currentTime, targetDuration) => {\n  // 30 seconds before the playhead provides a safe default for trimming.\n  //\n  // Choosing a reasonable default is particularly important for high bitrate content and\n  // VOD videos/live streams with large windows, as the buffer may end up overfilled and\n  // throw an APPEND_BUFFER_ERR.\n  let trimTime = currentTime - Config.BACK_BUFFER_LENGTH;\n  if (seekable.length) {\n    // Some live playlists may have a shorter window of content than the full allowed back\n    // buffer. For these playlists, don't save content that's no longer within the window.\n    trimTime = Math.max(trimTime, seekable.start(0));\n  } // Don't remove within target duration of the current time to avoid the possibility of\n  // removing the GOP currently being played, as removing it can cause playback stalls.\n\n  const maxTrimTime = currentTime - targetDuration;\n  return Math.min(maxTrimTime, trimTime);\n};\nconst segmentInfoString = segmentInfo => {\n  const {\n    startOfSegment,\n    duration,\n    segment,\n    part,\n    playlist: {\n      mediaSequence: seq,\n      id,\n      segments = []\n    },\n    mediaIndex: index,\n    partIndex,\n    timeline\n  } = segmentInfo;\n  const segmentLen = segments.length - 1;\n  let selection = 'mediaIndex/partIndex increment';\n  if (segmentInfo.getMediaInfoForTime) {\n    selection = `getMediaInfoForTime (${segmentInfo.getMediaInfoForTime})`;\n  } else if (segmentInfo.isSyncRequest) {\n    selection = 'getSyncSegmentCandidate (isSyncRequest)';\n  }\n  if (segmentInfo.independent) {\n    selection += ` with independent ${segmentInfo.independent}`;\n  }\n  const hasPartIndex = typeof partIndex === 'number';\n  const name = segmentInfo.segment.uri ? 'segment' : 'pre-segment';\n  const zeroBasedPartCount = hasPartIndex ? getKnownPartCount({\n    preloadSegment: segment\n  }) - 1 : 0;\n  return `${name} [${seq + index}/${seq + segmentLen}]` + (hasPartIndex ? ` part [${partIndex}/${zeroBasedPartCount}]` : '') + ` segment start/end [${segment.start} => ${segment.end}]` + (hasPartIndex ? ` part start/end [${part.start} => ${part.end}]` : '') + ` startOfSegment [${startOfSegment}]` + ` duration [${duration}]` + ` timeline [${timeline}]` + ` selected by [${selection}]` + ` playlist [${id}]`;\n};\nconst timingInfoPropertyForMedia = mediaType => `${mediaType}TimingInfo`;\n/**\n * Returns the timestamp offset to use for the segment.\n *\n * @param {number} segmentTimeline\n *        The timeline of the segment\n * @param {number} currentTimeline\n *        The timeline currently being followed by the loader\n * @param {number} startOfSegment\n *        The estimated segment start\n * @param {TimeRange[]} buffered\n *        The loader's buffer\n * @param {boolean} overrideCheck\n *        If true, no checks are made to see if the timestamp offset value should be set,\n *        but sets it directly to a value.\n *\n * @return {number|null}\n *         Either a number representing a new timestamp offset, or null if the segment is\n *         part of the same timeline\n */\n\nconst timestampOffsetForSegment = ({\n  segmentTimeline,\n  currentTimeline,\n  startOfSegment,\n  buffered,\n  overrideCheck\n}) => {\n  // Check to see if we are crossing a discontinuity to see if we need to set the\n  // timestamp offset on the transmuxer and source buffer.\n  //\n  // Previously, we changed the timestampOffset if the start of this segment was less than\n  // the currently set timestampOffset, but this isn't desirable as it can produce bad\n  // behavior, especially around long running live streams.\n  if (!overrideCheck && segmentTimeline === currentTimeline) {\n    return null;\n  } // When changing renditions, it's possible to request a segment on an older timeline. For\n  // instance, given two renditions with the following:\n  //\n  // #EXTINF:10\n  // segment1\n  // #EXT-X-DISCONTINUITY\n  // #EXTINF:10\n  // segment2\n  // #EXTINF:10\n  // segment3\n  //\n  // And the current player state:\n  //\n  // current time: 8\n  // buffer: 0 => 20\n  //\n  // The next segment on the current rendition would be segment3, filling the buffer from\n  // 20s onwards. However, if a rendition switch happens after segment2 was requested,\n  // then the next segment to be requested will be segment1 from the new rendition in\n  // order to fill time 8 and onwards. Using the buffered end would result in repeated\n  // content (since it would position segment1 of the new rendition starting at 20s). This\n  // case can be identified when the new segment's timeline is a prior value. Instead of\n  // using the buffered end, the startOfSegment can be used, which, hopefully, will be\n  // more accurate to the actual start time of the segment.\n\n  if (segmentTimeline < currentTimeline) {\n    return startOfSegment;\n  } // segmentInfo.startOfSegment used to be used as the timestamp offset, however, that\n  // value uses the end of the last segment if it is available. While this value\n  // should often be correct, it's better to rely on the buffered end, as the new\n  // content post discontinuity should line up with the buffered end as if it were\n  // time 0 for the new content.\n\n  return buffered.length ? buffered.end(buffered.length - 1) : startOfSegment;\n};\n/**\n * Returns whether or not the loader should wait for a timeline change from the timeline\n * change controller before processing the segment.\n *\n * Primary timing in VHS goes by video. This is different from most media players, as\n * audio is more often used as the primary timing source. For the foreseeable future, VHS\n * will continue to use video as the primary timing source, due to the current logic and\n * expectations built around it.\n\n * Since the timing follows video, in order to maintain sync, the video loader is\n * responsible for setting both audio and video source buffer timestamp offsets.\n *\n * Setting different values for audio and video source buffers could lead to\n * desyncing. The following examples demonstrate some of the situations where this\n * distinction is important. Note that all of these cases involve demuxed content. When\n * content is muxed, the audio and video are packaged together, therefore syncing\n * separate media playlists is not an issue.\n *\n * CASE 1: Audio prepares to load a new timeline before video:\n *\n * Timeline:       0                 1\n * Audio Segments: 0 1 2 3 4 5 DISCO 6 7 8 9\n * Audio Loader:                     ^\n * Video Segments: 0 1 2 3 4 5 DISCO 6 7 8 9\n * Video Loader              ^\n *\n * In the above example, the audio loader is preparing to load the 6th segment, the first\n * after a discontinuity, while the video loader is still loading the 5th segment, before\n * the discontinuity.\n *\n * If the audio loader goes ahead and loads and appends the 6th segment before the video\n * loader crosses the discontinuity, then when appended, the 6th audio segment will use\n * the timestamp offset from timeline 0. This will likely lead to desyncing. In addition,\n * the audio loader must provide the audioAppendStart value to trim the content in the\n * transmuxer, and that value relies on the audio timestamp offset. Since the audio\n * timestamp offset is set by the video (main) loader, the audio loader shouldn't load the\n * segment until that value is provided.\n *\n * CASE 2: Video prepares to load a new timeline before audio:\n *\n * Timeline:       0                 1\n * Audio Segments: 0 1 2 3 4 5 DISCO 6 7 8 9\n * Audio Loader:             ^\n * Video Segments: 0 1 2 3 4 5 DISCO 6 7 8 9\n * Video Loader                      ^\n *\n * In the above example, the video loader is preparing to load the 6th segment, the first\n * after a discontinuity, while the audio loader is still loading the 5th segment, before\n * the discontinuity.\n *\n * If the video loader goes ahead and loads and appends the 6th segment, then once the\n * segment is loaded and processed, both the video and audio timestamp offsets will be\n * set, since video is used as the primary timing source. This is to ensure content lines\n * up appropriately, as any modifications to the video timing are reflected by audio when\n * the video loader sets the audio and video timestamp offsets to the same value. However,\n * setting the timestamp offset for audio before audio has had a chance to change\n * timelines will likely lead to desyncing, as the audio loader will append segment 5 with\n * a timestamp intended to apply to segments from timeline 1 rather than timeline 0.\n *\n * CASE 3: When seeking, audio prepares to load a new timeline before video\n *\n * Timeline:       0                 1\n * Audio Segments: 0 1 2 3 4 5 DISCO 6 7 8 9\n * Audio Loader:           ^\n * Video Segments: 0 1 2 3 4 5 DISCO 6 7 8 9\n * Video Loader            ^\n *\n * In the above example, both audio and video loaders are loading segments from timeline\n * 0, but imagine that the seek originated from timeline 1.\n *\n * When seeking to a new timeline, the timestamp offset will be set based on the expected\n * segment start of the loaded video segment. In order to maintain sync, the audio loader\n * must wait for the video loader to load its segment and update both the audio and video\n * timestamp offsets before it may load and append its own segment. This is the case\n * whether the seek results in a mismatched segment request (e.g., the audio loader\n * chooses to load segment 3 and the video loader chooses to load segment 4) or the\n * loaders choose to load the same segment index from each playlist, as the segments may\n * not be aligned perfectly, even for matching segment indexes.\n *\n * @param {Object} timelinechangeController\n * @param {number} currentTimeline\n *        The timeline currently being followed by the loader\n * @param {number} segmentTimeline\n *        The timeline of the segment being loaded\n * @param {('main'|'audio')} loaderType\n *        The loader type\n * @param {boolean} audioDisabled\n *        Whether the audio is disabled for the loader. This should only be true when the\n *        loader may have muxed audio in its segment, but should not append it, e.g., for\n *        the main loader when an alternate audio playlist is active.\n *\n * @return {boolean}\n *         Whether the loader should wait for a timeline change from the timeline change\n *         controller before processing the segment\n */\n\nconst shouldWaitForTimelineChange = ({\n  timelineChangeController,\n  currentTimeline,\n  segmentTimeline,\n  loaderType,\n  audioDisabled\n}) => {\n  if (currentTimeline === segmentTimeline) {\n    return false;\n  }\n  if (loaderType === 'audio') {\n    const lastMainTimelineChange = timelineChangeController.lastTimelineChange({\n      type: 'main'\n    }); // Audio loader should wait if:\n    //\n    // * main hasn't had a timeline change yet (thus has not loaded its first segment)\n    // * main hasn't yet changed to the timeline audio is looking to load\n\n    return !lastMainTimelineChange || lastMainTimelineChange.to !== segmentTimeline;\n  } // The main loader only needs to wait for timeline changes if there's demuxed audio.\n  // Otherwise, there's nothing to wait for, since audio would be muxed into the main\n  // loader's segments (or the content is audio/video only and handled by the main\n  // loader).\n\n  if (loaderType === 'main' && audioDisabled) {\n    const pendingAudioTimelineChange = timelineChangeController.pendingTimelineChange({\n      type: 'audio'\n    }); // Main loader should wait for the audio loader if audio is not pending a timeline\n    // change to the current timeline.\n    //\n    // Since the main loader is responsible for setting the timestamp offset for both\n    // audio and video, the main loader must wait for audio to be about to change to its\n    // timeline before setting the offset, otherwise, if audio is behind in loading,\n    // segments from the previous timeline would be adjusted by the new timestamp offset.\n    //\n    // This requirement means that video will not cross a timeline until the audio is\n    // about to cross to it, so that way audio and video will always cross the timeline\n    // together.\n    //\n    // In addition to normal timeline changes, these rules also apply to the start of a\n    // stream (going from a non-existent timeline, -1, to timeline 0). It's important\n    // that these rules apply to the first timeline change because if they did not, it's\n    // possible that the main loader will cross two timelines before the audio loader has\n    // crossed one. Logic may be implemented to handle the startup as a special case, but\n    // it's easier to simply treat all timeline changes the same.\n\n    if (pendingAudioTimelineChange && pendingAudioTimelineChange.to === segmentTimeline) {\n      return false;\n    }\n    return true;\n  }\n  return false;\n};\nconst mediaDuration = timingInfos => {\n  let maxDuration = 0;\n  ['video', 'audio'].forEach(function (type) {\n    const typeTimingInfo = timingInfos[`${type}TimingInfo`];\n    if (!typeTimingInfo) {\n      return;\n    }\n    const {\n      start,\n      end\n    } = typeTimingInfo;\n    let duration;\n    if (typeof start === 'bigint' || typeof end === 'bigint') {\n      duration = window$1.BigInt(end) - window$1.BigInt(start);\n    } else if (typeof start === 'number' && typeof end === 'number') {\n      duration = end - start;\n    }\n    if (typeof duration !== 'undefined' && duration > maxDuration) {\n      maxDuration = duration;\n    }\n  }); // convert back to a number if it is lower than MAX_SAFE_INTEGER\n  // as we only need BigInt when we are above that.\n\n  if (typeof maxDuration === 'bigint' && maxDuration < Number.MAX_SAFE_INTEGER) {\n    maxDuration = Number(maxDuration);\n  }\n  return maxDuration;\n};\nconst segmentTooLong = ({\n  segmentDuration,\n  maxDuration\n}) => {\n  // 0 duration segments are most likely due to metadata only segments or a lack of\n  // information.\n  if (!segmentDuration) {\n    return false;\n  } // For HLS:\n  //\n  // https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-4.3.3.1\n  // The EXTINF duration of each Media Segment in the Playlist\n  // file, when rounded to the nearest integer, MUST be less than or equal\n  // to the target duration; longer segments can trigger playback stalls\n  // or other errors.\n  //\n  // For DASH, the mpd-parser uses the largest reported segment duration as the target\n  // duration. Although that reported duration is occasionally approximate (i.e., not\n  // exact), a strict check may report that a segment is too long more often in DASH.\n\n  return Math.round(segmentDuration) > maxDuration + TIME_FUDGE_FACTOR;\n};\nconst getTroublesomeSegmentDurationMessage = (segmentInfo, sourceType) => {\n  // Right now we aren't following DASH's timing model exactly, so only perform\n  // this check for HLS content.\n  if (sourceType !== 'hls') {\n    return null;\n  }\n  const segmentDuration = mediaDuration({\n    audioTimingInfo: segmentInfo.audioTimingInfo,\n    videoTimingInfo: segmentInfo.videoTimingInfo\n  }); // Don't report if we lack information.\n  //\n  // If the segment has a duration of 0 it is either a lack of information or a\n  // metadata only segment and shouldn't be reported here.\n\n  if (!segmentDuration) {\n    return null;\n  }\n  const targetDuration = segmentInfo.playlist.targetDuration;\n  const isSegmentWayTooLong = segmentTooLong({\n    segmentDuration,\n    maxDuration: targetDuration * 2\n  });\n  const isSegmentSlightlyTooLong = segmentTooLong({\n    segmentDuration,\n    maxDuration: targetDuration\n  });\n  const segmentTooLongMessage = `Segment with index ${segmentInfo.mediaIndex} ` + `from playlist ${segmentInfo.playlist.id} ` + `has a duration of ${segmentDuration} ` + `when the reported duration is ${segmentInfo.duration} ` + `and the target duration is ${targetDuration}. ` + 'For HLS content, a duration in excess of the target duration may result in ' + 'playback issues. See the HLS specification section on EXT-X-TARGETDURATION for ' + 'more details: ' + 'https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-4.3.3.1';\n  if (isSegmentWayTooLong || isSegmentSlightlyTooLong) {\n    return {\n      severity: isSegmentWayTooLong ? 'warn' : 'info',\n      message: segmentTooLongMessage\n    };\n  }\n  return null;\n};\n/**\n * An object that manages segment loading and appending.\n *\n * @class SegmentLoader\n * @param {Object} options required and optional options\n * @extends videojs.EventTarget\n */\n\nclass SegmentLoader extends videojs.EventTarget {\n  constructor(settings, options = {}) {\n    super(); // check pre-conditions\n\n    if (!settings) {\n      throw new TypeError('Initialization settings are required');\n    }\n    if (typeof settings.currentTime !== 'function') {\n      throw new TypeError('No currentTime getter specified');\n    }\n    if (!settings.mediaSource) {\n      throw new TypeError('No MediaSource specified');\n    } // public properties\n\n    this.bandwidth = settings.bandwidth;\n    this.throughput = {\n      rate: 0,\n      count: 0\n    };\n    this.roundTrip = NaN;\n    this.resetStats_();\n    this.mediaIndex = null;\n    this.partIndex = null; // private settings\n\n    this.hasPlayed_ = settings.hasPlayed;\n    this.currentTime_ = settings.currentTime;\n    this.seekable_ = settings.seekable;\n    this.seeking_ = settings.seeking;\n    this.duration_ = settings.duration;\n    this.mediaSource_ = settings.mediaSource;\n    this.vhs_ = settings.vhs;\n    this.loaderType_ = settings.loaderType;\n    this.currentMediaInfo_ = void 0;\n    this.startingMediaInfo_ = void 0;\n    this.segmentMetadataTrack_ = settings.segmentMetadataTrack;\n    this.goalBufferLength_ = settings.goalBufferLength;\n    this.sourceType_ = settings.sourceType;\n    this.sourceUpdater_ = settings.sourceUpdater;\n    this.inbandTextTracks_ = settings.inbandTextTracks;\n    this.state_ = 'INIT';\n    this.timelineChangeController_ = settings.timelineChangeController;\n    this.shouldSaveSegmentTimingInfo_ = true;\n    this.parse708captions_ = settings.parse708captions;\n    this.useDtsForTimestampOffset_ = settings.useDtsForTimestampOffset;\n    this.captionServices_ = settings.captionServices;\n    this.exactManifestTimings = settings.exactManifestTimings; // private instance variables\n\n    this.checkBufferTimeout_ = null;\n    this.error_ = void 0;\n    this.currentTimeline_ = -1;\n    this.pendingSegment_ = null;\n    this.xhrOptions_ = null;\n    this.pendingSegments_ = [];\n    this.audioDisabled_ = false;\n    this.isPendingTimestampOffset_ = false; // TODO possibly move gopBuffer and timeMapping info to a separate controller\n\n    this.gopBuffer_ = [];\n    this.timeMapping_ = 0;\n    this.safeAppend_ = videojs.browser.IE_VERSION >= 11;\n    this.appendInitSegment_ = {\n      audio: true,\n      video: true\n    };\n    this.playlistOfLastInitSegment_ = {\n      audio: null,\n      video: null\n    };\n    this.callQueue_ = []; // If the segment loader prepares to load a segment, but does not have enough\n    // information yet to start the loading process (e.g., if the audio loader wants to\n    // load a segment from the next timeline but the main loader hasn't yet crossed that\n    // timeline), then the load call will be added to the queue until it is ready to be\n    // processed.\n\n    this.loadQueue_ = [];\n    this.metadataQueue_ = {\n      id3: [],\n      caption: []\n    };\n    this.waitingOnRemove_ = false;\n    this.quotaExceededErrorRetryTimeout_ = null; // Fragmented mp4 playback\n\n    this.activeInitSegmentId_ = null;\n    this.initSegments_ = {}; // HLSe playback\n\n    this.cacheEncryptionKeys_ = settings.cacheEncryptionKeys;\n    this.keyCache_ = {};\n    this.decrypter_ = settings.decrypter; // Manages the tracking and generation of sync-points, mappings\n    // between a time in the display time and a segment index within\n    // a playlist\n\n    this.syncController_ = settings.syncController;\n    this.syncPoint_ = {\n      segmentIndex: 0,\n      time: 0\n    };\n    this.transmuxer_ = this.createTransmuxer_();\n    this.triggerSyncInfoUpdate_ = () => this.trigger('syncinfoupdate');\n    this.syncController_.on('syncinfoupdate', this.triggerSyncInfoUpdate_);\n    this.mediaSource_.addEventListener('sourceopen', () => {\n      if (!this.isEndOfStream_()) {\n        this.ended_ = false;\n      }\n    }); // ...for determining the fetch location\n\n    this.fetchAtBuffer_ = false;\n    this.logger_ = logger(`SegmentLoader[${this.loaderType_}]`);\n    Object.defineProperty(this, 'state', {\n      get() {\n        return this.state_;\n      },\n      set(newState) {\n        if (newState !== this.state_) {\n          this.logger_(`${this.state_} -> ${newState}`);\n          this.state_ = newState;\n          this.trigger('statechange');\n        }\n      }\n    });\n    this.sourceUpdater_.on('ready', () => {\n      if (this.hasEnoughInfoToAppend_()) {\n        this.processCallQueue_();\n      }\n    }); // Only the main loader needs to listen for pending timeline changes, as the main\n    // loader should wait for audio to be ready to change its timeline so that both main\n    // and audio timelines change together. For more details, see the\n    // shouldWaitForTimelineChange function.\n\n    if (this.loaderType_ === 'main') {\n      this.timelineChangeController_.on('pendingtimelinechange', () => {\n        if (this.hasEnoughInfoToAppend_()) {\n          this.processCallQueue_();\n        }\n      });\n    } // The main loader only listens on pending timeline changes, but the audio loader,\n    // since its loads follow main, needs to listen on timeline changes. For more details,\n    // see the shouldWaitForTimelineChange function.\n\n    if (this.loaderType_ === 'audio') {\n      this.timelineChangeController_.on('timelinechange', () => {\n        if (this.hasEnoughInfoToLoad_()) {\n          this.processLoadQueue_();\n        }\n        if (this.hasEnoughInfoToAppend_()) {\n          this.processCallQueue_();\n        }\n      });\n    }\n  }\n  createTransmuxer_() {\n    return segmentTransmuxer.createTransmuxer({\n      remux: false,\n      alignGopsAtEnd: this.safeAppend_,\n      keepOriginalTimestamps: true,\n      parse708captions: this.parse708captions_,\n      captionServices: this.captionServices_\n    });\n  }\n  /**\n   * reset all of our media stats\n   *\n   * @private\n   */\n\n  resetStats_() {\n    this.mediaBytesTransferred = 0;\n    this.mediaRequests = 0;\n    this.mediaRequestsAborted = 0;\n    this.mediaRequestsTimedout = 0;\n    this.mediaRequestsErrored = 0;\n    this.mediaTransferDuration = 0;\n    this.mediaSecondsLoaded = 0;\n    this.mediaAppends = 0;\n  }\n  /**\n   * dispose of the SegmentLoader and reset to the default state\n   */\n\n  dispose() {\n    this.trigger('dispose');\n    this.state = 'DISPOSED';\n    this.pause();\n    this.abort_();\n    if (this.transmuxer_) {\n      this.transmuxer_.terminate();\n    }\n    this.resetStats_();\n    if (this.checkBufferTimeout_) {\n      window$1.clearTimeout(this.checkBufferTimeout_);\n    }\n    if (this.syncController_ && this.triggerSyncInfoUpdate_) {\n      this.syncController_.off('syncinfoupdate', this.triggerSyncInfoUpdate_);\n    }\n    this.off();\n  }\n  setAudio(enable) {\n    this.audioDisabled_ = !enable;\n    if (enable) {\n      this.appendInitSegment_.audio = true;\n    } else {\n      // remove current track audio if it gets disabled\n      this.sourceUpdater_.removeAudio(0, this.duration_());\n    }\n  }\n  /**\n   * abort anything that is currently doing on with the SegmentLoader\n   * and reset to a default state\n   */\n\n  abort() {\n    if (this.state !== 'WAITING') {\n      if (this.pendingSegment_) {\n        this.pendingSegment_ = null;\n      }\n      return;\n    }\n    this.abort_(); // We aborted the requests we were waiting on, so reset the loader's state to READY\n    // since we are no longer \"waiting\" on any requests. XHR callback is not always run\n    // when the request is aborted. This will prevent the loader from being stuck in the\n    // WAITING state indefinitely.\n\n    this.state = 'READY'; // don't wait for buffer check timeouts to begin fetching the\n    // next segment\n\n    if (!this.paused()) {\n      this.monitorBuffer_();\n    }\n  }\n  /**\n   * abort all pending xhr requests and null any pending segements\n   *\n   * @private\n   */\n\n  abort_() {\n    if (this.pendingSegment_ && this.pendingSegment_.abortRequests) {\n      this.pendingSegment_.abortRequests();\n    } // clear out the segment being processed\n\n    this.pendingSegment_ = null;\n    this.callQueue_ = [];\n    this.loadQueue_ = [];\n    this.metadataQueue_.id3 = [];\n    this.metadataQueue_.caption = [];\n    this.timelineChangeController_.clearPendingTimelineChange(this.loaderType_);\n    this.waitingOnRemove_ = false;\n    window$1.clearTimeout(this.quotaExceededErrorRetryTimeout_);\n    this.quotaExceededErrorRetryTimeout_ = null;\n  }\n  checkForAbort_(requestId) {\n    // If the state is APPENDING, then aborts will not modify the state, meaning the first\n    // callback that happens should reset the state to READY so that loading can continue.\n    if (this.state === 'APPENDING' && !this.pendingSegment_) {\n      this.state = 'READY';\n      return true;\n    }\n    if (!this.pendingSegment_ || this.pendingSegment_.requestId !== requestId) {\n      return true;\n    }\n    return false;\n  }\n  /**\n   * set an error on the segment loader and null out any pending segements\n   *\n   * @param {Error} error the error to set on the SegmentLoader\n   * @return {Error} the error that was set or that is currently set\n   */\n\n  error(error) {\n    if (typeof error !== 'undefined') {\n      this.logger_('error occurred:', error);\n      this.error_ = error;\n    }\n    this.pendingSegment_ = null;\n    return this.error_;\n  }\n  endOfStream() {\n    this.ended_ = true;\n    if (this.transmuxer_) {\n      // need to clear out any cached data to prepare for the new segment\n      segmentTransmuxer.reset(this.transmuxer_);\n    }\n    this.gopBuffer_.length = 0;\n    this.pause();\n    this.trigger('ended');\n  }\n  /**\n   * Indicates which time ranges are buffered\n   *\n   * @return {TimeRange}\n   *         TimeRange object representing the current buffered ranges\n   */\n\n  buffered_() {\n    const trackInfo = this.getMediaInfo_();\n    if (!this.sourceUpdater_ || !trackInfo) {\n      return createTimeRanges();\n    }\n    if (this.loaderType_ === 'main') {\n      const {\n        hasAudio,\n        hasVideo,\n        isMuxed\n      } = trackInfo;\n      if (hasVideo && hasAudio && !this.audioDisabled_ && !isMuxed) {\n        return this.sourceUpdater_.buffered();\n      }\n      if (hasVideo) {\n        return this.sourceUpdater_.videoBuffered();\n      }\n    } // One case that can be ignored for now is audio only with alt audio,\n    // as we don't yet have proper support for that.\n\n    return this.sourceUpdater_.audioBuffered();\n  }\n  /**\n   * Gets and sets init segment for the provided map\n   *\n   * @param {Object} map\n   *        The map object representing the init segment to get or set\n   * @param {boolean=} set\n   *        If true, the init segment for the provided map should be saved\n   * @return {Object}\n   *         map object for desired init segment\n   */\n\n  initSegmentForMap(map, set = false) {\n    if (!map) {\n      return null;\n    }\n    const id = initSegmentId(map);\n    let storedMap = this.initSegments_[id];\n    if (set && !storedMap && map.bytes) {\n      this.initSegments_[id] = storedMap = {\n        resolvedUri: map.resolvedUri,\n        byterange: map.byterange,\n        bytes: map.bytes,\n        tracks: map.tracks,\n        timescales: map.timescales\n      };\n    }\n    return storedMap || map;\n  }\n  /**\n   * Gets and sets key for the provided key\n   *\n   * @param {Object} key\n   *        The key object representing the key to get or set\n   * @param {boolean=} set\n   *        If true, the key for the provided key should be saved\n   * @return {Object}\n   *         Key object for desired key\n   */\n\n  segmentKey(key, set = false) {\n    if (!key) {\n      return null;\n    }\n    const id = segmentKeyId(key);\n    let storedKey = this.keyCache_[id]; // TODO: We should use the HTTP Expires header to invalidate our cache per\n    // https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-6.2.3\n\n    if (this.cacheEncryptionKeys_ && set && !storedKey && key.bytes) {\n      this.keyCache_[id] = storedKey = {\n        resolvedUri: key.resolvedUri,\n        bytes: key.bytes\n      };\n    }\n    const result = {\n      resolvedUri: (storedKey || key).resolvedUri\n    };\n    if (storedKey) {\n      result.bytes = storedKey.bytes;\n    }\n    return result;\n  }\n  /**\n   * Returns true if all configuration required for loading is present, otherwise false.\n   *\n   * @return {boolean} True if the all configuration is ready for loading\n   * @private\n   */\n\n  couldBeginLoading_() {\n    return this.playlist_ && !this.paused();\n  }\n  /**\n   * load a playlist and start to fill the buffer\n   */\n\n  load() {\n    // un-pause\n    this.monitorBuffer_(); // if we don't have a playlist yet, keep waiting for one to be\n    // specified\n\n    if (!this.playlist_) {\n      return;\n    } // if all the configuration is ready, initialize and begin loading\n\n    if (this.state === 'INIT' && this.couldBeginLoading_()) {\n      return this.init_();\n    } // if we're in the middle of processing a segment already, don't\n    // kick off an additional segment request\n\n    if (!this.couldBeginLoading_() || this.state !== 'READY' && this.state !== 'INIT') {\n      return;\n    }\n    this.state = 'READY';\n  }\n  /**\n   * Once all the starting parameters have been specified, begin\n   * operation. This method should only be invoked from the INIT\n   * state.\n   *\n   * @private\n   */\n\n  init_() {\n    this.state = 'READY'; // if this is the audio segment loader, and it hasn't been inited before, then any old\n    // audio data from the muxed content should be removed\n\n    this.resetEverything();\n    return this.monitorBuffer_();\n  }\n  /**\n   * set a playlist on the segment loader\n   *\n   * @param {PlaylistLoader} media the playlist to set on the segment loader\n   */\n\n  playlist(newPlaylist, options = {}) {\n    if (!newPlaylist) {\n      return;\n    }\n    const oldPlaylist = this.playlist_;\n    const segmentInfo = this.pendingSegment_;\n    this.playlist_ = newPlaylist;\n    this.xhrOptions_ = options; // when we haven't started playing yet, the start of a live playlist\n    // is always our zero-time so force a sync update each time the playlist\n    // is refreshed from the server\n    //\n    // Use the INIT state to determine if playback has started, as the playlist sync info\n    // should be fixed once requests begin (as sync points are generated based on sync\n    // info), but not before then.\n\n    if (this.state === 'INIT') {\n      newPlaylist.syncInfo = {\n        mediaSequence: newPlaylist.mediaSequence,\n        time: 0\n      }; // Setting the date time mapping means mapping the program date time (if available)\n      // to time 0 on the player's timeline. The playlist's syncInfo serves a similar\n      // purpose, mapping the initial mediaSequence to time zero. Since the syncInfo can\n      // be updated as the playlist is refreshed before the loader starts loading, the\n      // program date time mapping needs to be updated as well.\n      //\n      // This mapping is only done for the main loader because a program date time should\n      // map equivalently between playlists.\n\n      if (this.loaderType_ === 'main') {\n        this.syncController_.setDateTimeMappingForStart(newPlaylist);\n      }\n    }\n    let oldId = null;\n    if (oldPlaylist) {\n      if (oldPlaylist.id) {\n        oldId = oldPlaylist.id;\n      } else if (oldPlaylist.uri) {\n        oldId = oldPlaylist.uri;\n      }\n    }\n    this.logger_(`playlist update [${oldId} => ${newPlaylist.id || newPlaylist.uri}]`); // in VOD, this is always a rendition switch (or we updated our syncInfo above)\n    // in LIVE, we always want to update with new playlists (including refreshes)\n\n    this.trigger('syncinfoupdate'); // if we were unpaused but waiting for a playlist, start\n    // buffering now\n\n    if (this.state === 'INIT' && this.couldBeginLoading_()) {\n      return this.init_();\n    }\n    if (!oldPlaylist || oldPlaylist.uri !== newPlaylist.uri) {\n      if (this.mediaIndex !== null) {\n        // we must reset/resync the segment loader when we switch renditions and\n        // the segment loader is already synced to the previous rendition\n        // on playlist changes we want it to be possible to fetch\n        // at the buffer for vod but not for live. So we use resetLoader\n        // for live and resyncLoader for vod. We want this because\n        // if a playlist uses independent and non-independent segments/parts the\n        // buffer may not accurately reflect the next segment that we should try\n        // downloading.\n        if (!newPlaylist.endList) {\n          this.resetLoader();\n        } else {\n          this.resyncLoader();\n        }\n      }\n      this.currentMediaInfo_ = void 0;\n      this.trigger('playlistupdate'); // the rest of this function depends on `oldPlaylist` being defined\n\n      return;\n    } // we reloaded the same playlist so we are in a live scenario\n    // and we will likely need to adjust the mediaIndex\n\n    const mediaSequenceDiff = newPlaylist.mediaSequence - oldPlaylist.mediaSequence;\n    this.logger_(`live window shift [${mediaSequenceDiff}]`); // update the mediaIndex on the SegmentLoader\n    // this is important because we can abort a request and this value must be\n    // equal to the last appended mediaIndex\n\n    if (this.mediaIndex !== null) {\n      this.mediaIndex -= mediaSequenceDiff; // this can happen if we are going to load the first segment, but get a playlist\n      // update during that. mediaIndex would go from 0 to -1 if mediaSequence in the\n      // new playlist was incremented by 1.\n\n      if (this.mediaIndex < 0) {\n        this.mediaIndex = null;\n        this.partIndex = null;\n      } else {\n        const segment = this.playlist_.segments[this.mediaIndex]; // partIndex should remain the same for the same segment\n        // unless parts fell off of the playlist for this segment.\n        // In that case we need to reset partIndex and resync\n\n        if (this.partIndex && (!segment.parts || !segment.parts.length || !segment.parts[this.partIndex])) {\n          const mediaIndex = this.mediaIndex;\n          this.logger_(`currently processing part (index ${this.partIndex}) no longer exists.`);\n          this.resetLoader(); // We want to throw away the partIndex and the data associated with it,\n          // as the part was dropped from our current playlists segment.\n          // The mediaIndex will still be valid so keep that around.\n\n          this.mediaIndex = mediaIndex;\n        }\n      }\n    } // update the mediaIndex on the SegmentInfo object\n    // this is important because we will update this.mediaIndex with this value\n    // in `handleAppendsDone_` after the segment has been successfully appended\n\n    if (segmentInfo) {\n      segmentInfo.mediaIndex -= mediaSequenceDiff;\n      if (segmentInfo.mediaIndex < 0) {\n        segmentInfo.mediaIndex = null;\n        segmentInfo.partIndex = null;\n      } else {\n        // we need to update the referenced segment so that timing information is\n        // saved for the new playlist's segment, however, if the segment fell off the\n        // playlist, we can leave the old reference and just lose the timing info\n        if (segmentInfo.mediaIndex >= 0) {\n          segmentInfo.segment = newPlaylist.segments[segmentInfo.mediaIndex];\n        }\n        if (segmentInfo.partIndex >= 0 && segmentInfo.segment.parts) {\n          segmentInfo.part = segmentInfo.segment.parts[segmentInfo.partIndex];\n        }\n      }\n    }\n    this.syncController_.saveExpiredSegmentInfo(oldPlaylist, newPlaylist);\n  }\n  /**\n   * Prevent the loader from fetching additional segments. If there\n   * is a segment request outstanding, it will finish processing\n   * before the loader halts. A segment loader can be unpaused by\n   * calling load().\n   */\n\n  pause() {\n    if (this.checkBufferTimeout_) {\n      window$1.clearTimeout(this.checkBufferTimeout_);\n      this.checkBufferTimeout_ = null;\n    }\n  }\n  /**\n   * Returns whether the segment loader is fetching additional\n   * segments when given the opportunity. This property can be\n   * modified through calls to pause() and load().\n   */\n\n  paused() {\n    return this.checkBufferTimeout_ === null;\n  }\n  /**\n   * Delete all the buffered data and reset the SegmentLoader\n   *\n   * @param {Function} [done] an optional callback to be executed when the remove\n   * operation is complete\n   */\n\n  resetEverything(done) {\n    this.ended_ = false;\n    this.activeInitSegmentId_ = null;\n    this.appendInitSegment_ = {\n      audio: true,\n      video: true\n    };\n    this.resetLoader(); // remove from 0, the earliest point, to Infinity, to signify removal of everything.\n    // VTT Segment Loader doesn't need to do anything but in the regular SegmentLoader,\n    // we then clamp the value to duration if necessary.\n\n    this.remove(0, Infinity, done); // clears fmp4 captions\n\n    if (this.transmuxer_) {\n      this.transmuxer_.postMessage({\n        action: 'clearAllMp4Captions'\n      }); // reset the cache in the transmuxer\n\n      this.transmuxer_.postMessage({\n        action: 'reset'\n      });\n    }\n  }\n  /**\n   * Force the SegmentLoader to resync and start loading around the currentTime instead\n   * of starting at the end of the buffer\n   *\n   * Useful for fast quality changes\n   */\n\n  resetLoader() {\n    this.fetchAtBuffer_ = false;\n    this.resyncLoader();\n  }\n  /**\n   * Force the SegmentLoader to restart synchronization and make a conservative guess\n   * before returning to the simple walk-forward method\n   */\n\n  resyncLoader() {\n    if (this.transmuxer_) {\n      // need to clear out any cached data to prepare for the new segment\n      segmentTransmuxer.reset(this.transmuxer_);\n    }\n    this.mediaIndex = null;\n    this.partIndex = null;\n    this.syncPoint_ = null;\n    this.isPendingTimestampOffset_ = false;\n    this.callQueue_ = [];\n    this.loadQueue_ = [];\n    this.metadataQueue_.id3 = [];\n    this.metadataQueue_.caption = [];\n    this.abort();\n    if (this.transmuxer_) {\n      this.transmuxer_.postMessage({\n        action: 'clearParsedMp4Captions'\n      });\n    }\n  }\n  /**\n   * Remove any data in the source buffer between start and end times\n   *\n   * @param {number} start - the start time of the region to remove from the buffer\n   * @param {number} end - the end time of the region to remove from the buffer\n   * @param {Function} [done] - an optional callback to be executed when the remove\n   * @param {boolean} force - force all remove operations to happen\n   * operation is complete\n   */\n\n  remove(start, end, done = () => {}, force = false) {\n    // clamp end to duration if we need to remove everything.\n    // This is due to a browser bug that causes issues if we remove to Infinity.\n    // videojs/videojs-contrib-hls#1225\n    if (end === Infinity) {\n      end = this.duration_();\n    } // skip removes that would throw an error\n    // commonly happens during a rendition switch at the start of a video\n    // from start 0 to end 0\n\n    if (end <= start) {\n      this.logger_('skipping remove because end ${end} is <= start ${start}');\n      return;\n    }\n    if (!this.sourceUpdater_ || !this.getMediaInfo_()) {\n      this.logger_('skipping remove because no source updater or starting media info'); // nothing to remove if we haven't processed any media\n\n      return;\n    } // set it to one to complete this function's removes\n\n    let removesRemaining = 1;\n    const removeFinished = () => {\n      removesRemaining--;\n      if (removesRemaining === 0) {\n        done();\n      }\n    };\n    if (force || !this.audioDisabled_) {\n      removesRemaining++;\n      this.sourceUpdater_.removeAudio(start, end, removeFinished);\n    } // While it would be better to only remove video if the main loader has video, this\n    // should be safe with audio only as removeVideo will call back even if there's no\n    // video buffer.\n    //\n    // In theory we can check to see if there's video before calling the remove, but in\n    // the event that we're switching between renditions and from video to audio only\n    // (when we add support for that), we may need to clear the video contents despite\n    // what the new media will contain.\n\n    if (force || this.loaderType_ === 'main') {\n      this.gopBuffer_ = removeGopBuffer(this.gopBuffer_, start, end, this.timeMapping_);\n      removesRemaining++;\n      this.sourceUpdater_.removeVideo(start, end, removeFinished);\n    } // remove any captions and ID3 tags\n\n    for (const track in this.inbandTextTracks_) {\n      removeCuesFromTrack(start, end, this.inbandTextTracks_[track]);\n    }\n    removeCuesFromTrack(start, end, this.segmentMetadataTrack_); // finished this function's removes\n\n    removeFinished();\n  }\n  /**\n   * (re-)schedule monitorBufferTick_ to run as soon as possible\n   *\n   * @private\n   */\n\n  monitorBuffer_() {\n    if (this.checkBufferTimeout_) {\n      window$1.clearTimeout(this.checkBufferTimeout_);\n    }\n    this.checkBufferTimeout_ = window$1.setTimeout(this.monitorBufferTick_.bind(this), 1);\n  }\n  /**\n   * As long as the SegmentLoader is in the READY state, periodically\n   * invoke fillBuffer_().\n   *\n   * @private\n   */\n\n  monitorBufferTick_() {\n    if (this.state === 'READY') {\n      this.fillBuffer_();\n    }\n    if (this.checkBufferTimeout_) {\n      window$1.clearTimeout(this.checkBufferTimeout_);\n    }\n    this.checkBufferTimeout_ = window$1.setTimeout(this.monitorBufferTick_.bind(this), CHECK_BUFFER_DELAY);\n  }\n  /**\n   * fill the buffer with segements unless the sourceBuffers are\n   * currently updating\n   *\n   * Note: this function should only ever be called by monitorBuffer_\n   * and never directly\n   *\n   * @private\n   */\n\n  fillBuffer_() {\n    // TODO since the source buffer maintains a queue, and we shouldn't call this function\n    // except when we're ready for the next segment, this check can most likely be removed\n    if (this.sourceUpdater_.updating()) {\n      return;\n    } // see if we need to begin loading immediately\n\n    const segmentInfo = this.chooseNextRequest_();\n    if (!segmentInfo) {\n      return;\n    }\n    if (typeof segmentInfo.timestampOffset === 'number') {\n      this.isPendingTimestampOffset_ = false;\n      this.timelineChangeController_.pendingTimelineChange({\n        type: this.loaderType_,\n        from: this.currentTimeline_,\n        to: segmentInfo.timeline\n      });\n    }\n    this.loadSegment_(segmentInfo);\n  }\n  /**\n   * Determines if we should call endOfStream on the media source based\n   * on the state of the buffer or if appened segment was the final\n   * segment in the playlist.\n   *\n   * @param {number} [mediaIndex] the media index of segment we last appended\n   * @param {Object} [playlist] a media playlist object\n   * @return {boolean} do we need to call endOfStream on the MediaSource\n   */\n\n  isEndOfStream_(mediaIndex = this.mediaIndex, playlist = this.playlist_, partIndex = this.partIndex) {\n    if (!playlist || !this.mediaSource_) {\n      return false;\n    }\n    const segment = typeof mediaIndex === 'number' && playlist.segments[mediaIndex]; // mediaIndex is zero based but length is 1 based\n\n    const appendedLastSegment = mediaIndex + 1 === playlist.segments.length; // true if there are no parts, or this is the last part.\n\n    const appendedLastPart = !segment || !segment.parts || partIndex + 1 === segment.parts.length; // if we've buffered to the end of the video, we need to call endOfStream\n    // so that MediaSources can trigger the `ended` event when it runs out of\n    // buffered data instead of waiting for me\n\n    return playlist.endList && this.mediaSource_.readyState === 'open' && appendedLastSegment && appendedLastPart;\n  }\n  /**\n   * Determines what request should be made given current segment loader state.\n   *\n   * @return {Object} a request object that describes the segment/part to load\n   */\n\n  chooseNextRequest_() {\n    const buffered = this.buffered_();\n    const bufferedEnd = lastBufferedEnd(buffered) || 0;\n    const bufferedTime = timeAheadOf(buffered, this.currentTime_());\n    const preloaded = !this.hasPlayed_() && bufferedTime >= 1;\n    const haveEnoughBuffer = bufferedTime >= this.goalBufferLength_();\n    const segments = this.playlist_.segments; // return no segment if:\n    // 1. we don't have segments\n    // 2. The video has not yet played and we already downloaded a segment\n    // 3. we already have enough buffered time\n\n    if (!segments.length || preloaded || haveEnoughBuffer) {\n      return null;\n    }\n    this.syncPoint_ = this.syncPoint_ || this.syncController_.getSyncPoint(this.playlist_, this.duration_(), this.currentTimeline_, this.currentTime_());\n    const next = {\n      partIndex: null,\n      mediaIndex: null,\n      startOfSegment: null,\n      playlist: this.playlist_,\n      isSyncRequest: Boolean(!this.syncPoint_)\n    };\n    if (next.isSyncRequest) {\n      next.mediaIndex = getSyncSegmentCandidate(this.currentTimeline_, segments, bufferedEnd);\n    } else if (this.mediaIndex !== null) {\n      const segment = segments[this.mediaIndex];\n      const partIndex = typeof this.partIndex === 'number' ? this.partIndex : -1;\n      next.startOfSegment = segment.end ? segment.end : bufferedEnd;\n      if (segment.parts && segment.parts[partIndex + 1]) {\n        next.mediaIndex = this.mediaIndex;\n        next.partIndex = partIndex + 1;\n      } else {\n        next.mediaIndex = this.mediaIndex + 1;\n      }\n    } else {\n      // Find the segment containing the end of the buffer or current time.\n      const {\n        segmentIndex,\n        startTime,\n        partIndex\n      } = Playlist.getMediaInfoForTime({\n        exactManifestTimings: this.exactManifestTimings,\n        playlist: this.playlist_,\n        currentTime: this.fetchAtBuffer_ ? bufferedEnd : this.currentTime_(),\n        startingPartIndex: this.syncPoint_.partIndex,\n        startingSegmentIndex: this.syncPoint_.segmentIndex,\n        startTime: this.syncPoint_.time\n      });\n      next.getMediaInfoForTime = this.fetchAtBuffer_ ? `bufferedEnd ${bufferedEnd}` : `currentTime ${this.currentTime_()}`;\n      next.mediaIndex = segmentIndex;\n      next.startOfSegment = startTime;\n      next.partIndex = partIndex;\n    }\n    const nextSegment = segments[next.mediaIndex];\n    let nextPart = nextSegment && typeof next.partIndex === 'number' && nextSegment.parts && nextSegment.parts[next.partIndex]; // if the next segment index is invalid or\n    // the next partIndex is invalid do not choose a next segment.\n\n    if (!nextSegment || typeof next.partIndex === 'number' && !nextPart) {\n      return null;\n    } // if the next segment has parts, and we don't have a partIndex.\n    // Set partIndex to 0\n\n    if (typeof next.partIndex !== 'number' && nextSegment.parts) {\n      next.partIndex = 0;\n      nextPart = nextSegment.parts[0];\n    } // if we have no buffered data then we need to make sure\n    // that the next part we append is \"independent\" if possible.\n    // So we check if the previous part is independent, and request\n    // it if it is.\n\n    if (!bufferedTime && nextPart && !nextPart.independent) {\n      if (next.partIndex === 0) {\n        const lastSegment = segments[next.mediaIndex - 1];\n        const lastSegmentLastPart = lastSegment.parts && lastSegment.parts.length && lastSegment.parts[lastSegment.parts.length - 1];\n        if (lastSegmentLastPart && lastSegmentLastPart.independent) {\n          next.mediaIndex -= 1;\n          next.partIndex = lastSegment.parts.length - 1;\n          next.independent = 'previous segment';\n        }\n      } else if (nextSegment.parts[next.partIndex - 1].independent) {\n        next.partIndex -= 1;\n        next.independent = 'previous part';\n      }\n    }\n    const ended = this.mediaSource_ && this.mediaSource_.readyState === 'ended'; // do not choose a next segment if all of the following:\n    // 1. this is the last segment in the playlist\n    // 2. end of stream has been called on the media source already\n    // 3. the player is not seeking\n\n    if (next.mediaIndex >= segments.length - 1 && ended && !this.seeking_()) {\n      return null;\n    }\n    return this.generateSegmentInfo_(next);\n  }\n  generateSegmentInfo_(options) {\n    const {\n      independent,\n      playlist,\n      mediaIndex,\n      startOfSegment,\n      isSyncRequest,\n      partIndex,\n      forceTimestampOffset,\n      getMediaInfoForTime\n    } = options;\n    const segment = playlist.segments[mediaIndex];\n    const part = typeof partIndex === 'number' && segment.parts[partIndex];\n    const segmentInfo = {\n      requestId: 'segment-loader-' + Math.random(),\n      // resolve the segment URL relative to the playlist\n      uri: part && part.resolvedUri || segment.resolvedUri,\n      // the segment's mediaIndex at the time it was requested\n      mediaIndex,\n      partIndex: part ? partIndex : null,\n      // whether or not to update the SegmentLoader's state with this\n      // segment's mediaIndex\n      isSyncRequest,\n      startOfSegment,\n      // the segment's playlist\n      playlist,\n      // unencrypted bytes of the segment\n      bytes: null,\n      // when a key is defined for this segment, the encrypted bytes\n      encryptedBytes: null,\n      // The target timestampOffset for this segment when we append it\n      // to the source buffer\n      timestampOffset: null,\n      // The timeline that the segment is in\n      timeline: segment.timeline,\n      // The expected duration of the segment in seconds\n      duration: part && part.duration || segment.duration,\n      // retain the segment in case the playlist updates while doing an async process\n      segment,\n      part,\n      byteLength: 0,\n      transmuxer: this.transmuxer_,\n      // type of getMediaInfoForTime that was used to get this segment\n      getMediaInfoForTime,\n      independent\n    };\n    const overrideCheck = typeof forceTimestampOffset !== 'undefined' ? forceTimestampOffset : this.isPendingTimestampOffset_;\n    segmentInfo.timestampOffset = this.timestampOffsetForSegment_({\n      segmentTimeline: segment.timeline,\n      currentTimeline: this.currentTimeline_,\n      startOfSegment,\n      buffered: this.buffered_(),\n      overrideCheck\n    });\n    const audioBufferedEnd = lastBufferedEnd(this.sourceUpdater_.audioBuffered());\n    if (typeof audioBufferedEnd === 'number') {\n      // since the transmuxer is using the actual timing values, but the buffer is\n      // adjusted by the timestamp offset, we must adjust the value here\n      segmentInfo.audioAppendStart = audioBufferedEnd - this.sourceUpdater_.audioTimestampOffset();\n    }\n    if (this.sourceUpdater_.videoBuffered().length) {\n      segmentInfo.gopsToAlignWith = gopsSafeToAlignWith(this.gopBuffer_,\n      // since the transmuxer is using the actual timing values, but the time is\n      // adjusted by the timestmap offset, we must adjust the value here\n      this.currentTime_() - this.sourceUpdater_.videoTimestampOffset(), this.timeMapping_);\n    }\n    return segmentInfo;\n  } // get the timestampoffset for a segment,\n  // added so that vtt segment loader can override and prevent\n  // adding timestamp offsets.\n\n  timestampOffsetForSegment_(options) {\n    return timestampOffsetForSegment(options);\n  }\n  /**\n   * Determines if the network has enough bandwidth to complete the current segment\n   * request in a timely manner. If not, the request will be aborted early and bandwidth\n   * updated to trigger a playlist switch.\n   *\n   * @param {Object} stats\n   *        Object containing stats about the request timing and size\n   * @private\n   */\n\n  earlyAbortWhenNeeded_(stats) {\n    if (this.vhs_.tech_.paused() ||\n    // Don't abort if the current playlist is on the lowestEnabledRendition\n    // TODO: Replace using timeout with a boolean indicating whether this playlist is\n    //       the lowestEnabledRendition.\n    !this.xhrOptions_.timeout ||\n    // Don't abort if we have no bandwidth information to estimate segment sizes\n    !this.playlist_.attributes.BANDWIDTH) {\n      return;\n    } // Wait at least 1 second since the first byte of data has been received before\n    // using the calculated bandwidth from the progress event to allow the bitrate\n    // to stabilize\n\n    if (Date.now() - (stats.firstBytesReceivedAt || Date.now()) < 1000) {\n      return;\n    }\n    const currentTime = this.currentTime_();\n    const measuredBandwidth = stats.bandwidth;\n    const segmentDuration = this.pendingSegment_.duration;\n    const requestTimeRemaining = Playlist.estimateSegmentRequestTime(segmentDuration, measuredBandwidth, this.playlist_, stats.bytesReceived); // Subtract 1 from the timeUntilRebuffer so we still consider an early abort\n    // if we are only left with less than 1 second when the request completes.\n    // A negative timeUntilRebuffering indicates we are already rebuffering\n\n    const timeUntilRebuffer$1 = timeUntilRebuffer(this.buffered_(), currentTime, this.vhs_.tech_.playbackRate()) - 1; // Only consider aborting early if the estimated time to finish the download\n    // is larger than the estimated time until the player runs out of forward buffer\n\n    if (requestTimeRemaining <= timeUntilRebuffer$1) {\n      return;\n    }\n    const switchCandidate = minRebufferMaxBandwidthSelector({\n      main: this.vhs_.playlists.main,\n      currentTime,\n      bandwidth: measuredBandwidth,\n      duration: this.duration_(),\n      segmentDuration,\n      timeUntilRebuffer: timeUntilRebuffer$1,\n      currentTimeline: this.currentTimeline_,\n      syncController: this.syncController_\n    });\n    if (!switchCandidate) {\n      return;\n    }\n    const rebufferingImpact = requestTimeRemaining - timeUntilRebuffer$1;\n    const timeSavedBySwitching = rebufferingImpact - switchCandidate.rebufferingImpact;\n    let minimumTimeSaving = 0.5; // If we are already rebuffering, increase the amount of variance we add to the\n    // potential round trip time of the new request so that we are not too aggressive\n    // with switching to a playlist that might save us a fraction of a second.\n\n    if (timeUntilRebuffer$1 <= TIME_FUDGE_FACTOR) {\n      minimumTimeSaving = 1;\n    }\n    if (!switchCandidate.playlist || switchCandidate.playlist.uri === this.playlist_.uri || timeSavedBySwitching < minimumTimeSaving) {\n      return;\n    } // set the bandwidth to that of the desired playlist being sure to scale by\n    // BANDWIDTH_VARIANCE and add one so the playlist selector does not exclude it\n    // don't trigger a bandwidthupdate as the bandwidth is artifial\n\n    this.bandwidth = switchCandidate.playlist.attributes.BANDWIDTH * Config.BANDWIDTH_VARIANCE + 1;\n    this.trigger('earlyabort');\n  }\n  handleAbort_(segmentInfo) {\n    this.logger_(`Aborting ${segmentInfoString(segmentInfo)}`);\n    this.mediaRequestsAborted += 1;\n  }\n  /**\n   * XHR `progress` event handler\n   *\n   * @param {Event}\n   *        The XHR `progress` event\n   * @param {Object} simpleSegment\n   *        A simplified segment object copy\n   * @private\n   */\n\n  handleProgress_(event, simpleSegment) {\n    this.earlyAbortWhenNeeded_(simpleSegment.stats);\n    if (this.checkForAbort_(simpleSegment.requestId)) {\n      return;\n    }\n    this.trigger('progress');\n  }\n  handleTrackInfo_(simpleSegment, trackInfo) {\n    this.earlyAbortWhenNeeded_(simpleSegment.stats);\n    if (this.checkForAbort_(simpleSegment.requestId)) {\n      return;\n    }\n    if (this.checkForIllegalMediaSwitch(trackInfo)) {\n      return;\n    }\n    trackInfo = trackInfo || {}; // When we have track info, determine what media types this loader is dealing with.\n    // Guard against cases where we're not getting track info at all until we are\n    // certain that all streams will provide it.\n\n    if (!shallowEqual(this.currentMediaInfo_, trackInfo)) {\n      this.appendInitSegment_ = {\n        audio: true,\n        video: true\n      };\n      this.startingMediaInfo_ = trackInfo;\n      this.currentMediaInfo_ = trackInfo;\n      this.logger_('trackinfo update', trackInfo);\n      this.trigger('trackinfo');\n    } // trackinfo may cause an abort if the trackinfo\n    // causes a codec change to an unsupported codec.\n\n    if (this.checkForAbort_(simpleSegment.requestId)) {\n      return;\n    } // set trackinfo on the pending segment so that\n    // it can append.\n\n    this.pendingSegment_.trackInfo = trackInfo; // check if any calls were waiting on the track info\n\n    if (this.hasEnoughInfoToAppend_()) {\n      this.processCallQueue_();\n    }\n  }\n  handleTimingInfo_(simpleSegment, mediaType, timeType, time) {\n    this.earlyAbortWhenNeeded_(simpleSegment.stats);\n    if (this.checkForAbort_(simpleSegment.requestId)) {\n      return;\n    }\n    const segmentInfo = this.pendingSegment_;\n    const timingInfoProperty = timingInfoPropertyForMedia(mediaType);\n    segmentInfo[timingInfoProperty] = segmentInfo[timingInfoProperty] || {};\n    segmentInfo[timingInfoProperty][timeType] = time;\n    this.logger_(`timinginfo: ${mediaType} - ${timeType} - ${time}`); // check if any calls were waiting on the timing info\n\n    if (this.hasEnoughInfoToAppend_()) {\n      this.processCallQueue_();\n    }\n  }\n  handleCaptions_(simpleSegment, captionData) {\n    this.earlyAbortWhenNeeded_(simpleSegment.stats);\n    if (this.checkForAbort_(simpleSegment.requestId)) {\n      return;\n    } // This could only happen with fmp4 segments, but\n    // should still not happen in general\n\n    if (captionData.length === 0) {\n      this.logger_('SegmentLoader received no captions from a caption event');\n      return;\n    }\n    const segmentInfo = this.pendingSegment_; // Wait until we have some video data so that caption timing\n    // can be adjusted by the timestamp offset\n\n    if (!segmentInfo.hasAppendedData_) {\n      this.metadataQueue_.caption.push(this.handleCaptions_.bind(this, simpleSegment, captionData));\n      return;\n    }\n    const timestampOffset = this.sourceUpdater_.videoTimestampOffset() === null ? this.sourceUpdater_.audioTimestampOffset() : this.sourceUpdater_.videoTimestampOffset();\n    const captionTracks = {}; // get total start/end and captions for each track/stream\n\n    captionData.forEach(caption => {\n      // caption.stream is actually a track name...\n      // set to the existing values in tracks or default values\n      captionTracks[caption.stream] = captionTracks[caption.stream] || {\n        // Infinity, as any other value will be less than this\n        startTime: Infinity,\n        captions: [],\n        // 0 as an other value will be more than this\n        endTime: 0\n      };\n      const captionTrack = captionTracks[caption.stream];\n      captionTrack.startTime = Math.min(captionTrack.startTime, caption.startTime + timestampOffset);\n      captionTrack.endTime = Math.max(captionTrack.endTime, caption.endTime + timestampOffset);\n      captionTrack.captions.push(caption);\n    });\n    Object.keys(captionTracks).forEach(trackName => {\n      const {\n        startTime,\n        endTime,\n        captions\n      } = captionTracks[trackName];\n      const inbandTextTracks = this.inbandTextTracks_;\n      this.logger_(`adding cues from ${startTime} -> ${endTime} for ${trackName}`);\n      createCaptionsTrackIfNotExists(inbandTextTracks, this.vhs_.tech_, trackName); // clear out any cues that start and end at the same time period for the same track.\n      // We do this because a rendition change that also changes the timescale for captions\n      // will result in captions being re-parsed for certain segments. If we add them again\n      // without clearing we will have two of the same captions visible.\n\n      removeCuesFromTrack(startTime, endTime, inbandTextTracks[trackName]);\n      addCaptionData({\n        captionArray: captions,\n        inbandTextTracks,\n        timestampOffset\n      });\n    }); // Reset stored captions since we added parsed\n    // captions to a text track at this point\n\n    if (this.transmuxer_) {\n      this.transmuxer_.postMessage({\n        action: 'clearParsedMp4Captions'\n      });\n    }\n  }\n  handleId3_(simpleSegment, id3Frames, dispatchType) {\n    this.earlyAbortWhenNeeded_(simpleSegment.stats);\n    if (this.checkForAbort_(simpleSegment.requestId)) {\n      return;\n    }\n    const segmentInfo = this.pendingSegment_; // we need to have appended data in order for the timestamp offset to be set\n\n    if (!segmentInfo.hasAppendedData_) {\n      this.metadataQueue_.id3.push(this.handleId3_.bind(this, simpleSegment, id3Frames, dispatchType));\n      return;\n    }\n    const timestampOffset = this.sourceUpdater_.videoTimestampOffset() === null ? this.sourceUpdater_.audioTimestampOffset() : this.sourceUpdater_.videoTimestampOffset(); // There's potentially an issue where we could double add metadata if there's a muxed\n    // audio/video source with a metadata track, and an alt audio with a metadata track.\n    // However, this probably won't happen, and if it does it can be handled then.\n\n    createMetadataTrackIfNotExists(this.inbandTextTracks_, dispatchType, this.vhs_.tech_);\n    addMetadata({\n      inbandTextTracks: this.inbandTextTracks_,\n      metadataArray: id3Frames,\n      timestampOffset,\n      videoDuration: this.duration_()\n    });\n  }\n  processMetadataQueue_() {\n    this.metadataQueue_.id3.forEach(fn => fn());\n    this.metadataQueue_.caption.forEach(fn => fn());\n    this.metadataQueue_.id3 = [];\n    this.metadataQueue_.caption = [];\n  }\n  processCallQueue_() {\n    const callQueue = this.callQueue_; // Clear out the queue before the queued functions are run, since some of the\n    // functions may check the length of the load queue and default to pushing themselves\n    // back onto the queue.\n\n    this.callQueue_ = [];\n    callQueue.forEach(fun => fun());\n  }\n  processLoadQueue_() {\n    const loadQueue = this.loadQueue_; // Clear out the queue before the queued functions are run, since some of the\n    // functions may check the length of the load queue and default to pushing themselves\n    // back onto the queue.\n\n    this.loadQueue_ = [];\n    loadQueue.forEach(fun => fun());\n  }\n  /**\n   * Determines whether the loader has enough info to load the next segment.\n   *\n   * @return {boolean}\n   *         Whether or not the loader has enough info to load the next segment\n   */\n\n  hasEnoughInfoToLoad_() {\n    // Since primary timing goes by video, only the audio loader potentially needs to wait\n    // to load.\n    if (this.loaderType_ !== 'audio') {\n      return true;\n    }\n    const segmentInfo = this.pendingSegment_; // A fill buffer must have already run to establish a pending segment before there's\n    // enough info to load.\n\n    if (!segmentInfo) {\n      return false;\n    } // The first segment can and should be loaded immediately so that source buffers are\n    // created together (before appending). Source buffer creation uses the presence of\n    // audio and video data to determine whether to create audio/video source buffers, and\n    // uses processed (transmuxed or parsed) media to determine the types required.\n\n    if (!this.getCurrentMediaInfo_()) {\n      return true;\n    }\n    if (\n    // Technically, instead of waiting to load a segment on timeline changes, a segment\n    // can be requested and downloaded and only wait before it is transmuxed or parsed.\n    // But in practice, there are a few reasons why it is better to wait until a loader\n    // is ready to append that segment before requesting and downloading:\n    //\n    // 1. Because audio and main loaders cross discontinuities together, if this loader\n    //    is waiting for the other to catch up, then instead of requesting another\n    //    segment and using up more bandwidth, by not yet loading, more bandwidth is\n    //    allotted to the loader currently behind.\n    // 2. media-segment-request doesn't have to have logic to consider whether a segment\n    // is ready to be processed or not, isolating the queueing behavior to the loader.\n    // 3. The audio loader bases some of its segment properties on timing information\n    //    provided by the main loader, meaning that, if the logic for waiting on\n    //    processing was in media-segment-request, then it would also need to know how\n    //    to re-generate the segment information after the main loader caught up.\n    shouldWaitForTimelineChange({\n      timelineChangeController: this.timelineChangeController_,\n      currentTimeline: this.currentTimeline_,\n      segmentTimeline: segmentInfo.timeline,\n      loaderType: this.loaderType_,\n      audioDisabled: this.audioDisabled_\n    })) {\n      return false;\n    }\n    return true;\n  }\n  getCurrentMediaInfo_(segmentInfo = this.pendingSegment_) {\n    return segmentInfo && segmentInfo.trackInfo || this.currentMediaInfo_;\n  }\n  getMediaInfo_(segmentInfo = this.pendingSegment_) {\n    return this.getCurrentMediaInfo_(segmentInfo) || this.startingMediaInfo_;\n  }\n  getPendingSegmentPlaylist() {\n    return this.pendingSegment_ ? this.pendingSegment_.playlist : null;\n  }\n  hasEnoughInfoToAppend_() {\n    if (!this.sourceUpdater_.ready()) {\n      return false;\n    } // If content needs to be removed or the loader is waiting on an append reattempt,\n    // then no additional content should be appended until the prior append is resolved.\n\n    if (this.waitingOnRemove_ || this.quotaExceededErrorRetryTimeout_) {\n      return false;\n    }\n    const segmentInfo = this.pendingSegment_;\n    const trackInfo = this.getCurrentMediaInfo_(); // no segment to append any data for or\n    // we do not have information on this specific\n    // segment yet\n\n    if (!segmentInfo || !trackInfo) {\n      return false;\n    }\n    const {\n      hasAudio,\n      hasVideo,\n      isMuxed\n    } = trackInfo;\n    if (hasVideo && !segmentInfo.videoTimingInfo) {\n      return false;\n    } // muxed content only relies on video timing information for now.\n\n    if (hasAudio && !this.audioDisabled_ && !isMuxed && !segmentInfo.audioTimingInfo) {\n      return false;\n    }\n    if (shouldWaitForTimelineChange({\n      timelineChangeController: this.timelineChangeController_,\n      currentTimeline: this.currentTimeline_,\n      segmentTimeline: segmentInfo.timeline,\n      loaderType: this.loaderType_,\n      audioDisabled: this.audioDisabled_\n    })) {\n      return false;\n    }\n    return true;\n  }\n  handleData_(simpleSegment, result) {\n    this.earlyAbortWhenNeeded_(simpleSegment.stats);\n    if (this.checkForAbort_(simpleSegment.requestId)) {\n      return;\n    } // If there's anything in the call queue, then this data came later and should be\n    // executed after the calls currently queued.\n\n    if (this.callQueue_.length || !this.hasEnoughInfoToAppend_()) {\n      this.callQueue_.push(this.handleData_.bind(this, simpleSegment, result));\n      return;\n    }\n    const segmentInfo = this.pendingSegment_; // update the time mapping so we can translate from display time to media time\n\n    this.setTimeMapping_(segmentInfo.timeline); // for tracking overall stats\n\n    this.updateMediaSecondsLoaded_(segmentInfo.part || segmentInfo.segment); // Note that the state isn't changed from loading to appending. This is because abort\n    // logic may change behavior depending on the state, and changing state too early may\n    // inflate our estimates of bandwidth. In the future this should be re-examined to\n    // note more granular states.\n    // don't process and append data if the mediaSource is closed\n\n    if (this.mediaSource_.readyState === 'closed') {\n      return;\n    } // if this request included an initialization segment, save that data\n    // to the initSegment cache\n\n    if (simpleSegment.map) {\n      simpleSegment.map = this.initSegmentForMap(simpleSegment.map, true); // move over init segment properties to media request\n\n      segmentInfo.segment.map = simpleSegment.map;\n    } // if this request included a segment key, save that data in the cache\n\n    if (simpleSegment.key) {\n      this.segmentKey(simpleSegment.key, true);\n    }\n    segmentInfo.isFmp4 = simpleSegment.isFmp4;\n    segmentInfo.timingInfo = segmentInfo.timingInfo || {};\n    if (segmentInfo.isFmp4) {\n      this.trigger('fmp4');\n      segmentInfo.timingInfo.start = segmentInfo[timingInfoPropertyForMedia(result.type)].start;\n    } else {\n      const trackInfo = this.getCurrentMediaInfo_();\n      const useVideoTimingInfo = this.loaderType_ === 'main' && trackInfo && trackInfo.hasVideo;\n      let firstVideoFrameTimeForData;\n      if (useVideoTimingInfo) {\n        firstVideoFrameTimeForData = segmentInfo.videoTimingInfo.start;\n      } // Segment loader knows more about segment timing than the transmuxer (in certain\n      // aspects), so make any changes required for a more accurate start time.\n      // Don't set the end time yet, as the segment may not be finished processing.\n\n      segmentInfo.timingInfo.start = this.trueSegmentStart_({\n        currentStart: segmentInfo.timingInfo.start,\n        playlist: segmentInfo.playlist,\n        mediaIndex: segmentInfo.mediaIndex,\n        currentVideoTimestampOffset: this.sourceUpdater_.videoTimestampOffset(),\n        useVideoTimingInfo,\n        firstVideoFrameTimeForData,\n        videoTimingInfo: segmentInfo.videoTimingInfo,\n        audioTimingInfo: segmentInfo.audioTimingInfo\n      });\n    } // Init segments for audio and video only need to be appended in certain cases. Now\n    // that data is about to be appended, we can check the final cases to determine\n    // whether we should append an init segment.\n\n    this.updateAppendInitSegmentStatus(segmentInfo, result.type); // Timestamp offset should be updated once we get new data and have its timing info,\n    // as we use the start of the segment to offset the best guess (playlist provided)\n    // timestamp offset.\n\n    this.updateSourceBufferTimestampOffset_(segmentInfo); // if this is a sync request we need to determine whether it should\n    // be appended or not.\n\n    if (segmentInfo.isSyncRequest) {\n      // first save/update our timing info for this segment.\n      // this is what allows us to choose an accurate segment\n      // and the main reason we make a sync request.\n      this.updateTimingInfoEnd_(segmentInfo);\n      this.syncController_.saveSegmentTimingInfo({\n        segmentInfo,\n        shouldSaveTimelineMapping: this.loaderType_ === 'main'\n      });\n      const next = this.chooseNextRequest_(); // If the sync request isn't the segment that would be requested next\n      // after taking into account its timing info, do not append it.\n\n      if (next.mediaIndex !== segmentInfo.mediaIndex || next.partIndex !== segmentInfo.partIndex) {\n        this.logger_('sync segment was incorrect, not appending');\n        return;\n      } // otherwise append it like any other segment as our guess was correct.\n\n      this.logger_('sync segment was correct, appending');\n    } // Save some state so that in the future anything waiting on first append (and/or\n    // timestamp offset(s)) can process immediately. While the extra state isn't optimal,\n    // we need some notion of whether the timestamp offset or other relevant information\n    // has had a chance to be set.\n\n    segmentInfo.hasAppendedData_ = true; // Now that the timestamp offset should be set, we can append any waiting ID3 tags.\n\n    this.processMetadataQueue_();\n    this.appendData_(segmentInfo, result);\n  }\n  updateAppendInitSegmentStatus(segmentInfo, type) {\n    // alt audio doesn't manage timestamp offset\n    if (this.loaderType_ === 'main' && typeof segmentInfo.timestampOffset === 'number' &&\n    // in the case that we're handling partial data, we don't want to append an init\n    // segment for each chunk\n    !segmentInfo.changedTimestampOffset) {\n      // if the timestamp offset changed, the timeline may have changed, so we have to re-\n      // append init segments\n      this.appendInitSegment_ = {\n        audio: true,\n        video: true\n      };\n    }\n    if (this.playlistOfLastInitSegment_[type] !== segmentInfo.playlist) {\n      // make sure we append init segment on playlist changes, in case the media config\n      // changed\n      this.appendInitSegment_[type] = true;\n    }\n  }\n  getInitSegmentAndUpdateState_({\n    type,\n    initSegment,\n    map,\n    playlist\n  }) {\n    // \"The EXT-X-MAP tag specifies how to obtain the Media Initialization Section\n    // (Section 3) required to parse the applicable Media Segments.  It applies to every\n    // Media Segment that appears after it in the Playlist until the next EXT-X-MAP tag\n    // or until the end of the playlist.\"\n    // https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-4.3.2.5\n    if (map) {\n      const id = initSegmentId(map);\n      if (this.activeInitSegmentId_ === id) {\n        // don't need to re-append the init segment if the ID matches\n        return null;\n      } // a map-specified init segment takes priority over any transmuxed (or otherwise\n      // obtained) init segment\n      //\n      // this also caches the init segment for later use\n\n      initSegment = this.initSegmentForMap(map, true).bytes;\n      this.activeInitSegmentId_ = id;\n    } // We used to always prepend init segments for video, however, that shouldn't be\n    // necessary. Instead, we should only append on changes, similar to what we've always\n    // done for audio. This is more important (though may not be that important) for\n    // frame-by-frame appending for LHLS, simply because of the increased quantity of\n    // appends.\n\n    if (initSegment && this.appendInitSegment_[type]) {\n      // Make sure we track the playlist that we last used for the init segment, so that\n      // we can re-append the init segment in the event that we get data from a new\n      // playlist. Discontinuities and track changes are handled in other sections.\n      this.playlistOfLastInitSegment_[type] = playlist; // Disable future init segment appends for this type. Until a change is necessary.\n\n      this.appendInitSegment_[type] = false; // we need to clear out the fmp4 active init segment id, since\n      // we are appending the muxer init segment\n\n      this.activeInitSegmentId_ = null;\n      return initSegment;\n    }\n    return null;\n  }\n  handleQuotaExceededError_({\n    segmentInfo,\n    type,\n    bytes\n  }, error) {\n    const audioBuffered = this.sourceUpdater_.audioBuffered();\n    const videoBuffered = this.sourceUpdater_.videoBuffered(); // For now we're ignoring any notion of gaps in the buffer, but they, in theory,\n    // should be cleared out during the buffer removals. However, log in case it helps\n    // debug.\n\n    if (audioBuffered.length > 1) {\n      this.logger_('On QUOTA_EXCEEDED_ERR, found gaps in the audio buffer: ' + timeRangesToArray(audioBuffered).join(', '));\n    }\n    if (videoBuffered.length > 1) {\n      this.logger_('On QUOTA_EXCEEDED_ERR, found gaps in the video buffer: ' + timeRangesToArray(videoBuffered).join(', '));\n    }\n    const audioBufferStart = audioBuffered.length ? audioBuffered.start(0) : 0;\n    const audioBufferEnd = audioBuffered.length ? audioBuffered.end(audioBuffered.length - 1) : 0;\n    const videoBufferStart = videoBuffered.length ? videoBuffered.start(0) : 0;\n    const videoBufferEnd = videoBuffered.length ? videoBuffered.end(videoBuffered.length - 1) : 0;\n    if (audioBufferEnd - audioBufferStart <= MIN_BACK_BUFFER && videoBufferEnd - videoBufferStart <= MIN_BACK_BUFFER) {\n      // Can't remove enough buffer to make room for new segment (or the browser doesn't\n      // allow for appends of segments this size). In the future, it may be possible to\n      // split up the segment and append in pieces, but for now, error out this playlist\n      // in an attempt to switch to a more manageable rendition.\n      this.logger_('On QUOTA_EXCEEDED_ERR, single segment too large to append to ' + 'buffer, triggering an error. ' + `Appended byte length: ${bytes.byteLength}, ` + `audio buffer: ${timeRangesToArray(audioBuffered).join(', ')}, ` + `video buffer: ${timeRangesToArray(videoBuffered).join(', ')}, `);\n      this.error({\n        message: 'Quota exceeded error with append of a single segment of content',\n        excludeUntil: Infinity\n      });\n      this.trigger('error');\n      return;\n    } // To try to resolve the quota exceeded error, clear back buffer and retry. This means\n    // that the segment-loader should block on future events until this one is handled, so\n    // that it doesn't keep moving onto further segments. Adding the call to the call\n    // queue will prevent further appends until waitingOnRemove_ and\n    // quotaExceededErrorRetryTimeout_ are cleared.\n    //\n    // Note that this will only block the current loader. In the case of demuxed content,\n    // the other load may keep filling as fast as possible. In practice, this should be\n    // OK, as it is a rare case when either audio has a high enough bitrate to fill up a\n    // source buffer, or video fills without enough room for audio to append (and without\n    // the availability of clearing out seconds of back buffer to make room for audio).\n    // But it might still be good to handle this case in the future as a TODO.\n\n    this.waitingOnRemove_ = true;\n    this.callQueue_.push(this.appendToSourceBuffer_.bind(this, {\n      segmentInfo,\n      type,\n      bytes\n    }));\n    const currentTime = this.currentTime_(); // Try to remove as much audio and video as possible to make room for new content\n    // before retrying.\n\n    const timeToRemoveUntil = currentTime - MIN_BACK_BUFFER;\n    this.logger_(`On QUOTA_EXCEEDED_ERR, removing audio/video from 0 to ${timeToRemoveUntil}`);\n    this.remove(0, timeToRemoveUntil, () => {\n      this.logger_(`On QUOTA_EXCEEDED_ERR, retrying append in ${MIN_BACK_BUFFER}s`);\n      this.waitingOnRemove_ = false; // wait the length of time alotted in the back buffer to prevent wasted\n      // attempts (since we can't clear less than the minimum)\n\n      this.quotaExceededErrorRetryTimeout_ = window$1.setTimeout(() => {\n        this.logger_('On QUOTA_EXCEEDED_ERR, re-processing call queue');\n        this.quotaExceededErrorRetryTimeout_ = null;\n        this.processCallQueue_();\n      }, MIN_BACK_BUFFER * 1000);\n    }, true);\n  }\n  handleAppendError_({\n    segmentInfo,\n    type,\n    bytes\n  }, error) {\n    // if there's no error, nothing to do\n    if (!error) {\n      return;\n    }\n    if (error.code === QUOTA_EXCEEDED_ERR) {\n      this.handleQuotaExceededError_({\n        segmentInfo,\n        type,\n        bytes\n      }); // A quota exceeded error should be recoverable with a future re-append, so no need\n      // to trigger an append error.\n\n      return;\n    }\n    this.logger_('Received non QUOTA_EXCEEDED_ERR on append', error);\n    this.error(`${type} append of ${bytes.length}b failed for segment ` + `#${segmentInfo.mediaIndex} in playlist ${segmentInfo.playlist.id}`); // If an append errors, we often can't recover.\n    // (see https://w3c.github.io/media-source/#sourcebuffer-append-error).\n    //\n    // Trigger a special error so that it can be handled separately from normal,\n    // recoverable errors.\n\n    this.trigger('appenderror');\n  }\n  appendToSourceBuffer_({\n    segmentInfo,\n    type,\n    initSegment,\n    data,\n    bytes\n  }) {\n    // If this is a re-append, bytes were already created and don't need to be recreated\n    if (!bytes) {\n      const segments = [data];\n      let byteLength = data.byteLength;\n      if (initSegment) {\n        // if the media initialization segment is changing, append it before the content\n        // segment\n        segments.unshift(initSegment);\n        byteLength += initSegment.byteLength;\n      } // Technically we should be OK appending the init segment separately, however, we\n      // haven't yet tested that, and prepending is how we have always done things.\n\n      bytes = concatSegments({\n        bytes: byteLength,\n        segments\n      });\n    }\n    this.sourceUpdater_.appendBuffer({\n      segmentInfo,\n      type,\n      bytes\n    }, this.handleAppendError_.bind(this, {\n      segmentInfo,\n      type,\n      bytes\n    }));\n  }\n  handleSegmentTimingInfo_(type, requestId, segmentTimingInfo) {\n    if (!this.pendingSegment_ || requestId !== this.pendingSegment_.requestId) {\n      return;\n    }\n    const segment = this.pendingSegment_.segment;\n    const timingInfoProperty = `${type}TimingInfo`;\n    if (!segment[timingInfoProperty]) {\n      segment[timingInfoProperty] = {};\n    }\n    segment[timingInfoProperty].transmuxerPrependedSeconds = segmentTimingInfo.prependedContentDuration || 0;\n    segment[timingInfoProperty].transmuxedPresentationStart = segmentTimingInfo.start.presentation;\n    segment[timingInfoProperty].transmuxedDecodeStart = segmentTimingInfo.start.decode;\n    segment[timingInfoProperty].transmuxedPresentationEnd = segmentTimingInfo.end.presentation;\n    segment[timingInfoProperty].transmuxedDecodeEnd = segmentTimingInfo.end.decode; // mainly used as a reference for debugging\n\n    segment[timingInfoProperty].baseMediaDecodeTime = segmentTimingInfo.baseMediaDecodeTime;\n  }\n  appendData_(segmentInfo, result) {\n    const {\n      type,\n      data\n    } = result;\n    if (!data || !data.byteLength) {\n      return;\n    }\n    if (type === 'audio' && this.audioDisabled_) {\n      return;\n    }\n    const initSegment = this.getInitSegmentAndUpdateState_({\n      type,\n      initSegment: result.initSegment,\n      playlist: segmentInfo.playlist,\n      map: segmentInfo.isFmp4 ? segmentInfo.segment.map : null\n    });\n    this.appendToSourceBuffer_({\n      segmentInfo,\n      type,\n      initSegment,\n      data\n    });\n  }\n  /**\n   * load a specific segment from a request into the buffer\n   *\n   * @private\n   */\n\n  loadSegment_(segmentInfo) {\n    this.state = 'WAITING';\n    this.pendingSegment_ = segmentInfo;\n    this.trimBackBuffer_(segmentInfo);\n    if (typeof segmentInfo.timestampOffset === 'number') {\n      if (this.transmuxer_) {\n        this.transmuxer_.postMessage({\n          action: 'clearAllMp4Captions'\n        });\n      }\n    }\n    if (!this.hasEnoughInfoToLoad_()) {\n      this.loadQueue_.push(() => {\n        // regenerate the audioAppendStart, timestampOffset, etc as they\n        // may have changed since this function was added to the queue.\n        const options = _extends({}, segmentInfo, {\n          forceTimestampOffset: true\n        });\n        _extends(segmentInfo, this.generateSegmentInfo_(options));\n        this.isPendingTimestampOffset_ = false;\n        this.updateTransmuxerAndRequestSegment_(segmentInfo);\n      });\n      return;\n    }\n    this.updateTransmuxerAndRequestSegment_(segmentInfo);\n  }\n  updateTransmuxerAndRequestSegment_(segmentInfo) {\n    // We'll update the source buffer's timestamp offset once we have transmuxed data, but\n    // the transmuxer still needs to be updated before then.\n    //\n    // Even though keepOriginalTimestamps is set to true for the transmuxer, timestamp\n    // offset must be passed to the transmuxer for stream correcting adjustments.\n    if (this.shouldUpdateTransmuxerTimestampOffset_(segmentInfo.timestampOffset)) {\n      this.gopBuffer_.length = 0; // gopsToAlignWith was set before the GOP buffer was cleared\n\n      segmentInfo.gopsToAlignWith = [];\n      this.timeMapping_ = 0; // reset values in the transmuxer since a discontinuity should start fresh\n\n      this.transmuxer_.postMessage({\n        action: 'reset'\n      });\n      this.transmuxer_.postMessage({\n        action: 'setTimestampOffset',\n        timestampOffset: segmentInfo.timestampOffset\n      });\n    }\n    const simpleSegment = this.createSimplifiedSegmentObj_(segmentInfo);\n    const isEndOfStream = this.isEndOfStream_(segmentInfo.mediaIndex, segmentInfo.playlist, segmentInfo.partIndex);\n    const isWalkingForward = this.mediaIndex !== null;\n    const isDiscontinuity = segmentInfo.timeline !== this.currentTimeline_ &&\n    // currentTimeline starts at -1, so we shouldn't end the timeline switching to 0,\n    // the first timeline\n    segmentInfo.timeline > 0;\n    const isEndOfTimeline = isEndOfStream || isWalkingForward && isDiscontinuity;\n    this.logger_(`Requesting ${segmentInfoString(segmentInfo)}`); // If there's an init segment associated with this segment, but it is not cached (identified by a lack of bytes),\n    // then this init segment has never been seen before and should be appended.\n    //\n    // At this point the content type (audio/video or both) is not yet known, but it should be safe to set\n    // both to true and leave the decision of whether to append the init segment to append time.\n\n    if (simpleSegment.map && !simpleSegment.map.bytes) {\n      this.logger_('going to request init segment.');\n      this.appendInitSegment_ = {\n        video: true,\n        audio: true\n      };\n    }\n    segmentInfo.abortRequests = mediaSegmentRequest({\n      xhr: this.vhs_.xhr,\n      xhrOptions: this.xhrOptions_,\n      decryptionWorker: this.decrypter_,\n      segment: simpleSegment,\n      abortFn: this.handleAbort_.bind(this, segmentInfo),\n      progressFn: this.handleProgress_.bind(this),\n      trackInfoFn: this.handleTrackInfo_.bind(this),\n      timingInfoFn: this.handleTimingInfo_.bind(this),\n      videoSegmentTimingInfoFn: this.handleSegmentTimingInfo_.bind(this, 'video', segmentInfo.requestId),\n      audioSegmentTimingInfoFn: this.handleSegmentTimingInfo_.bind(this, 'audio', segmentInfo.requestId),\n      captionsFn: this.handleCaptions_.bind(this),\n      isEndOfTimeline,\n      endedTimelineFn: () => {\n        this.logger_('received endedtimeline callback');\n      },\n      id3Fn: this.handleId3_.bind(this),\n      dataFn: this.handleData_.bind(this),\n      doneFn: this.segmentRequestFinished_.bind(this),\n      onTransmuxerLog: ({\n        message,\n        level,\n        stream\n      }) => {\n        this.logger_(`${segmentInfoString(segmentInfo)} logged from transmuxer stream ${stream} as a ${level}: ${message}`);\n      }\n    });\n  }\n  /**\n   * trim the back buffer so that we don't have too much data\n   * in the source buffer\n   *\n   * @private\n   *\n   * @param {Object} segmentInfo - the current segment\n   */\n\n  trimBackBuffer_(segmentInfo) {\n    const removeToTime = safeBackBufferTrimTime(this.seekable_(), this.currentTime_(), this.playlist_.targetDuration || 10); // Chrome has a hard limit of 150MB of\n    // buffer and a very conservative \"garbage collector\"\n    // We manually clear out the old buffer to ensure\n    // we don't trigger the QuotaExceeded error\n    // on the source buffer during subsequent appends\n\n    if (removeToTime > 0) {\n      this.remove(0, removeToTime);\n    }\n  }\n  /**\n   * created a simplified copy of the segment object with just the\n   * information necessary to perform the XHR and decryption\n   *\n   * @private\n   *\n   * @param {Object} segmentInfo - the current segment\n   * @return {Object} a simplified segment object copy\n   */\n\n  createSimplifiedSegmentObj_(segmentInfo) {\n    const segment = segmentInfo.segment;\n    const part = segmentInfo.part;\n    const simpleSegment = {\n      resolvedUri: part ? part.resolvedUri : segment.resolvedUri,\n      byterange: part ? part.byterange : segment.byterange,\n      requestId: segmentInfo.requestId,\n      transmuxer: segmentInfo.transmuxer,\n      audioAppendStart: segmentInfo.audioAppendStart,\n      gopsToAlignWith: segmentInfo.gopsToAlignWith,\n      part: segmentInfo.part\n    };\n    const previousSegment = segmentInfo.playlist.segments[segmentInfo.mediaIndex - 1];\n    if (previousSegment && previousSegment.timeline === segment.timeline) {\n      // The baseStartTime of a segment is used to handle rollover when probing the TS\n      // segment to retrieve timing information. Since the probe only looks at the media's\n      // times (e.g., PTS and DTS values of the segment), and doesn't consider the\n      // player's time (e.g., player.currentTime()), baseStartTime should reflect the\n      // media time as well. transmuxedDecodeEnd represents the end time of a segment, in\n      // seconds of media time, so should be used here. The previous segment is used since\n      // the end of the previous segment should represent the beginning of the current\n      // segment, so long as they are on the same timeline.\n      if (previousSegment.videoTimingInfo) {\n        simpleSegment.baseStartTime = previousSegment.videoTimingInfo.transmuxedDecodeEnd;\n      } else if (previousSegment.audioTimingInfo) {\n        simpleSegment.baseStartTime = previousSegment.audioTimingInfo.transmuxedDecodeEnd;\n      }\n    }\n    if (segment.key) {\n      // if the media sequence is greater than 2^32, the IV will be incorrect\n      // assuming 10s segments, that would be about 1300 years\n      const iv = segment.key.iv || new Uint32Array([0, 0, 0, segmentInfo.mediaIndex + segmentInfo.playlist.mediaSequence]);\n      simpleSegment.key = this.segmentKey(segment.key);\n      simpleSegment.key.iv = iv;\n    }\n    if (segment.map) {\n      simpleSegment.map = this.initSegmentForMap(segment.map);\n    }\n    return simpleSegment;\n  }\n  saveTransferStats_(stats) {\n    // every request counts as a media request even if it has been aborted\n    // or canceled due to a timeout\n    this.mediaRequests += 1;\n    if (stats) {\n      this.mediaBytesTransferred += stats.bytesReceived;\n      this.mediaTransferDuration += stats.roundTripTime;\n    }\n  }\n  saveBandwidthRelatedStats_(duration, stats) {\n    // byteLength will be used for throughput, and should be based on bytes receieved,\n    // which we only know at the end of the request and should reflect total bytes\n    // downloaded rather than just bytes processed from components of the segment\n    this.pendingSegment_.byteLength = stats.bytesReceived;\n    if (duration < MIN_SEGMENT_DURATION_TO_SAVE_STATS) {\n      this.logger_(`Ignoring segment's bandwidth because its duration of ${duration}` + ` is less than the min to record ${MIN_SEGMENT_DURATION_TO_SAVE_STATS}`);\n      return;\n    }\n    this.bandwidth = stats.bandwidth;\n    this.roundTrip = stats.roundTripTime;\n  }\n  handleTimeout_() {\n    // although the VTT segment loader bandwidth isn't really used, it's good to\n    // maintain functinality between segment loaders\n    this.mediaRequestsTimedout += 1;\n    this.bandwidth = 1;\n    this.roundTrip = NaN;\n    this.trigger('bandwidthupdate');\n    this.trigger('timeout');\n  }\n  /**\n   * Handle the callback from the segmentRequest function and set the\n   * associated SegmentLoader state and errors if necessary\n   *\n   * @private\n   */\n\n  segmentRequestFinished_(error, simpleSegment, result) {\n    // TODO handle special cases, e.g., muxed audio/video but only audio in the segment\n    // check the call queue directly since this function doesn't need to deal with any\n    // data, and can continue even if the source buffers are not set up and we didn't get\n    // any data from the segment\n    if (this.callQueue_.length) {\n      this.callQueue_.push(this.segmentRequestFinished_.bind(this, error, simpleSegment, result));\n      return;\n    }\n    this.saveTransferStats_(simpleSegment.stats); // The request was aborted and the SegmentLoader has already been reset\n\n    if (!this.pendingSegment_) {\n      return;\n    } // the request was aborted and the SegmentLoader has already started\n    // another request. this can happen when the timeout for an aborted\n    // request triggers due to a limitation in the XHR library\n    // do not count this as any sort of request or we risk double-counting\n\n    if (simpleSegment.requestId !== this.pendingSegment_.requestId) {\n      return;\n    } // an error occurred from the active pendingSegment_ so reset everything\n\n    if (error) {\n      this.pendingSegment_ = null;\n      this.state = 'READY'; // aborts are not a true error condition and nothing corrective needs to be done\n\n      if (error.code === REQUEST_ERRORS.ABORTED) {\n        return;\n      }\n      this.pause(); // the error is really just that at least one of the requests timed-out\n      // set the bandwidth to a very low value and trigger an ABR switch to\n      // take emergency action\n\n      if (error.code === REQUEST_ERRORS.TIMEOUT) {\n        this.handleTimeout_();\n        return;\n      } // if control-flow has arrived here, then the error is real\n      // emit an error event to exclude the current playlist\n\n      this.mediaRequestsErrored += 1;\n      this.error(error);\n      this.trigger('error');\n      return;\n    }\n    const segmentInfo = this.pendingSegment_; // the response was a success so set any bandwidth stats the request\n    // generated for ABR purposes\n\n    this.saveBandwidthRelatedStats_(segmentInfo.duration, simpleSegment.stats);\n    segmentInfo.endOfAllRequests = simpleSegment.endOfAllRequests;\n    if (result.gopInfo) {\n      this.gopBuffer_ = updateGopBuffer(this.gopBuffer_, result.gopInfo, this.safeAppend_);\n    } // Although we may have already started appending on progress, we shouldn't switch the\n    // state away from loading until we are officially done loading the segment data.\n\n    this.state = 'APPENDING'; // used for testing\n\n    this.trigger('appending');\n    this.waitForAppendsToComplete_(segmentInfo);\n  }\n  setTimeMapping_(timeline) {\n    const timelineMapping = this.syncController_.mappingForTimeline(timeline);\n    if (timelineMapping !== null) {\n      this.timeMapping_ = timelineMapping;\n    }\n  }\n  updateMediaSecondsLoaded_(segment) {\n    if (typeof segment.start === 'number' && typeof segment.end === 'number') {\n      this.mediaSecondsLoaded += segment.end - segment.start;\n    } else {\n      this.mediaSecondsLoaded += segment.duration;\n    }\n  }\n  shouldUpdateTransmuxerTimestampOffset_(timestampOffset) {\n    if (timestampOffset === null) {\n      return false;\n    } // note that we're potentially using the same timestamp offset for both video and\n    // audio\n\n    if (this.loaderType_ === 'main' && timestampOffset !== this.sourceUpdater_.videoTimestampOffset()) {\n      return true;\n    }\n    if (!this.audioDisabled_ && timestampOffset !== this.sourceUpdater_.audioTimestampOffset()) {\n      return true;\n    }\n    return false;\n  }\n  trueSegmentStart_({\n    currentStart,\n    playlist,\n    mediaIndex,\n    firstVideoFrameTimeForData,\n    currentVideoTimestampOffset,\n    useVideoTimingInfo,\n    videoTimingInfo,\n    audioTimingInfo\n  }) {\n    if (typeof currentStart !== 'undefined') {\n      // if start was set once, keep using it\n      return currentStart;\n    }\n    if (!useVideoTimingInfo) {\n      return audioTimingInfo.start;\n    }\n    const previousSegment = playlist.segments[mediaIndex - 1]; // The start of a segment should be the start of the first full frame contained\n    // within that segment. Since the transmuxer maintains a cache of incomplete data\n    // from and/or the last frame seen, the start time may reflect a frame that starts\n    // in the previous segment. Check for that case and ensure the start time is\n    // accurate for the segment.\n\n    if (mediaIndex === 0 || !previousSegment || typeof previousSegment.start === 'undefined' || previousSegment.end !== firstVideoFrameTimeForData + currentVideoTimestampOffset) {\n      return firstVideoFrameTimeForData;\n    }\n    return videoTimingInfo.start;\n  }\n  waitForAppendsToComplete_(segmentInfo) {\n    const trackInfo = this.getCurrentMediaInfo_(segmentInfo);\n    if (!trackInfo) {\n      this.error({\n        message: 'No starting media returned, likely due to an unsupported media format.',\n        playlistExclusionDuration: Infinity\n      });\n      this.trigger('error');\n      return;\n    } // Although transmuxing is done, appends may not yet be finished. Throw a marker\n    // on each queue this loader is responsible for to ensure that the appends are\n    // complete.\n\n    const {\n      hasAudio,\n      hasVideo,\n      isMuxed\n    } = trackInfo;\n    const waitForVideo = this.loaderType_ === 'main' && hasVideo;\n    const waitForAudio = !this.audioDisabled_ && hasAudio && !isMuxed;\n    segmentInfo.waitingOnAppends = 0; // segments with no data\n\n    if (!segmentInfo.hasAppendedData_) {\n      if (!segmentInfo.timingInfo && typeof segmentInfo.timestampOffset === 'number') {\n        // When there's no audio or video data in the segment, there's no audio or video\n        // timing information.\n        //\n        // If there's no audio or video timing information, then the timestamp offset\n        // can't be adjusted to the appropriate value for the transmuxer and source\n        // buffers.\n        //\n        // Therefore, the next segment should be used to set the timestamp offset.\n        this.isPendingTimestampOffset_ = true;\n      } // override settings for metadata only segments\n\n      segmentInfo.timingInfo = {\n        start: 0\n      };\n      segmentInfo.waitingOnAppends++;\n      if (!this.isPendingTimestampOffset_) {\n        // update the timestampoffset\n        this.updateSourceBufferTimestampOffset_(segmentInfo); // make sure the metadata queue is processed even though we have\n        // no video/audio data.\n\n        this.processMetadataQueue_();\n      } // append is \"done\" instantly with no data.\n\n      this.checkAppendsDone_(segmentInfo);\n      return;\n    } // Since source updater could call back synchronously, do the increments first.\n\n    if (waitForVideo) {\n      segmentInfo.waitingOnAppends++;\n    }\n    if (waitForAudio) {\n      segmentInfo.waitingOnAppends++;\n    }\n    if (waitForVideo) {\n      this.sourceUpdater_.videoQueueCallback(this.checkAppendsDone_.bind(this, segmentInfo));\n    }\n    if (waitForAudio) {\n      this.sourceUpdater_.audioQueueCallback(this.checkAppendsDone_.bind(this, segmentInfo));\n    }\n  }\n  checkAppendsDone_(segmentInfo) {\n    if (this.checkForAbort_(segmentInfo.requestId)) {\n      return;\n    }\n    segmentInfo.waitingOnAppends--;\n    if (segmentInfo.waitingOnAppends === 0) {\n      this.handleAppendsDone_();\n    }\n  }\n  checkForIllegalMediaSwitch(trackInfo) {\n    const illegalMediaSwitchError = illegalMediaSwitch(this.loaderType_, this.getCurrentMediaInfo_(), trackInfo);\n    if (illegalMediaSwitchError) {\n      this.error({\n        message: illegalMediaSwitchError,\n        playlistExclusionDuration: Infinity\n      });\n      this.trigger('error');\n      return true;\n    }\n    return false;\n  }\n  updateSourceBufferTimestampOffset_(segmentInfo) {\n    if (segmentInfo.timestampOffset === null ||\n    // we don't yet have the start for whatever media type (video or audio) has\n    // priority, timing-wise, so we must wait\n    typeof segmentInfo.timingInfo.start !== 'number' ||\n    // already updated the timestamp offset for this segment\n    segmentInfo.changedTimestampOffset ||\n    // the alt audio loader should not be responsible for setting the timestamp offset\n    this.loaderType_ !== 'main') {\n      return;\n    }\n    let didChange = false; // Primary timing goes by video, and audio is trimmed in the transmuxer, meaning that\n    // the timing info here comes from video. In the event that the audio is longer than\n    // the video, this will trim the start of the audio.\n    // This also trims any offset from 0 at the beginning of the media\n\n    segmentInfo.timestampOffset -= this.getSegmentStartTimeForTimestampOffsetCalculation_({\n      videoTimingInfo: segmentInfo.segment.videoTimingInfo,\n      audioTimingInfo: segmentInfo.segment.audioTimingInfo,\n      timingInfo: segmentInfo.timingInfo\n    }); // In the event that there are part segment downloads, each will try to update the\n    // timestamp offset. Retaining this bit of state prevents us from updating in the\n    // future (within the same segment), however, there may be a better way to handle it.\n\n    segmentInfo.changedTimestampOffset = true;\n    if (segmentInfo.timestampOffset !== this.sourceUpdater_.videoTimestampOffset()) {\n      this.sourceUpdater_.videoTimestampOffset(segmentInfo.timestampOffset);\n      didChange = true;\n    }\n    if (segmentInfo.timestampOffset !== this.sourceUpdater_.audioTimestampOffset()) {\n      this.sourceUpdater_.audioTimestampOffset(segmentInfo.timestampOffset);\n      didChange = true;\n    }\n    if (didChange) {\n      this.trigger('timestampoffset');\n    }\n  }\n  getSegmentStartTimeForTimestampOffsetCalculation_({\n    videoTimingInfo,\n    audioTimingInfo,\n    timingInfo\n  }) {\n    if (!this.useDtsForTimestampOffset_) {\n      return timingInfo.start;\n    }\n    if (videoTimingInfo && typeof videoTimingInfo.transmuxedDecodeStart === 'number') {\n      return videoTimingInfo.transmuxedDecodeStart;\n    } // handle audio only\n\n    if (audioTimingInfo && typeof audioTimingInfo.transmuxedDecodeStart === 'number') {\n      return audioTimingInfo.transmuxedDecodeStart;\n    } // handle content not transmuxed (e.g., MP4)\n\n    return timingInfo.start;\n  }\n  updateTimingInfoEnd_(segmentInfo) {\n    segmentInfo.timingInfo = segmentInfo.timingInfo || {};\n    const trackInfo = this.getMediaInfo_();\n    const useVideoTimingInfo = this.loaderType_ === 'main' && trackInfo && trackInfo.hasVideo;\n    const prioritizedTimingInfo = useVideoTimingInfo && segmentInfo.videoTimingInfo ? segmentInfo.videoTimingInfo : segmentInfo.audioTimingInfo;\n    if (!prioritizedTimingInfo) {\n      return;\n    }\n    segmentInfo.timingInfo.end = typeof prioritizedTimingInfo.end === 'number' ?\n    // End time may not exist in a case where we aren't parsing the full segment (one\n    // current example is the case of fmp4), so use the rough duration to calculate an\n    // end time.\n    prioritizedTimingInfo.end : prioritizedTimingInfo.start + segmentInfo.duration;\n  }\n  /**\n   * callback to run when appendBuffer is finished. detects if we are\n   * in a good state to do things with the data we got, or if we need\n   * to wait for more\n   *\n   * @private\n   */\n\n  handleAppendsDone_() {\n    // appendsdone can cause an abort\n    if (this.pendingSegment_) {\n      this.trigger('appendsdone');\n    }\n    if (!this.pendingSegment_) {\n      this.state = 'READY'; // TODO should this move into this.checkForAbort to speed up requests post abort in\n      // all appending cases?\n\n      if (!this.paused()) {\n        this.monitorBuffer_();\n      }\n      return;\n    }\n    const segmentInfo = this.pendingSegment_; // Now that the end of the segment has been reached, we can set the end time. It's\n    // best to wait until all appends are done so we're sure that the primary media is\n    // finished (and we have its end time).\n\n    this.updateTimingInfoEnd_(segmentInfo);\n    if (this.shouldSaveSegmentTimingInfo_) {\n      // Timeline mappings should only be saved for the main loader. This is for multiple\n      // reasons:\n      //\n      // 1) Only one mapping is saved per timeline, meaning that if both the audio loader\n      //    and the main loader try to save the timeline mapping, whichever comes later\n      //    will overwrite the first. In theory this is OK, as the mappings should be the\n      //    same, however, it breaks for (2)\n      // 2) In the event of a live stream, the initial live point will make for a somewhat\n      //    arbitrary mapping. If audio and video streams are not perfectly in-sync, then\n      //    the mapping will be off for one of the streams, dependent on which one was\n      //    first saved (see (1)).\n      // 3) Primary timing goes by video in VHS, so the mapping should be video.\n      //\n      // Since the audio loader will wait for the main loader to load the first segment,\n      // the main loader will save the first timeline mapping, and ensure that there won't\n      // be a case where audio loads two segments without saving a mapping (thus leading\n      // to missing segment timing info).\n      this.syncController_.saveSegmentTimingInfo({\n        segmentInfo,\n        shouldSaveTimelineMapping: this.loaderType_ === 'main'\n      });\n    }\n    const segmentDurationMessage = getTroublesomeSegmentDurationMessage(segmentInfo, this.sourceType_);\n    if (segmentDurationMessage) {\n      if (segmentDurationMessage.severity === 'warn') {\n        videojs.log.warn(segmentDurationMessage.message);\n      } else {\n        this.logger_(segmentDurationMessage.message);\n      }\n    }\n    this.recordThroughput_(segmentInfo);\n    this.pendingSegment_ = null;\n    this.state = 'READY';\n    if (segmentInfo.isSyncRequest) {\n      this.trigger('syncinfoupdate'); // if the sync request was not appended\n      // then it was not the correct segment.\n      // throw it away and use the data it gave us\n      // to get the correct one.\n\n      if (!segmentInfo.hasAppendedData_) {\n        this.logger_(`Throwing away un-appended sync request ${segmentInfoString(segmentInfo)}`);\n        return;\n      }\n    }\n    this.logger_(`Appended ${segmentInfoString(segmentInfo)}`);\n    this.addSegmentMetadataCue_(segmentInfo);\n    this.fetchAtBuffer_ = true;\n    if (this.currentTimeline_ !== segmentInfo.timeline) {\n      this.timelineChangeController_.lastTimelineChange({\n        type: this.loaderType_,\n        from: this.currentTimeline_,\n        to: segmentInfo.timeline\n      }); // If audio is not disabled, the main segment loader is responsible for updating\n      // the audio timeline as well. If the content is video only, this won't have any\n      // impact.\n\n      if (this.loaderType_ === 'main' && !this.audioDisabled_) {\n        this.timelineChangeController_.lastTimelineChange({\n          type: 'audio',\n          from: this.currentTimeline_,\n          to: segmentInfo.timeline\n        });\n      }\n    }\n    this.currentTimeline_ = segmentInfo.timeline; // We must update the syncinfo to recalculate the seekable range before\n    // the following conditional otherwise it may consider this a bad \"guess\"\n    // and attempt to resync when the post-update seekable window and live\n    // point would mean that this was the perfect segment to fetch\n\n    this.trigger('syncinfoupdate');\n    const segment = segmentInfo.segment;\n    const part = segmentInfo.part;\n    const badSegmentGuess = segment.end && this.currentTime_() - segment.end > segmentInfo.playlist.targetDuration * 3;\n    const badPartGuess = part && part.end && this.currentTime_() - part.end > segmentInfo.playlist.partTargetDuration * 3; // If we previously appended a segment/part that ends more than 3 part/targetDurations before\n    // the currentTime_ that means that our conservative guess was too conservative.\n    // In that case, reset the loader state so that we try to use any information gained\n    // from the previous request to create a new, more accurate, sync-point.\n\n    if (badSegmentGuess || badPartGuess) {\n      this.logger_(`bad ${badSegmentGuess ? 'segment' : 'part'} ${segmentInfoString(segmentInfo)}`);\n      this.resetEverything();\n      return;\n    }\n    const isWalkingForward = this.mediaIndex !== null; // Don't do a rendition switch unless we have enough time to get a sync segment\n    // and conservatively guess\n\n    if (isWalkingForward) {\n      this.trigger('bandwidthupdate');\n    }\n    this.trigger('progress');\n    this.mediaIndex = segmentInfo.mediaIndex;\n    this.partIndex = segmentInfo.partIndex; // any time an update finishes and the last segment is in the\n    // buffer, end the stream. this ensures the \"ended\" event will\n    // fire if playback reaches that point.\n\n    if (this.isEndOfStream_(segmentInfo.mediaIndex, segmentInfo.playlist, segmentInfo.partIndex)) {\n      this.endOfStream();\n    } // used for testing\n\n    this.trigger('appended');\n    if (segmentInfo.hasAppendedData_) {\n      this.mediaAppends++;\n    }\n    if (!this.paused()) {\n      this.monitorBuffer_();\n    }\n  }\n  /**\n   * Records the current throughput of the decrypt, transmux, and append\n   * portion of the semgment pipeline. `throughput.rate` is a the cumulative\n   * moving average of the throughput. `throughput.count` is the number of\n   * data points in the average.\n   *\n   * @private\n   * @param {Object} segmentInfo the object returned by loadSegment\n   */\n\n  recordThroughput_(segmentInfo) {\n    if (segmentInfo.duration < MIN_SEGMENT_DURATION_TO_SAVE_STATS) {\n      this.logger_(`Ignoring segment's throughput because its duration of ${segmentInfo.duration}` + ` is less than the min to record ${MIN_SEGMENT_DURATION_TO_SAVE_STATS}`);\n      return;\n    }\n    const rate = this.throughput.rate; // Add one to the time to ensure that we don't accidentally attempt to divide\n    // by zero in the case where the throughput is ridiculously high\n\n    const segmentProcessingTime = Date.now() - segmentInfo.endOfAllRequests + 1; // Multiply by 8000 to convert from bytes/millisecond to bits/second\n\n    const segmentProcessingThroughput = Math.floor(segmentInfo.byteLength / segmentProcessingTime * 8 * 1000); // This is just a cumulative moving average calculation:\n    //   newAvg = oldAvg + (sample - oldAvg) / (sampleCount + 1)\n\n    this.throughput.rate += (segmentProcessingThroughput - rate) / ++this.throughput.count;\n  }\n  /**\n   * Adds a cue to the segment-metadata track with some metadata information about the\n   * segment\n   *\n   * @private\n   * @param {Object} segmentInfo\n   *        the object returned by loadSegment\n   * @method addSegmentMetadataCue_\n   */\n\n  addSegmentMetadataCue_(segmentInfo) {\n    if (!this.segmentMetadataTrack_) {\n      return;\n    }\n    const segment = segmentInfo.segment;\n    const start = segment.start;\n    const end = segment.end; // Do not try adding the cue if the start and end times are invalid.\n\n    if (!finite(start) || !finite(end)) {\n      return;\n    }\n    removeCuesFromTrack(start, end, this.segmentMetadataTrack_);\n    const Cue = window$1.WebKitDataCue || window$1.VTTCue;\n    const value = {\n      custom: segment.custom,\n      dateTimeObject: segment.dateTimeObject,\n      dateTimeString: segment.dateTimeString,\n      bandwidth: segmentInfo.playlist.attributes.BANDWIDTH,\n      resolution: segmentInfo.playlist.attributes.RESOLUTION,\n      codecs: segmentInfo.playlist.attributes.CODECS,\n      byteLength: segmentInfo.byteLength,\n      uri: segmentInfo.uri,\n      timeline: segmentInfo.timeline,\n      playlist: segmentInfo.playlist.id,\n      start,\n      end\n    };\n    const data = JSON.stringify(value);\n    const cue = new Cue(start, end, data); // Attach the metadata to the value property of the cue to keep consistency between\n    // the differences of WebKitDataCue in safari and VTTCue in other browsers\n\n    cue.value = value;\n    this.segmentMetadataTrack_.addCue(cue);\n  }\n}\nfunction noop() {}\nconst toTitleCase = function (string) {\n  if (typeof string !== 'string') {\n    return string;\n  }\n  return string.replace(/./, w => w.toUpperCase());\n};\n\n/**\n * @file source-updater.js\n */\nconst bufferTypes = ['video', 'audio'];\nconst updating = (type, sourceUpdater) => {\n  const sourceBuffer = sourceUpdater[`${type}Buffer`];\n  return sourceBuffer && sourceBuffer.updating || sourceUpdater.queuePending[type];\n};\nconst nextQueueIndexOfType = (type, queue) => {\n  for (let i = 0; i < queue.length; i++) {\n    const queueEntry = queue[i];\n    if (queueEntry.type === 'mediaSource') {\n      // If the next entry is a media source entry (uses multiple source buffers), block\n      // processing to allow it to go through first.\n      return null;\n    }\n    if (queueEntry.type === type) {\n      return i;\n    }\n  }\n  return null;\n};\nconst shiftQueue = (type, sourceUpdater) => {\n  if (sourceUpdater.queue.length === 0) {\n    return;\n  }\n  let queueIndex = 0;\n  let queueEntry = sourceUpdater.queue[queueIndex];\n  if (queueEntry.type === 'mediaSource') {\n    if (!sourceUpdater.updating() && sourceUpdater.mediaSource.readyState !== 'closed') {\n      sourceUpdater.queue.shift();\n      queueEntry.action(sourceUpdater);\n      if (queueEntry.doneFn) {\n        queueEntry.doneFn();\n      } // Only specific source buffer actions must wait for async updateend events. Media\n      // Source actions process synchronously. Therefore, both audio and video source\n      // buffers are now clear to process the next queue entries.\n\n      shiftQueue('audio', sourceUpdater);\n      shiftQueue('video', sourceUpdater);\n    } // Media Source actions require both source buffers, so if the media source action\n    // couldn't process yet (because one or both source buffers are busy), block other\n    // queue actions until both are available and the media source action can process.\n\n    return;\n  }\n  if (type === 'mediaSource') {\n    // If the queue was shifted by a media source action (this happens when pushing a\n    // media source action onto the queue), then it wasn't from an updateend event from an\n    // audio or video source buffer, so there's no change from previous state, and no\n    // processing should be done.\n    return;\n  } // Media source queue entries don't need to consider whether the source updater is\n  // started (i.e., source buffers are created) as they don't need the source buffers, but\n  // source buffer queue entries do.\n\n  if (!sourceUpdater.ready() || sourceUpdater.mediaSource.readyState === 'closed' || updating(type, sourceUpdater)) {\n    return;\n  }\n  if (queueEntry.type !== type) {\n    queueIndex = nextQueueIndexOfType(type, sourceUpdater.queue);\n    if (queueIndex === null) {\n      // Either there's no queue entry that uses this source buffer type in the queue, or\n      // there's a media source queue entry before the next entry of this type, in which\n      // case wait for that action to process first.\n      return;\n    }\n    queueEntry = sourceUpdater.queue[queueIndex];\n  }\n  sourceUpdater.queue.splice(queueIndex, 1); // Keep a record that this source buffer type is in use.\n  //\n  // The queue pending operation must be set before the action is performed in the event\n  // that the action results in a synchronous event that is acted upon. For instance, if\n  // an exception is thrown that can be handled, it's possible that new actions will be\n  // appended to an empty queue and immediately executed, but would not have the correct\n  // pending information if this property was set after the action was performed.\n\n  sourceUpdater.queuePending[type] = queueEntry;\n  queueEntry.action(type, sourceUpdater);\n  if (!queueEntry.doneFn) {\n    // synchronous operation, process next entry\n    sourceUpdater.queuePending[type] = null;\n    shiftQueue(type, sourceUpdater);\n    return;\n  }\n};\nconst cleanupBuffer = (type, sourceUpdater) => {\n  const buffer = sourceUpdater[`${type}Buffer`];\n  const titleType = toTitleCase(type);\n  if (!buffer) {\n    return;\n  }\n  buffer.removeEventListener('updateend', sourceUpdater[`on${titleType}UpdateEnd_`]);\n  buffer.removeEventListener('error', sourceUpdater[`on${titleType}Error_`]);\n  sourceUpdater.codecs[type] = null;\n  sourceUpdater[`${type}Buffer`] = null;\n};\nconst inSourceBuffers = (mediaSource, sourceBuffer) => mediaSource && sourceBuffer && Array.prototype.indexOf.call(mediaSource.sourceBuffers, sourceBuffer) !== -1;\nconst actions = {\n  appendBuffer: (bytes, segmentInfo, onError) => (type, sourceUpdater) => {\n    const sourceBuffer = sourceUpdater[`${type}Buffer`]; // can't do anything if the media source / source buffer is null\n    // or the media source does not contain this source buffer.\n\n    if (!inSourceBuffers(sourceUpdater.mediaSource, sourceBuffer)) {\n      return;\n    }\n    sourceUpdater.logger_(`Appending segment ${segmentInfo.mediaIndex}'s ${bytes.length} bytes to ${type}Buffer`);\n    try {\n      sourceBuffer.appendBuffer(bytes);\n    } catch (e) {\n      sourceUpdater.logger_(`Error with code ${e.code} ` + (e.code === QUOTA_EXCEEDED_ERR ? '(QUOTA_EXCEEDED_ERR) ' : '') + `when appending segment ${segmentInfo.mediaIndex} to ${type}Buffer`);\n      sourceUpdater.queuePending[type] = null;\n      onError(e);\n    }\n  },\n  remove: (start, end) => (type, sourceUpdater) => {\n    const sourceBuffer = sourceUpdater[`${type}Buffer`]; // can't do anything if the media source / source buffer is null\n    // or the media source does not contain this source buffer.\n\n    if (!inSourceBuffers(sourceUpdater.mediaSource, sourceBuffer)) {\n      return;\n    }\n    sourceUpdater.logger_(`Removing ${start} to ${end} from ${type}Buffer`);\n    try {\n      sourceBuffer.remove(start, end);\n    } catch (e) {\n      sourceUpdater.logger_(`Remove ${start} to ${end} from ${type}Buffer failed`);\n    }\n  },\n  timestampOffset: offset => (type, sourceUpdater) => {\n    const sourceBuffer = sourceUpdater[`${type}Buffer`]; // can't do anything if the media source / source buffer is null\n    // or the media source does not contain this source buffer.\n\n    if (!inSourceBuffers(sourceUpdater.mediaSource, sourceBuffer)) {\n      return;\n    }\n    sourceUpdater.logger_(`Setting ${type}timestampOffset to ${offset}`);\n    sourceBuffer.timestampOffset = offset;\n  },\n  callback: callback => (type, sourceUpdater) => {\n    callback();\n  },\n  endOfStream: error => sourceUpdater => {\n    if (sourceUpdater.mediaSource.readyState !== 'open') {\n      return;\n    }\n    sourceUpdater.logger_(`Calling mediaSource endOfStream(${error || ''})`);\n    try {\n      sourceUpdater.mediaSource.endOfStream(error);\n    } catch (e) {\n      videojs.log.warn('Failed to call media source endOfStream', e);\n    }\n  },\n  duration: duration => sourceUpdater => {\n    sourceUpdater.logger_(`Setting mediaSource duration to ${duration}`);\n    try {\n      sourceUpdater.mediaSource.duration = duration;\n    } catch (e) {\n      videojs.log.warn('Failed to set media source duration', e);\n    }\n  },\n  abort: () => (type, sourceUpdater) => {\n    if (sourceUpdater.mediaSource.readyState !== 'open') {\n      return;\n    }\n    const sourceBuffer = sourceUpdater[`${type}Buffer`]; // can't do anything if the media source / source buffer is null\n    // or the media source does not contain this source buffer.\n\n    if (!inSourceBuffers(sourceUpdater.mediaSource, sourceBuffer)) {\n      return;\n    }\n    sourceUpdater.logger_(`calling abort on ${type}Buffer`);\n    try {\n      sourceBuffer.abort();\n    } catch (e) {\n      videojs.log.warn(`Failed to abort on ${type}Buffer`, e);\n    }\n  },\n  addSourceBuffer: (type, codec) => sourceUpdater => {\n    const titleType = toTitleCase(type);\n    const mime = getMimeForCodec(codec);\n    sourceUpdater.logger_(`Adding ${type}Buffer with codec ${codec} to mediaSource`);\n    const sourceBuffer = sourceUpdater.mediaSource.addSourceBuffer(mime);\n    sourceBuffer.addEventListener('updateend', sourceUpdater[`on${titleType}UpdateEnd_`]);\n    sourceBuffer.addEventListener('error', sourceUpdater[`on${titleType}Error_`]);\n    sourceUpdater.codecs[type] = codec;\n    sourceUpdater[`${type}Buffer`] = sourceBuffer;\n  },\n  removeSourceBuffer: type => sourceUpdater => {\n    const sourceBuffer = sourceUpdater[`${type}Buffer`];\n    cleanupBuffer(type, sourceUpdater); // can't do anything if the media source / source buffer is null\n    // or the media source does not contain this source buffer.\n\n    if (!inSourceBuffers(sourceUpdater.mediaSource, sourceBuffer)) {\n      return;\n    }\n    sourceUpdater.logger_(`Removing ${type}Buffer with codec ${sourceUpdater.codecs[type]} from mediaSource`);\n    try {\n      sourceUpdater.mediaSource.removeSourceBuffer(sourceBuffer);\n    } catch (e) {\n      videojs.log.warn(`Failed to removeSourceBuffer ${type}Buffer`, e);\n    }\n  },\n  changeType: codec => (type, sourceUpdater) => {\n    const sourceBuffer = sourceUpdater[`${type}Buffer`];\n    const mime = getMimeForCodec(codec); // can't do anything if the media source / source buffer is null\n    // or the media source does not contain this source buffer.\n\n    if (!inSourceBuffers(sourceUpdater.mediaSource, sourceBuffer)) {\n      return;\n    } // do not update codec if we don't need to.\n\n    if (sourceUpdater.codecs[type] === codec) {\n      return;\n    }\n    sourceUpdater.logger_(`changing ${type}Buffer codec from ${sourceUpdater.codecs[type]} to ${codec}`);\n    sourceBuffer.changeType(mime);\n    sourceUpdater.codecs[type] = codec;\n  }\n};\nconst pushQueue = ({\n  type,\n  sourceUpdater,\n  action,\n  doneFn,\n  name\n}) => {\n  sourceUpdater.queue.push({\n    type,\n    action,\n    doneFn,\n    name\n  });\n  shiftQueue(type, sourceUpdater);\n};\nconst onUpdateend = (type, sourceUpdater) => e => {\n  // Although there should, in theory, be a pending action for any updateend receieved,\n  // there are some actions that may trigger updateend events without set definitions in\n  // the w3c spec. For instance, setting the duration on the media source may trigger\n  // updateend events on source buffers. This does not appear to be in the spec. As such,\n  // if we encounter an updateend without a corresponding pending action from our queue\n  // for that source buffer type, process the next action.\n  if (sourceUpdater.queuePending[type]) {\n    const doneFn = sourceUpdater.queuePending[type].doneFn;\n    sourceUpdater.queuePending[type] = null;\n    if (doneFn) {\n      // if there's an error, report it\n      doneFn(sourceUpdater[`${type}Error_`]);\n    }\n  }\n  shiftQueue(type, sourceUpdater);\n};\n/**\n * A queue of callbacks to be serialized and applied when a\n * MediaSource and its associated SourceBuffers are not in the\n * updating state. It is used by the segment loader to update the\n * underlying SourceBuffers when new data is loaded, for instance.\n *\n * @class SourceUpdater\n * @param {MediaSource} mediaSource the MediaSource to create the SourceBuffer from\n * @param {string} mimeType the desired MIME type of the underlying SourceBuffer\n */\n\nclass SourceUpdater extends videojs.EventTarget {\n  constructor(mediaSource) {\n    super();\n    this.mediaSource = mediaSource;\n    this.sourceopenListener_ = () => shiftQueue('mediaSource', this);\n    this.mediaSource.addEventListener('sourceopen', this.sourceopenListener_);\n    this.logger_ = logger('SourceUpdater'); // initial timestamp offset is 0\n\n    this.audioTimestampOffset_ = 0;\n    this.videoTimestampOffset_ = 0;\n    this.queue = [];\n    this.queuePending = {\n      audio: null,\n      video: null\n    };\n    this.delayedAudioAppendQueue_ = [];\n    this.videoAppendQueued_ = false;\n    this.codecs = {};\n    this.onVideoUpdateEnd_ = onUpdateend('video', this);\n    this.onAudioUpdateEnd_ = onUpdateend('audio', this);\n    this.onVideoError_ = e => {\n      // used for debugging\n      this.videoError_ = e;\n    };\n    this.onAudioError_ = e => {\n      // used for debugging\n      this.audioError_ = e;\n    };\n    this.createdSourceBuffers_ = false;\n    this.initializedEme_ = false;\n    this.triggeredReady_ = false;\n  }\n  initializedEme() {\n    this.initializedEme_ = true;\n    this.triggerReady();\n  }\n  hasCreatedSourceBuffers() {\n    // if false, likely waiting on one of the segment loaders to get enough data to create\n    // source buffers\n    return this.createdSourceBuffers_;\n  }\n  hasInitializedAnyEme() {\n    return this.initializedEme_;\n  }\n  ready() {\n    return this.hasCreatedSourceBuffers() && this.hasInitializedAnyEme();\n  }\n  createSourceBuffers(codecs) {\n    if (this.hasCreatedSourceBuffers()) {\n      // already created them before\n      return;\n    } // the intial addOrChangeSourceBuffers will always be\n    // two add buffers.\n\n    this.addOrChangeSourceBuffers(codecs);\n    this.createdSourceBuffers_ = true;\n    this.trigger('createdsourcebuffers');\n    this.triggerReady();\n  }\n  triggerReady() {\n    // only allow ready to be triggered once, this prevents the case\n    // where:\n    // 1. we trigger createdsourcebuffers\n    // 2. ie 11 synchronously initializates eme\n    // 3. the synchronous initialization causes us to trigger ready\n    // 4. We go back to the ready check in createSourceBuffers and ready is triggered again.\n    if (this.ready() && !this.triggeredReady_) {\n      this.triggeredReady_ = true;\n      this.trigger('ready');\n    }\n  }\n  /**\n   * Add a type of source buffer to the media source.\n   *\n   * @param {string} type\n   *        The type of source buffer to add.\n   *\n   * @param {string} codec\n   *        The codec to add the source buffer with.\n   */\n\n  addSourceBuffer(type, codec) {\n    pushQueue({\n      type: 'mediaSource',\n      sourceUpdater: this,\n      action: actions.addSourceBuffer(type, codec),\n      name: 'addSourceBuffer'\n    });\n  }\n  /**\n   * call abort on a source buffer.\n   *\n   * @param {string} type\n   *        The type of source buffer to call abort on.\n   */\n\n  abort(type) {\n    pushQueue({\n      type,\n      sourceUpdater: this,\n      action: actions.abort(type),\n      name: 'abort'\n    });\n  }\n  /**\n   * Call removeSourceBuffer and remove a specific type\n   * of source buffer on the mediaSource.\n   *\n   * @param {string} type\n   *        The type of source buffer to remove.\n   */\n\n  removeSourceBuffer(type) {\n    if (!this.canRemoveSourceBuffer()) {\n      videojs.log.error('removeSourceBuffer is not supported!');\n      return;\n    }\n    pushQueue({\n      type: 'mediaSource',\n      sourceUpdater: this,\n      action: actions.removeSourceBuffer(type),\n      name: 'removeSourceBuffer'\n    });\n  }\n  /**\n   * Whether or not the removeSourceBuffer function is supported\n   * on the mediaSource.\n   *\n   * @return {boolean}\n   *          if removeSourceBuffer can be called.\n   */\n\n  canRemoveSourceBuffer() {\n    // IE reports that it supports removeSourceBuffer, but often throws\n    // errors when attempting to use the function. So we report that it\n    // does not support removeSourceBuffer. As of Firefox 83 removeSourceBuffer\n    // throws errors, so we report that it does not support this as well.\n    return !videojs.browser.IE_VERSION && !videojs.browser.IS_FIREFOX && window$1.MediaSource && window$1.MediaSource.prototype && typeof window$1.MediaSource.prototype.removeSourceBuffer === 'function';\n  }\n  /**\n   * Whether or not the changeType function is supported\n   * on our SourceBuffers.\n   *\n   * @return {boolean}\n   *         if changeType can be called.\n   */\n\n  static canChangeType() {\n    return window$1.SourceBuffer && window$1.SourceBuffer.prototype && typeof window$1.SourceBuffer.prototype.changeType === 'function';\n  }\n  /**\n   * Whether or not the changeType function is supported\n   * on our SourceBuffers.\n   *\n   * @return {boolean}\n   *         if changeType can be called.\n   */\n\n  canChangeType() {\n    return this.constructor.canChangeType();\n  }\n  /**\n   * Call the changeType function on a source buffer, given the code and type.\n   *\n   * @param {string} type\n   *        The type of source buffer to call changeType on.\n   *\n   * @param {string} codec\n   *        The codec string to change type with on the source buffer.\n   */\n\n  changeType(type, codec) {\n    if (!this.canChangeType()) {\n      videojs.log.error('changeType is not supported!');\n      return;\n    }\n    pushQueue({\n      type,\n      sourceUpdater: this,\n      action: actions.changeType(codec),\n      name: 'changeType'\n    });\n  }\n  /**\n   * Add source buffers with a codec or, if they are already created,\n   * call changeType on source buffers using changeType.\n   *\n   * @param {Object} codecs\n   *        Codecs to switch to\n   */\n\n  addOrChangeSourceBuffers(codecs) {\n    if (!codecs || typeof codecs !== 'object' || Object.keys(codecs).length === 0) {\n      throw new Error('Cannot addOrChangeSourceBuffers to undefined codecs');\n    }\n    Object.keys(codecs).forEach(type => {\n      const codec = codecs[type];\n      if (!this.hasCreatedSourceBuffers()) {\n        return this.addSourceBuffer(type, codec);\n      }\n      if (this.canChangeType()) {\n        this.changeType(type, codec);\n      }\n    });\n  }\n  /**\n   * Queue an update to append an ArrayBuffer.\n   *\n   * @param {MediaObject} object containing audioBytes and/or videoBytes\n   * @param {Function} done the function to call when done\n   * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-appendBuffer-void-ArrayBuffer-data\n   */\n\n  appendBuffer(options, doneFn) {\n    const {\n      segmentInfo,\n      type,\n      bytes\n    } = options;\n    this.processedAppend_ = true;\n    if (type === 'audio' && this.videoBuffer && !this.videoAppendQueued_) {\n      this.delayedAudioAppendQueue_.push([options, doneFn]);\n      this.logger_(`delayed audio append of ${bytes.length} until video append`);\n      return;\n    } // In the case of certain errors, for instance, QUOTA_EXCEEDED_ERR, updateend will\n    // not be fired. This means that the queue will be blocked until the next action\n    // taken by the segment-loader. Provide a mechanism for segment-loader to handle\n    // these errors by calling the doneFn with the specific error.\n\n    const onError = doneFn;\n    pushQueue({\n      type,\n      sourceUpdater: this,\n      action: actions.appendBuffer(bytes, segmentInfo || {\n        mediaIndex: -1\n      }, onError),\n      doneFn,\n      name: 'appendBuffer'\n    });\n    if (type === 'video') {\n      this.videoAppendQueued_ = true;\n      if (!this.delayedAudioAppendQueue_.length) {\n        return;\n      }\n      const queue = this.delayedAudioAppendQueue_.slice();\n      this.logger_(`queuing delayed audio ${queue.length} appendBuffers`);\n      this.delayedAudioAppendQueue_.length = 0;\n      queue.forEach(que => {\n        this.appendBuffer.apply(this, que);\n      });\n    }\n  }\n  /**\n   * Get the audio buffer's buffered timerange.\n   *\n   * @return {TimeRange}\n   *         The audio buffer's buffered time range\n   */\n\n  audioBuffered() {\n    // no media source/source buffer or it isn't in the media sources\n    // source buffer list\n    if (!inSourceBuffers(this.mediaSource, this.audioBuffer)) {\n      return createTimeRanges();\n    }\n    return this.audioBuffer.buffered ? this.audioBuffer.buffered : createTimeRanges();\n  }\n  /**\n   * Get the video buffer's buffered timerange.\n   *\n   * @return {TimeRange}\n   *         The video buffer's buffered time range\n   */\n\n  videoBuffered() {\n    // no media source/source buffer or it isn't in the media sources\n    // source buffer list\n    if (!inSourceBuffers(this.mediaSource, this.videoBuffer)) {\n      return createTimeRanges();\n    }\n    return this.videoBuffer.buffered ? this.videoBuffer.buffered : createTimeRanges();\n  }\n  /**\n   * Get a combined video/audio buffer's buffered timerange.\n   *\n   * @return {TimeRange}\n   *         the combined time range\n   */\n\n  buffered() {\n    const video = inSourceBuffers(this.mediaSource, this.videoBuffer) ? this.videoBuffer : null;\n    const audio = inSourceBuffers(this.mediaSource, this.audioBuffer) ? this.audioBuffer : null;\n    if (audio && !video) {\n      return this.audioBuffered();\n    }\n    if (video && !audio) {\n      return this.videoBuffered();\n    }\n    return bufferIntersection(this.audioBuffered(), this.videoBuffered());\n  }\n  /**\n   * Add a callback to the queue that will set duration on the mediaSource.\n   *\n   * @param {number} duration\n   *        The duration to set\n   *\n   * @param {Function} [doneFn]\n   *        function to run after duration has been set.\n   */\n\n  setDuration(duration, doneFn = noop) {\n    // In order to set the duration on the media source, it's necessary to wait for all\n    // source buffers to no longer be updating. \"If the updating attribute equals true on\n    // any SourceBuffer in sourceBuffers, then throw an InvalidStateError exception and\n    // abort these steps.\" (source: https://www.w3.org/TR/media-source/#attributes).\n    pushQueue({\n      type: 'mediaSource',\n      sourceUpdater: this,\n      action: actions.duration(duration),\n      name: 'duration',\n      doneFn\n    });\n  }\n  /**\n   * Add a mediaSource endOfStream call to the queue\n   *\n   * @param {Error} [error]\n   *        Call endOfStream with an error\n   *\n   * @param {Function} [doneFn]\n   *        A function that should be called when the\n   *        endOfStream call has finished.\n   */\n\n  endOfStream(error = null, doneFn = noop) {\n    if (typeof error !== 'string') {\n      error = undefined;\n    } // In order to set the duration on the media source, it's necessary to wait for all\n    // source buffers to no longer be updating. \"If the updating attribute equals true on\n    // any SourceBuffer in sourceBuffers, then throw an InvalidStateError exception and\n    // abort these steps.\" (source: https://www.w3.org/TR/media-source/#attributes).\n\n    pushQueue({\n      type: 'mediaSource',\n      sourceUpdater: this,\n      action: actions.endOfStream(error),\n      name: 'endOfStream',\n      doneFn\n    });\n  }\n  /**\n   * Queue an update to remove a time range from the buffer.\n   *\n   * @param {number} start where to start the removal\n   * @param {number} end where to end the removal\n   * @param {Function} [done=noop] optional callback to be executed when the remove\n   * operation is complete\n   * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-remove-void-double-start-unrestricted-double-end\n   */\n\n  removeAudio(start, end, done = noop) {\n    if (!this.audioBuffered().length || this.audioBuffered().end(0) === 0) {\n      done();\n      return;\n    }\n    pushQueue({\n      type: 'audio',\n      sourceUpdater: this,\n      action: actions.remove(start, end),\n      doneFn: done,\n      name: 'remove'\n    });\n  }\n  /**\n   * Queue an update to remove a time range from the buffer.\n   *\n   * @param {number} start where to start the removal\n   * @param {number} end where to end the removal\n   * @param {Function} [done=noop] optional callback to be executed when the remove\n   * operation is complete\n   * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-remove-void-double-start-unrestricted-double-end\n   */\n\n  removeVideo(start, end, done = noop) {\n    if (!this.videoBuffered().length || this.videoBuffered().end(0) === 0) {\n      done();\n      return;\n    }\n    pushQueue({\n      type: 'video',\n      sourceUpdater: this,\n      action: actions.remove(start, end),\n      doneFn: done,\n      name: 'remove'\n    });\n  }\n  /**\n   * Whether the underlying sourceBuffer is updating or not\n   *\n   * @return {boolean} the updating status of the SourceBuffer\n   */\n\n  updating() {\n    // the audio/video source buffer is updating\n    if (updating('audio', this) || updating('video', this)) {\n      return true;\n    }\n    return false;\n  }\n  /**\n   * Set/get the timestampoffset on the audio SourceBuffer\n   *\n   * @return {number} the timestamp offset\n   */\n\n  audioTimestampOffset(offset) {\n    if (typeof offset !== 'undefined' && this.audioBuffer &&\n    // no point in updating if it's the same\n    this.audioTimestampOffset_ !== offset) {\n      pushQueue({\n        type: 'audio',\n        sourceUpdater: this,\n        action: actions.timestampOffset(offset),\n        name: 'timestampOffset'\n      });\n      this.audioTimestampOffset_ = offset;\n    }\n    return this.audioTimestampOffset_;\n  }\n  /**\n   * Set/get the timestampoffset on the video SourceBuffer\n   *\n   * @return {number} the timestamp offset\n   */\n\n  videoTimestampOffset(offset) {\n    if (typeof offset !== 'undefined' && this.videoBuffer &&\n    // no point in updating if it's the same\n    this.videoTimestampOffset !== offset) {\n      pushQueue({\n        type: 'video',\n        sourceUpdater: this,\n        action: actions.timestampOffset(offset),\n        name: 'timestampOffset'\n      });\n      this.videoTimestampOffset_ = offset;\n    }\n    return this.videoTimestampOffset_;\n  }\n  /**\n   * Add a function to the queue that will be called\n   * when it is its turn to run in the audio queue.\n   *\n   * @param {Function} callback\n   *        The callback to queue.\n   */\n\n  audioQueueCallback(callback) {\n    if (!this.audioBuffer) {\n      return;\n    }\n    pushQueue({\n      type: 'audio',\n      sourceUpdater: this,\n      action: actions.callback(callback),\n      name: 'callback'\n    });\n  }\n  /**\n   * Add a function to the queue that will be called\n   * when it is its turn to run in the video queue.\n   *\n   * @param {Function} callback\n   *        The callback to queue.\n   */\n\n  videoQueueCallback(callback) {\n    if (!this.videoBuffer) {\n      return;\n    }\n    pushQueue({\n      type: 'video',\n      sourceUpdater: this,\n      action: actions.callback(callback),\n      name: 'callback'\n    });\n  }\n  /**\n   * dispose of the source updater and the underlying sourceBuffer\n   */\n\n  dispose() {\n    this.trigger('dispose');\n    bufferTypes.forEach(type => {\n      this.abort(type);\n      if (this.canRemoveSourceBuffer()) {\n        this.removeSourceBuffer(type);\n      } else {\n        this[`${type}QueueCallback`](() => cleanupBuffer(type, this));\n      }\n    });\n    this.videoAppendQueued_ = false;\n    this.delayedAudioAppendQueue_.length = 0;\n    if (this.sourceopenListener_) {\n      this.mediaSource.removeEventListener('sourceopen', this.sourceopenListener_);\n    }\n    this.off();\n  }\n}\nconst uint8ToUtf8 = uintArray => decodeURIComponent(escape(String.fromCharCode.apply(null, uintArray)));\n\n/**\n * @file vtt-segment-loader.js\n */\nconst VTT_LINE_TERMINATORS = new Uint8Array('\\n\\n'.split('').map(char => char.charCodeAt(0)));\nclass NoVttJsError extends Error {\n  constructor() {\n    super('Trying to parse received VTT cues, but there is no WebVTT. Make sure vtt.js is loaded.');\n  }\n}\n/**\n * An object that manages segment loading and appending.\n *\n * @class VTTSegmentLoader\n * @param {Object} options required and optional options\n * @extends videojs.EventTarget\n */\n\nclass VTTSegmentLoader extends SegmentLoader {\n  constructor(settings, options = {}) {\n    super(settings, options); // SegmentLoader requires a MediaSource be specified or it will throw an error;\n    // however, VTTSegmentLoader has no need of a media source, so delete the reference\n\n    this.mediaSource_ = null;\n    this.subtitlesTrack_ = null;\n    this.loaderType_ = 'subtitle';\n    this.featuresNativeTextTracks_ = settings.featuresNativeTextTracks;\n    this.loadVttJs = settings.loadVttJs; // The VTT segment will have its own time mappings. Saving VTT segment timing info in\n    // the sync controller leads to improper behavior.\n\n    this.shouldSaveSegmentTimingInfo_ = false;\n  }\n  createTransmuxer_() {\n    // don't need to transmux any subtitles\n    return null;\n  }\n  /**\n   * Indicates which time ranges are buffered\n   *\n   * @return {TimeRange}\n   *         TimeRange object representing the current buffered ranges\n   */\n\n  buffered_() {\n    if (!this.subtitlesTrack_ || !this.subtitlesTrack_.cues || !this.subtitlesTrack_.cues.length) {\n      return createTimeRanges();\n    }\n    const cues = this.subtitlesTrack_.cues;\n    const start = cues[0].startTime;\n    const end = cues[cues.length - 1].startTime;\n    return createTimeRanges([[start, end]]);\n  }\n  /**\n   * Gets and sets init segment for the provided map\n   *\n   * @param {Object} map\n   *        The map object representing the init segment to get or set\n   * @param {boolean=} set\n   *        If true, the init segment for the provided map should be saved\n   * @return {Object}\n   *         map object for desired init segment\n   */\n\n  initSegmentForMap(map, set = false) {\n    if (!map) {\n      return null;\n    }\n    const id = initSegmentId(map);\n    let storedMap = this.initSegments_[id];\n    if (set && !storedMap && map.bytes) {\n      // append WebVTT line terminators to the media initialization segment if it exists\n      // to follow the WebVTT spec (https://w3c.github.io/webvtt/#file-structure) that\n      // requires two or more WebVTT line terminators between the WebVTT header and the\n      // rest of the file\n      const combinedByteLength = VTT_LINE_TERMINATORS.byteLength + map.bytes.byteLength;\n      const combinedSegment = new Uint8Array(combinedByteLength);\n      combinedSegment.set(map.bytes);\n      combinedSegment.set(VTT_LINE_TERMINATORS, map.bytes.byteLength);\n      this.initSegments_[id] = storedMap = {\n        resolvedUri: map.resolvedUri,\n        byterange: map.byterange,\n        bytes: combinedSegment\n      };\n    }\n    return storedMap || map;\n  }\n  /**\n   * Returns true if all configuration required for loading is present, otherwise false.\n   *\n   * @return {boolean} True if the all configuration is ready for loading\n   * @private\n   */\n\n  couldBeginLoading_() {\n    return this.playlist_ && this.subtitlesTrack_ && !this.paused();\n  }\n  /**\n   * Once all the starting parameters have been specified, begin\n   * operation. This method should only be invoked from the INIT\n   * state.\n   *\n   * @private\n   */\n\n  init_() {\n    this.state = 'READY';\n    this.resetEverything();\n    return this.monitorBuffer_();\n  }\n  /**\n   * Set a subtitle track on the segment loader to add subtitles to\n   *\n   * @param {TextTrack=} track\n   *        The text track to add loaded subtitles to\n   * @return {TextTrack}\n   *        Returns the subtitles track\n   */\n\n  track(track) {\n    if (typeof track === 'undefined') {\n      return this.subtitlesTrack_;\n    }\n    this.subtitlesTrack_ = track; // if we were unpaused but waiting for a sourceUpdater, start\n    // buffering now\n\n    if (this.state === 'INIT' && this.couldBeginLoading_()) {\n      this.init_();\n    }\n    return this.subtitlesTrack_;\n  }\n  /**\n   * Remove any data in the source buffer between start and end times\n   *\n   * @param {number} start - the start time of the region to remove from the buffer\n   * @param {number} end - the end time of the region to remove from the buffer\n   */\n\n  remove(start, end) {\n    removeCuesFromTrack(start, end, this.subtitlesTrack_);\n  }\n  /**\n   * fill the buffer with segements unless the sourceBuffers are\n   * currently updating\n   *\n   * Note: this function should only ever be called by monitorBuffer_\n   * and never directly\n   *\n   * @private\n   */\n\n  fillBuffer_() {\n    // see if we need to begin loading immediately\n    const segmentInfo = this.chooseNextRequest_();\n    if (!segmentInfo) {\n      return;\n    }\n    if (this.syncController_.timestampOffsetForTimeline(segmentInfo.timeline) === null) {\n      // We don't have the timestamp offset that we need to sync subtitles.\n      // Rerun on a timestamp offset or user interaction.\n      const checkTimestampOffset = () => {\n        this.state = 'READY';\n        if (!this.paused()) {\n          // if not paused, queue a buffer check as soon as possible\n          this.monitorBuffer_();\n        }\n      };\n      this.syncController_.one('timestampoffset', checkTimestampOffset);\n      this.state = 'WAITING_ON_TIMELINE';\n      return;\n    }\n    this.loadSegment_(segmentInfo);\n  } // never set a timestamp offset for vtt segments.\n\n  timestampOffsetForSegment_() {\n    return null;\n  }\n  chooseNextRequest_() {\n    return this.skipEmptySegments_(super.chooseNextRequest_());\n  }\n  /**\n   * Prevents the segment loader from requesting segments we know contain no subtitles\n   * by walking forward until we find the next segment that we don't know whether it is\n   * empty or not.\n   *\n   * @param {Object} segmentInfo\n   *        a segment info object that describes the current segment\n   * @return {Object}\n   *         a segment info object that describes the current segment\n   */\n\n  skipEmptySegments_(segmentInfo) {\n    while (segmentInfo && segmentInfo.segment.empty) {\n      // stop at the last possible segmentInfo\n      if (segmentInfo.mediaIndex + 1 >= segmentInfo.playlist.segments.length) {\n        segmentInfo = null;\n        break;\n      }\n      segmentInfo = this.generateSegmentInfo_({\n        playlist: segmentInfo.playlist,\n        mediaIndex: segmentInfo.mediaIndex + 1,\n        startOfSegment: segmentInfo.startOfSegment + segmentInfo.duration,\n        isSyncRequest: segmentInfo.isSyncRequest\n      });\n    }\n    return segmentInfo;\n  }\n  stopForError(error) {\n    this.error(error);\n    this.state = 'READY';\n    this.pause();\n    this.trigger('error');\n  }\n  /**\n   * append a decrypted segement to the SourceBuffer through a SourceUpdater\n   *\n   * @private\n   */\n\n  segmentRequestFinished_(error, simpleSegment, result) {\n    if (!this.subtitlesTrack_) {\n      this.state = 'READY';\n      return;\n    }\n    this.saveTransferStats_(simpleSegment.stats); // the request was aborted\n\n    if (!this.pendingSegment_) {\n      this.state = 'READY';\n      this.mediaRequestsAborted += 1;\n      return;\n    }\n    if (error) {\n      if (error.code === REQUEST_ERRORS.TIMEOUT) {\n        this.handleTimeout_();\n      }\n      if (error.code === REQUEST_ERRORS.ABORTED) {\n        this.mediaRequestsAborted += 1;\n      } else {\n        this.mediaRequestsErrored += 1;\n      }\n      this.stopForError(error);\n      return;\n    }\n    const segmentInfo = this.pendingSegment_; // although the VTT segment loader bandwidth isn't really used, it's good to\n    // maintain functionality between segment loaders\n\n    this.saveBandwidthRelatedStats_(segmentInfo.duration, simpleSegment.stats); // if this request included a segment key, save that data in the cache\n\n    if (simpleSegment.key) {\n      this.segmentKey(simpleSegment.key, true);\n    }\n    this.state = 'APPENDING'; // used for tests\n\n    this.trigger('appending');\n    const segment = segmentInfo.segment;\n    if (segment.map) {\n      segment.map.bytes = simpleSegment.map.bytes;\n    }\n    segmentInfo.bytes = simpleSegment.bytes; // Make sure that vttjs has loaded, otherwise, load it and wait till it finished loading\n\n    if (typeof window$1.WebVTT !== 'function' && typeof this.loadVttJs === 'function') {\n      this.state = 'WAITING_ON_VTTJS'; // should be fine to call multiple times\n      // script will be loaded once but multiple listeners will be added to the queue, which is expected.\n\n      this.loadVttJs().then(() => this.segmentRequestFinished_(error, simpleSegment, result), () => this.stopForError({\n        message: 'Error loading vtt.js'\n      }));\n      return;\n    }\n    segment.requested = true;\n    try {\n      this.parseVTTCues_(segmentInfo);\n    } catch (e) {\n      this.stopForError({\n        message: e.message\n      });\n      return;\n    }\n    this.updateTimeMapping_(segmentInfo, this.syncController_.timelines[segmentInfo.timeline], this.playlist_);\n    if (segmentInfo.cues.length) {\n      segmentInfo.timingInfo = {\n        start: segmentInfo.cues[0].startTime,\n        end: segmentInfo.cues[segmentInfo.cues.length - 1].endTime\n      };\n    } else {\n      segmentInfo.timingInfo = {\n        start: segmentInfo.startOfSegment,\n        end: segmentInfo.startOfSegment + segmentInfo.duration\n      };\n    }\n    if (segmentInfo.isSyncRequest) {\n      this.trigger('syncinfoupdate');\n      this.pendingSegment_ = null;\n      this.state = 'READY';\n      return;\n    }\n    segmentInfo.byteLength = segmentInfo.bytes.byteLength;\n    this.mediaSecondsLoaded += segment.duration; // Create VTTCue instances for each cue in the new segment and add them to\n    // the subtitle track\n\n    segmentInfo.cues.forEach(cue => {\n      this.subtitlesTrack_.addCue(this.featuresNativeTextTracks_ ? new window$1.VTTCue(cue.startTime, cue.endTime, cue.text) : cue);\n    }); // Remove any duplicate cues from the subtitle track. The WebVTT spec allows\n    // cues to have identical time-intervals, but if the text is also identical\n    // we can safely assume it is a duplicate that can be removed (ex. when a cue\n    // \"overlaps\" VTT segments)\n\n    removeDuplicateCuesFromTrack(this.subtitlesTrack_);\n    this.handleAppendsDone_();\n  }\n  handleData_() {// noop as we shouldn't be getting video/audio data captions\n    // that we do not support here.\n  }\n  updateTimingInfoEnd_() {// noop\n  }\n  /**\n   * Uses the WebVTT parser to parse the segment response\n   *\n   * @throws NoVttJsError\n   *\n   * @param {Object} segmentInfo\n   *        a segment info object that describes the current segment\n   * @private\n   */\n\n  parseVTTCues_(segmentInfo) {\n    let decoder;\n    let decodeBytesToString = false;\n    if (typeof window$1.WebVTT !== 'function') {\n      // caller is responsible for exception handling.\n      throw new NoVttJsError();\n    }\n    if (typeof window$1.TextDecoder === 'function') {\n      decoder = new window$1.TextDecoder('utf8');\n    } else {\n      decoder = window$1.WebVTT.StringDecoder();\n      decodeBytesToString = true;\n    }\n    const parser = new window$1.WebVTT.Parser(window$1, window$1.vttjs, decoder);\n    segmentInfo.cues = [];\n    segmentInfo.timestampmap = {\n      MPEGTS: 0,\n      LOCAL: 0\n    };\n    parser.oncue = segmentInfo.cues.push.bind(segmentInfo.cues);\n    parser.ontimestampmap = map => {\n      segmentInfo.timestampmap = map;\n    };\n    parser.onparsingerror = error => {\n      videojs.log.warn('Error encountered when parsing cues: ' + error.message);\n    };\n    if (segmentInfo.segment.map) {\n      let mapData = segmentInfo.segment.map.bytes;\n      if (decodeBytesToString) {\n        mapData = uint8ToUtf8(mapData);\n      }\n      parser.parse(mapData);\n    }\n    let segmentData = segmentInfo.bytes;\n    if (decodeBytesToString) {\n      segmentData = uint8ToUtf8(segmentData);\n    }\n    parser.parse(segmentData);\n    parser.flush();\n  }\n  /**\n   * Updates the start and end times of any cues parsed by the WebVTT parser using\n   * the information parsed from the X-TIMESTAMP-MAP header and a TS to media time mapping\n   * from the SyncController\n   *\n   * @param {Object} segmentInfo\n   *        a segment info object that describes the current segment\n   * @param {Object} mappingObj\n   *        object containing a mapping from TS to media time\n   * @param {Object} playlist\n   *        the playlist object containing the segment\n   * @private\n   */\n\n  updateTimeMapping_(segmentInfo, mappingObj, playlist) {\n    const segment = segmentInfo.segment;\n    if (!mappingObj) {\n      // If the sync controller does not have a mapping of TS to Media Time for the\n      // timeline, then we don't have enough information to update the cue\n      // start/end times\n      return;\n    }\n    if (!segmentInfo.cues.length) {\n      // If there are no cues, we also do not have enough information to figure out\n      // segment timing. Mark that the segment contains no cues so we don't re-request\n      // an empty segment.\n      segment.empty = true;\n      return;\n    }\n    const timestampmap = segmentInfo.timestampmap;\n    const diff = timestampmap.MPEGTS / ONE_SECOND_IN_TS - timestampmap.LOCAL + mappingObj.mapping;\n    segmentInfo.cues.forEach(cue => {\n      // First convert cue time to TS time using the timestamp-map provided within the vtt\n      cue.startTime += diff;\n      cue.endTime += diff;\n    });\n    if (!playlist.syncInfo) {\n      const firstStart = segmentInfo.cues[0].startTime;\n      const lastStart = segmentInfo.cues[segmentInfo.cues.length - 1].startTime;\n      playlist.syncInfo = {\n        mediaSequence: playlist.mediaSequence + segmentInfo.mediaIndex,\n        time: Math.min(firstStart, lastStart - segment.duration)\n      };\n    }\n  }\n}\n\n/**\n * @file ad-cue-tags.js\n */\n/**\n * Searches for an ad cue that overlaps with the given mediaTime\n *\n * @param {Object} track\n *        the track to find the cue for\n *\n * @param {number} mediaTime\n *        the time to find the cue at\n *\n * @return {Object|null}\n *         the found cue or null\n */\n\nconst findAdCue = function (track, mediaTime) {\n  const cues = track.cues;\n  for (let i = 0; i < cues.length; i++) {\n    const cue = cues[i];\n    if (mediaTime >= cue.adStartTime && mediaTime <= cue.adEndTime) {\n      return cue;\n    }\n  }\n  return null;\n};\nconst updateAdCues = function (media, track, offset = 0) {\n  if (!media.segments) {\n    return;\n  }\n  let mediaTime = offset;\n  let cue;\n  for (let i = 0; i < media.segments.length; i++) {\n    const segment = media.segments[i];\n    if (!cue) {\n      // Since the cues will span for at least the segment duration, adding a fudge\n      // factor of half segment duration will prevent duplicate cues from being\n      // created when timing info is not exact (e.g. cue start time initialized\n      // at 10.006677, but next call mediaTime is 10.003332 )\n      cue = findAdCue(track, mediaTime + segment.duration / 2);\n    }\n    if (cue) {\n      if ('cueIn' in segment) {\n        // Found a CUE-IN so end the cue\n        cue.endTime = mediaTime;\n        cue.adEndTime = mediaTime;\n        mediaTime += segment.duration;\n        cue = null;\n        continue;\n      }\n      if (mediaTime < cue.endTime) {\n        // Already processed this mediaTime for this cue\n        mediaTime += segment.duration;\n        continue;\n      } // otherwise extend cue until a CUE-IN is found\n\n      cue.endTime += segment.duration;\n    } else {\n      if ('cueOut' in segment) {\n        cue = new window$1.VTTCue(mediaTime, mediaTime + segment.duration, segment.cueOut);\n        cue.adStartTime = mediaTime; // Assumes tag format to be\n        // #EXT-X-CUE-OUT:30\n\n        cue.adEndTime = mediaTime + parseFloat(segment.cueOut);\n        track.addCue(cue);\n      }\n      if ('cueOutCont' in segment) {\n        // Entered into the middle of an ad cue\n        // Assumes tag formate to be\n        // #EXT-X-CUE-OUT-CONT:10/30\n        const [adOffset, adTotal] = segment.cueOutCont.split('/').map(parseFloat);\n        cue = new window$1.VTTCue(mediaTime, mediaTime + segment.duration, '');\n        cue.adStartTime = mediaTime - adOffset;\n        cue.adEndTime = cue.adStartTime + adTotal;\n        track.addCue(cue);\n      }\n    }\n    mediaTime += segment.duration;\n  }\n};\n\n/**\n * @file sync-controller.js\n */\n// synchronize expired playlist segments.\n// the max media sequence diff is 48 hours of live stream\n// content with two second segments. Anything larger than that\n// will likely be invalid.\n\nconst MAX_MEDIA_SEQUENCE_DIFF_FOR_SYNC = 86400;\nconst syncPointStrategies = [\n// Stategy \"VOD\": Handle the VOD-case where the sync-point is *always*\n//                the equivalence display-time 0 === segment-index 0\n{\n  name: 'VOD',\n  run: (syncController, playlist, duration, currentTimeline, currentTime) => {\n    if (duration !== Infinity) {\n      const syncPoint = {\n        time: 0,\n        segmentIndex: 0,\n        partIndex: null\n      };\n      return syncPoint;\n    }\n    return null;\n  }\n},\n// Stategy \"ProgramDateTime\": We have a program-date-time tag in this playlist\n{\n  name: 'ProgramDateTime',\n  run: (syncController, playlist, duration, currentTimeline, currentTime) => {\n    if (!Object.keys(syncController.timelineToDatetimeMappings).length) {\n      return null;\n    }\n    let syncPoint = null;\n    let lastDistance = null;\n    const partsAndSegments = getPartsAndSegments(playlist);\n    currentTime = currentTime || 0;\n    for (let i = 0; i < partsAndSegments.length; i++) {\n      // start from the end and loop backwards for live\n      // or start from the front and loop forwards for non-live\n      const index = playlist.endList || currentTime === 0 ? i : partsAndSegments.length - (i + 1);\n      const partAndSegment = partsAndSegments[index];\n      const segment = partAndSegment.segment;\n      const datetimeMapping = syncController.timelineToDatetimeMappings[segment.timeline];\n      if (!datetimeMapping || !segment.dateTimeObject) {\n        continue;\n      }\n      const segmentTime = segment.dateTimeObject.getTime() / 1000;\n      let start = segmentTime + datetimeMapping; // take part duration into account.\n\n      if (segment.parts && typeof partAndSegment.partIndex === 'number') {\n        for (let z = 0; z < partAndSegment.partIndex; z++) {\n          start += segment.parts[z].duration;\n        }\n      }\n      const distance = Math.abs(currentTime - start); // Once the distance begins to increase, or if distance is 0, we have passed\n      // currentTime and can stop looking for better candidates\n\n      if (lastDistance !== null && (distance === 0 || lastDistance < distance)) {\n        break;\n      }\n      lastDistance = distance;\n      syncPoint = {\n        time: start,\n        segmentIndex: partAndSegment.segmentIndex,\n        partIndex: partAndSegment.partIndex\n      };\n    }\n    return syncPoint;\n  }\n},\n// Stategy \"Segment\": We have a known time mapping for a timeline and a\n//                    segment in the current timeline with timing data\n{\n  name: 'Segment',\n  run: (syncController, playlist, duration, currentTimeline, currentTime) => {\n    let syncPoint = null;\n    let lastDistance = null;\n    currentTime = currentTime || 0;\n    const partsAndSegments = getPartsAndSegments(playlist);\n    for (let i = 0; i < partsAndSegments.length; i++) {\n      // start from the end and loop backwards for live\n      // or start from the front and loop forwards for non-live\n      const index = playlist.endList || currentTime === 0 ? i : partsAndSegments.length - (i + 1);\n      const partAndSegment = partsAndSegments[index];\n      const segment = partAndSegment.segment;\n      const start = partAndSegment.part && partAndSegment.part.start || segment && segment.start;\n      if (segment.timeline === currentTimeline && typeof start !== 'undefined') {\n        const distance = Math.abs(currentTime - start); // Once the distance begins to increase, we have passed\n        // currentTime and can stop looking for better candidates\n\n        if (lastDistance !== null && lastDistance < distance) {\n          break;\n        }\n        if (!syncPoint || lastDistance === null || lastDistance >= distance) {\n          lastDistance = distance;\n          syncPoint = {\n            time: start,\n            segmentIndex: partAndSegment.segmentIndex,\n            partIndex: partAndSegment.partIndex\n          };\n        }\n      }\n    }\n    return syncPoint;\n  }\n},\n// Stategy \"Discontinuity\": We have a discontinuity with a known\n//                          display-time\n{\n  name: 'Discontinuity',\n  run: (syncController, playlist, duration, currentTimeline, currentTime) => {\n    let syncPoint = null;\n    currentTime = currentTime || 0;\n    if (playlist.discontinuityStarts && playlist.discontinuityStarts.length) {\n      let lastDistance = null;\n      for (let i = 0; i < playlist.discontinuityStarts.length; i++) {\n        const segmentIndex = playlist.discontinuityStarts[i];\n        const discontinuity = playlist.discontinuitySequence + i + 1;\n        const discontinuitySync = syncController.discontinuities[discontinuity];\n        if (discontinuitySync) {\n          const distance = Math.abs(currentTime - discontinuitySync.time); // Once the distance begins to increase, we have passed\n          // currentTime and can stop looking for better candidates\n\n          if (lastDistance !== null && lastDistance < distance) {\n            break;\n          }\n          if (!syncPoint || lastDistance === null || lastDistance >= distance) {\n            lastDistance = distance;\n            syncPoint = {\n              time: discontinuitySync.time,\n              segmentIndex,\n              partIndex: null\n            };\n          }\n        }\n      }\n    }\n    return syncPoint;\n  }\n},\n// Stategy \"Playlist\": We have a playlist with a known mapping of\n//                     segment index to display time\n{\n  name: 'Playlist',\n  run: (syncController, playlist, duration, currentTimeline, currentTime) => {\n    if (playlist.syncInfo) {\n      const syncPoint = {\n        time: playlist.syncInfo.time,\n        segmentIndex: playlist.syncInfo.mediaSequence - playlist.mediaSequence,\n        partIndex: null\n      };\n      return syncPoint;\n    }\n    return null;\n  }\n}];\nclass SyncController extends videojs.EventTarget {\n  constructor(options = {}) {\n    super(); // ...for synching across variants\n\n    this.timelines = [];\n    this.discontinuities = [];\n    this.timelineToDatetimeMappings = {};\n    this.logger_ = logger('SyncController');\n  }\n  /**\n   * Find a sync-point for the playlist specified\n   *\n   * A sync-point is defined as a known mapping from display-time to\n   * a segment-index in the current playlist.\n   *\n   * @param {Playlist} playlist\n   *        The playlist that needs a sync-point\n   * @param {number} duration\n   *        Duration of the MediaSource (Infinite if playing a live source)\n   * @param {number} currentTimeline\n   *        The last timeline from which a segment was loaded\n   * @return {Object}\n   *          A sync-point object\n   */\n\n  getSyncPoint(playlist, duration, currentTimeline, currentTime) {\n    const syncPoints = this.runStrategies_(playlist, duration, currentTimeline, currentTime);\n    if (!syncPoints.length) {\n      // Signal that we need to attempt to get a sync-point manually\n      // by fetching a segment in the playlist and constructing\n      // a sync-point from that information\n      return null;\n    } // Now find the sync-point that is closest to the currentTime because\n    // that should result in the most accurate guess about which segment\n    // to fetch\n\n    return this.selectSyncPoint_(syncPoints, {\n      key: 'time',\n      value: currentTime\n    });\n  }\n  /**\n   * Calculate the amount of time that has expired off the playlist during playback\n   *\n   * @param {Playlist} playlist\n   *        Playlist object to calculate expired from\n   * @param {number} duration\n   *        Duration of the MediaSource (Infinity if playling a live source)\n   * @return {number|null}\n   *          The amount of time that has expired off the playlist during playback. Null\n   *          if no sync-points for the playlist can be found.\n   */\n\n  getExpiredTime(playlist, duration) {\n    if (!playlist || !playlist.segments) {\n      return null;\n    }\n    const syncPoints = this.runStrategies_(playlist, duration, playlist.discontinuitySequence, 0); // Without sync-points, there is not enough information to determine the expired time\n\n    if (!syncPoints.length) {\n      return null;\n    }\n    const syncPoint = this.selectSyncPoint_(syncPoints, {\n      key: 'segmentIndex',\n      value: 0\n    }); // If the sync-point is beyond the start of the playlist, we want to subtract the\n    // duration from index 0 to syncPoint.segmentIndex instead of adding.\n\n    if (syncPoint.segmentIndex > 0) {\n      syncPoint.time *= -1;\n    }\n    return Math.abs(syncPoint.time + sumDurations({\n      defaultDuration: playlist.targetDuration,\n      durationList: playlist.segments,\n      startIndex: syncPoint.segmentIndex,\n      endIndex: 0\n    }));\n  }\n  /**\n   * Runs each sync-point strategy and returns a list of sync-points returned by the\n   * strategies\n   *\n   * @private\n   * @param {Playlist} playlist\n   *        The playlist that needs a sync-point\n   * @param {number} duration\n   *        Duration of the MediaSource (Infinity if playing a live source)\n   * @param {number} currentTimeline\n   *        The last timeline from which a segment was loaded\n   * @return {Array}\n   *          A list of sync-point objects\n   */\n\n  runStrategies_(playlist, duration, currentTimeline, currentTime) {\n    const syncPoints = []; // Try to find a sync-point in by utilizing various strategies...\n\n    for (let i = 0; i < syncPointStrategies.length; i++) {\n      const strategy = syncPointStrategies[i];\n      const syncPoint = strategy.run(this, playlist, duration, currentTimeline, currentTime);\n      if (syncPoint) {\n        syncPoint.strategy = strategy.name;\n        syncPoints.push({\n          strategy: strategy.name,\n          syncPoint\n        });\n      }\n    }\n    return syncPoints;\n  }\n  /**\n   * Selects the sync-point nearest the specified target\n   *\n   * @private\n   * @param {Array} syncPoints\n   *        List of sync-points to select from\n   * @param {Object} target\n   *        Object specifying the property and value we are targeting\n   * @param {string} target.key\n   *        Specifies the property to target. Must be either 'time' or 'segmentIndex'\n   * @param {number} target.value\n   *        The value to target for the specified key.\n   * @return {Object}\n   *          The sync-point nearest the target\n   */\n\n  selectSyncPoint_(syncPoints, target) {\n    let bestSyncPoint = syncPoints[0].syncPoint;\n    let bestDistance = Math.abs(syncPoints[0].syncPoint[target.key] - target.value);\n    let bestStrategy = syncPoints[0].strategy;\n    for (let i = 1; i < syncPoints.length; i++) {\n      const newDistance = Math.abs(syncPoints[i].syncPoint[target.key] - target.value);\n      if (newDistance < bestDistance) {\n        bestDistance = newDistance;\n        bestSyncPoint = syncPoints[i].syncPoint;\n        bestStrategy = syncPoints[i].strategy;\n      }\n    }\n    this.logger_(`syncPoint for [${target.key}: ${target.value}] chosen with strategy` + ` [${bestStrategy}]: [time:${bestSyncPoint.time},` + ` segmentIndex:${bestSyncPoint.segmentIndex}` + (typeof bestSyncPoint.partIndex === 'number' ? `,partIndex:${bestSyncPoint.partIndex}` : '') + ']');\n    return bestSyncPoint;\n  }\n  /**\n   * Save any meta-data present on the segments when segments leave\n   * the live window to the playlist to allow for synchronization at the\n   * playlist level later.\n   *\n   * @param {Playlist} oldPlaylist - The previous active playlist\n   * @param {Playlist} newPlaylist - The updated and most current playlist\n   */\n\n  saveExpiredSegmentInfo(oldPlaylist, newPlaylist) {\n    const mediaSequenceDiff = newPlaylist.mediaSequence - oldPlaylist.mediaSequence; // Ignore large media sequence gaps\n\n    if (mediaSequenceDiff > MAX_MEDIA_SEQUENCE_DIFF_FOR_SYNC) {\n      videojs.log.warn(`Not saving expired segment info. Media sequence gap ${mediaSequenceDiff} is too large.`);\n      return;\n    } // When a segment expires from the playlist and it has a start time\n    // save that information as a possible sync-point reference in future\n\n    for (let i = mediaSequenceDiff - 1; i >= 0; i--) {\n      const lastRemovedSegment = oldPlaylist.segments[i];\n      if (lastRemovedSegment && typeof lastRemovedSegment.start !== 'undefined') {\n        newPlaylist.syncInfo = {\n          mediaSequence: oldPlaylist.mediaSequence + i,\n          time: lastRemovedSegment.start\n        };\n        this.logger_(`playlist refresh sync: [time:${newPlaylist.syncInfo.time},` + ` mediaSequence: ${newPlaylist.syncInfo.mediaSequence}]`);\n        this.trigger('syncinfoupdate');\n        break;\n      }\n    }\n  }\n  /**\n   * Save the mapping from playlist's ProgramDateTime to display. This should only happen\n   * before segments start to load.\n   *\n   * @param {Playlist} playlist - The currently active playlist\n   */\n\n  setDateTimeMappingForStart(playlist) {\n    // It's possible for the playlist to be updated before playback starts, meaning time\n    // zero is not yet set. If, during these playlist refreshes, a discontinuity is\n    // crossed, then the old time zero mapping (for the prior timeline) would be retained\n    // unless the mappings are cleared.\n    this.timelineToDatetimeMappings = {};\n    if (playlist.segments && playlist.segments.length && playlist.segments[0].dateTimeObject) {\n      const firstSegment = playlist.segments[0];\n      const playlistTimestamp = firstSegment.dateTimeObject.getTime() / 1000;\n      this.timelineToDatetimeMappings[firstSegment.timeline] = -playlistTimestamp;\n    }\n  }\n  /**\n   * Calculates and saves timeline mappings, playlist sync info, and segment timing values\n   * based on the latest timing information.\n   *\n   * @param {Object} options\n   *        Options object\n   * @param {SegmentInfo} options.segmentInfo\n   *        The current active request information\n   * @param {boolean} options.shouldSaveTimelineMapping\n   *        If there's a timeline change, determines if the timeline mapping should be\n   *        saved for timeline mapping and program date time mappings.\n   */\n\n  saveSegmentTimingInfo({\n    segmentInfo,\n    shouldSaveTimelineMapping\n  }) {\n    const didCalculateSegmentTimeMapping = this.calculateSegmentTimeMapping_(segmentInfo, segmentInfo.timingInfo, shouldSaveTimelineMapping);\n    const segment = segmentInfo.segment;\n    if (didCalculateSegmentTimeMapping) {\n      this.saveDiscontinuitySyncInfo_(segmentInfo); // If the playlist does not have sync information yet, record that information\n      // now with segment timing information\n\n      if (!segmentInfo.playlist.syncInfo) {\n        segmentInfo.playlist.syncInfo = {\n          mediaSequence: segmentInfo.playlist.mediaSequence + segmentInfo.mediaIndex,\n          time: segment.start\n        };\n      }\n    }\n    const dateTime = segment.dateTimeObject;\n    if (segment.discontinuity && shouldSaveTimelineMapping && dateTime) {\n      this.timelineToDatetimeMappings[segment.timeline] = -(dateTime.getTime() / 1000);\n    }\n  }\n  timestampOffsetForTimeline(timeline) {\n    if (typeof this.timelines[timeline] === 'undefined') {\n      return null;\n    }\n    return this.timelines[timeline].time;\n  }\n  mappingForTimeline(timeline) {\n    if (typeof this.timelines[timeline] === 'undefined') {\n      return null;\n    }\n    return this.timelines[timeline].mapping;\n  }\n  /**\n   * Use the \"media time\" for a segment to generate a mapping to \"display time\" and\n   * save that display time to the segment.\n   *\n   * @private\n   * @param {SegmentInfo} segmentInfo\n   *        The current active request information\n   * @param {Object} timingInfo\n   *        The start and end time of the current segment in \"media time\"\n   * @param {boolean} shouldSaveTimelineMapping\n   *        If there's a timeline change, determines if the timeline mapping should be\n   *        saved in timelines.\n   * @return {boolean}\n   *          Returns false if segment time mapping could not be calculated\n   */\n\n  calculateSegmentTimeMapping_(segmentInfo, timingInfo, shouldSaveTimelineMapping) {\n    // TODO: remove side effects\n    const segment = segmentInfo.segment;\n    const part = segmentInfo.part;\n    let mappingObj = this.timelines[segmentInfo.timeline];\n    let start;\n    let end;\n    if (typeof segmentInfo.timestampOffset === 'number') {\n      mappingObj = {\n        time: segmentInfo.startOfSegment,\n        mapping: segmentInfo.startOfSegment - timingInfo.start\n      };\n      if (shouldSaveTimelineMapping) {\n        this.timelines[segmentInfo.timeline] = mappingObj;\n        this.trigger('timestampoffset');\n        this.logger_(`time mapping for timeline ${segmentInfo.timeline}: ` + `[time: ${mappingObj.time}] [mapping: ${mappingObj.mapping}]`);\n      }\n      start = segmentInfo.startOfSegment;\n      end = timingInfo.end + mappingObj.mapping;\n    } else if (mappingObj) {\n      start = timingInfo.start + mappingObj.mapping;\n      end = timingInfo.end + mappingObj.mapping;\n    } else {\n      return false;\n    }\n    if (part) {\n      part.start = start;\n      part.end = end;\n    } // If we don't have a segment start yet or the start value we got\n    // is less than our current segment.start value, save a new start value.\n    // We have to do this because parts will have segment timing info saved\n    // multiple times and we want segment start to be the earliest part start\n    // value for that segment.\n\n    if (!segment.start || start < segment.start) {\n      segment.start = start;\n    }\n    segment.end = end;\n    return true;\n  }\n  /**\n   * Each time we have discontinuity in the playlist, attempt to calculate the location\n   * in display of the start of the discontinuity and save that. We also save an accuracy\n   * value so that we save values with the most accuracy (closest to 0.)\n   *\n   * @private\n   * @param {SegmentInfo} segmentInfo - The current active request information\n   */\n\n  saveDiscontinuitySyncInfo_(segmentInfo) {\n    const playlist = segmentInfo.playlist;\n    const segment = segmentInfo.segment; // If the current segment is a discontinuity then we know exactly where\n    // the start of the range and it's accuracy is 0 (greater accuracy values\n    // mean more approximation)\n\n    if (segment.discontinuity) {\n      this.discontinuities[segment.timeline] = {\n        time: segment.start,\n        accuracy: 0\n      };\n    } else if (playlist.discontinuityStarts && playlist.discontinuityStarts.length) {\n      // Search for future discontinuities that we can provide better timing\n      // information for and save that information for sync purposes\n      for (let i = 0; i < playlist.discontinuityStarts.length; i++) {\n        const segmentIndex = playlist.discontinuityStarts[i];\n        const discontinuity = playlist.discontinuitySequence + i + 1;\n        const mediaIndexDiff = segmentIndex - segmentInfo.mediaIndex;\n        const accuracy = Math.abs(mediaIndexDiff);\n        if (!this.discontinuities[discontinuity] || this.discontinuities[discontinuity].accuracy > accuracy) {\n          let time;\n          if (mediaIndexDiff < 0) {\n            time = segment.start - sumDurations({\n              defaultDuration: playlist.targetDuration,\n              durationList: playlist.segments,\n              startIndex: segmentInfo.mediaIndex,\n              endIndex: segmentIndex\n            });\n          } else {\n            time = segment.end + sumDurations({\n              defaultDuration: playlist.targetDuration,\n              durationList: playlist.segments,\n              startIndex: segmentInfo.mediaIndex + 1,\n              endIndex: segmentIndex\n            });\n          }\n          this.discontinuities[discontinuity] = {\n            time,\n            accuracy\n          };\n        }\n      }\n    }\n  }\n  dispose() {\n    this.trigger('dispose');\n    this.off();\n  }\n}\n\n/**\n * The TimelineChangeController acts as a source for segment loaders to listen for and\n * keep track of latest and pending timeline changes. This is useful to ensure proper\n * sync, as each loader may need to make a consideration for what timeline the other\n * loader is on before making changes which could impact the other loader's media.\n *\n * @class TimelineChangeController\n * @extends videojs.EventTarget\n */\n\nclass TimelineChangeController extends videojs.EventTarget {\n  constructor() {\n    super();\n    this.pendingTimelineChanges_ = {};\n    this.lastTimelineChanges_ = {};\n  }\n  clearPendingTimelineChange(type) {\n    this.pendingTimelineChanges_[type] = null;\n    this.trigger('pendingtimelinechange');\n  }\n  pendingTimelineChange({\n    type,\n    from,\n    to\n  }) {\n    if (typeof from === 'number' && typeof to === 'number') {\n      this.pendingTimelineChanges_[type] = {\n        type,\n        from,\n        to\n      };\n      this.trigger('pendingtimelinechange');\n    }\n    return this.pendingTimelineChanges_[type];\n  }\n  lastTimelineChange({\n    type,\n    from,\n    to\n  }) {\n    if (typeof from === 'number' && typeof to === 'number') {\n      this.lastTimelineChanges_[type] = {\n        type,\n        from,\n        to\n      };\n      delete this.pendingTimelineChanges_[type];\n      this.trigger('timelinechange');\n    }\n    return this.lastTimelineChanges_[type];\n  }\n  dispose() {\n    this.trigger('dispose');\n    this.pendingTimelineChanges_ = {};\n    this.lastTimelineChanges_ = {};\n    this.off();\n  }\n}\n\n/* rollup-plugin-worker-factory start for worker!/Users/ddashkevich/projects/http-streaming/src/decrypter-worker.js */\nconst workerCode = transform(getWorkerString(function () {\n  /**\n   * @file stream.js\n   */\n\n  /**\n   * A lightweight readable stream implemention that handles event dispatching.\n   *\n   * @class Stream\n   */\n\n  var Stream = /*#__PURE__*/function () {\n    function Stream() {\n      this.listeners = {};\n    }\n    /**\n     * Add a listener for a specified event type.\n     *\n     * @param {string} type the event name\n     * @param {Function} listener the callback to be invoked when an event of\n     * the specified type occurs\n     */\n\n    var _proto = Stream.prototype;\n    _proto.on = function on(type, listener) {\n      if (!this.listeners[type]) {\n        this.listeners[type] = [];\n      }\n      this.listeners[type].push(listener);\n    }\n    /**\n     * Remove a listener for a specified event type.\n     *\n     * @param {string} type the event name\n     * @param {Function} listener  a function previously registered for this\n     * type of event through `on`\n     * @return {boolean} if we could turn it off or not\n     */;\n\n    _proto.off = function off(type, listener) {\n      if (!this.listeners[type]) {\n        return false;\n      }\n      var index = this.listeners[type].indexOf(listener); // TODO: which is better?\n      // In Video.js we slice listener functions\n      // on trigger so that it does not mess up the order\n      // while we loop through.\n      //\n      // Here we slice on off so that the loop in trigger\n      // can continue using it's old reference to loop without\n      // messing up the order.\n\n      this.listeners[type] = this.listeners[type].slice(0);\n      this.listeners[type].splice(index, 1);\n      return index > -1;\n    }\n    /**\n     * Trigger an event of the specified type on this stream. Any additional\n     * arguments to this function are passed as parameters to event listeners.\n     *\n     * @param {string} type the event name\n     */;\n\n    _proto.trigger = function trigger(type) {\n      var callbacks = this.listeners[type];\n      if (!callbacks) {\n        return;\n      } // Slicing the arguments on every invocation of this method\n      // can add a significant amount of overhead. Avoid the\n      // intermediate object creation for the common case of a\n      // single callback argument\n\n      if (arguments.length === 2) {\n        var length = callbacks.length;\n        for (var i = 0; i < length; ++i) {\n          callbacks[i].call(this, arguments[1]);\n        }\n      } else {\n        var args = Array.prototype.slice.call(arguments, 1);\n        var _length = callbacks.length;\n        for (var _i = 0; _i < _length; ++_i) {\n          callbacks[_i].apply(this, args);\n        }\n      }\n    }\n    /**\n     * Destroys the stream and cleans up.\n     */;\n\n    _proto.dispose = function dispose() {\n      this.listeners = {};\n    }\n    /**\n     * Forwards all `data` events on this stream to the destination stream. The\n     * destination stream should provide a method `push` to receive the data\n     * events as they arrive.\n     *\n     * @param {Stream} destination the stream that will receive all `data` events\n     * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n     */;\n\n    _proto.pipe = function pipe(destination) {\n      this.on('data', function (data) {\n        destination.push(data);\n      });\n    };\n    return Stream;\n  }();\n  /*! @name pkcs7 @version 1.0.4 @license Apache-2.0 */\n\n  /**\n   * Returns the subarray of a Uint8Array without PKCS#7 padding.\n   *\n   * @param padded {Uint8Array} unencrypted bytes that have been padded\n   * @return {Uint8Array} the unpadded bytes\n   * @see http://tools.ietf.org/html/rfc5652\n   */\n\n  function unpad(padded) {\n    return padded.subarray(0, padded.byteLength - padded[padded.byteLength - 1]);\n  }\n  /*! @name aes-decrypter @version 4.0.1 @license Apache-2.0 */\n\n  /**\n   * @file aes.js\n   *\n   * This file contains an adaptation of the AES decryption algorithm\n   * from the Standford Javascript Cryptography Library. That work is\n   * covered by the following copyright and permissions notice:\n   *\n   * Copyright 2009-2010 Emily Stark, Mike Hamburg, Dan Boneh.\n   * All rights reserved.\n   *\n   * Redistribution and use in source and binary forms, with or without\n   * modification, are permitted provided that the following conditions are\n   * met:\n   *\n   * 1. Redistributions of source code must retain the above copyright\n   *    notice, this list of conditions and the following disclaimer.\n   *\n   * 2. Redistributions in binary form must reproduce the above\n   *    copyright notice, this list of conditions and the following\n   *    disclaimer in the documentation and/or other materials provided\n   *    with the distribution.\n   *\n   * THIS SOFTWARE IS PROVIDED BY THE AUTHORS ``AS IS'' AND ANY EXPRESS OR\n   * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n   * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n   * DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> OR CONTRIBUTORS BE\n   * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n   * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n   * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR\n   * BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n   * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE\n   * OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN\n   * IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n   *\n   * The views and conclusions contained in the software and documentation\n   * are those of the authors and should not be interpreted as representing\n   * official policies, either expressed or implied, of the authors.\n   */\n\n  /**\n   * Expand the S-box tables.\n   *\n   * @private\n   */\n\n  const precompute = function () {\n    const tables = [[[], [], [], [], []], [[], [], [], [], []]];\n    const encTable = tables[0];\n    const decTable = tables[1];\n    const sbox = encTable[4];\n    const sboxInv = decTable[4];\n    let i;\n    let x;\n    let xInv;\n    const d = [];\n    const th = [];\n    let x2;\n    let x4;\n    let x8;\n    let s;\n    let tEnc;\n    let tDec; // Compute double and third tables\n\n    for (i = 0; i < 256; i++) {\n      th[(d[i] = i << 1 ^ (i >> 7) * 283) ^ i] = i;\n    }\n    for (x = xInv = 0; !sbox[x]; x ^= x2 || 1, xInv = th[xInv] || 1) {\n      // Compute sbox\n      s = xInv ^ xInv << 1 ^ xInv << 2 ^ xInv << 3 ^ xInv << 4;\n      s = s >> 8 ^ s & 255 ^ 99;\n      sbox[x] = s;\n      sboxInv[s] = x; // Compute MixColumns\n\n      x8 = d[x4 = d[x2 = d[x]]];\n      tDec = x8 * 0x1010101 ^ x4 * 0x10001 ^ x2 * 0x101 ^ x * 0x1010100;\n      tEnc = d[s] * 0x101 ^ s * 0x1010100;\n      for (i = 0; i < 4; i++) {\n        encTable[i][x] = tEnc = tEnc << 24 ^ tEnc >>> 8;\n        decTable[i][s] = tDec = tDec << 24 ^ tDec >>> 8;\n      }\n    } // Compactify. Considerable speedup on Firefox.\n\n    for (i = 0; i < 5; i++) {\n      encTable[i] = encTable[i].slice(0);\n      decTable[i] = decTable[i].slice(0);\n    }\n    return tables;\n  };\n  let aesTables = null;\n  /**\n   * Schedule out an AES key for both encryption and decryption. This\n   * is a low-level class. Use a cipher mode to do bulk encryption.\n   *\n   * @class AES\n   * @param key {Array} The key as an array of 4, 6 or 8 words.\n   */\n\n  class AES {\n    constructor(key) {\n      /**\n      * The expanded S-box and inverse S-box tables. These will be computed\n      * on the client so that we don't have to send them down the wire.\n      *\n      * There are two tables, _tables[0] is for encryption and\n      * _tables[1] is for decryption.\n      *\n      * The first 4 sub-tables are the expanded S-box with MixColumns. The\n      * last (_tables[01][4]) is the S-box itself.\n      *\n      * @private\n      */\n      // if we have yet to precompute the S-box tables\n      // do so now\n      if (!aesTables) {\n        aesTables = precompute();\n      } // then make a copy of that object for use\n\n      this._tables = [[aesTables[0][0].slice(), aesTables[0][1].slice(), aesTables[0][2].slice(), aesTables[0][3].slice(), aesTables[0][4].slice()], [aesTables[1][0].slice(), aesTables[1][1].slice(), aesTables[1][2].slice(), aesTables[1][3].slice(), aesTables[1][4].slice()]];\n      let i;\n      let j;\n      let tmp;\n      const sbox = this._tables[0][4];\n      const decTable = this._tables[1];\n      const keyLen = key.length;\n      let rcon = 1;\n      if (keyLen !== 4 && keyLen !== 6 && keyLen !== 8) {\n        throw new Error('Invalid aes key size');\n      }\n      const encKey = key.slice(0);\n      const decKey = [];\n      this._key = [encKey, decKey]; // schedule encryption keys\n\n      for (i = keyLen; i < 4 * keyLen + 28; i++) {\n        tmp = encKey[i - 1]; // apply sbox\n\n        if (i % keyLen === 0 || keyLen === 8 && i % keyLen === 4) {\n          tmp = sbox[tmp >>> 24] << 24 ^ sbox[tmp >> 16 & 255] << 16 ^ sbox[tmp >> 8 & 255] << 8 ^ sbox[tmp & 255]; // shift rows and add rcon\n\n          if (i % keyLen === 0) {\n            tmp = tmp << 8 ^ tmp >>> 24 ^ rcon << 24;\n            rcon = rcon << 1 ^ (rcon >> 7) * 283;\n          }\n        }\n        encKey[i] = encKey[i - keyLen] ^ tmp;\n      } // schedule decryption keys\n\n      for (j = 0; i; j++, i--) {\n        tmp = encKey[j & 3 ? i : i - 4];\n        if (i <= 4 || j < 4) {\n          decKey[j] = tmp;\n        } else {\n          decKey[j] = decTable[0][sbox[tmp >>> 24]] ^ decTable[1][sbox[tmp >> 16 & 255]] ^ decTable[2][sbox[tmp >> 8 & 255]] ^ decTable[3][sbox[tmp & 255]];\n        }\n      }\n    }\n    /**\n     * Decrypt 16 bytes, specified as four 32-bit words.\n     *\n     * @param {number} encrypted0 the first word to decrypt\n     * @param {number} encrypted1 the second word to decrypt\n     * @param {number} encrypted2 the third word to decrypt\n     * @param {number} encrypted3 the fourth word to decrypt\n     * @param {Int32Array} out the array to write the decrypted words\n     * into\n     * @param {number} offset the offset into the output array to start\n     * writing results\n     * @return {Array} The plaintext.\n     */\n\n    decrypt(encrypted0, encrypted1, encrypted2, encrypted3, out, offset) {\n      const key = this._key[1]; // state variables a,b,c,d are loaded with pre-whitened data\n\n      let a = encrypted0 ^ key[0];\n      let b = encrypted3 ^ key[1];\n      let c = encrypted2 ^ key[2];\n      let d = encrypted1 ^ key[3];\n      let a2;\n      let b2;\n      let c2; // key.length === 2 ?\n\n      const nInnerRounds = key.length / 4 - 2;\n      let i;\n      let kIndex = 4;\n      const table = this._tables[1]; // load up the tables\n\n      const table0 = table[0];\n      const table1 = table[1];\n      const table2 = table[2];\n      const table3 = table[3];\n      const sbox = table[4]; // Inner rounds. Cribbed from OpenSSL.\n\n      for (i = 0; i < nInnerRounds; i++) {\n        a2 = table0[a >>> 24] ^ table1[b >> 16 & 255] ^ table2[c >> 8 & 255] ^ table3[d & 255] ^ key[kIndex];\n        b2 = table0[b >>> 24] ^ table1[c >> 16 & 255] ^ table2[d >> 8 & 255] ^ table3[a & 255] ^ key[kIndex + 1];\n        c2 = table0[c >>> 24] ^ table1[d >> 16 & 255] ^ table2[a >> 8 & 255] ^ table3[b & 255] ^ key[kIndex + 2];\n        d = table0[d >>> 24] ^ table1[a >> 16 & 255] ^ table2[b >> 8 & 255] ^ table3[c & 255] ^ key[kIndex + 3];\n        kIndex += 4;\n        a = a2;\n        b = b2;\n        c = c2;\n      } // Last round.\n\n      for (i = 0; i < 4; i++) {\n        out[(3 & -i) + offset] = sbox[a >>> 24] << 24 ^ sbox[b >> 16 & 255] << 16 ^ sbox[c >> 8 & 255] << 8 ^ sbox[d & 255] ^ key[kIndex++];\n        a2 = a;\n        a = b;\n        b = c;\n        c = d;\n        d = a2;\n      }\n    }\n  }\n  /**\n   * @file async-stream.js\n   */\n\n  /**\n   * A wrapper around the Stream class to use setTimeout\n   * and run stream \"jobs\" Asynchronously\n   *\n   * @class AsyncStream\n   * @extends Stream\n   */\n\n  class AsyncStream extends Stream {\n    constructor() {\n      super(Stream);\n      this.jobs = [];\n      this.delay = 1;\n      this.timeout_ = null;\n    }\n    /**\n     * process an async job\n     *\n     * @private\n     */\n\n    processJob_() {\n      this.jobs.shift()();\n      if (this.jobs.length) {\n        this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n      } else {\n        this.timeout_ = null;\n      }\n    }\n    /**\n     * push a job into the stream\n     *\n     * @param {Function} job the job to push into the stream\n     */\n\n    push(job) {\n      this.jobs.push(job);\n      if (!this.timeout_) {\n        this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n      }\n    }\n  }\n  /**\n   * @file decrypter.js\n   *\n   * An asynchronous implementation of AES-128 CBC decryption with\n   * PKCS#7 padding.\n   */\n\n  /**\n   * Convert network-order (big-endian) bytes into their little-endian\n   * representation.\n   */\n\n  const ntoh = function (word) {\n    return word << 24 | (word & 0xff00) << 8 | (word & 0xff0000) >> 8 | word >>> 24;\n  };\n  /**\n   * Decrypt bytes using AES-128 with CBC and PKCS#7 padding.\n   *\n   * @param {Uint8Array} encrypted the encrypted bytes\n   * @param {Uint32Array} key the bytes of the decryption key\n   * @param {Uint32Array} initVector the initialization vector (IV) to\n   * use for the first round of CBC.\n   * @return {Uint8Array} the decrypted bytes\n   *\n   * @see http://en.wikipedia.org/wiki/Advanced_Encryption_Standard\n   * @see http://en.wikipedia.org/wiki/Block_cipher_mode_of_operation#Cipher_Block_Chaining_.28CBC.29\n   * @see https://tools.ietf.org/html/rfc2315\n   */\n\n  const decrypt = function (encrypted, key, initVector) {\n    // word-level access to the encrypted bytes\n    const encrypted32 = new Int32Array(encrypted.buffer, encrypted.byteOffset, encrypted.byteLength >> 2);\n    const decipher = new AES(Array.prototype.slice.call(key)); // byte and word-level access for the decrypted output\n\n    const decrypted = new Uint8Array(encrypted.byteLength);\n    const decrypted32 = new Int32Array(decrypted.buffer); // temporary variables for working with the IV, encrypted, and\n    // decrypted data\n\n    let init0;\n    let init1;\n    let init2;\n    let init3;\n    let encrypted0;\n    let encrypted1;\n    let encrypted2;\n    let encrypted3; // iteration variable\n\n    let wordIx; // pull out the words of the IV to ensure we don't modify the\n    // passed-in reference and easier access\n\n    init0 = initVector[0];\n    init1 = initVector[1];\n    init2 = initVector[2];\n    init3 = initVector[3]; // decrypt four word sequences, applying cipher-block chaining (CBC)\n    // to each decrypted block\n\n    for (wordIx = 0; wordIx < encrypted32.length; wordIx += 4) {\n      // convert big-endian (network order) words into little-endian\n      // (javascript order)\n      encrypted0 = ntoh(encrypted32[wordIx]);\n      encrypted1 = ntoh(encrypted32[wordIx + 1]);\n      encrypted2 = ntoh(encrypted32[wordIx + 2]);\n      encrypted3 = ntoh(encrypted32[wordIx + 3]); // decrypt the block\n\n      decipher.decrypt(encrypted0, encrypted1, encrypted2, encrypted3, decrypted32, wordIx); // XOR with the IV, and restore network byte-order to obtain the\n      // plaintext\n\n      decrypted32[wordIx] = ntoh(decrypted32[wordIx] ^ init0);\n      decrypted32[wordIx + 1] = ntoh(decrypted32[wordIx + 1] ^ init1);\n      decrypted32[wordIx + 2] = ntoh(decrypted32[wordIx + 2] ^ init2);\n      decrypted32[wordIx + 3] = ntoh(decrypted32[wordIx + 3] ^ init3); // setup the IV for the next round\n\n      init0 = encrypted0;\n      init1 = encrypted1;\n      init2 = encrypted2;\n      init3 = encrypted3;\n    }\n    return decrypted;\n  };\n  /**\n   * The `Decrypter` class that manages decryption of AES\n   * data through `AsyncStream` objects and the `decrypt`\n   * function\n   *\n   * @param {Uint8Array} encrypted the encrypted bytes\n   * @param {Uint32Array} key the bytes of the decryption key\n   * @param {Uint32Array} initVector the initialization vector (IV) to\n   * @param {Function} done the function to run when done\n   * @class Decrypter\n   */\n\n  class Decrypter {\n    constructor(encrypted, key, initVector, done) {\n      const step = Decrypter.STEP;\n      const encrypted32 = new Int32Array(encrypted.buffer);\n      const decrypted = new Uint8Array(encrypted.byteLength);\n      let i = 0;\n      this.asyncStream_ = new AsyncStream(); // split up the encryption job and do the individual chunks asynchronously\n\n      this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n      for (i = step; i < encrypted32.length; i += step) {\n        initVector = new Uint32Array([ntoh(encrypted32[i - 4]), ntoh(encrypted32[i - 3]), ntoh(encrypted32[i - 2]), ntoh(encrypted32[i - 1])]);\n        this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n      } // invoke the done() callback when everything is finished\n\n      this.asyncStream_.push(function () {\n        // remove pkcs#7 padding from the decrypted bytes\n        done(null, unpad(decrypted));\n      });\n    }\n    /**\n     * a getter for step the maximum number of bytes to process at one time\n     *\n     * @return {number} the value of step 32000\n     */\n\n    static get STEP() {\n      // 4 * 8000;\n      return 32000;\n    }\n    /**\n     * @private\n     */\n\n    decryptChunk_(encrypted, key, initVector, decrypted) {\n      return function () {\n        const bytes = decrypt(encrypted, key, initVector);\n        decrypted.set(bytes, encrypted.byteOffset);\n      };\n    }\n  }\n  var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n  var win;\n  if (typeof window !== \"undefined\") {\n    win = window;\n  } else if (typeof commonjsGlobal !== \"undefined\") {\n    win = commonjsGlobal;\n  } else if (typeof self !== \"undefined\") {\n    win = self;\n  } else {\n    win = {};\n  }\n  var window_1 = win;\n  var isArrayBufferView = function isArrayBufferView(obj) {\n    if (ArrayBuffer.isView === 'function') {\n      return ArrayBuffer.isView(obj);\n    }\n    return obj && obj.buffer instanceof ArrayBuffer;\n  };\n  var BigInt = window_1.BigInt || Number;\n  [BigInt('0x1'), BigInt('0x100'), BigInt('0x10000'), BigInt('0x1000000'), BigInt('0x100000000'), BigInt('0x10000000000'), BigInt('0x1000000000000'), BigInt('0x100000000000000'), BigInt('0x10000000000000000')];\n  (function () {\n    var a = new Uint16Array([0xFFCC]);\n    var b = new Uint8Array(a.buffer, a.byteOffset, a.byteLength);\n    if (b[0] === 0xFF) {\n      return 'big';\n    }\n    if (b[0] === 0xCC) {\n      return 'little';\n    }\n    return 'unknown';\n  })();\n  /**\n   * Creates an object for sending to a web worker modifying properties that are TypedArrays\n   * into a new object with seperated properties for the buffer, byteOffset, and byteLength.\n   *\n   * @param {Object} message\n   *        Object of properties and values to send to the web worker\n   * @return {Object}\n   *         Modified message with TypedArray values expanded\n   * @function createTransferableMessage\n   */\n\n  const createTransferableMessage = function (message) {\n    const transferable = {};\n    Object.keys(message).forEach(key => {\n      const value = message[key];\n      if (isArrayBufferView(value)) {\n        transferable[key] = {\n          bytes: value.buffer,\n          byteOffset: value.byteOffset,\n          byteLength: value.byteLength\n        };\n      } else {\n        transferable[key] = value;\n      }\n    });\n    return transferable;\n  };\n  /* global self */\n\n  /**\n   * Our web worker interface so that things can talk to aes-decrypter\n   * that will be running in a web worker. the scope is passed to this by\n   * webworkify.\n   */\n\n  self.onmessage = function (event) {\n    const data = event.data;\n    const encrypted = new Uint8Array(data.encrypted.bytes, data.encrypted.byteOffset, data.encrypted.byteLength);\n    const key = new Uint32Array(data.key.bytes, data.key.byteOffset, data.key.byteLength / 4);\n    const iv = new Uint32Array(data.iv.bytes, data.iv.byteOffset, data.iv.byteLength / 4);\n    /* eslint-disable no-new, handle-callback-err */\n\n    new Decrypter(encrypted, key, iv, function (err, bytes) {\n      self.postMessage(createTransferableMessage({\n        source: data.source,\n        decrypted: bytes\n      }), [bytes.buffer]);\n    });\n    /* eslint-enable */\n  };\n}));\n\nvar Decrypter = factory(workerCode);\n/* rollup-plugin-worker-factory end for worker!/Users/ddashkevich/projects/http-streaming/src/decrypter-worker.js */\n\n/**\n * Convert the properties of an HLS track into an audioTrackKind.\n *\n * @private\n */\n\nconst audioTrackKind_ = properties => {\n  let kind = properties.default ? 'main' : 'alternative';\n  if (properties.characteristics && properties.characteristics.indexOf('public.accessibility.describes-video') >= 0) {\n    kind = 'main-desc';\n  }\n  return kind;\n};\n/**\n * Pause provided segment loader and playlist loader if active\n *\n * @param {SegmentLoader} segmentLoader\n *        SegmentLoader to pause\n * @param {Object} mediaType\n *        Active media type\n * @function stopLoaders\n */\n\nconst stopLoaders = (segmentLoader, mediaType) => {\n  segmentLoader.abort();\n  segmentLoader.pause();\n  if (mediaType && mediaType.activePlaylistLoader) {\n    mediaType.activePlaylistLoader.pause();\n    mediaType.activePlaylistLoader = null;\n  }\n};\n/**\n * Start loading provided segment loader and playlist loader\n *\n * @param {PlaylistLoader} playlistLoader\n *        PlaylistLoader to start loading\n * @param {Object} mediaType\n *        Active media type\n * @function startLoaders\n */\n\nconst startLoaders = (playlistLoader, mediaType) => {\n  // Segment loader will be started after `loadedmetadata` or `loadedplaylist` from the\n  // playlist loader\n  mediaType.activePlaylistLoader = playlistLoader;\n  playlistLoader.load();\n};\n/**\n * Returns a function to be called when the media group changes. It performs a\n * non-destructive (preserve the buffer) resync of the SegmentLoader. This is because a\n * change of group is merely a rendition switch of the same content at another encoding,\n * rather than a change of content, such as switching audio from English to Spanish.\n *\n * @param {string} type\n *        MediaGroup type\n * @param {Object} settings\n *        Object containing required information for media groups\n * @return {Function}\n *         Handler for a non-destructive resync of SegmentLoader when the active media\n *         group changes.\n * @function onGroupChanged\n */\n\nconst onGroupChanged = (type, settings) => () => {\n  const {\n    segmentLoaders: {\n      [type]: segmentLoader,\n      main: mainSegmentLoader\n    },\n    mediaTypes: {\n      [type]: mediaType\n    }\n  } = settings;\n  const activeTrack = mediaType.activeTrack();\n  const activeGroup = mediaType.getActiveGroup();\n  const previousActiveLoader = mediaType.activePlaylistLoader;\n  const lastGroup = mediaType.lastGroup_; // the group did not change do nothing\n\n  if (activeGroup && lastGroup && activeGroup.id === lastGroup.id) {\n    return;\n  }\n  mediaType.lastGroup_ = activeGroup;\n  mediaType.lastTrack_ = activeTrack;\n  stopLoaders(segmentLoader, mediaType);\n  if (!activeGroup || activeGroup.isMainPlaylist) {\n    // there is no group active or active group is a main playlist and won't change\n    return;\n  }\n  if (!activeGroup.playlistLoader) {\n    if (previousActiveLoader) {\n      // The previous group had a playlist loader but the new active group does not\n      // this means we are switching from demuxed to muxed audio. In this case we want to\n      // do a destructive reset of the main segment loader and not restart the audio\n      // loaders.\n      mainSegmentLoader.resetEverything();\n    }\n    return;\n  } // Non-destructive resync\n\n  segmentLoader.resyncLoader();\n  startLoaders(activeGroup.playlistLoader, mediaType);\n};\nconst onGroupChanging = (type, settings) => () => {\n  const {\n    segmentLoaders: {\n      [type]: segmentLoader\n    },\n    mediaTypes: {\n      [type]: mediaType\n    }\n  } = settings;\n  mediaType.lastGroup_ = null;\n  segmentLoader.abort();\n  segmentLoader.pause();\n};\n/**\n * Returns a function to be called when the media track changes. It performs a\n * destructive reset of the SegmentLoader to ensure we start loading as close to\n * currentTime as possible.\n *\n * @param {string} type\n *        MediaGroup type\n * @param {Object} settings\n *        Object containing required information for media groups\n * @return {Function}\n *         Handler for a destructive reset of SegmentLoader when the active media\n *         track changes.\n * @function onTrackChanged\n */\n\nconst onTrackChanged = (type, settings) => () => {\n  const {\n    mainPlaylistLoader,\n    segmentLoaders: {\n      [type]: segmentLoader,\n      main: mainSegmentLoader\n    },\n    mediaTypes: {\n      [type]: mediaType\n    }\n  } = settings;\n  const activeTrack = mediaType.activeTrack();\n  const activeGroup = mediaType.getActiveGroup();\n  const previousActiveLoader = mediaType.activePlaylistLoader;\n  const lastTrack = mediaType.lastTrack_; // track did not change, do nothing\n\n  if (lastTrack && activeTrack && lastTrack.id === activeTrack.id) {\n    return;\n  }\n  mediaType.lastGroup_ = activeGroup;\n  mediaType.lastTrack_ = activeTrack;\n  stopLoaders(segmentLoader, mediaType);\n  if (!activeGroup) {\n    // there is no group active so we do not want to restart loaders\n    return;\n  }\n  if (activeGroup.isMainPlaylist) {\n    // track did not change, do nothing\n    if (!activeTrack || !lastTrack || activeTrack.id === lastTrack.id) {\n      return;\n    }\n    const pc = settings.vhs.playlistController_;\n    const newPlaylist = pc.selectPlaylist(); // media will not change do nothing\n\n    if (pc.media() === newPlaylist) {\n      return;\n    }\n    mediaType.logger_(`track change. Switching main audio from ${lastTrack.id} to ${activeTrack.id}`);\n    mainPlaylistLoader.pause();\n    mainSegmentLoader.resetEverything();\n    pc.fastQualityChange_(newPlaylist);\n    return;\n  }\n  if (type === 'AUDIO') {\n    if (!activeGroup.playlistLoader) {\n      // when switching from demuxed audio/video to muxed audio/video (noted by no\n      // playlist loader for the audio group), we want to do a destructive reset of the\n      // main segment loader and not restart the audio loaders\n      mainSegmentLoader.setAudio(true); // don't have to worry about disabling the audio of the audio segment loader since\n      // it should be stopped\n\n      mainSegmentLoader.resetEverything();\n      return;\n    } // although the segment loader is an audio segment loader, call the setAudio\n    // function to ensure it is prepared to re-append the init segment (or handle other\n    // config changes)\n\n    segmentLoader.setAudio(true);\n    mainSegmentLoader.setAudio(false);\n  }\n  if (previousActiveLoader === activeGroup.playlistLoader) {\n    // Nothing has actually changed. This can happen because track change events can fire\n    // multiple times for a \"single\" change. One for enabling the new active track, and\n    // one for disabling the track that was active\n    startLoaders(activeGroup.playlistLoader, mediaType);\n    return;\n  }\n  if (segmentLoader.track) {\n    // For WebVTT, set the new text track in the segmentloader\n    segmentLoader.track(activeTrack);\n  } // destructive reset\n\n  segmentLoader.resetEverything();\n  startLoaders(activeGroup.playlistLoader, mediaType);\n};\nconst onError = {\n  /**\n   * Returns a function to be called when a SegmentLoader or PlaylistLoader encounters\n   * an error.\n   *\n   * @param {string} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Error handler. Logs warning (or error if the playlist is excluded) to\n   *         console and switches back to default audio track.\n   * @function onError.AUDIO\n   */\n  AUDIO: (type, settings) => () => {\n    const {\n      segmentLoaders: {\n        [type]: segmentLoader\n      },\n      mediaTypes: {\n        [type]: mediaType\n      },\n      excludePlaylist\n    } = settings;\n    stopLoaders(segmentLoader, mediaType); // switch back to default audio track\n\n    const activeTrack = mediaType.activeTrack();\n    const activeGroup = mediaType.activeGroup();\n    const id = (activeGroup.filter(group => group.default)[0] || activeGroup[0]).id;\n    const defaultTrack = mediaType.tracks[id];\n    if (activeTrack === defaultTrack) {\n      // Default track encountered an error. All we can do now is exclude the current\n      // rendition and hope another will switch audio groups\n      excludePlaylist({\n        error: {\n          message: 'Problem encountered loading the default audio track.'\n        }\n      });\n      return;\n    }\n    videojs.log.warn('Problem encountered loading the alternate audio track.' + 'Switching back to default.');\n    for (const trackId in mediaType.tracks) {\n      mediaType.tracks[trackId].enabled = mediaType.tracks[trackId] === defaultTrack;\n    }\n    mediaType.onTrackChanged();\n  },\n  /**\n   * Returns a function to be called when a SegmentLoader or PlaylistLoader encounters\n   * an error.\n   *\n   * @param {string} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Error handler. Logs warning to console and disables the active subtitle track\n   * @function onError.SUBTITLES\n   */\n  SUBTITLES: (type, settings) => () => {\n    const {\n      segmentLoaders: {\n        [type]: segmentLoader\n      },\n      mediaTypes: {\n        [type]: mediaType\n      }\n    } = settings;\n    videojs.log.warn('Problem encountered loading the subtitle track.' + 'Disabling subtitle track.');\n    stopLoaders(segmentLoader, mediaType);\n    const track = mediaType.activeTrack();\n    if (track) {\n      track.mode = 'disabled';\n    }\n    mediaType.onTrackChanged();\n  }\n};\nconst setupListeners = {\n  /**\n   * Setup event listeners for audio playlist loader\n   *\n   * @param {string} type\n   *        MediaGroup type\n   * @param {PlaylistLoader|null} playlistLoader\n   *        PlaylistLoader to register listeners on\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function setupListeners.AUDIO\n   */\n  AUDIO: (type, playlistLoader, settings) => {\n    if (!playlistLoader) {\n      // no playlist loader means audio will be muxed with the video\n      return;\n    }\n    const {\n      tech,\n      requestOptions,\n      segmentLoaders: {\n        [type]: segmentLoader\n      }\n    } = settings;\n    playlistLoader.on('loadedmetadata', () => {\n      const media = playlistLoader.media();\n      segmentLoader.playlist(media, requestOptions); // if the video is already playing, or if this isn't a live video and preload\n      // permits, start downloading segments\n\n      if (!tech.paused() || media.endList && tech.preload() !== 'none') {\n        segmentLoader.load();\n      }\n    });\n    playlistLoader.on('loadedplaylist', () => {\n      segmentLoader.playlist(playlistLoader.media(), requestOptions); // If the player isn't paused, ensure that the segment loader is running\n\n      if (!tech.paused()) {\n        segmentLoader.load();\n      }\n    });\n    playlistLoader.on('error', onError[type](type, settings));\n  },\n  /**\n   * Setup event listeners for subtitle playlist loader\n   *\n   * @param {string} type\n   *        MediaGroup type\n   * @param {PlaylistLoader|null} playlistLoader\n   *        PlaylistLoader to register listeners on\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function setupListeners.SUBTITLES\n   */\n  SUBTITLES: (type, playlistLoader, settings) => {\n    const {\n      tech,\n      requestOptions,\n      segmentLoaders: {\n        [type]: segmentLoader\n      },\n      mediaTypes: {\n        [type]: mediaType\n      }\n    } = settings;\n    playlistLoader.on('loadedmetadata', () => {\n      const media = playlistLoader.media();\n      segmentLoader.playlist(media, requestOptions);\n      segmentLoader.track(mediaType.activeTrack()); // if the video is already playing, or if this isn't a live video and preload\n      // permits, start downloading segments\n\n      if (!tech.paused() || media.endList && tech.preload() !== 'none') {\n        segmentLoader.load();\n      }\n    });\n    playlistLoader.on('loadedplaylist', () => {\n      segmentLoader.playlist(playlistLoader.media(), requestOptions); // If the player isn't paused, ensure that the segment loader is running\n\n      if (!tech.paused()) {\n        segmentLoader.load();\n      }\n    });\n    playlistLoader.on('error', onError[type](type, settings));\n  }\n};\nconst initialize = {\n  /**\n   * Setup PlaylistLoaders and AudioTracks for the audio groups\n   *\n   * @param {string} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function initialize.AUDIO\n   */\n  'AUDIO': (type, settings) => {\n    const {\n      vhs,\n      sourceType,\n      segmentLoaders: {\n        [type]: segmentLoader\n      },\n      requestOptions,\n      main: {\n        mediaGroups\n      },\n      mediaTypes: {\n        [type]: {\n          groups,\n          tracks,\n          logger_\n        }\n      },\n      mainPlaylistLoader\n    } = settings;\n    const audioOnlyMain = isAudioOnly(mainPlaylistLoader.main); // force a default if we have none\n\n    if (!mediaGroups[type] || Object.keys(mediaGroups[type]).length === 0) {\n      mediaGroups[type] = {\n        main: {\n          default: {\n            default: true\n          }\n        }\n      };\n      if (audioOnlyMain) {\n        mediaGroups[type].main.default.playlists = mainPlaylistLoader.main.playlists;\n      }\n    }\n    for (const groupId in mediaGroups[type]) {\n      if (!groups[groupId]) {\n        groups[groupId] = [];\n      }\n      for (const variantLabel in mediaGroups[type][groupId]) {\n        let properties = mediaGroups[type][groupId][variantLabel];\n        let playlistLoader;\n        if (audioOnlyMain) {\n          logger_(`AUDIO group '${groupId}' label '${variantLabel}' is a main playlist`);\n          properties.isMainPlaylist = true;\n          playlistLoader = null; // if vhs-json was provided as the source, and the media playlist was resolved,\n          // use the resolved media playlist object\n        } else if (sourceType === 'vhs-json' && properties.playlists) {\n          playlistLoader = new PlaylistLoader(properties.playlists[0], vhs, requestOptions);\n        } else if (properties.resolvedUri) {\n          playlistLoader = new PlaylistLoader(properties.resolvedUri, vhs, requestOptions); // TODO: dash isn't the only type with properties.playlists\n          // should we even have properties.playlists in this check.\n        } else if (properties.playlists && sourceType === 'dash') {\n          playlistLoader = new DashPlaylistLoader(properties.playlists[0], vhs, requestOptions, mainPlaylistLoader);\n        } else {\n          // no resolvedUri means the audio is muxed with the video when using this\n          // audio track\n          playlistLoader = null;\n        }\n        properties = merge({\n          id: variantLabel,\n          playlistLoader\n        }, properties);\n        setupListeners[type](type, properties.playlistLoader, settings);\n        groups[groupId].push(properties);\n        if (typeof tracks[variantLabel] === 'undefined') {\n          const track = new videojs.AudioTrack({\n            id: variantLabel,\n            kind: audioTrackKind_(properties),\n            enabled: false,\n            language: properties.language,\n            default: properties.default,\n            label: variantLabel\n          });\n          tracks[variantLabel] = track;\n        }\n      }\n    } // setup single error event handler for the segment loader\n\n    segmentLoader.on('error', onError[type](type, settings));\n  },\n  /**\n   * Setup PlaylistLoaders and TextTracks for the subtitle groups\n   *\n   * @param {string} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function initialize.SUBTITLES\n   */\n  'SUBTITLES': (type, settings) => {\n    const {\n      tech,\n      vhs,\n      sourceType,\n      segmentLoaders: {\n        [type]: segmentLoader\n      },\n      requestOptions,\n      main: {\n        mediaGroups\n      },\n      mediaTypes: {\n        [type]: {\n          groups,\n          tracks\n        }\n      },\n      mainPlaylistLoader\n    } = settings;\n    for (const groupId in mediaGroups[type]) {\n      if (!groups[groupId]) {\n        groups[groupId] = [];\n      }\n      for (const variantLabel in mediaGroups[type][groupId]) {\n        if (mediaGroups[type][groupId][variantLabel].forced) {\n          // Subtitle playlists with the forced attribute are not selectable in Safari.\n          // According to Apple's HLS Authoring Specification:\n          //   If content has forced subtitles and regular subtitles in a given language,\n          //   the regular subtitles track in that language MUST contain both the forced\n          //   subtitles and the regular subtitles for that language.\n          // Because of this requirement and that Safari does not add forced subtitles,\n          // forced subtitles are skipped here to maintain consistent experience across\n          // all platforms\n          continue;\n        }\n        let properties = mediaGroups[type][groupId][variantLabel];\n        let playlistLoader;\n        if (sourceType === 'hls') {\n          playlistLoader = new PlaylistLoader(properties.resolvedUri, vhs, requestOptions);\n        } else if (sourceType === 'dash') {\n          const playlists = properties.playlists.filter(p => p.excludeUntil !== Infinity);\n          if (!playlists.length) {\n            return;\n          }\n          playlistLoader = new DashPlaylistLoader(properties.playlists[0], vhs, requestOptions, mainPlaylistLoader);\n        } else if (sourceType === 'vhs-json') {\n          playlistLoader = new PlaylistLoader(\n          // if the vhs-json object included the media playlist, use the media playlist\n          // as provided, otherwise use the resolved URI to load the playlist\n          properties.playlists ? properties.playlists[0] : properties.resolvedUri, vhs, requestOptions);\n        }\n        properties = merge({\n          id: variantLabel,\n          playlistLoader\n        }, properties);\n        setupListeners[type](type, properties.playlistLoader, settings);\n        groups[groupId].push(properties);\n        if (typeof tracks[variantLabel] === 'undefined') {\n          const track = tech.addRemoteTextTrack({\n            id: variantLabel,\n            kind: 'subtitles',\n            default: properties.default && properties.autoselect,\n            language: properties.language,\n            label: variantLabel\n          }, false).track;\n          tracks[variantLabel] = track;\n        }\n      }\n    } // setup single error event handler for the segment loader\n\n    segmentLoader.on('error', onError[type](type, settings));\n  },\n  /**\n   * Setup TextTracks for the closed-caption groups\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function initialize['CLOSED-CAPTIONS']\n   */\n  'CLOSED-CAPTIONS': (type, settings) => {\n    const {\n      tech,\n      main: {\n        mediaGroups\n      },\n      mediaTypes: {\n        [type]: {\n          groups,\n          tracks\n        }\n      }\n    } = settings;\n    for (const groupId in mediaGroups[type]) {\n      if (!groups[groupId]) {\n        groups[groupId] = [];\n      }\n      for (const variantLabel in mediaGroups[type][groupId]) {\n        const properties = mediaGroups[type][groupId][variantLabel]; // Look for either 608 (CCn) or 708 (SERVICEn) caption services\n\n        if (!/^(?:CC|SERVICE)/.test(properties.instreamId)) {\n          continue;\n        }\n        const captionServices = tech.options_.vhs && tech.options_.vhs.captionServices || {};\n        let newProps = {\n          label: variantLabel,\n          language: properties.language,\n          instreamId: properties.instreamId,\n          default: properties.default && properties.autoselect\n        };\n        if (captionServices[newProps.instreamId]) {\n          newProps = merge(newProps, captionServices[newProps.instreamId]);\n        }\n        if (newProps.default === undefined) {\n          delete newProps.default;\n        } // No PlaylistLoader is required for Closed-Captions because the captions are\n        // embedded within the video stream\n\n        groups[groupId].push(merge({\n          id: variantLabel\n        }, properties));\n        if (typeof tracks[variantLabel] === 'undefined') {\n          const track = tech.addRemoteTextTrack({\n            id: newProps.instreamId,\n            kind: 'captions',\n            default: newProps.default,\n            language: newProps.language,\n            label: newProps.label\n          }, false).track;\n          tracks[variantLabel] = track;\n        }\n      }\n    }\n  }\n};\nconst groupMatch = (list, media) => {\n  for (let i = 0; i < list.length; i++) {\n    if (playlistMatch(media, list[i])) {\n      return true;\n    }\n    if (list[i].playlists && groupMatch(list[i].playlists, media)) {\n      return true;\n    }\n  }\n  return false;\n};\n/**\n * Returns a function used to get the active group of the provided type\n *\n * @param {string} type\n *        MediaGroup type\n * @param {Object} settings\n *        Object containing required information for media groups\n * @return {Function}\n *         Function that returns the active media group for the provided type. Takes an\n *         optional parameter {TextTrack} track. If no track is provided, a list of all\n *         variants in the group, otherwise the variant corresponding to the provided\n *         track is returned.\n * @function activeGroup\n */\n\nconst activeGroup = (type, settings) => track => {\n  const {\n    mainPlaylistLoader,\n    mediaTypes: {\n      [type]: {\n        groups\n      }\n    }\n  } = settings;\n  const media = mainPlaylistLoader.media();\n  if (!media) {\n    return null;\n  }\n  let variants = null; // set to variants to main media active group\n\n  if (media.attributes[type]) {\n    variants = groups[media.attributes[type]];\n  }\n  const groupKeys = Object.keys(groups);\n  if (!variants) {\n    // find the mainPlaylistLoader media\n    // that is in a media group if we are dealing\n    // with audio only\n    if (type === 'AUDIO' && groupKeys.length > 1 && isAudioOnly(settings.main)) {\n      for (let i = 0; i < groupKeys.length; i++) {\n        const groupPropertyList = groups[groupKeys[i]];\n        if (groupMatch(groupPropertyList, media)) {\n          variants = groupPropertyList;\n          break;\n        }\n      } // use the main group if it exists\n    } else if (groups.main) {\n      variants = groups.main; // only one group, use that one\n    } else if (groupKeys.length === 1) {\n      variants = groups[groupKeys[0]];\n    }\n  }\n  if (typeof track === 'undefined') {\n    return variants;\n  }\n  if (track === null || !variants) {\n    // An active track was specified so a corresponding group is expected. track === null\n    // means no track is currently active so there is no corresponding group\n    return null;\n  }\n  return variants.filter(props => props.id === track.id)[0] || null;\n};\nconst activeTrack = {\n  /**\n   * Returns a function used to get the active track of type provided\n   *\n   * @param {string} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Function that returns the active media track for the provided type. Returns\n   *         null if no track is active\n   * @function activeTrack.AUDIO\n   */\n  AUDIO: (type, settings) => () => {\n    const {\n      mediaTypes: {\n        [type]: {\n          tracks\n        }\n      }\n    } = settings;\n    for (const id in tracks) {\n      if (tracks[id].enabled) {\n        return tracks[id];\n      }\n    }\n    return null;\n  },\n  /**\n   * Returns a function used to get the active track of type provided\n   *\n   * @param {string} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Function that returns the active media track for the provided type. Returns\n   *         null if no track is active\n   * @function activeTrack.SUBTITLES\n   */\n  SUBTITLES: (type, settings) => () => {\n    const {\n      mediaTypes: {\n        [type]: {\n          tracks\n        }\n      }\n    } = settings;\n    for (const id in tracks) {\n      if (tracks[id].mode === 'showing' || tracks[id].mode === 'hidden') {\n        return tracks[id];\n      }\n    }\n    return null;\n  }\n};\nconst getActiveGroup = (type, {\n  mediaTypes\n}) => () => {\n  const activeTrack_ = mediaTypes[type].activeTrack();\n  if (!activeTrack_) {\n    return null;\n  }\n  return mediaTypes[type].activeGroup(activeTrack_);\n};\n/**\n * Setup PlaylistLoaders and Tracks for media groups (Audio, Subtitles,\n * Closed-Captions) specified in the main manifest.\n *\n * @param {Object} settings\n *        Object containing required information for setting up the media groups\n * @param {Tech} settings.tech\n *        The tech of the player\n * @param {Object} settings.requestOptions\n *        XHR request options used by the segment loaders\n * @param {PlaylistLoader} settings.mainPlaylistLoader\n *        PlaylistLoader for the main source\n * @param {VhsHandler} settings.vhs\n *        VHS SourceHandler\n * @param {Object} settings.main\n *        The parsed main manifest\n * @param {Object} settings.mediaTypes\n *        Object to store the loaders, tracks, and utility methods for each media type\n * @param {Function} settings.excludePlaylist\n *        Excludes the current rendition and forces a rendition switch.\n * @function setupMediaGroups\n */\n\nconst setupMediaGroups = settings => {\n  ['AUDIO', 'SUBTITLES', 'CLOSED-CAPTIONS'].forEach(type => {\n    initialize[type](type, settings);\n  });\n  const {\n    mediaTypes,\n    mainPlaylistLoader,\n    tech,\n    vhs,\n    segmentLoaders: {\n      ['AUDIO']: audioSegmentLoader,\n      main: mainSegmentLoader\n    }\n  } = settings; // setup active group and track getters and change event handlers\n\n  ['AUDIO', 'SUBTITLES'].forEach(type => {\n    mediaTypes[type].activeGroup = activeGroup(type, settings);\n    mediaTypes[type].activeTrack = activeTrack[type](type, settings);\n    mediaTypes[type].onGroupChanged = onGroupChanged(type, settings);\n    mediaTypes[type].onGroupChanging = onGroupChanging(type, settings);\n    mediaTypes[type].onTrackChanged = onTrackChanged(type, settings);\n    mediaTypes[type].getActiveGroup = getActiveGroup(type, settings);\n  }); // DO NOT enable the default subtitle or caption track.\n  // DO enable the default audio track\n\n  const audioGroup = mediaTypes.AUDIO.activeGroup();\n  if (audioGroup) {\n    const groupId = (audioGroup.filter(group => group.default)[0] || audioGroup[0]).id;\n    mediaTypes.AUDIO.tracks[groupId].enabled = true;\n    mediaTypes.AUDIO.onGroupChanged();\n    mediaTypes.AUDIO.onTrackChanged();\n    const activeAudioGroup = mediaTypes.AUDIO.getActiveGroup(); // a similar check for handling setAudio on each loader is run again each time the\n    // track is changed, but needs to be handled here since the track may not be considered\n    // changed on the first call to onTrackChanged\n\n    if (!activeAudioGroup.playlistLoader) {\n      // either audio is muxed with video or the stream is audio only\n      mainSegmentLoader.setAudio(true);\n    } else {\n      // audio is demuxed\n      mainSegmentLoader.setAudio(false);\n      audioSegmentLoader.setAudio(true);\n    }\n  }\n  mainPlaylistLoader.on('mediachange', () => {\n    ['AUDIO', 'SUBTITLES'].forEach(type => mediaTypes[type].onGroupChanged());\n  });\n  mainPlaylistLoader.on('mediachanging', () => {\n    ['AUDIO', 'SUBTITLES'].forEach(type => mediaTypes[type].onGroupChanging());\n  }); // custom audio track change event handler for usage event\n\n  const onAudioTrackChanged = () => {\n    mediaTypes.AUDIO.onTrackChanged();\n    tech.trigger({\n      type: 'usage',\n      name: 'vhs-audio-change'\n    });\n  };\n  tech.audioTracks().addEventListener('change', onAudioTrackChanged);\n  tech.remoteTextTracks().addEventListener('change', mediaTypes.SUBTITLES.onTrackChanged);\n  vhs.on('dispose', () => {\n    tech.audioTracks().removeEventListener('change', onAudioTrackChanged);\n    tech.remoteTextTracks().removeEventListener('change', mediaTypes.SUBTITLES.onTrackChanged);\n  }); // clear existing audio tracks and add the ones we just created\n\n  tech.clearTracks('audio');\n  for (const id in mediaTypes.AUDIO.tracks) {\n    tech.audioTracks().addTrack(mediaTypes.AUDIO.tracks[id]);\n  }\n};\n/**\n * Creates skeleton object used to store the loaders, tracks, and utility methods for each\n * media type\n *\n * @return {Object}\n *         Object to store the loaders, tracks, and utility methods for each media type\n * @function createMediaTypes\n */\n\nconst createMediaTypes = () => {\n  const mediaTypes = {};\n  ['AUDIO', 'SUBTITLES', 'CLOSED-CAPTIONS'].forEach(type => {\n    mediaTypes[type] = {\n      groups: {},\n      tracks: {},\n      activePlaylistLoader: null,\n      activeGroup: noop,\n      activeTrack: noop,\n      getActiveGroup: noop,\n      onGroupChanged: noop,\n      onTrackChanged: noop,\n      lastTrack_: null,\n      logger_: logger(`MediaGroups[${type}]`)\n    };\n  });\n  return mediaTypes;\n};\n\n/**\n * @file playlist-controller.js\n */\nconst ABORT_EARLY_EXCLUSION_SECONDS = 60 * 2;\nlet Vhs$1; // SegmentLoader stats that need to have each loader's\n// values summed to calculate the final value\n\nconst loaderStats = ['mediaRequests', 'mediaRequestsAborted', 'mediaRequestsTimedout', 'mediaRequestsErrored', 'mediaTransferDuration', 'mediaBytesTransferred', 'mediaAppends'];\nconst sumLoaderStat = function (stat) {\n  return this.audioSegmentLoader_[stat] + this.mainSegmentLoader_[stat];\n};\nconst shouldSwitchToMedia = function ({\n  currentPlaylist,\n  buffered,\n  currentTime,\n  nextPlaylist,\n  bufferLowWaterLine,\n  bufferHighWaterLine,\n  duration,\n  bufferBasedABR,\n  log\n}) {\n  // we have no other playlist to switch to\n  if (!nextPlaylist) {\n    videojs.log.warn('We received no playlist to switch to. Please check your stream.');\n    return false;\n  }\n  const sharedLogLine = `allowing switch ${currentPlaylist && currentPlaylist.id || 'null'} -> ${nextPlaylist.id}`;\n  if (!currentPlaylist) {\n    log(`${sharedLogLine} as current playlist is not set`);\n    return true;\n  } // no need to switch if playlist is the same\n\n  if (nextPlaylist.id === currentPlaylist.id) {\n    return false;\n  } // determine if current time is in a buffered range.\n\n  const isBuffered = Boolean(findRange(buffered, currentTime).length); // If the playlist is live, then we want to not take low water line into account.\n  // This is because in LIVE, the player plays 3 segments from the end of the\n  // playlist, and if `BUFFER_LOW_WATER_LINE` is greater than the duration availble\n  // in those segments, a viewer will never experience a rendition upswitch.\n\n  if (!currentPlaylist.endList) {\n    // For LLHLS live streams, don't switch renditions before playback has started, as it almost\n    // doubles the time to first playback.\n    if (!isBuffered && typeof currentPlaylist.partTargetDuration === 'number') {\n      log(`not ${sharedLogLine} as current playlist is live llhls, but currentTime isn't in buffered.`);\n      return false;\n    }\n    log(`${sharedLogLine} as current playlist is live`);\n    return true;\n  }\n  const forwardBuffer = timeAheadOf(buffered, currentTime);\n  const maxBufferLowWaterLine = bufferBasedABR ? Config.EXPERIMENTAL_MAX_BUFFER_LOW_WATER_LINE : Config.MAX_BUFFER_LOW_WATER_LINE; // For the same reason as LIVE, we ignore the low water line when the VOD\n  // duration is below the max potential low water line\n\n  if (duration < maxBufferLowWaterLine) {\n    log(`${sharedLogLine} as duration < max low water line (${duration} < ${maxBufferLowWaterLine})`);\n    return true;\n  }\n  const nextBandwidth = nextPlaylist.attributes.BANDWIDTH;\n  const currBandwidth = currentPlaylist.attributes.BANDWIDTH; // when switching down, if our buffer is lower than the high water line,\n  // we can switch down\n\n  if (nextBandwidth < currBandwidth && (!bufferBasedABR || forwardBuffer < bufferHighWaterLine)) {\n    let logLine = `${sharedLogLine} as next bandwidth < current bandwidth (${nextBandwidth} < ${currBandwidth})`;\n    if (bufferBasedABR) {\n      logLine += ` and forwardBuffer < bufferHighWaterLine (${forwardBuffer} < ${bufferHighWaterLine})`;\n    }\n    log(logLine);\n    return true;\n  } // and if our buffer is higher than the low water line,\n  // we can switch up\n\n  if ((!bufferBasedABR || nextBandwidth > currBandwidth) && forwardBuffer >= bufferLowWaterLine) {\n    let logLine = `${sharedLogLine} as forwardBuffer >= bufferLowWaterLine (${forwardBuffer} >= ${bufferLowWaterLine})`;\n    if (bufferBasedABR) {\n      logLine += ` and next bandwidth > current bandwidth (${nextBandwidth} > ${currBandwidth})`;\n    }\n    log(logLine);\n    return true;\n  }\n  log(`not ${sharedLogLine} as no switching criteria met`);\n  return false;\n};\n/**\n * the main playlist controller controller all interactons\n * between playlists and segmentloaders. At this time this mainly\n * involves a main playlist and a series of audio playlists\n * if they are available\n *\n * @class PlaylistController\n * @extends videojs.EventTarget\n */\n\nclass PlaylistController extends videojs.EventTarget {\n  constructor(options) {\n    super();\n    const {\n      src,\n      withCredentials,\n      tech,\n      bandwidth,\n      externVhs,\n      useCueTags,\n      playlistExclusionDuration,\n      enableLowInitialPlaylist,\n      sourceType,\n      cacheEncryptionKeys,\n      bufferBasedABR,\n      leastPixelDiffSelector,\n      captionServices\n    } = options;\n    if (!src) {\n      throw new Error('A non-empty playlist URL or JSON manifest string is required');\n    }\n    let {\n      maxPlaylistRetries\n    } = options;\n    if (maxPlaylistRetries === null || typeof maxPlaylistRetries === 'undefined') {\n      maxPlaylistRetries = Infinity;\n    }\n    Vhs$1 = externVhs;\n    this.bufferBasedABR = Boolean(bufferBasedABR);\n    this.leastPixelDiffSelector = Boolean(leastPixelDiffSelector);\n    this.withCredentials = withCredentials;\n    this.tech_ = tech;\n    this.vhs_ = tech.vhs;\n    this.sourceType_ = sourceType;\n    this.useCueTags_ = useCueTags;\n    this.playlistExclusionDuration = playlistExclusionDuration;\n    this.maxPlaylistRetries = maxPlaylistRetries;\n    this.enableLowInitialPlaylist = enableLowInitialPlaylist;\n    if (this.useCueTags_) {\n      this.cueTagsTrack_ = this.tech_.addTextTrack('metadata', 'ad-cues');\n      this.cueTagsTrack_.inBandMetadataTrackDispatchType = '';\n    }\n    this.requestOptions_ = {\n      withCredentials,\n      maxPlaylistRetries,\n      timeout: null\n    };\n    this.on('error', this.pauseLoading);\n    this.mediaTypes_ = createMediaTypes();\n    this.mediaSource = new window$1.MediaSource();\n    this.handleDurationChange_ = this.handleDurationChange_.bind(this);\n    this.handleSourceOpen_ = this.handleSourceOpen_.bind(this);\n    this.handleSourceEnded_ = this.handleSourceEnded_.bind(this);\n    this.mediaSource.addEventListener('durationchange', this.handleDurationChange_); // load the media source into the player\n\n    this.mediaSource.addEventListener('sourceopen', this.handleSourceOpen_);\n    this.mediaSource.addEventListener('sourceended', this.handleSourceEnded_); // we don't have to handle sourceclose since dispose will handle termination of\n    // everything, and the MediaSource should not be detached without a proper disposal\n\n    this.seekable_ = createTimeRanges();\n    this.hasPlayed_ = false;\n    this.syncController_ = new SyncController(options);\n    this.segmentMetadataTrack_ = tech.addRemoteTextTrack({\n      kind: 'metadata',\n      label: 'segment-metadata'\n    }, false).track;\n    this.decrypter_ = new Decrypter();\n    this.sourceUpdater_ = new SourceUpdater(this.mediaSource);\n    this.inbandTextTracks_ = {};\n    this.timelineChangeController_ = new TimelineChangeController();\n    const segmentLoaderSettings = {\n      vhs: this.vhs_,\n      parse708captions: options.parse708captions,\n      useDtsForTimestampOffset: options.useDtsForTimestampOffset,\n      captionServices,\n      mediaSource: this.mediaSource,\n      currentTime: this.tech_.currentTime.bind(this.tech_),\n      seekable: () => this.seekable(),\n      seeking: () => this.tech_.seeking(),\n      duration: () => this.duration(),\n      hasPlayed: () => this.hasPlayed_,\n      goalBufferLength: () => this.goalBufferLength(),\n      bandwidth,\n      syncController: this.syncController_,\n      decrypter: this.decrypter_,\n      sourceType: this.sourceType_,\n      inbandTextTracks: this.inbandTextTracks_,\n      cacheEncryptionKeys,\n      sourceUpdater: this.sourceUpdater_,\n      timelineChangeController: this.timelineChangeController_,\n      exactManifestTimings: options.exactManifestTimings\n    }; // The source type check not only determines whether a special DASH playlist loader\n    // should be used, but also covers the case where the provided src is a vhs-json\n    // manifest object (instead of a URL). In the case of vhs-json, the default\n    // PlaylistLoader should be used.\n\n    this.mainPlaylistLoader_ = this.sourceType_ === 'dash' ? new DashPlaylistLoader(src, this.vhs_, this.requestOptions_) : new PlaylistLoader(src, this.vhs_, this.requestOptions_);\n    this.setupMainPlaylistLoaderListeners_(); // setup segment loaders\n    // combined audio/video or just video when alternate audio track is selected\n\n    this.mainSegmentLoader_ = new SegmentLoader(merge(segmentLoaderSettings, {\n      segmentMetadataTrack: this.segmentMetadataTrack_,\n      loaderType: 'main'\n    }), options); // alternate audio track\n\n    this.audioSegmentLoader_ = new SegmentLoader(merge(segmentLoaderSettings, {\n      loaderType: 'audio'\n    }), options);\n    this.subtitleSegmentLoader_ = new VTTSegmentLoader(merge(segmentLoaderSettings, {\n      loaderType: 'vtt',\n      featuresNativeTextTracks: this.tech_.featuresNativeTextTracks,\n      loadVttJs: () => new Promise((resolve, reject) => {\n        function onLoad() {\n          tech.off('vttjserror', onError);\n          resolve();\n        }\n        function onError() {\n          tech.off('vttjsloaded', onLoad);\n          reject();\n        }\n        tech.one('vttjsloaded', onLoad);\n        tech.one('vttjserror', onError); // safe to call multiple times, script will be loaded only once:\n\n        tech.addWebVttScript_();\n      })\n    }), options);\n    this.setupSegmentLoaderListeners_();\n    if (this.bufferBasedABR) {\n      this.mainPlaylistLoader_.one('loadedplaylist', () => this.startABRTimer_());\n      this.tech_.on('pause', () => this.stopABRTimer_());\n      this.tech_.on('play', () => this.startABRTimer_());\n    } // Create SegmentLoader stat-getters\n    // mediaRequests_\n    // mediaRequestsAborted_\n    // mediaRequestsTimedout_\n    // mediaRequestsErrored_\n    // mediaTransferDuration_\n    // mediaBytesTransferred_\n    // mediaAppends_\n\n    loaderStats.forEach(stat => {\n      this[stat + '_'] = sumLoaderStat.bind(this, stat);\n    });\n    this.logger_ = logger('pc');\n    this.triggeredFmp4Usage = false;\n    if (this.tech_.preload() === 'none') {\n      this.loadOnPlay_ = () => {\n        this.loadOnPlay_ = null;\n        this.mainPlaylistLoader_.load();\n      };\n      this.tech_.one('play', this.loadOnPlay_);\n    } else {\n      this.mainPlaylistLoader_.load();\n    }\n    this.timeToLoadedData__ = -1;\n    this.mainAppendsToLoadedData__ = -1;\n    this.audioAppendsToLoadedData__ = -1;\n    const event = this.tech_.preload() === 'none' ? 'play' : 'loadstart'; // start the first frame timer on loadstart or play (for preload none)\n\n    this.tech_.one(event, () => {\n      const timeToLoadedDataStart = Date.now();\n      this.tech_.one('loadeddata', () => {\n        this.timeToLoadedData__ = Date.now() - timeToLoadedDataStart;\n        this.mainAppendsToLoadedData__ = this.mainSegmentLoader_.mediaAppends;\n        this.audioAppendsToLoadedData__ = this.audioSegmentLoader_.mediaAppends;\n      });\n    });\n  }\n  mainAppendsToLoadedData_() {\n    return this.mainAppendsToLoadedData__;\n  }\n  audioAppendsToLoadedData_() {\n    return this.audioAppendsToLoadedData__;\n  }\n  appendsToLoadedData_() {\n    const main = this.mainAppendsToLoadedData_();\n    const audio = this.audioAppendsToLoadedData_();\n    if (main === -1 || audio === -1) {\n      return -1;\n    }\n    return main + audio;\n  }\n  timeToLoadedData_() {\n    return this.timeToLoadedData__;\n  }\n  /**\n   * Run selectPlaylist and switch to the new playlist if we should\n   *\n   * @param {string} [reason=abr] a reason for why the ABR check is made\n   * @private\n   */\n\n  checkABR_(reason = 'abr') {\n    const nextPlaylist = this.selectPlaylist();\n    if (nextPlaylist && this.shouldSwitchToMedia_(nextPlaylist)) {\n      this.switchMedia_(nextPlaylist, reason);\n    }\n  }\n  switchMedia_(playlist, cause, delay) {\n    const oldMedia = this.media();\n    const oldId = oldMedia && (oldMedia.id || oldMedia.uri);\n    const newId = playlist.id || playlist.uri;\n    if (oldId && oldId !== newId) {\n      this.logger_(`switch media ${oldId} -> ${newId} from ${cause}`);\n      this.tech_.trigger({\n        type: 'usage',\n        name: `vhs-rendition-change-${cause}`\n      });\n    }\n    this.mainPlaylistLoader_.media(playlist, delay);\n  }\n  /**\n   * Start a timer that periodically calls checkABR_\n   *\n   * @private\n   */\n\n  startABRTimer_() {\n    this.stopABRTimer_();\n    this.abrTimer_ = window$1.setInterval(() => this.checkABR_(), 250);\n  }\n  /**\n   * Stop the timer that periodically calls checkABR_\n   *\n   * @private\n   */\n\n  stopABRTimer_() {\n    // if we're scrubbing, we don't need to pause.\n    // This getter will be added to Video.js in version 7.11.\n    if (this.tech_.scrubbing && this.tech_.scrubbing()) {\n      return;\n    }\n    window$1.clearInterval(this.abrTimer_);\n    this.abrTimer_ = null;\n  }\n  /**\n   * Get a list of playlists for the currently selected audio playlist\n   *\n   * @return {Array} the array of audio playlists\n   */\n\n  getAudioTrackPlaylists_() {\n    const main = this.main();\n    const defaultPlaylists = main && main.playlists || []; // if we don't have any audio groups then we can only\n    // assume that the audio tracks are contained in main\n    // playlist array, use that or an empty array.\n\n    if (!main || !main.mediaGroups || !main.mediaGroups.AUDIO) {\n      return defaultPlaylists;\n    }\n    const AUDIO = main.mediaGroups.AUDIO;\n    const groupKeys = Object.keys(AUDIO);\n    let track; // get the current active track\n\n    if (Object.keys(this.mediaTypes_.AUDIO.groups).length) {\n      track = this.mediaTypes_.AUDIO.activeTrack(); // or get the default track from main if mediaTypes_ isn't setup yet\n    } else {\n      // default group is `main` or just the first group.\n      const defaultGroup = AUDIO.main || groupKeys.length && AUDIO[groupKeys[0]];\n      for (const label in defaultGroup) {\n        if (defaultGroup[label].default) {\n          track = {\n            label\n          };\n          break;\n        }\n      }\n    } // no active track no playlists.\n\n    if (!track) {\n      return defaultPlaylists;\n    }\n    const playlists = []; // get all of the playlists that are possible for the\n    // active track.\n\n    for (const group in AUDIO) {\n      if (AUDIO[group][track.label]) {\n        const properties = AUDIO[group][track.label];\n        if (properties.playlists && properties.playlists.length) {\n          playlists.push.apply(playlists, properties.playlists);\n        } else if (properties.uri) {\n          playlists.push(properties);\n        } else if (main.playlists.length) {\n          // if an audio group does not have a uri\n          // see if we have main playlists that use it as a group.\n          // if we do then add those to the playlists list.\n          for (let i = 0; i < main.playlists.length; i++) {\n            const playlist = main.playlists[i];\n            if (playlist.attributes && playlist.attributes.AUDIO && playlist.attributes.AUDIO === group) {\n              playlists.push(playlist);\n            }\n          }\n        }\n      }\n    }\n    if (!playlists.length) {\n      return defaultPlaylists;\n    }\n    return playlists;\n  }\n  /**\n   * Register event handlers on the main playlist loader. A helper\n   * function for construction time.\n   *\n   * @private\n   */\n\n  setupMainPlaylistLoaderListeners_() {\n    this.mainPlaylistLoader_.on('loadedmetadata', () => {\n      const media = this.mainPlaylistLoader_.media();\n      const requestTimeout = media.targetDuration * 1.5 * 1000; // If we don't have any more available playlists, we don't want to\n      // timeout the request.\n\n      if (isLowestEnabledRendition(this.mainPlaylistLoader_.main, this.mainPlaylistLoader_.media())) {\n        this.requestOptions_.timeout = 0;\n      } else {\n        this.requestOptions_.timeout = requestTimeout;\n      } // if this isn't a live video and preload permits, start\n      // downloading segments\n\n      if (media.endList && this.tech_.preload() !== 'none') {\n        this.mainSegmentLoader_.playlist(media, this.requestOptions_);\n        this.mainSegmentLoader_.load();\n      }\n      setupMediaGroups({\n        sourceType: this.sourceType_,\n        segmentLoaders: {\n          AUDIO: this.audioSegmentLoader_,\n          SUBTITLES: this.subtitleSegmentLoader_,\n          main: this.mainSegmentLoader_\n        },\n        tech: this.tech_,\n        requestOptions: this.requestOptions_,\n        mainPlaylistLoader: this.mainPlaylistLoader_,\n        vhs: this.vhs_,\n        main: this.main(),\n        mediaTypes: this.mediaTypes_,\n        excludePlaylist: this.excludePlaylist.bind(this)\n      });\n      this.triggerPresenceUsage_(this.main(), media);\n      this.setupFirstPlay();\n      if (!this.mediaTypes_.AUDIO.activePlaylistLoader || this.mediaTypes_.AUDIO.activePlaylistLoader.media()) {\n        this.trigger('selectedinitialmedia');\n      } else {\n        // We must wait for the active audio playlist loader to\n        // finish setting up before triggering this event so the\n        // representations API and EME setup is correct\n        this.mediaTypes_.AUDIO.activePlaylistLoader.one('loadedmetadata', () => {\n          this.trigger('selectedinitialmedia');\n        });\n      }\n    });\n    this.mainPlaylistLoader_.on('loadedplaylist', () => {\n      if (this.loadOnPlay_) {\n        this.tech_.off('play', this.loadOnPlay_);\n      }\n      let updatedPlaylist = this.mainPlaylistLoader_.media();\n      if (!updatedPlaylist) {\n        // exclude any variants that are not supported by the browser before selecting\n        // an initial media as the playlist selectors do not consider browser support\n        this.excludeUnsupportedVariants_();\n        let selectedMedia;\n        if (this.enableLowInitialPlaylist) {\n          selectedMedia = this.selectInitialPlaylist();\n        }\n        if (!selectedMedia) {\n          selectedMedia = this.selectPlaylist();\n        }\n        if (!selectedMedia || !this.shouldSwitchToMedia_(selectedMedia)) {\n          return;\n        }\n        this.initialMedia_ = selectedMedia;\n        this.switchMedia_(this.initialMedia_, 'initial'); // Under the standard case where a source URL is provided, loadedplaylist will\n        // fire again since the playlist will be requested. In the case of vhs-json\n        // (where the manifest object is provided as the source), when the media\n        // playlist's `segments` list is already available, a media playlist won't be\n        // requested, and loadedplaylist won't fire again, so the playlist handler must be\n        // called on its own here.\n\n        const haveJsonSource = this.sourceType_ === 'vhs-json' && this.initialMedia_.segments;\n        if (!haveJsonSource) {\n          return;\n        }\n        updatedPlaylist = this.initialMedia_;\n      }\n      this.handleUpdatedMediaPlaylist(updatedPlaylist);\n    });\n    this.mainPlaylistLoader_.on('error', () => {\n      const error = this.mainPlaylistLoader_.error;\n      this.excludePlaylist({\n        playlistToExclude: error.playlist,\n        error\n      });\n    });\n    this.mainPlaylistLoader_.on('mediachanging', () => {\n      this.mainSegmentLoader_.abort();\n      this.mainSegmentLoader_.pause();\n    });\n    this.mainPlaylistLoader_.on('mediachange', () => {\n      const media = this.mainPlaylistLoader_.media();\n      const requestTimeout = media.targetDuration * 1.5 * 1000; // If we don't have any more available playlists, we don't want to\n      // timeout the request.\n\n      if (isLowestEnabledRendition(this.mainPlaylistLoader_.main, this.mainPlaylistLoader_.media())) {\n        this.requestOptions_.timeout = 0;\n      } else {\n        this.requestOptions_.timeout = requestTimeout;\n      }\n      this.mainPlaylistLoader_.load(); // TODO: Create a new event on the PlaylistLoader that signals\n      // that the segments have changed in some way and use that to\n      // update the SegmentLoader instead of doing it twice here and\n      // on `loadedplaylist`\n\n      this.mainSegmentLoader_.playlist(media, this.requestOptions_);\n      this.mainSegmentLoader_.load();\n      this.tech_.trigger({\n        type: 'mediachange',\n        bubbles: true\n      });\n    });\n    this.mainPlaylistLoader_.on('playlistunchanged', () => {\n      const updatedPlaylist = this.mainPlaylistLoader_.media(); // ignore unchanged playlists that have already been\n      // excluded for not-changing. We likely just have a really slowly updating\n      // playlist.\n\n      if (updatedPlaylist.lastExcludeReason_ === 'playlist-unchanged') {\n        return;\n      }\n      const playlistOutdated = this.stuckAtPlaylistEnd_(updatedPlaylist);\n      if (playlistOutdated) {\n        // Playlist has stopped updating and we're stuck at its end. Try to\n        // exclude it and switch to another playlist in the hope that that\n        // one is updating (and give the player a chance to re-adjust to the\n        // safe live point).\n        this.excludePlaylist({\n          error: {\n            message: 'Playlist no longer updating.',\n            reason: 'playlist-unchanged'\n          }\n        }); // useful for monitoring QoS\n\n        this.tech_.trigger('playliststuck');\n      }\n    });\n    this.mainPlaylistLoader_.on('renditiondisabled', () => {\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-rendition-disabled'\n      });\n    });\n    this.mainPlaylistLoader_.on('renditionenabled', () => {\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-rendition-enabled'\n      });\n    });\n  }\n  /**\n   * Given an updated media playlist (whether it was loaded for the first time, or\n   * refreshed for live playlists), update any relevant properties and state to reflect\n   * changes in the media that should be accounted for (e.g., cues and duration).\n   *\n   * @param {Object} updatedPlaylist the updated media playlist object\n   *\n   * @private\n   */\n\n  handleUpdatedMediaPlaylist(updatedPlaylist) {\n    if (this.useCueTags_) {\n      this.updateAdCues_(updatedPlaylist);\n    } // TODO: Create a new event on the PlaylistLoader that signals\n    // that the segments have changed in some way and use that to\n    // update the SegmentLoader instead of doing it twice here and\n    // on `mediachange`\n\n    this.mainSegmentLoader_.playlist(updatedPlaylist, this.requestOptions_);\n    this.updateDuration(!updatedPlaylist.endList); // If the player isn't paused, ensure that the segment loader is running,\n    // as it is possible that it was temporarily stopped while waiting for\n    // a playlist (e.g., in case the playlist errored and we re-requested it).\n\n    if (!this.tech_.paused()) {\n      this.mainSegmentLoader_.load();\n      if (this.audioSegmentLoader_) {\n        this.audioSegmentLoader_.load();\n      }\n    }\n  }\n  /**\n   * A helper function for triggerring presence usage events once per source\n   *\n   * @private\n   */\n\n  triggerPresenceUsage_(main, media) {\n    const mediaGroups = main.mediaGroups || {};\n    let defaultDemuxed = true;\n    const audioGroupKeys = Object.keys(mediaGroups.AUDIO);\n    for (const mediaGroup in mediaGroups.AUDIO) {\n      for (const label in mediaGroups.AUDIO[mediaGroup]) {\n        const properties = mediaGroups.AUDIO[mediaGroup][label];\n        if (!properties.uri) {\n          defaultDemuxed = false;\n        }\n      }\n    }\n    if (defaultDemuxed) {\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-demuxed'\n      });\n    }\n    if (Object.keys(mediaGroups.SUBTITLES).length) {\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-webvtt'\n      });\n    }\n    if (Vhs$1.Playlist.isAes(media)) {\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-aes'\n      });\n    }\n    if (audioGroupKeys.length && Object.keys(mediaGroups.AUDIO[audioGroupKeys[0]]).length > 1) {\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-alternate-audio'\n      });\n    }\n    if (this.useCueTags_) {\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-playlist-cue-tags'\n      });\n    }\n  }\n  shouldSwitchToMedia_(nextPlaylist) {\n    const currentPlaylist = this.mainPlaylistLoader_.media() || this.mainPlaylistLoader_.pendingMedia_;\n    const currentTime = this.tech_.currentTime();\n    const bufferLowWaterLine = this.bufferLowWaterLine();\n    const bufferHighWaterLine = this.bufferHighWaterLine();\n    const buffered = this.tech_.buffered();\n    return shouldSwitchToMedia({\n      buffered,\n      currentTime,\n      currentPlaylist,\n      nextPlaylist,\n      bufferLowWaterLine,\n      bufferHighWaterLine,\n      duration: this.duration(),\n      bufferBasedABR: this.bufferBasedABR,\n      log: this.logger_\n    });\n  }\n  /**\n   * Register event handlers on the segment loaders. A helper function\n   * for construction time.\n   *\n   * @private\n   */\n\n  setupSegmentLoaderListeners_() {\n    this.mainSegmentLoader_.on('bandwidthupdate', () => {\n      // Whether or not buffer based ABR or another ABR is used, on a bandwidth change it's\n      // useful to check to see if a rendition switch should be made.\n      this.checkABR_('bandwidthupdate');\n      this.tech_.trigger('bandwidthupdate');\n    });\n    this.mainSegmentLoader_.on('timeout', () => {\n      if (this.bufferBasedABR) {\n        // If a rendition change is needed, then it would've be done on `bandwidthupdate`.\n        // Here the only consideration is that for buffer based ABR there's no guarantee\n        // of an immediate switch (since the bandwidth is averaged with a timeout\n        // bandwidth value of 1), so force a load on the segment loader to keep it going.\n        this.mainSegmentLoader_.load();\n      }\n    }); // `progress` events are not reliable enough of a bandwidth measure to trigger buffer\n    // based ABR.\n\n    if (!this.bufferBasedABR) {\n      this.mainSegmentLoader_.on('progress', () => {\n        this.trigger('progress');\n      });\n    }\n    this.mainSegmentLoader_.on('error', () => {\n      const error = this.mainSegmentLoader_.error();\n      this.excludePlaylist({\n        playlistToExclude: error.playlist,\n        error\n      });\n    });\n    this.mainSegmentLoader_.on('appenderror', () => {\n      this.error = this.mainSegmentLoader_.error_;\n      this.trigger('error');\n    });\n    this.mainSegmentLoader_.on('syncinfoupdate', () => {\n      this.onSyncInfoUpdate_();\n    });\n    this.mainSegmentLoader_.on('timestampoffset', () => {\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-timestamp-offset'\n      });\n    });\n    this.audioSegmentLoader_.on('syncinfoupdate', () => {\n      this.onSyncInfoUpdate_();\n    });\n    this.audioSegmentLoader_.on('appenderror', () => {\n      this.error = this.audioSegmentLoader_.error_;\n      this.trigger('error');\n    });\n    this.mainSegmentLoader_.on('ended', () => {\n      this.logger_('main segment loader ended');\n      this.onEndOfStream();\n    });\n    this.mainSegmentLoader_.on('earlyabort', event => {\n      // never try to early abort with the new ABR algorithm\n      if (this.bufferBasedABR) {\n        return;\n      }\n      this.delegateLoaders_('all', ['abort']);\n      this.excludePlaylist({\n        error: {\n          message: 'Aborted early because there isn\\'t enough bandwidth to complete ' + 'the request without rebuffering.'\n        },\n        playlistExclusionDuration: ABORT_EARLY_EXCLUSION_SECONDS\n      });\n    });\n    const updateCodecs = () => {\n      if (!this.sourceUpdater_.hasCreatedSourceBuffers()) {\n        return this.tryToCreateSourceBuffers_();\n      }\n      const codecs = this.getCodecsOrExclude_(); // no codecs means that the playlist was excluded\n\n      if (!codecs) {\n        return;\n      }\n      this.sourceUpdater_.addOrChangeSourceBuffers(codecs);\n    };\n    this.mainSegmentLoader_.on('trackinfo', updateCodecs);\n    this.audioSegmentLoader_.on('trackinfo', updateCodecs);\n    this.mainSegmentLoader_.on('fmp4', () => {\n      if (!this.triggeredFmp4Usage) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'vhs-fmp4'\n        });\n        this.triggeredFmp4Usage = true;\n      }\n    });\n    this.audioSegmentLoader_.on('fmp4', () => {\n      if (!this.triggeredFmp4Usage) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'vhs-fmp4'\n        });\n        this.triggeredFmp4Usage = true;\n      }\n    });\n    this.audioSegmentLoader_.on('ended', () => {\n      this.logger_('audioSegmentLoader ended');\n      this.onEndOfStream();\n    });\n  }\n  mediaSecondsLoaded_() {\n    return Math.max(this.audioSegmentLoader_.mediaSecondsLoaded + this.mainSegmentLoader_.mediaSecondsLoaded);\n  }\n  /**\n   * Call load on our SegmentLoaders\n   */\n\n  load() {\n    this.mainSegmentLoader_.load();\n    if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n      this.audioSegmentLoader_.load();\n    }\n    if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n      this.subtitleSegmentLoader_.load();\n    }\n  }\n  /**\n   * Re-tune playback quality level for the current player\n   * conditions. This method will perform destructive actions like removing\n   * already buffered content in order to readjust the currently active\n   * playlist quickly. This is good for manual quality changes\n   *\n   * @private\n   */\n\n  fastQualityChange_(media = this.selectPlaylist()) {\n    if (media === this.mainPlaylistLoader_.media()) {\n      this.logger_('skipping fastQualityChange because new media is same as old');\n      return;\n    }\n    this.switchMedia_(media, 'fast-quality'); // Delete all buffered data to allow an immediate quality switch, then seek to give\n    // the browser a kick to remove any cached frames from the previous rendtion (.04 seconds\n    // ahead is roughly the minimum that will accomplish this across a variety of content\n    // in IE and Edge, but seeking in place is sufficient on all other browsers)\n    // Edge/IE bug: https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/14600375/\n    // Chrome bug: https://bugs.chromium.org/p/chromium/issues/detail?id=651904\n\n    this.mainSegmentLoader_.resetEverything(() => {\n      // Since this is not a typical seek, we avoid the seekTo method which can cause segments\n      // from the previously enabled rendition to load before the new playlist has finished loading\n      if (videojs.browser.IE_VERSION || videojs.browser.IS_EDGE) {\n        this.tech_.setCurrentTime(this.tech_.currentTime() + 0.04);\n      } else {\n        this.tech_.setCurrentTime(this.tech_.currentTime());\n      }\n    }); // don't need to reset audio as it is reset when media changes\n  }\n  /**\n   * Begin playback.\n   */\n\n  play() {\n    if (this.setupFirstPlay()) {\n      return;\n    }\n    if (this.tech_.ended()) {\n      this.tech_.setCurrentTime(0);\n    }\n    if (this.hasPlayed_) {\n      this.load();\n    }\n    const seekable = this.tech_.seekable(); // if the viewer has paused and we fell out of the live window,\n    // seek forward to the live point\n\n    if (this.tech_.duration() === Infinity) {\n      if (this.tech_.currentTime() < seekable.start(0)) {\n        return this.tech_.setCurrentTime(seekable.end(seekable.length - 1));\n      }\n    }\n  }\n  /**\n   * Seek to the latest media position if this is a live video and the\n   * player and video are loaded and initialized.\n   */\n\n  setupFirstPlay() {\n    const media = this.mainPlaylistLoader_.media(); // Check that everything is ready to begin buffering for the first call to play\n    //  If 1) there is no active media\n    //     2) the player is paused\n    //     3) the first play has already been setup\n    // then exit early\n\n    if (!media || this.tech_.paused() || this.hasPlayed_) {\n      return false;\n    } // when the video is a live stream\n\n    if (!media.endList) {\n      const seekable = this.seekable();\n      if (!seekable.length) {\n        // without a seekable range, the player cannot seek to begin buffering at the live\n        // point\n        return false;\n      }\n      if (videojs.browser.IE_VERSION && this.tech_.readyState() === 0) {\n        // IE11 throws an InvalidStateError if you try to set currentTime while the\n        // readyState is 0, so it must be delayed until the tech fires loadedmetadata.\n        this.tech_.one('loadedmetadata', () => {\n          this.trigger('firstplay');\n          this.tech_.setCurrentTime(seekable.end(0));\n          this.hasPlayed_ = true;\n        });\n        return false;\n      } // trigger firstplay to inform the source handler to ignore the next seek event\n\n      this.trigger('firstplay'); // seek to the live point\n\n      this.tech_.setCurrentTime(seekable.end(0));\n    }\n    this.hasPlayed_ = true; // we can begin loading now that everything is ready\n\n    this.load();\n    return true;\n  }\n  /**\n   * handle the sourceopen event on the MediaSource\n   *\n   * @private\n   */\n\n  handleSourceOpen_() {\n    // Only attempt to create the source buffer if none already exist.\n    // handleSourceOpen is also called when we are \"re-opening\" a source buffer\n    // after `endOfStream` has been called (in response to a seek for instance)\n    this.tryToCreateSourceBuffers_(); // if autoplay is enabled, begin playback. This is duplicative of\n    // code in video.js but is required because play() must be invoked\n    // *after* the media source has opened.\n\n    if (this.tech_.autoplay()) {\n      const playPromise = this.tech_.play(); // Catch/silence error when a pause interrupts a play request\n      // on browsers which return a promise\n\n      if (typeof playPromise !== 'undefined' && typeof playPromise.then === 'function') {\n        playPromise.then(null, e => {});\n      }\n    }\n    this.trigger('sourceopen');\n  }\n  /**\n   * handle the sourceended event on the MediaSource\n   *\n   * @private\n   */\n\n  handleSourceEnded_() {\n    if (!this.inbandTextTracks_.metadataTrack_) {\n      return;\n    }\n    const cues = this.inbandTextTracks_.metadataTrack_.cues;\n    if (!cues || !cues.length) {\n      return;\n    }\n    const duration = this.duration();\n    cues[cues.length - 1].endTime = isNaN(duration) || Math.abs(duration) === Infinity ? Number.MAX_VALUE : duration;\n  }\n  /**\n   * handle the durationchange event on the MediaSource\n   *\n   * @private\n   */\n\n  handleDurationChange_() {\n    this.tech_.trigger('durationchange');\n  }\n  /**\n   * Calls endOfStream on the media source when all active stream types have called\n   * endOfStream\n   *\n   * @param {string} streamType\n   *        Stream type of the segment loader that called endOfStream\n   * @private\n   */\n\n  onEndOfStream() {\n    let isEndOfStream = this.mainSegmentLoader_.ended_;\n    if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n      const mainMediaInfo = this.mainSegmentLoader_.getCurrentMediaInfo_(); // if the audio playlist loader exists, then alternate audio is active\n\n      if (!mainMediaInfo || mainMediaInfo.hasVideo) {\n        // if we do not know if the main segment loader contains video yet or if we\n        // definitively know the main segment loader contains video, then we need to wait\n        // for both main and audio segment loaders to call endOfStream\n        isEndOfStream = isEndOfStream && this.audioSegmentLoader_.ended_;\n      } else {\n        // otherwise just rely on the audio loader\n        isEndOfStream = this.audioSegmentLoader_.ended_;\n      }\n    }\n    if (!isEndOfStream) {\n      return;\n    }\n    this.stopABRTimer_();\n    this.sourceUpdater_.endOfStream();\n  }\n  /**\n   * Check if a playlist has stopped being updated\n   *\n   * @param {Object} playlist the media playlist object\n   * @return {boolean} whether the playlist has stopped being updated or not\n   */\n\n  stuckAtPlaylistEnd_(playlist) {\n    const seekable = this.seekable();\n    if (!seekable.length) {\n      // playlist doesn't have enough information to determine whether we are stuck\n      return false;\n    }\n    const expired = this.syncController_.getExpiredTime(playlist, this.duration());\n    if (expired === null) {\n      return false;\n    } // does not use the safe live end to calculate playlist end, since we\n    // don't want to say we are stuck while there is still content\n\n    const absolutePlaylistEnd = Vhs$1.Playlist.playlistEnd(playlist, expired);\n    const currentTime = this.tech_.currentTime();\n    const buffered = this.tech_.buffered();\n    if (!buffered.length) {\n      // return true if the playhead reached the absolute end of the playlist\n      return absolutePlaylistEnd - currentTime <= SAFE_TIME_DELTA;\n    }\n    const bufferedEnd = buffered.end(buffered.length - 1); // return true if there is too little buffer left and buffer has reached absolute\n    // end of playlist\n\n    return bufferedEnd - currentTime <= SAFE_TIME_DELTA && absolutePlaylistEnd - bufferedEnd <= SAFE_TIME_DELTA;\n  }\n  /**\n   * Exclude a playlist for a set amount of time, making it unavailable for selection by\n   * the rendition selection algorithm, then force a new playlist (rendition) selection.\n   *\n   * @param {Object=} playlistToExclude\n   *                  the playlist to exclude, defaults to the currently selected playlist\n   * @param {Object=} error\n   *                  an optional error\n   * @param {number=} playlistExclusionDuration\n   *                  an optional number of seconds to exclude the playlist\n   */\n\n  excludePlaylist({\n    playlistToExclude = this.mainPlaylistLoader_.media(),\n    error = {},\n    playlistExclusionDuration\n  }) {\n    // If the `error` was generated by the playlist loader, it will contain\n    // the playlist we were trying to load (but failed) and that should be\n    // excluded instead of the currently selected playlist which is likely\n    // out-of-date in this scenario\n    playlistToExclude = playlistToExclude || this.mainPlaylistLoader_.media();\n    playlistExclusionDuration = playlistExclusionDuration || error.playlistExclusionDuration || this.playlistExclusionDuration; // If there is no current playlist, then an error occurred while we were\n    // trying to load the main OR while we were disposing of the tech\n\n    if (!playlistToExclude) {\n      this.error = error;\n      if (this.mediaSource.readyState !== 'open') {\n        this.trigger('error');\n      } else {\n        this.sourceUpdater_.endOfStream('network');\n      }\n      return;\n    }\n    playlistToExclude.playlistErrors_++;\n    const playlists = this.mainPlaylistLoader_.main.playlists;\n    const enabledPlaylists = playlists.filter(isEnabled);\n    const isFinalRendition = enabledPlaylists.length === 1 && enabledPlaylists[0] === playlistToExclude; // Don't exclude the only playlist unless it was excluded\n    // forever\n\n    if (playlists.length === 1 && playlistExclusionDuration !== Infinity) {\n      videojs.log.warn(`Problem encountered with playlist ${playlistToExclude.id}. ` + 'Trying again since it is the only playlist.');\n      this.tech_.trigger('retryplaylist'); // if this is a final rendition, we should delay\n\n      return this.mainPlaylistLoader_.load(isFinalRendition);\n    }\n    if (isFinalRendition) {\n      // Since we're on the final non-excluded playlist, and we're about to exclude\n      // it, instead of erring the player or retrying this playlist, clear out the current\n      // exclusion list. This allows other playlists to be attempted in case any have been\n      // fixed.\n      let reincluded = false;\n      playlists.forEach(playlist => {\n        // skip current playlist which is about to be excluded\n        if (playlist === playlistToExclude) {\n          return;\n        }\n        const excludeUntil = playlist.excludeUntil; // a playlist cannot be reincluded if it wasn't excluded to begin with.\n\n        if (typeof excludeUntil !== 'undefined' && excludeUntil !== Infinity) {\n          reincluded = true;\n          delete playlist.excludeUntil;\n        }\n      });\n      if (reincluded) {\n        videojs.log.warn('Removing other playlists from the exclusion list because the last ' + 'rendition is about to be excluded.'); // Technically we are retrying a playlist, in that we are simply retrying a previous\n        // playlist. This is needed for users relying on the retryplaylist event to catch a\n        // case where the player might be stuck and looping through \"dead\" playlists.\n\n        this.tech_.trigger('retryplaylist');\n      }\n    } // Exclude this playlist\n\n    let excludeUntil;\n    if (playlistToExclude.playlistErrors_ > this.maxPlaylistRetries) {\n      excludeUntil = Infinity;\n    } else {\n      excludeUntil = Date.now() + playlistExclusionDuration * 1000;\n    }\n    playlistToExclude.excludeUntil = excludeUntil;\n    if (error.reason) {\n      playlistToExclude.lastExcludeReason_ = error.reason;\n    }\n    this.tech_.trigger('excludeplaylist');\n    this.tech_.trigger({\n      type: 'usage',\n      name: 'vhs-rendition-excluded'\n    }); // TODO: only load a new playlist if we're excluding the current playlist\n    // If this function was called with a playlist that's not the current active playlist\n    // (e.g., media().id !== playlistToExclude.id),\n    // then a new playlist should not be selected and loaded, as there's nothing wrong with the current playlist.\n\n    const nextPlaylist = this.selectPlaylist();\n    if (!nextPlaylist) {\n      this.error = 'Playback cannot continue. No available working or supported playlists.';\n      this.trigger('error');\n      return;\n    }\n    const logFn = error.internal ? this.logger_ : videojs.log.warn;\n    const errorMessage = error.message ? ' ' + error.message : '';\n    logFn(`${error.internal ? 'Internal problem' : 'Problem'} encountered with playlist ${playlistToExclude.id}.` + `${errorMessage} Switching to playlist ${nextPlaylist.id}.`); // if audio group changed reset audio loaders\n\n    if (nextPlaylist.attributes.AUDIO !== playlistToExclude.attributes.AUDIO) {\n      this.delegateLoaders_('audio', ['abort', 'pause']);\n    } // if subtitle group changed reset subtitle loaders\n\n    if (nextPlaylist.attributes.SUBTITLES !== playlistToExclude.attributes.SUBTITLES) {\n      this.delegateLoaders_('subtitle', ['abort', 'pause']);\n    }\n    this.delegateLoaders_('main', ['abort', 'pause']);\n    const delayDuration = nextPlaylist.targetDuration / 2 * 1000 || 5 * 1000;\n    const shouldDelay = typeof nextPlaylist.lastRequest === 'number' && Date.now() - nextPlaylist.lastRequest <= delayDuration; // delay if it's a final rendition or if the last refresh is sooner than half targetDuration\n\n    return this.switchMedia_(nextPlaylist, 'exclude', isFinalRendition || shouldDelay);\n  }\n  /**\n   * Pause all segment/playlist loaders\n   */\n\n  pauseLoading() {\n    this.delegateLoaders_('all', ['abort', 'pause']);\n    this.stopABRTimer_();\n  }\n  /**\n   * Call a set of functions in order on playlist loaders, segment loaders,\n   * or both types of loaders.\n   *\n   * @param {string} filter\n   *        Filter loaders that should call fnNames using a string. Can be:\n   *        * all - run on all loaders\n   *        * audio - run on all audio loaders\n   *        * subtitle - run on all subtitle loaders\n   *        * main - run on the main loaders\n   *\n   * @param {Array|string} fnNames\n   *        A string or array of function names to call.\n   */\n\n  delegateLoaders_(filter, fnNames) {\n    const loaders = [];\n    const dontFilterPlaylist = filter === 'all';\n    if (dontFilterPlaylist || filter === 'main') {\n      loaders.push(this.mainPlaylistLoader_);\n    }\n    const mediaTypes = [];\n    if (dontFilterPlaylist || filter === 'audio') {\n      mediaTypes.push('AUDIO');\n    }\n    if (dontFilterPlaylist || filter === 'subtitle') {\n      mediaTypes.push('CLOSED-CAPTIONS');\n      mediaTypes.push('SUBTITLES');\n    }\n    mediaTypes.forEach(mediaType => {\n      const loader = this.mediaTypes_[mediaType] && this.mediaTypes_[mediaType].activePlaylistLoader;\n      if (loader) {\n        loaders.push(loader);\n      }\n    });\n    ['main', 'audio', 'subtitle'].forEach(name => {\n      const loader = this[`${name}SegmentLoader_`];\n      if (loader && (filter === name || filter === 'all')) {\n        loaders.push(loader);\n      }\n    });\n    loaders.forEach(loader => fnNames.forEach(fnName => {\n      if (typeof loader[fnName] === 'function') {\n        loader[fnName]();\n      }\n    }));\n  }\n  /**\n   * set the current time on all segment loaders\n   *\n   * @param {TimeRange} currentTime the current time to set\n   * @return {TimeRange} the current time\n   */\n\n  setCurrentTime(currentTime) {\n    const buffered = findRange(this.tech_.buffered(), currentTime);\n    if (!(this.mainPlaylistLoader_ && this.mainPlaylistLoader_.media())) {\n      // return immediately if the metadata is not ready yet\n      return 0;\n    } // it's clearly an edge-case but don't thrown an error if asked to\n    // seek within an empty playlist\n\n    if (!this.mainPlaylistLoader_.media().segments) {\n      return 0;\n    } // if the seek location is already buffered, continue buffering as usual\n\n    if (buffered && buffered.length) {\n      return currentTime;\n    } // cancel outstanding requests so we begin buffering at the new\n    // location\n\n    this.mainSegmentLoader_.resetEverything();\n    this.mainSegmentLoader_.abort();\n    if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n      this.audioSegmentLoader_.resetEverything();\n      this.audioSegmentLoader_.abort();\n    }\n    if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n      this.subtitleSegmentLoader_.resetEverything();\n      this.subtitleSegmentLoader_.abort();\n    } // start segment loader loading in case they are paused\n\n    this.load();\n  }\n  /**\n   * get the current duration\n   *\n   * @return {TimeRange} the duration\n   */\n\n  duration() {\n    if (!this.mainPlaylistLoader_) {\n      return 0;\n    }\n    const media = this.mainPlaylistLoader_.media();\n    if (!media) {\n      // no playlists loaded yet, so can't determine a duration\n      return 0;\n    } // Don't rely on the media source for duration in the case of a live playlist since\n    // setting the native MediaSource's duration to infinity ends up with consequences to\n    // seekable behavior. See https://github.com/w3c/media-source/issues/5 for details.\n    //\n    // This is resolved in the spec by https://github.com/w3c/media-source/pull/92,\n    // however, few browsers have support for setLiveSeekableRange()\n    // https://developer.mozilla.org/en-US/docs/Web/API/MediaSource/setLiveSeekableRange\n    //\n    // Until a time when the duration of the media source can be set to infinity, and a\n    // seekable range specified across browsers, just return Infinity.\n\n    if (!media.endList) {\n      return Infinity;\n    } // Since this is a VOD video, it is safe to rely on the media source's duration (if\n    // available). If it's not available, fall back to a playlist-calculated estimate.\n\n    if (this.mediaSource) {\n      return this.mediaSource.duration;\n    }\n    return Vhs$1.Playlist.duration(media);\n  }\n  /**\n   * check the seekable range\n   *\n   * @return {TimeRange} the seekable range\n   */\n\n  seekable() {\n    return this.seekable_;\n  }\n  onSyncInfoUpdate_() {\n    let audioSeekable; // TODO check for creation of both source buffers before updating seekable\n    //\n    // A fix was made to this function where a check for\n    // this.sourceUpdater_.hasCreatedSourceBuffers\n    // was added to ensure that both source buffers were created before seekable was\n    // updated. However, it originally had a bug where it was checking for a true and\n    // returning early instead of checking for false. Setting it to check for false to\n    // return early though created other issues. A call to play() would check for seekable\n    // end without verifying that a seekable range was present. In addition, even checking\n    // for that didn't solve some issues, as handleFirstPlay is sometimes worked around\n    // due to a media update calling load on the segment loaders, skipping a seek to live,\n    // thereby starting live streams at the beginning of the stream rather than at the end.\n    //\n    // This conditional should be fixed to wait for the creation of two source buffers at\n    // the same time as the other sections of code are fixed to properly seek to live and\n    // not throw an error due to checking for a seekable end when no seekable range exists.\n    //\n    // For now, fall back to the older behavior, with the understanding that the seekable\n    // range may not be completely correct, leading to a suboptimal initial live point.\n\n    if (!this.mainPlaylistLoader_) {\n      return;\n    }\n    let media = this.mainPlaylistLoader_.media();\n    if (!media) {\n      return;\n    }\n    let expired = this.syncController_.getExpiredTime(media, this.duration());\n    if (expired === null) {\n      // not enough information to update seekable\n      return;\n    }\n    const main = this.mainPlaylistLoader_.main;\n    const mainSeekable = Vhs$1.Playlist.seekable(media, expired, Vhs$1.Playlist.liveEdgeDelay(main, media));\n    if (mainSeekable.length === 0) {\n      return;\n    }\n    if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n      media = this.mediaTypes_.AUDIO.activePlaylistLoader.media();\n      expired = this.syncController_.getExpiredTime(media, this.duration());\n      if (expired === null) {\n        return;\n      }\n      audioSeekable = Vhs$1.Playlist.seekable(media, expired, Vhs$1.Playlist.liveEdgeDelay(main, media));\n      if (audioSeekable.length === 0) {\n        return;\n      }\n    }\n    let oldEnd;\n    let oldStart;\n    if (this.seekable_ && this.seekable_.length) {\n      oldEnd = this.seekable_.end(0);\n      oldStart = this.seekable_.start(0);\n    }\n    if (!audioSeekable) {\n      // seekable has been calculated based on buffering video data so it\n      // can be returned directly\n      this.seekable_ = mainSeekable;\n    } else if (audioSeekable.start(0) > mainSeekable.end(0) || mainSeekable.start(0) > audioSeekable.end(0)) {\n      // seekables are pretty far off, rely on main\n      this.seekable_ = mainSeekable;\n    } else {\n      this.seekable_ = createTimeRanges([[audioSeekable.start(0) > mainSeekable.start(0) ? audioSeekable.start(0) : mainSeekable.start(0), audioSeekable.end(0) < mainSeekable.end(0) ? audioSeekable.end(0) : mainSeekable.end(0)]]);\n    } // seekable is the same as last time\n\n    if (this.seekable_ && this.seekable_.length) {\n      if (this.seekable_.end(0) === oldEnd && this.seekable_.start(0) === oldStart) {\n        return;\n      }\n    }\n    this.logger_(`seekable updated [${printableRange(this.seekable_)}]`);\n    this.tech_.trigger('seekablechanged');\n  }\n  /**\n   * Update the player duration\n   */\n\n  updateDuration(isLive) {\n    if (this.updateDuration_) {\n      this.mediaSource.removeEventListener('sourceopen', this.updateDuration_);\n      this.updateDuration_ = null;\n    }\n    if (this.mediaSource.readyState !== 'open') {\n      this.updateDuration_ = this.updateDuration.bind(this, isLive);\n      this.mediaSource.addEventListener('sourceopen', this.updateDuration_);\n      return;\n    }\n    if (isLive) {\n      const seekable = this.seekable();\n      if (!seekable.length) {\n        return;\n      } // Even in the case of a live playlist, the native MediaSource's duration should not\n      // be set to Infinity (even though this would be expected for a live playlist), since\n      // setting the native MediaSource's duration to infinity ends up with consequences to\n      // seekable behavior. See https://github.com/w3c/media-source/issues/5 for details.\n      //\n      // This is resolved in the spec by https://github.com/w3c/media-source/pull/92,\n      // however, few browsers have support for setLiveSeekableRange()\n      // https://developer.mozilla.org/en-US/docs/Web/API/MediaSource/setLiveSeekableRange\n      //\n      // Until a time when the duration of the media source can be set to infinity, and a\n      // seekable range specified across browsers, the duration should be greater than or\n      // equal to the last possible seekable value.\n      // MediaSource duration starts as NaN\n      // It is possible (and probable) that this case will never be reached for many\n      // sources, since the MediaSource reports duration as the highest value without\n      // accounting for timestamp offset. For example, if the timestamp offset is -100 and\n      // we buffered times 0 to 100 with real times of 100 to 200, even though current\n      // time will be between 0 and 100, the native media source may report the duration\n      // as 200. However, since we report duration separate from the media source (as\n      // Infinity), and as long as the native media source duration value is greater than\n      // our reported seekable range, seeks will work as expected. The large number as\n      // duration for live is actually a strategy used by some players to work around the\n      // issue of live seekable ranges cited above.\n\n      if (isNaN(this.mediaSource.duration) || this.mediaSource.duration < seekable.end(seekable.length - 1)) {\n        this.sourceUpdater_.setDuration(seekable.end(seekable.length - 1));\n      }\n      return;\n    }\n    const buffered = this.tech_.buffered();\n    let duration = Vhs$1.Playlist.duration(this.mainPlaylistLoader_.media());\n    if (buffered.length > 0) {\n      duration = Math.max(duration, buffered.end(buffered.length - 1));\n    }\n    if (this.mediaSource.duration !== duration) {\n      this.sourceUpdater_.setDuration(duration);\n    }\n  }\n  /**\n   * dispose of the PlaylistController and everything\n   * that it controls\n   */\n\n  dispose() {\n    this.trigger('dispose');\n    this.decrypter_.terminate();\n    this.mainPlaylistLoader_.dispose();\n    this.mainSegmentLoader_.dispose();\n    if (this.loadOnPlay_) {\n      this.tech_.off('play', this.loadOnPlay_);\n    }\n    ['AUDIO', 'SUBTITLES'].forEach(type => {\n      const groups = this.mediaTypes_[type].groups;\n      for (const id in groups) {\n        groups[id].forEach(group => {\n          if (group.playlistLoader) {\n            group.playlistLoader.dispose();\n          }\n        });\n      }\n    });\n    this.audioSegmentLoader_.dispose();\n    this.subtitleSegmentLoader_.dispose();\n    this.sourceUpdater_.dispose();\n    this.timelineChangeController_.dispose();\n    this.stopABRTimer_();\n    if (this.updateDuration_) {\n      this.mediaSource.removeEventListener('sourceopen', this.updateDuration_);\n    }\n    this.mediaSource.removeEventListener('durationchange', this.handleDurationChange_); // load the media source into the player\n\n    this.mediaSource.removeEventListener('sourceopen', this.handleSourceOpen_);\n    this.mediaSource.removeEventListener('sourceended', this.handleSourceEnded_);\n    this.off();\n  }\n  /**\n   * return the main playlist object if we have one\n   *\n   * @return {Object} the main playlist object that we parsed\n   */\n\n  main() {\n    return this.mainPlaylistLoader_.main;\n  }\n  /**\n   * return the currently selected playlist\n   *\n   * @return {Object} the currently selected playlist object that we parsed\n   */\n\n  media() {\n    // playlist loader will not return media if it has not been fully loaded\n    return this.mainPlaylistLoader_.media() || this.initialMedia_;\n  }\n  areMediaTypesKnown_() {\n    const usingAudioLoader = !!this.mediaTypes_.AUDIO.activePlaylistLoader;\n    const hasMainMediaInfo = !!this.mainSegmentLoader_.getCurrentMediaInfo_(); // if we are not using an audio loader, then we have audio media info\n    // otherwise check on the segment loader.\n\n    const hasAudioMediaInfo = !usingAudioLoader ? true : !!this.audioSegmentLoader_.getCurrentMediaInfo_(); // one or both loaders has not loaded sufficently to get codecs\n\n    if (!hasMainMediaInfo || !hasAudioMediaInfo) {\n      return false;\n    }\n    return true;\n  }\n  getCodecsOrExclude_() {\n    const media = {\n      main: this.mainSegmentLoader_.getCurrentMediaInfo_() || {},\n      audio: this.audioSegmentLoader_.getCurrentMediaInfo_() || {}\n    };\n    const playlist = this.mainSegmentLoader_.getPendingSegmentPlaylist() || this.media(); // set \"main\" media equal to video\n\n    media.video = media.main;\n    const playlistCodecs = codecsForPlaylist(this.main(), playlist);\n    const codecs = {};\n    const usingAudioLoader = !!this.mediaTypes_.AUDIO.activePlaylistLoader;\n    if (media.main.hasVideo) {\n      codecs.video = playlistCodecs.video || media.main.videoCodec || DEFAULT_VIDEO_CODEC;\n    }\n    if (media.main.isMuxed) {\n      codecs.video += `,${playlistCodecs.audio || media.main.audioCodec || DEFAULT_AUDIO_CODEC}`;\n    }\n    if (media.main.hasAudio && !media.main.isMuxed || media.audio.hasAudio || usingAudioLoader) {\n      codecs.audio = playlistCodecs.audio || media.main.audioCodec || media.audio.audioCodec || DEFAULT_AUDIO_CODEC; // set audio isFmp4 so we use the correct \"supports\" function below\n\n      media.audio.isFmp4 = media.main.hasAudio && !media.main.isMuxed ? media.main.isFmp4 : media.audio.isFmp4;\n    } // no codecs, no playback.\n\n    if (!codecs.audio && !codecs.video) {\n      this.excludePlaylist({\n        playlistToExclude: playlist,\n        error: {\n          message: 'Could not determine codecs for playlist.'\n        },\n        playlistExclusionDuration: Infinity\n      });\n      return;\n    } // fmp4 relies on browser support, while ts relies on muxer support\n\n    const supportFunction = (isFmp4, codec) => isFmp4 ? browserSupportsCodec(codec) : muxerSupportsCodec(codec);\n    const unsupportedCodecs = {};\n    let unsupportedAudio;\n    ['video', 'audio'].forEach(function (type) {\n      if (codecs.hasOwnProperty(type) && !supportFunction(media[type].isFmp4, codecs[type])) {\n        const supporter = media[type].isFmp4 ? 'browser' : 'muxer';\n        unsupportedCodecs[supporter] = unsupportedCodecs[supporter] || [];\n        unsupportedCodecs[supporter].push(codecs[type]);\n        if (type === 'audio') {\n          unsupportedAudio = supporter;\n        }\n      }\n    });\n    if (usingAudioLoader && unsupportedAudio && playlist.attributes.AUDIO) {\n      const audioGroup = playlist.attributes.AUDIO;\n      this.main().playlists.forEach(variant => {\n        const variantAudioGroup = variant.attributes && variant.attributes.AUDIO;\n        if (variantAudioGroup === audioGroup && variant !== playlist) {\n          variant.excludeUntil = Infinity;\n        }\n      });\n      this.logger_(`excluding audio group ${audioGroup} as ${unsupportedAudio} does not support codec(s): \"${codecs.audio}\"`);\n    } // if we have any unsupported codecs exclude this playlist.\n\n    if (Object.keys(unsupportedCodecs).length) {\n      const message = Object.keys(unsupportedCodecs).reduce((acc, supporter) => {\n        if (acc) {\n          acc += ', ';\n        }\n        acc += `${supporter} does not support codec(s): \"${unsupportedCodecs[supporter].join(',')}\"`;\n        return acc;\n      }, '') + '.';\n      this.excludePlaylist({\n        playlistToExclude: playlist,\n        error: {\n          internal: true,\n          message\n        },\n        playlistExclusionDuration: Infinity\n      });\n      return;\n    } // check if codec switching is happening\n\n    if (this.sourceUpdater_.hasCreatedSourceBuffers() && !this.sourceUpdater_.canChangeType()) {\n      const switchMessages = [];\n      ['video', 'audio'].forEach(type => {\n        const newCodec = (parseCodecs(this.sourceUpdater_.codecs[type] || '')[0] || {}).type;\n        const oldCodec = (parseCodecs(codecs[type] || '')[0] || {}).type;\n        if (newCodec && oldCodec && newCodec.toLowerCase() !== oldCodec.toLowerCase()) {\n          switchMessages.push(`\"${this.sourceUpdater_.codecs[type]}\" -> \"${codecs[type]}\"`);\n        }\n      });\n      if (switchMessages.length) {\n        this.excludePlaylist({\n          playlistToExclude: playlist,\n          error: {\n            message: `Codec switching not supported: ${switchMessages.join(', ')}.`,\n            internal: true\n          },\n          playlistExclusionDuration: Infinity\n        });\n        return;\n      }\n    } // TODO: when using the muxer shouldn't we just return\n    // the codecs that the muxer outputs?\n\n    return codecs;\n  }\n  /**\n   * Create source buffers and exlude any incompatible renditions.\n   *\n   * @private\n   */\n\n  tryToCreateSourceBuffers_() {\n    // media source is not ready yet or sourceBuffers are already\n    // created.\n    if (this.mediaSource.readyState !== 'open' || this.sourceUpdater_.hasCreatedSourceBuffers()) {\n      return;\n    }\n    if (!this.areMediaTypesKnown_()) {\n      return;\n    }\n    const codecs = this.getCodecsOrExclude_(); // no codecs means that the playlist was excluded\n\n    if (!codecs) {\n      return;\n    }\n    this.sourceUpdater_.createSourceBuffers(codecs);\n    const codecString = [codecs.video, codecs.audio].filter(Boolean).join(',');\n    this.excludeIncompatibleVariants_(codecString);\n  }\n  /**\n   * Excludes playlists with codecs that are unsupported by the muxer and browser.\n   */\n\n  excludeUnsupportedVariants_() {\n    const playlists = this.main().playlists;\n    const ids = []; // TODO: why don't we have a property to loop through all\n    // playlist? Why did we ever mix indexes and keys?\n\n    Object.keys(playlists).forEach(key => {\n      const variant = playlists[key]; // check if we already processed this playlist.\n\n      if (ids.indexOf(variant.id) !== -1) {\n        return;\n      }\n      ids.push(variant.id);\n      const codecs = codecsForPlaylist(this.main, variant);\n      const unsupported = [];\n      if (codecs.audio && !muxerSupportsCodec(codecs.audio) && !browserSupportsCodec(codecs.audio)) {\n        unsupported.push(`audio codec ${codecs.audio}`);\n      }\n      if (codecs.video && !muxerSupportsCodec(codecs.video) && !browserSupportsCodec(codecs.video)) {\n        unsupported.push(`video codec ${codecs.video}`);\n      }\n      if (codecs.text && codecs.text === 'stpp.ttml.im1t') {\n        unsupported.push(`text codec ${codecs.text}`);\n      }\n      if (unsupported.length) {\n        variant.excludeUntil = Infinity;\n        this.logger_(`excluding ${variant.id} for unsupported: ${unsupported.join(', ')}`);\n      }\n    });\n  }\n  /**\n   * Exclude playlists that are known to be codec or\n   * stream-incompatible with the SourceBuffer configuration. For\n   * instance, Media Source Extensions would cause the video element to\n   * stall waiting for video data if you switched from a variant with\n   * video and audio to an audio-only one.\n   *\n   * @param {Object} media a media playlist compatible with the current\n   * set of SourceBuffers. Variants in the current main playlist that\n   * do not appear to have compatible codec or stream configurations\n   * will be excluded from the default playlist selection algorithm\n   * indefinitely.\n   * @private\n   */\n\n  excludeIncompatibleVariants_(codecString) {\n    const ids = [];\n    const playlists = this.main().playlists;\n    const codecs = unwrapCodecList(parseCodecs(codecString));\n    const codecCount_ = codecCount(codecs);\n    const videoDetails = codecs.video && parseCodecs(codecs.video)[0] || null;\n    const audioDetails = codecs.audio && parseCodecs(codecs.audio)[0] || null;\n    Object.keys(playlists).forEach(key => {\n      const variant = playlists[key]; // check if we already processed this playlist.\n      // or it if it is already excluded forever.\n\n      if (ids.indexOf(variant.id) !== -1 || variant.excludeUntil === Infinity) {\n        return;\n      }\n      ids.push(variant.id);\n      const exclusionReasons = []; // get codecs from the playlist for this variant\n\n      const variantCodecs = codecsForPlaylist(this.mainPlaylistLoader_.main, variant);\n      const variantCodecCount = codecCount(variantCodecs); // if no codecs are listed, we cannot determine that this\n      // variant is incompatible. Wait for mux.js to probe\n\n      if (!variantCodecs.audio && !variantCodecs.video) {\n        return;\n      } // TODO: we can support this by removing the\n      // old media source and creating a new one, but it will take some work.\n      // The number of streams cannot change\n\n      if (variantCodecCount !== codecCount_) {\n        exclusionReasons.push(`codec count \"${variantCodecCount}\" !== \"${codecCount_}\"`);\n      } // only exclude playlists by codec change, if codecs cannot switch\n      // during playback.\n\n      if (!this.sourceUpdater_.canChangeType()) {\n        const variantVideoDetails = variantCodecs.video && parseCodecs(variantCodecs.video)[0] || null;\n        const variantAudioDetails = variantCodecs.audio && parseCodecs(variantCodecs.audio)[0] || null; // the video codec cannot change\n\n        if (variantVideoDetails && videoDetails && variantVideoDetails.type.toLowerCase() !== videoDetails.type.toLowerCase()) {\n          exclusionReasons.push(`video codec \"${variantVideoDetails.type}\" !== \"${videoDetails.type}\"`);\n        } // the audio codec cannot change\n\n        if (variantAudioDetails && audioDetails && variantAudioDetails.type.toLowerCase() !== audioDetails.type.toLowerCase()) {\n          exclusionReasons.push(`audio codec \"${variantAudioDetails.type}\" !== \"${audioDetails.type}\"`);\n        }\n      }\n      if (exclusionReasons.length) {\n        variant.excludeUntil = Infinity;\n        this.logger_(`excluding ${variant.id}: ${exclusionReasons.join(' && ')}`);\n      }\n    });\n  }\n  updateAdCues_(media) {\n    let offset = 0;\n    const seekable = this.seekable();\n    if (seekable.length) {\n      offset = seekable.start(0);\n    }\n    updateAdCues(media, this.cueTagsTrack_, offset);\n  }\n  /**\n   * Calculates the desired forward buffer length based on current time\n   *\n   * @return {number} Desired forward buffer length in seconds\n   */\n\n  goalBufferLength() {\n    const currentTime = this.tech_.currentTime();\n    const initial = Config.GOAL_BUFFER_LENGTH;\n    const rate = Config.GOAL_BUFFER_LENGTH_RATE;\n    const max = Math.max(initial, Config.MAX_GOAL_BUFFER_LENGTH);\n    return Math.min(initial + currentTime * rate, max);\n  }\n  /**\n   * Calculates the desired buffer low water line based on current time\n   *\n   * @return {number} Desired buffer low water line in seconds\n   */\n\n  bufferLowWaterLine() {\n    const currentTime = this.tech_.currentTime();\n    const initial = Config.BUFFER_LOW_WATER_LINE;\n    const rate = Config.BUFFER_LOW_WATER_LINE_RATE;\n    const max = Math.max(initial, Config.MAX_BUFFER_LOW_WATER_LINE);\n    const newMax = Math.max(initial, Config.EXPERIMENTAL_MAX_BUFFER_LOW_WATER_LINE);\n    return Math.min(initial + currentTime * rate, this.bufferBasedABR ? newMax : max);\n  }\n  bufferHighWaterLine() {\n    return Config.BUFFER_HIGH_WATER_LINE;\n  }\n}\n\n/**\n * Returns a function that acts as the Enable/disable playlist function.\n *\n * @param {PlaylistLoader} loader - The main playlist loader\n * @param {string} playlistID - id of the playlist\n * @param {Function} changePlaylistFn - A function to be called after a\n * playlist's enabled-state has been changed. Will NOT be called if a\n * playlist's enabled-state is unchanged\n * @param {boolean=} enable - Value to set the playlist enabled-state to\n * or if undefined returns the current enabled-state for the playlist\n * @return {Function} Function for setting/getting enabled\n */\n\nconst enableFunction = (loader, playlistID, changePlaylistFn) => enable => {\n  const playlist = loader.main.playlists[playlistID];\n  const incompatible = isIncompatible(playlist);\n  const currentlyEnabled = isEnabled(playlist);\n  if (typeof enable === 'undefined') {\n    return currentlyEnabled;\n  }\n  if (enable) {\n    delete playlist.disabled;\n  } else {\n    playlist.disabled = true;\n  }\n  if (enable !== currentlyEnabled && !incompatible) {\n    // Ensure the outside world knows about our changes\n    changePlaylistFn();\n    if (enable) {\n      loader.trigger('renditionenabled');\n    } else {\n      loader.trigger('renditiondisabled');\n    }\n  }\n  return enable;\n};\n/**\n * The representation object encapsulates the publicly visible information\n * in a media playlist along with a setter/getter-type function (enabled)\n * for changing the enabled-state of a particular playlist entry\n *\n * @class Representation\n */\n\nclass Representation {\n  constructor(vhsHandler, playlist, id) {\n    const {\n      playlistController_: pc\n    } = vhsHandler;\n    const qualityChangeFunction = pc.fastQualityChange_.bind(pc); // some playlist attributes are optional\n\n    if (playlist.attributes) {\n      const resolution = playlist.attributes.RESOLUTION;\n      this.width = resolution && resolution.width;\n      this.height = resolution && resolution.height;\n      this.bandwidth = playlist.attributes.BANDWIDTH;\n      this.frameRate = playlist.attributes['FRAME-RATE'];\n    }\n    this.codecs = codecsForPlaylist(pc.main(), playlist);\n    this.playlist = playlist; // The id is simply the ordinality of the media playlist\n    // within the main playlist\n\n    this.id = id; // Partially-apply the enableFunction to create a playlist-\n    // specific variant\n\n    this.enabled = enableFunction(vhsHandler.playlists, playlist.id, qualityChangeFunction);\n  }\n}\n/**\n * A mixin function that adds the `representations` api to an instance\n * of the VhsHandler class\n *\n * @param {VhsHandler} vhsHandler - An instance of VhsHandler to add the\n * representation API into\n */\n\nconst renditionSelectionMixin = function (vhsHandler) {\n  // Add a single API-specific function to the VhsHandler instance\n  vhsHandler.representations = () => {\n    const main = vhsHandler.playlistController_.main();\n    const playlists = isAudioOnly(main) ? vhsHandler.playlistController_.getAudioTrackPlaylists_() : main.playlists;\n    if (!playlists) {\n      return [];\n    }\n    return playlists.filter(media => !isIncompatible(media)).map((e, i) => new Representation(vhsHandler, e, e.id));\n  };\n};\n\n/**\n * @file playback-watcher.js\n *\n * Playback starts, and now my watch begins. It shall not end until my death. I shall\n * take no wait, hold no uncleared timeouts, father no bad seeks. I shall wear no crowns\n * and win no glory. I shall live and die at my post. I am the corrector of the underflow.\n * I am the watcher of gaps. I am the shield that guards the realms of seekable. I pledge\n * my life and honor to the Playback Watch, for this Player and all the Players to come.\n */\n\nconst timerCancelEvents = ['seeking', 'seeked', 'pause', 'playing', 'error'];\n/**\n * @class PlaybackWatcher\n */\n\nclass PlaybackWatcher {\n  /**\n   * Represents an PlaybackWatcher object.\n   *\n   * @class\n   * @param {Object} options an object that includes the tech and settings\n   */\n  constructor(options) {\n    this.playlistController_ = options.playlistController;\n    this.tech_ = options.tech;\n    this.seekable = options.seekable;\n    this.allowSeeksWithinUnsafeLiveWindow = options.allowSeeksWithinUnsafeLiveWindow;\n    this.liveRangeSafeTimeDelta = options.liveRangeSafeTimeDelta;\n    this.media = options.media;\n    this.consecutiveUpdates = 0;\n    this.lastRecordedTime = null;\n    this.checkCurrentTimeTimeout_ = null;\n    this.logger_ = logger('PlaybackWatcher');\n    this.logger_('initialize');\n    const playHandler = () => this.monitorCurrentTime_();\n    const canPlayHandler = () => this.monitorCurrentTime_();\n    const waitingHandler = () => this.techWaiting_();\n    const cancelTimerHandler = () => this.resetTimeUpdate_();\n    const pc = this.playlistController_;\n    const loaderTypes = ['main', 'subtitle', 'audio'];\n    const loaderChecks = {};\n    loaderTypes.forEach(type => {\n      loaderChecks[type] = {\n        reset: () => this.resetSegmentDownloads_(type),\n        updateend: () => this.checkSegmentDownloads_(type)\n      };\n      pc[`${type}SegmentLoader_`].on('appendsdone', loaderChecks[type].updateend); // If a rendition switch happens during a playback stall where the buffer\n      // isn't changing we want to reset. We cannot assume that the new rendition\n      // will also be stalled, until after new appends.\n\n      pc[`${type}SegmentLoader_`].on('playlistupdate', loaderChecks[type].reset); // Playback stalls should not be detected right after seeking.\n      // This prevents one segment playlists (single vtt or single segment content)\n      // from being detected as stalling. As the buffer will not change in those cases, since\n      // the buffer is the entire video duration.\n\n      this.tech_.on(['seeked', 'seeking'], loaderChecks[type].reset);\n    });\n    /**\n     * We check if a seek was into a gap through the following steps:\n     * 1. We get a seeking event and we do not get a seeked event. This means that\n     *    a seek was attempted but not completed.\n     * 2. We run `fixesBadSeeks_` on segment loader appends. This means that we already\n     *    removed everything from our buffer and appended a segment, and should be ready\n     *    to check for gaps.\n     */\n\n    const setSeekingHandlers = fn => {\n      ['main', 'audio'].forEach(type => {\n        pc[`${type}SegmentLoader_`][fn]('appended', this.seekingAppendCheck_);\n      });\n    };\n    this.seekingAppendCheck_ = () => {\n      if (this.fixesBadSeeks_()) {\n        this.consecutiveUpdates = 0;\n        this.lastRecordedTime = this.tech_.currentTime();\n        setSeekingHandlers('off');\n      }\n    };\n    this.clearSeekingAppendCheck_ = () => setSeekingHandlers('off');\n    this.watchForBadSeeking_ = () => {\n      this.clearSeekingAppendCheck_();\n      setSeekingHandlers('on');\n    };\n    this.tech_.on('seeked', this.clearSeekingAppendCheck_);\n    this.tech_.on('seeking', this.watchForBadSeeking_);\n    this.tech_.on('waiting', waitingHandler);\n    this.tech_.on(timerCancelEvents, cancelTimerHandler);\n    this.tech_.on('canplay', canPlayHandler);\n    /*\n      An edge case exists that results in gaps not being skipped when they exist at the beginning of a stream. This case\n      is surfaced in one of two ways:\n       1)  The `waiting` event is fired before the player has buffered content, making it impossible\n          to find or skip the gap. The `waiting` event is followed by a `play` event. On first play\n          we can check if playback is stalled due to a gap, and skip the gap if necessary.\n      2)  A source with a gap at the beginning of the stream is loaded programatically while the player\n          is in a playing state. To catch this case, it's important that our one-time play listener is setup\n          even if the player is in a playing state\n    */\n\n    this.tech_.one('play', playHandler); // Define the dispose function to clean up our events\n\n    this.dispose = () => {\n      this.clearSeekingAppendCheck_();\n      this.logger_('dispose');\n      this.tech_.off('waiting', waitingHandler);\n      this.tech_.off(timerCancelEvents, cancelTimerHandler);\n      this.tech_.off('canplay', canPlayHandler);\n      this.tech_.off('play', playHandler);\n      this.tech_.off('seeking', this.watchForBadSeeking_);\n      this.tech_.off('seeked', this.clearSeekingAppendCheck_);\n      loaderTypes.forEach(type => {\n        pc[`${type}SegmentLoader_`].off('appendsdone', loaderChecks[type].updateend);\n        pc[`${type}SegmentLoader_`].off('playlistupdate', loaderChecks[type].reset);\n        this.tech_.off(['seeked', 'seeking'], loaderChecks[type].reset);\n      });\n      if (this.checkCurrentTimeTimeout_) {\n        window$1.clearTimeout(this.checkCurrentTimeTimeout_);\n      }\n      this.resetTimeUpdate_();\n    };\n  }\n  /**\n   * Periodically check current time to see if playback stopped\n   *\n   * @private\n   */\n\n  monitorCurrentTime_() {\n    this.checkCurrentTime_();\n    if (this.checkCurrentTimeTimeout_) {\n      window$1.clearTimeout(this.checkCurrentTimeTimeout_);\n    } // 42 = 24 fps // 250 is what Webkit uses // FF uses 15\n\n    this.checkCurrentTimeTimeout_ = window$1.setTimeout(this.monitorCurrentTime_.bind(this), 250);\n  }\n  /**\n   * Reset stalled download stats for a specific type of loader\n   *\n   * @param {string} type\n   *        The segment loader type to check.\n   *\n   * @listens SegmentLoader#playlistupdate\n   * @listens Tech#seeking\n   * @listens Tech#seeked\n   */\n\n  resetSegmentDownloads_(type) {\n    const loader = this.playlistController_[`${type}SegmentLoader_`];\n    if (this[`${type}StalledDownloads_`] > 0) {\n      this.logger_(`resetting possible stalled download count for ${type} loader`);\n    }\n    this[`${type}StalledDownloads_`] = 0;\n    this[`${type}Buffered_`] = loader.buffered_();\n  }\n  /**\n   * Checks on every segment `appendsdone` to see\n   * if segment appends are making progress. If they are not\n   * and we are still downloading bytes. We exclude the playlist.\n   *\n   * @param {string} type\n   *        The segment loader type to check.\n   *\n   * @listens SegmentLoader#appendsdone\n   */\n\n  checkSegmentDownloads_(type) {\n    const pc = this.playlistController_;\n    const loader = pc[`${type}SegmentLoader_`];\n    const buffered = loader.buffered_();\n    const isBufferedDifferent = isRangeDifferent(this[`${type}Buffered_`], buffered);\n    this[`${type}Buffered_`] = buffered; // if another watcher is going to fix the issue or\n    // the buffered value for this loader changed\n    // appends are working\n\n    if (isBufferedDifferent) {\n      this.resetSegmentDownloads_(type);\n      return;\n    }\n    this[`${type}StalledDownloads_`]++;\n    this.logger_(`found #${this[`${type}StalledDownloads_`]} ${type} appends that did not increase buffer (possible stalled download)`, {\n      playlistId: loader.playlist_ && loader.playlist_.id,\n      buffered: timeRangesToArray(buffered)\n    }); // after 10 possibly stalled appends with no reset, exclude\n\n    if (this[`${type}StalledDownloads_`] < 10) {\n      return;\n    }\n    this.logger_(`${type} loader stalled download exclusion`);\n    this.resetSegmentDownloads_(type);\n    this.tech_.trigger({\n      type: 'usage',\n      name: `vhs-${type}-download-exclusion`\n    });\n    if (type === 'subtitle') {\n      return;\n    } // TODO: should we exclude audio tracks rather than main tracks\n    // when type is audio?\n\n    pc.excludePlaylist({\n      error: {\n        message: `Excessive ${type} segment downloading detected.`\n      },\n      playlistExclusionDuration: Infinity\n    });\n  }\n  /**\n   * The purpose of this function is to emulate the \"waiting\" event on\n   * browsers that do not emit it when they are waiting for more\n   * data to continue playback\n   *\n   * @private\n   */\n\n  checkCurrentTime_() {\n    if (this.tech_.paused() || this.tech_.seeking()) {\n      return;\n    }\n    const currentTime = this.tech_.currentTime();\n    const buffered = this.tech_.buffered();\n    if (this.lastRecordedTime === currentTime && (!buffered.length || currentTime + SAFE_TIME_DELTA >= buffered.end(buffered.length - 1))) {\n      // If current time is at the end of the final buffered region, then any playback\n      // stall is most likely caused by buffering in a low bandwidth environment. The tech\n      // should fire a `waiting` event in this scenario, but due to browser and tech\n      // inconsistencies. Calling `techWaiting_` here allows us to simulate\n      // responding to a native `waiting` event when the tech fails to emit one.\n      return this.techWaiting_();\n    }\n    if (this.consecutiveUpdates >= 5 && currentTime === this.lastRecordedTime) {\n      this.consecutiveUpdates++;\n      this.waiting_();\n    } else if (currentTime === this.lastRecordedTime) {\n      this.consecutiveUpdates++;\n    } else {\n      this.consecutiveUpdates = 0;\n      this.lastRecordedTime = currentTime;\n    }\n  }\n  /**\n   * Resets the 'timeupdate' mechanism designed to detect that we are stalled\n   *\n   * @private\n   */\n\n  resetTimeUpdate_() {\n    this.consecutiveUpdates = 0;\n  }\n  /**\n   * Fixes situations where there's a bad seek\n   *\n   * @return {boolean} whether an action was taken to fix the seek\n   * @private\n   */\n\n  fixesBadSeeks_() {\n    const seeking = this.tech_.seeking();\n    if (!seeking) {\n      return false;\n    } // TODO: It's possible that these seekable checks should be moved out of this function\n    // and into a function that runs on seekablechange. It's also possible that we only need\n    // afterSeekableWindow as the buffered check at the bottom is good enough to handle before\n    // seekable range.\n\n    const seekable = this.seekable();\n    const currentTime = this.tech_.currentTime();\n    const isAfterSeekableRange = this.afterSeekableWindow_(seekable, currentTime, this.media(), this.allowSeeksWithinUnsafeLiveWindow);\n    let seekTo;\n    if (isAfterSeekableRange) {\n      const seekableEnd = seekable.end(seekable.length - 1); // sync to live point (if VOD, our seekable was updated and we're simply adjusting)\n\n      seekTo = seekableEnd;\n    }\n    if (this.beforeSeekableWindow_(seekable, currentTime)) {\n      const seekableStart = seekable.start(0); // sync to the beginning of the live window\n      // provide a buffer of .1 seconds to handle rounding/imprecise numbers\n\n      seekTo = seekableStart + (\n      // if the playlist is too short and the seekable range is an exact time (can\n      // happen in live with a 3 segment playlist), then don't use a time delta\n      seekableStart === seekable.end(0) ? 0 : SAFE_TIME_DELTA);\n    }\n    if (typeof seekTo !== 'undefined') {\n      this.logger_(`Trying to seek outside of seekable at time ${currentTime} with ` + `seekable range ${printableRange(seekable)}. Seeking to ` + `${seekTo}.`);\n      this.tech_.setCurrentTime(seekTo);\n      return true;\n    }\n    const sourceUpdater = this.playlistController_.sourceUpdater_;\n    const buffered = this.tech_.buffered();\n    const audioBuffered = sourceUpdater.audioBuffer ? sourceUpdater.audioBuffered() : null;\n    const videoBuffered = sourceUpdater.videoBuffer ? sourceUpdater.videoBuffered() : null;\n    const media = this.media(); // verify that at least two segment durations or one part duration have been\n    // appended before checking for a gap.\n\n    const minAppendedDuration = media.partTargetDuration ? media.partTargetDuration : (media.targetDuration - TIME_FUDGE_FACTOR) * 2; // verify that at least two segment durations have been\n    // appended before checking for a gap.\n\n    const bufferedToCheck = [audioBuffered, videoBuffered];\n    for (let i = 0; i < bufferedToCheck.length; i++) {\n      // skip null buffered\n      if (!bufferedToCheck[i]) {\n        continue;\n      }\n      const timeAhead = timeAheadOf(bufferedToCheck[i], currentTime); // if we are less than two video/audio segment durations or one part\n      // duration behind we haven't appended enough to call this a bad seek.\n\n      if (timeAhead < minAppendedDuration) {\n        return false;\n      }\n    }\n    const nextRange = findNextRange(buffered, currentTime); // we have appended enough content, but we don't have anything buffered\n    // to seek over the gap\n\n    if (nextRange.length === 0) {\n      return false;\n    }\n    seekTo = nextRange.start(0) + SAFE_TIME_DELTA;\n    this.logger_(`Buffered region starts (${nextRange.start(0)}) ` + ` just beyond seek point (${currentTime}). Seeking to ${seekTo}.`);\n    this.tech_.setCurrentTime(seekTo);\n    return true;\n  }\n  /**\n   * Handler for situations when we determine the player is waiting.\n   *\n   * @private\n   */\n\n  waiting_() {\n    if (this.techWaiting_()) {\n      return;\n    } // All tech waiting checks failed. Use last resort correction\n\n    const currentTime = this.tech_.currentTime();\n    const buffered = this.tech_.buffered();\n    const currentRange = findRange(buffered, currentTime); // Sometimes the player can stall for unknown reasons within a contiguous buffered\n    // region with no indication that anything is amiss (seen in Firefox). Seeking to\n    // currentTime is usually enough to kickstart the player. This checks that the player\n    // is currently within a buffered region before attempting a corrective seek.\n    // Chrome does not appear to continue `timeupdate` events after a `waiting` event\n    // until there is ~ 3 seconds of forward buffer available. PlaybackWatcher should also\n    // make sure there is ~3 seconds of forward buffer before taking any corrective action\n    // to avoid triggering an `unknownwaiting` event when the network is slow.\n\n    if (currentRange.length && currentTime + 3 <= currentRange.end(0)) {\n      this.resetTimeUpdate_();\n      this.tech_.setCurrentTime(currentTime);\n      this.logger_(`Stopped at ${currentTime} while inside a buffered region ` + `[${currentRange.start(0)} -> ${currentRange.end(0)}]. Attempting to resume ` + 'playback by seeking to the current time.'); // unknown waiting corrections may be useful for monitoring QoS\n\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-unknown-waiting'\n      });\n      return;\n    }\n  }\n  /**\n   * Handler for situations when the tech fires a `waiting` event\n   *\n   * @return {boolean}\n   *         True if an action (or none) was needed to correct the waiting. False if no\n   *         checks passed\n   * @private\n   */\n\n  techWaiting_() {\n    const seekable = this.seekable();\n    const currentTime = this.tech_.currentTime();\n    if (this.tech_.seeking()) {\n      // Tech is seeking or already waiting on another action, no action needed\n      return true;\n    }\n    if (this.beforeSeekableWindow_(seekable, currentTime)) {\n      const livePoint = seekable.end(seekable.length - 1);\n      this.logger_(`Fell out of live window at time ${currentTime}. Seeking to ` + `live point (seekable end) ${livePoint}`);\n      this.resetTimeUpdate_();\n      this.tech_.setCurrentTime(livePoint); // live window resyncs may be useful for monitoring QoS\n\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-live-resync'\n      });\n      return true;\n    }\n    const sourceUpdater = this.tech_.vhs.playlistController_.sourceUpdater_;\n    const buffered = this.tech_.buffered();\n    const videoUnderflow = this.videoUnderflow_({\n      audioBuffered: sourceUpdater.audioBuffered(),\n      videoBuffered: sourceUpdater.videoBuffered(),\n      currentTime\n    });\n    if (videoUnderflow) {\n      // Even though the video underflowed and was stuck in a gap, the audio overplayed\n      // the gap, leading currentTime into a buffered range. Seeking to currentTime\n      // allows the video to catch up to the audio position without losing any audio\n      // (only suffering ~3 seconds of frozen video and a pause in audio playback).\n      this.resetTimeUpdate_();\n      this.tech_.setCurrentTime(currentTime); // video underflow may be useful for monitoring QoS\n\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-video-underflow'\n      });\n      return true;\n    }\n    const nextRange = findNextRange(buffered, currentTime); // check for gap\n\n    if (nextRange.length > 0) {\n      this.logger_(`Stopped at ${currentTime} and seeking to ${nextRange.start(0)}`);\n      this.resetTimeUpdate_();\n      this.skipTheGap_(currentTime);\n      return true;\n    } // All checks failed. Returning false to indicate failure to correct waiting\n\n    return false;\n  }\n  afterSeekableWindow_(seekable, currentTime, playlist, allowSeeksWithinUnsafeLiveWindow = false) {\n    if (!seekable.length) {\n      // we can't make a solid case if there's no seekable, default to false\n      return false;\n    }\n    let allowedEnd = seekable.end(seekable.length - 1) + SAFE_TIME_DELTA;\n    const isLive = !playlist.endList;\n    if (isLive && allowSeeksWithinUnsafeLiveWindow) {\n      allowedEnd = seekable.end(seekable.length - 1) + playlist.targetDuration * 3;\n    }\n    if (currentTime > allowedEnd) {\n      return true;\n    }\n    return false;\n  }\n  beforeSeekableWindow_(seekable, currentTime) {\n    if (seekable.length &&\n    // can't fall before 0 and 0 seekable start identifies VOD stream\n    seekable.start(0) > 0 && currentTime < seekable.start(0) - this.liveRangeSafeTimeDelta) {\n      return true;\n    }\n    return false;\n  }\n  videoUnderflow_({\n    videoBuffered,\n    audioBuffered,\n    currentTime\n  }) {\n    // audio only content will not have video underflow :)\n    if (!videoBuffered) {\n      return;\n    }\n    let gap; // find a gap in demuxed content.\n\n    if (videoBuffered.length && audioBuffered.length) {\n      // in Chrome audio will continue to play for ~3s when we run out of video\n      // so we have to check that the video buffer did have some buffer in the\n      // past.\n      const lastVideoRange = findRange(videoBuffered, currentTime - 3);\n      const videoRange = findRange(videoBuffered, currentTime);\n      const audioRange = findRange(audioBuffered, currentTime);\n      if (audioRange.length && !videoRange.length && lastVideoRange.length) {\n        gap = {\n          start: lastVideoRange.end(0),\n          end: audioRange.end(0)\n        };\n      } // find a gap in muxed content.\n    } else {\n      const nextRange = findNextRange(videoBuffered, currentTime); // Even if there is no available next range, there is still a possibility we are\n      // stuck in a gap due to video underflow.\n\n      if (!nextRange.length) {\n        gap = this.gapFromVideoUnderflow_(videoBuffered, currentTime);\n      }\n    }\n    if (gap) {\n      this.logger_(`Encountered a gap in video from ${gap.start} to ${gap.end}. ` + `Seeking to current time ${currentTime}`);\n      return true;\n    }\n    return false;\n  }\n  /**\n   * Timer callback. If playback still has not proceeded, then we seek\n   * to the start of the next buffered region.\n   *\n   * @private\n   */\n\n  skipTheGap_(scheduledCurrentTime) {\n    const buffered = this.tech_.buffered();\n    const currentTime = this.tech_.currentTime();\n    const nextRange = findNextRange(buffered, currentTime);\n    this.resetTimeUpdate_();\n    if (nextRange.length === 0 || currentTime !== scheduledCurrentTime) {\n      return;\n    }\n    this.logger_('skipTheGap_:', 'currentTime:', currentTime, 'scheduled currentTime:', scheduledCurrentTime, 'nextRange start:', nextRange.start(0)); // only seek if we still have not played\n\n    this.tech_.setCurrentTime(nextRange.start(0) + TIME_FUDGE_FACTOR);\n    this.tech_.trigger({\n      type: 'usage',\n      name: 'vhs-gap-skip'\n    });\n  }\n  gapFromVideoUnderflow_(buffered, currentTime) {\n    // At least in Chrome, if there is a gap in the video buffer, the audio will continue\n    // playing for ~3 seconds after the video gap starts. This is done to account for\n    // video buffer underflow/underrun (note that this is not done when there is audio\n    // buffer underflow/underrun -- in that case the video will stop as soon as it\n    // encounters the gap, as audio stalls are more noticeable/jarring to a user than\n    // video stalls). The player's time will reflect the playthrough of audio, so the\n    // time will appear as if we are in a buffered region, even if we are stuck in a\n    // \"gap.\"\n    //\n    // Example:\n    // video buffer:   0 => 10.1, 10.2 => 20\n    // audio buffer:   0 => 20\n    // overall buffer: 0 => 10.1, 10.2 => 20\n    // current time: 13\n    //\n    // Chrome's video froze at 10 seconds, where the video buffer encountered the gap,\n    // however, the audio continued playing until it reached ~3 seconds past the gap\n    // (13 seconds), at which point it stops as well. Since current time is past the\n    // gap, findNextRange will return no ranges.\n    //\n    // To check for this issue, we see if there is a gap that starts somewhere within\n    // a 3 second range (3 seconds +/- 1 second) back from our current time.\n    const gaps = findGaps(buffered);\n    for (let i = 0; i < gaps.length; i++) {\n      const start = gaps.start(i);\n      const end = gaps.end(i); // gap is starts no more than 4 seconds back\n\n      if (currentTime - start < 4 && currentTime - start > 2) {\n        return {\n          start,\n          end\n        };\n      }\n    }\n    return null;\n  }\n}\nconst defaultOptions = {\n  errorInterval: 30,\n  getSource(next) {\n    const tech = this.tech({\n      IWillNotUseThisInPlugins: true\n    });\n    const sourceObj = tech.currentSource_ || this.currentSource();\n    return next(sourceObj);\n  }\n};\n/**\n * Main entry point for the plugin\n *\n * @param {Player} player a reference to a videojs Player instance\n * @param {Object} [options] an object with plugin options\n * @private\n */\n\nconst initPlugin = function (player, options) {\n  let lastCalled = 0;\n  let seekTo = 0;\n  const localOptions = merge(defaultOptions, options);\n  player.ready(() => {\n    player.trigger({\n      type: 'usage',\n      name: 'vhs-error-reload-initialized'\n    });\n  });\n  /**\n   * Player modifications to perform that must wait until `loadedmetadata`\n   * has been triggered\n   *\n   * @private\n   */\n\n  const loadedMetadataHandler = function () {\n    if (seekTo) {\n      player.currentTime(seekTo);\n    }\n  };\n  /**\n   * Set the source on the player element, play, and seek if necessary\n   *\n   * @param {Object} sourceObj An object specifying the source url and mime-type to play\n   * @private\n   */\n\n  const setSource = function (sourceObj) {\n    if (sourceObj === null || sourceObj === undefined) {\n      return;\n    }\n    seekTo = player.duration() !== Infinity && player.currentTime() || 0;\n    player.one('loadedmetadata', loadedMetadataHandler);\n    player.src(sourceObj);\n    player.trigger({\n      type: 'usage',\n      name: 'vhs-error-reload'\n    });\n    player.play();\n  };\n  /**\n   * Attempt to get a source from either the built-in getSource function\n   * or a custom function provided via the options\n   *\n   * @private\n   */\n\n  const errorHandler = function () {\n    // Do not attempt to reload the source if a source-reload occurred before\n    // 'errorInterval' time has elapsed since the last source-reload\n    if (Date.now() - lastCalled < localOptions.errorInterval * 1000) {\n      player.trigger({\n        type: 'usage',\n        name: 'vhs-error-reload-canceled'\n      });\n      return;\n    }\n    if (!localOptions.getSource || typeof localOptions.getSource !== 'function') {\n      videojs.log.error('ERROR: reloadSourceOnError - The option getSource must be a function!');\n      return;\n    }\n    lastCalled = Date.now();\n    return localOptions.getSource.call(player, setSource);\n  };\n  /**\n   * Unbind any event handlers that were bound by the plugin\n   *\n   * @private\n   */\n\n  const cleanupEvents = function () {\n    player.off('loadedmetadata', loadedMetadataHandler);\n    player.off('error', errorHandler);\n    player.off('dispose', cleanupEvents);\n  };\n  /**\n   * Cleanup before re-initializing the plugin\n   *\n   * @param {Object} [newOptions] an object with plugin options\n   * @private\n   */\n\n  const reinitPlugin = function (newOptions) {\n    cleanupEvents();\n    initPlugin(player, newOptions);\n  };\n  player.on('error', errorHandler);\n  player.on('dispose', cleanupEvents); // Overwrite the plugin function so that we can correctly cleanup before\n  // initializing the plugin\n\n  player.reloadSourceOnError = reinitPlugin;\n};\n/**\n * Reload the source when an error is detected as long as there\n * wasn't an error previously within the last 30 seconds\n *\n * @param {Object} [options] an object with plugin options\n */\n\nconst reloadSourceOnError = function (options) {\n  initPlugin(this, options);\n};\nvar version$4 = \"3.0.2\";\nvar version$3 = \"6.3.0\";\nvar version$2 = \"1.0.1\";\nvar version$1 = \"6.0.0\";\nvar version = \"4.0.1\";\n\n/**\n * @file videojs-http-streaming.js\n *\n * The main file for the VHS project.\n * License: https://github.com/videojs/videojs-http-streaming/blob/main/LICENSE\n */\nconst Vhs = {\n  PlaylistLoader,\n  Playlist,\n  utils,\n  STANDARD_PLAYLIST_SELECTOR: lastBandwidthSelector,\n  INITIAL_PLAYLIST_SELECTOR: lowestBitrateCompatibleVariantSelector,\n  lastBandwidthSelector,\n  movingAverageBandwidthSelector,\n  comparePlaylistBandwidth,\n  comparePlaylistResolution,\n  xhr: xhrFactory()\n}; // Define getter/setters for config properties\n\nObject.keys(Config).forEach(prop => {\n  Object.defineProperty(Vhs, prop, {\n    get() {\n      videojs.log.warn(`using Vhs.${prop} is UNSAFE be sure you know what you are doing`);\n      return Config[prop];\n    },\n    set(value) {\n      videojs.log.warn(`using Vhs.${prop} is UNSAFE be sure you know what you are doing`);\n      if (typeof value !== 'number' || value < 0) {\n        videojs.log.warn(`value of Vhs.${prop} must be greater than or equal to 0`);\n        return;\n      }\n      Config[prop] = value;\n    }\n  });\n});\nconst LOCAL_STORAGE_KEY = 'videojs-vhs';\n/**\n * Updates the selectedIndex of the QualityLevelList when a mediachange happens in vhs.\n *\n * @param {QualityLevelList} qualityLevels The QualityLevelList to update.\n * @param {PlaylistLoader} playlistLoader PlaylistLoader containing the new media info.\n * @function handleVhsMediaChange\n */\n\nconst handleVhsMediaChange = function (qualityLevels, playlistLoader) {\n  const newPlaylist = playlistLoader.media();\n  let selectedIndex = -1;\n  for (let i = 0; i < qualityLevels.length; i++) {\n    if (qualityLevels[i].id === newPlaylist.id) {\n      selectedIndex = i;\n      break;\n    }\n  }\n  qualityLevels.selectedIndex_ = selectedIndex;\n  qualityLevels.trigger({\n    selectedIndex,\n    type: 'change'\n  });\n};\n/**\n * Adds quality levels to list once playlist metadata is available\n *\n * @param {QualityLevelList} qualityLevels The QualityLevelList to attach events to.\n * @param {Object} vhs Vhs object to listen to for media events.\n * @function handleVhsLoadedMetadata\n */\n\nconst handleVhsLoadedMetadata = function (qualityLevels, vhs) {\n  vhs.representations().forEach(rep => {\n    qualityLevels.addQualityLevel(rep);\n  });\n  handleVhsMediaChange(qualityLevels, vhs.playlists);\n}; // VHS is a source handler, not a tech. Make sure attempts to use it\n// as one do not cause exceptions.\n\nVhs.canPlaySource = function () {\n  return videojs.log.warn('VHS is no longer a tech. Please remove it from ' + 'your player\\'s techOrder.');\n};\nconst emeKeySystems = (keySystemOptions, mainPlaylist, audioPlaylist) => {\n  if (!keySystemOptions) {\n    return keySystemOptions;\n  }\n  let codecs = {};\n  if (mainPlaylist && mainPlaylist.attributes && mainPlaylist.attributes.CODECS) {\n    codecs = unwrapCodecList(parseCodecs(mainPlaylist.attributes.CODECS));\n  }\n  if (audioPlaylist && audioPlaylist.attributes && audioPlaylist.attributes.CODECS) {\n    codecs.audio = audioPlaylist.attributes.CODECS;\n  }\n  const videoContentType = getMimeForCodec(codecs.video);\n  const audioContentType = getMimeForCodec(codecs.audio); // upsert the content types based on the selected playlist\n\n  const keySystemContentTypes = {};\n  for (const keySystem in keySystemOptions) {\n    keySystemContentTypes[keySystem] = {};\n    if (audioContentType) {\n      keySystemContentTypes[keySystem].audioContentType = audioContentType;\n    }\n    if (videoContentType) {\n      keySystemContentTypes[keySystem].videoContentType = videoContentType;\n    } // Default to using the video playlist's PSSH even though they may be different, as\n    // videojs-contrib-eme will only accept one in the options.\n    //\n    // This shouldn't be an issue for most cases as early intialization will handle all\n    // unique PSSH values, and if they aren't, then encrypted events should have the\n    // specific information needed for the unique license.\n\n    if (mainPlaylist.contentProtection && mainPlaylist.contentProtection[keySystem] && mainPlaylist.contentProtection[keySystem].pssh) {\n      keySystemContentTypes[keySystem].pssh = mainPlaylist.contentProtection[keySystem].pssh;\n    } // videojs-contrib-eme accepts the option of specifying: 'com.some.cdm': 'url'\n    // so we need to prevent overwriting the URL entirely\n\n    if (typeof keySystemOptions[keySystem] === 'string') {\n      keySystemContentTypes[keySystem].url = keySystemOptions[keySystem];\n    }\n  }\n  return merge(keySystemOptions, keySystemContentTypes);\n};\n/**\n * @typedef {Object} KeySystems\n *\n * keySystems configuration for https://github.com/videojs/videojs-contrib-eme\n * Note: not all options are listed here.\n *\n * @property {Uint8Array} [pssh]\n *           Protection System Specific Header\n */\n\n/**\n * Goes through all the playlists and collects an array of KeySystems options objects\n * containing each playlist's keySystems and their pssh values, if available.\n *\n * @param {Object[]} playlists\n *        The playlists to look through\n * @param {string[]} keySystems\n *        The keySystems to collect pssh values for\n *\n * @return {KeySystems[]}\n *         An array of KeySystems objects containing available key systems and their\n *         pssh values\n */\n\nconst getAllPsshKeySystemsOptions = (playlists, keySystems) => {\n  return playlists.reduce((keySystemsArr, playlist) => {\n    if (!playlist.contentProtection) {\n      return keySystemsArr;\n    }\n    const keySystemsOptions = keySystems.reduce((keySystemsObj, keySystem) => {\n      const keySystemOptions = playlist.contentProtection[keySystem];\n      if (keySystemOptions && keySystemOptions.pssh) {\n        keySystemsObj[keySystem] = {\n          pssh: keySystemOptions.pssh\n        };\n      }\n      return keySystemsObj;\n    }, {});\n    if (Object.keys(keySystemsOptions).length) {\n      keySystemsArr.push(keySystemsOptions);\n    }\n    return keySystemsArr;\n  }, []);\n};\n/**\n * Returns a promise that waits for the\n * [eme plugin](https://github.com/videojs/videojs-contrib-eme) to create a key session.\n *\n * Works around https://bugs.chromium.org/p/chromium/issues/detail?id=895449 in non-IE11\n * browsers.\n *\n * As per the above ticket, this is particularly important for Chrome, where, if\n * unencrypted content is appended before encrypted content and the key session has not\n * been created, a MEDIA_ERR_DECODE will be thrown once the encrypted content is reached\n * during playback.\n *\n * @param {Object} player\n *        The player instance\n * @param {Object[]} sourceKeySystems\n *        The key systems options from the player source\n * @param {Object} [audioMedia]\n *        The active audio media playlist (optional)\n * @param {Object[]} mainPlaylists\n *        The playlists found on the main playlist object\n *\n * @return {Object}\n *         Promise that resolves when the key session has been created\n */\n\nconst waitForKeySessionCreation = ({\n  player,\n  sourceKeySystems,\n  audioMedia,\n  mainPlaylists\n}) => {\n  if (!player.eme.initializeMediaKeys) {\n    return Promise.resolve();\n  } // TODO should all audio PSSH values be initialized for DRM?\n  //\n  // All unique video rendition pssh values are initialized for DRM, but here only\n  // the initial audio playlist license is initialized. In theory, an encrypted\n  // event should be fired if the user switches to an alternative audio playlist\n  // where a license is required, but this case hasn't yet been tested. In addition, there\n  // may be many alternate audio playlists unlikely to be used (e.g., multiple different\n  // languages).\n\n  const playlists = audioMedia ? mainPlaylists.concat([audioMedia]) : mainPlaylists;\n  const keySystemsOptionsArr = getAllPsshKeySystemsOptions(playlists, Object.keys(sourceKeySystems));\n  const initializationFinishedPromises = [];\n  const keySessionCreatedPromises = []; // Since PSSH values are interpreted as initData, EME will dedupe any duplicates. The\n  // only place where it should not be deduped is for ms-prefixed APIs, but the early\n  // return for IE11 above, and the existence of modern EME APIs in addition to\n  // ms-prefixed APIs on Edge should prevent this from being a concern.\n  // initializeMediaKeys also won't use the webkit-prefixed APIs.\n\n  keySystemsOptionsArr.forEach(keySystemsOptions => {\n    keySessionCreatedPromises.push(new Promise((resolve, reject) => {\n      player.tech_.one('keysessioncreated', resolve);\n    }));\n    initializationFinishedPromises.push(new Promise((resolve, reject) => {\n      player.eme.initializeMediaKeys({\n        keySystems: keySystemsOptions\n      }, err => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve();\n      });\n    }));\n  }); // The reasons Promise.race is chosen over Promise.any:\n  //\n  // * Promise.any is only available in Safari 14+.\n  // * None of these promises are expected to reject. If they do reject, it might be\n  //   better here for the race to surface the rejection, rather than mask it by using\n  //   Promise.any.\n\n  return Promise.race([\n  // If a session was previously created, these will all finish resolving without\n  // creating a new session, otherwise it will take until the end of all license\n  // requests, which is why the key session check is used (to make setup much faster).\n  Promise.all(initializationFinishedPromises),\n  // Once a single session is created, the browser knows DRM will be used.\n  Promise.race(keySessionCreatedPromises)]);\n};\n/**\n * If the [eme](https://github.com/videojs/videojs-contrib-eme) plugin is available, and\n * there are keySystems on the source, sets up source options to prepare the source for\n * eme.\n *\n * @param {Object} player\n *        The player instance\n * @param {Object[]} sourceKeySystems\n *        The key systems options from the player source\n * @param {Object} media\n *        The active media playlist\n * @param {Object} [audioMedia]\n *        The active audio media playlist (optional)\n *\n * @return {boolean}\n *         Whether or not options were configured and EME is available\n */\n\nconst setupEmeOptions = ({\n  player,\n  sourceKeySystems,\n  media,\n  audioMedia\n}) => {\n  const sourceOptions = emeKeySystems(sourceKeySystems, media, audioMedia);\n  if (!sourceOptions) {\n    return false;\n  }\n  player.currentSource().keySystems = sourceOptions; // eme handles the rest of the setup, so if it is missing\n  // do nothing.\n\n  if (sourceOptions && !player.eme) {\n    videojs.log.warn('DRM encrypted source cannot be decrypted without a DRM plugin');\n    return false;\n  }\n  return true;\n};\nconst getVhsLocalStorage = () => {\n  if (!window$1.localStorage) {\n    return null;\n  }\n  const storedObject = window$1.localStorage.getItem(LOCAL_STORAGE_KEY);\n  if (!storedObject) {\n    return null;\n  }\n  try {\n    return JSON.parse(storedObject);\n  } catch (e) {\n    // someone may have tampered with the value\n    return null;\n  }\n};\nconst updateVhsLocalStorage = options => {\n  if (!window$1.localStorage) {\n    return false;\n  }\n  let objectToStore = getVhsLocalStorage();\n  objectToStore = objectToStore ? merge(objectToStore, options) : options;\n  try {\n    window$1.localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(objectToStore));\n  } catch (e) {\n    // Throws if storage is full (e.g., always on iOS 5+ Safari private mode, where\n    // storage is set to 0).\n    // https://developer.mozilla.org/en-US/docs/Web/API/Storage/setItem#Exceptions\n    // No need to perform any operation.\n    return false;\n  }\n  return objectToStore;\n};\n/**\n * Parses VHS-supported media types from data URIs. See\n * https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/Data_URIs\n * for information on data URIs.\n *\n * @param {string} dataUri\n *        The data URI\n *\n * @return {string|Object}\n *         The parsed object/string, or the original string if no supported media type\n *         was found\n */\n\nconst expandDataUri = dataUri => {\n  if (dataUri.toLowerCase().indexOf('data:application/vnd.videojs.vhs+json,') === 0) {\n    return JSON.parse(dataUri.substring(dataUri.indexOf(',') + 1));\n  } // no known case for this data URI, return the string as-is\n\n  return dataUri;\n};\n/**\n * Whether the browser has built-in HLS support.\n */\n\nVhs.supportsNativeHls = function () {\n  if (!document || !document.createElement) {\n    return false;\n  }\n  const video = document.createElement('video'); // native HLS is definitely not supported if HTML5 video isn't\n\n  if (!videojs.getTech('Html5').isSupported()) {\n    return false;\n  } // HLS manifests can go by many mime-types\n\n  const canPlay = [\n  // Apple santioned\n  'application/vnd.apple.mpegurl',\n  // Apple sanctioned for backwards compatibility\n  'audio/mpegurl',\n  // Very common\n  'audio/x-mpegurl',\n  // Very common\n  'application/x-mpegurl',\n  // Included for completeness\n  'video/x-mpegurl', 'video/mpegurl', 'application/mpegurl'];\n  return canPlay.some(function (canItPlay) {\n    return /maybe|probably/i.test(video.canPlayType(canItPlay));\n  });\n}();\nVhs.supportsNativeDash = function () {\n  if (!document || !document.createElement || !videojs.getTech('Html5').isSupported()) {\n    return false;\n  }\n  return /maybe|probably/i.test(document.createElement('video').canPlayType('application/dash+xml'));\n}();\nVhs.supportsTypeNatively = type => {\n  if (type === 'hls') {\n    return Vhs.supportsNativeHls;\n  }\n  if (type === 'dash') {\n    return Vhs.supportsNativeDash;\n  }\n  return false;\n};\n/**\n * VHS is a source handler, not a tech. Make sure attempts to use it\n * as one do not cause exceptions.\n */\n\nVhs.isSupported = function () {\n  return videojs.log.warn('VHS is no longer a tech. Please remove it from ' + 'your player\\'s techOrder.');\n};\nconst Component = videojs.getComponent('Component');\n/**\n * The Vhs Handler object, where we orchestrate all of the parts\n * of VHS to interact with video.js\n *\n * @class VhsHandler\n * @extends videojs.Component\n * @param {Object} source the soruce object\n * @param {Tech} tech the parent tech object\n * @param {Object} options optional and required options\n */\n\nclass VhsHandler extends Component {\n  constructor(source, tech, options) {\n    super(tech, options.vhs); // if a tech level `initialBandwidth` option was passed\n    // use that over the VHS level `bandwidth` option\n\n    if (typeof options.initialBandwidth === 'number') {\n      this.options_.bandwidth = options.initialBandwidth;\n    }\n    this.logger_ = logger('VhsHandler'); // we need access to the player in some cases,\n    // so, get it from Video.js via the `playerId`\n\n    if (tech.options_ && tech.options_.playerId) {\n      const _player = videojs.getPlayer(tech.options_.playerId);\n      this.player_ = _player;\n    }\n    this.tech_ = tech;\n    this.source_ = source;\n    this.stats = {};\n    this.ignoreNextSeekingEvent_ = false;\n    this.setOptions_();\n    if (this.options_.overrideNative && tech.overrideNativeAudioTracks && tech.overrideNativeVideoTracks) {\n      tech.overrideNativeAudioTracks(true);\n      tech.overrideNativeVideoTracks(true);\n    } else if (this.options_.overrideNative && (tech.featuresNativeVideoTracks || tech.featuresNativeAudioTracks)) {\n      // overriding native VHS only works if audio tracks have been emulated\n      // error early if we're misconfigured\n      throw new Error('Overriding native VHS requires emulated tracks. ' + 'See https://git.io/vMpjB');\n    } // listen for fullscreenchange events for this player so that we\n    // can adjust our quality selection quickly\n\n    this.on(document, ['fullscreenchange', 'webkitfullscreenchange', 'mozfullscreenchange', 'MSFullscreenChange'], event => {\n      const fullscreenElement = document.fullscreenElement || document.webkitFullscreenElement || document.mozFullScreenElement || document.msFullscreenElement;\n      if (fullscreenElement && fullscreenElement.contains(this.tech_.el())) {\n        this.playlistController_.fastQualityChange_();\n      } else {\n        // When leaving fullscreen, since the in page pixel dimensions should be smaller\n        // than full screen, see if there should be a rendition switch down to preserve\n        // bandwidth.\n        this.playlistController_.checkABR_();\n      }\n    });\n    this.on(this.tech_, 'seeking', function () {\n      if (this.ignoreNextSeekingEvent_) {\n        this.ignoreNextSeekingEvent_ = false;\n        return;\n      }\n      this.setCurrentTime(this.tech_.currentTime());\n    });\n    this.on(this.tech_, 'error', function () {\n      // verify that the error was real and we are loaded\n      // enough to have pc loaded.\n      if (this.tech_.error() && this.playlistController_) {\n        this.playlistController_.pauseLoading();\n      }\n    });\n    this.on(this.tech_, 'play', this.play);\n  }\n  setOptions_() {\n    // defaults\n    this.options_.withCredentials = this.options_.withCredentials || false;\n    this.options_.limitRenditionByPlayerDimensions = this.options_.limitRenditionByPlayerDimensions === false ? false : true;\n    this.options_.useDevicePixelRatio = this.options_.useDevicePixelRatio || false;\n    this.options_.useBandwidthFromLocalStorage = typeof this.source_.useBandwidthFromLocalStorage !== 'undefined' ? this.source_.useBandwidthFromLocalStorage : this.options_.useBandwidthFromLocalStorage || false;\n    this.options_.useNetworkInformationApi = this.options_.useNetworkInformationApi || false;\n    this.options_.useDtsForTimestampOffset = this.options_.useDtsForTimestampOffset || false;\n    this.options_.customTagParsers = this.options_.customTagParsers || [];\n    this.options_.customTagMappers = this.options_.customTagMappers || [];\n    this.options_.cacheEncryptionKeys = this.options_.cacheEncryptionKeys || false;\n    this.options_.llhls = this.options_.llhls === false ? false : true;\n    this.options_.bufferBasedABR = this.options_.bufferBasedABR || false;\n    if (typeof this.options_.playlistExclusionDuration !== 'number') {\n      this.options_.playlistExclusionDuration = 5 * 60;\n    }\n    if (typeof this.options_.bandwidth !== 'number') {\n      if (this.options_.useBandwidthFromLocalStorage) {\n        const storedObject = getVhsLocalStorage();\n        if (storedObject && storedObject.bandwidth) {\n          this.options_.bandwidth = storedObject.bandwidth;\n          this.tech_.trigger({\n            type: 'usage',\n            name: 'vhs-bandwidth-from-local-storage'\n          });\n        }\n        if (storedObject && storedObject.throughput) {\n          this.options_.throughput = storedObject.throughput;\n          this.tech_.trigger({\n            type: 'usage',\n            name: 'vhs-throughput-from-local-storage'\n          });\n        }\n      }\n    } // if bandwidth was not set by options or pulled from local storage, start playlist\n    // selection at a reasonable bandwidth\n\n    if (typeof this.options_.bandwidth !== 'number') {\n      this.options_.bandwidth = Config.INITIAL_BANDWIDTH;\n    } // If the bandwidth number is unchanged from the initial setting\n    // then this takes precedence over the enableLowInitialPlaylist option\n\n    this.options_.enableLowInitialPlaylist = this.options_.enableLowInitialPlaylist && this.options_.bandwidth === Config.INITIAL_BANDWIDTH; // grab options passed to player.src\n\n    ['withCredentials', 'useDevicePixelRatio', 'limitRenditionByPlayerDimensions', 'bandwidth', 'customTagParsers', 'customTagMappers', 'cacheEncryptionKeys', 'playlistSelector', 'initialPlaylistSelector', 'bufferBasedABR', 'liveRangeSafeTimeDelta', 'llhls', 'useNetworkInformationApi', 'useDtsForTimestampOffset', 'exactManifestTimings', 'leastPixelDiffSelector'].forEach(option => {\n      if (typeof this.source_[option] !== 'undefined') {\n        this.options_[option] = this.source_[option];\n      }\n    });\n    this.limitRenditionByPlayerDimensions = this.options_.limitRenditionByPlayerDimensions;\n    this.useDevicePixelRatio = this.options_.useDevicePixelRatio;\n  }\n  /**\n   * called when player.src gets called, handle a new source\n   *\n   * @param {Object} src the source object to handle\n   */\n\n  src(src, type) {\n    // do nothing if the src is falsey\n    if (!src) {\n      return;\n    }\n    this.setOptions_(); // add main playlist controller options\n\n    this.options_.src = expandDataUri(this.source_.src);\n    this.options_.tech = this.tech_;\n    this.options_.externVhs = Vhs;\n    this.options_.sourceType = simpleTypeFromSourceType(type); // Whenever we seek internally, we should update the tech\n\n    this.options_.seekTo = time => {\n      this.tech_.setCurrentTime(time);\n    };\n    this.playlistController_ = new PlaylistController(this.options_);\n    const playbackWatcherOptions = merge({\n      liveRangeSafeTimeDelta: SAFE_TIME_DELTA\n    }, this.options_, {\n      seekable: () => this.seekable(),\n      media: () => this.playlistController_.media(),\n      playlistController: this.playlistController_\n    });\n    this.playbackWatcher_ = new PlaybackWatcher(playbackWatcherOptions);\n    this.playlistController_.on('error', () => {\n      const player = videojs.players[this.tech_.options_.playerId];\n      let error = this.playlistController_.error;\n      if (typeof error === 'object' && !error.code) {\n        error.code = 3;\n      } else if (typeof error === 'string') {\n        error = {\n          message: error,\n          code: 3\n        };\n      }\n      player.error(error);\n    });\n    const defaultSelector = this.options_.bufferBasedABR ? Vhs.movingAverageBandwidthSelector(0.55) : Vhs.STANDARD_PLAYLIST_SELECTOR; // `this` in selectPlaylist should be the VhsHandler for backwards\n    // compatibility with < v2\n\n    this.playlistController_.selectPlaylist = this.selectPlaylist ? this.selectPlaylist.bind(this) : defaultSelector.bind(this);\n    this.playlistController_.selectInitialPlaylist = Vhs.INITIAL_PLAYLIST_SELECTOR.bind(this); // re-expose some internal objects for backwards compatibility with < v2\n\n    this.playlists = this.playlistController_.mainPlaylistLoader_;\n    this.mediaSource = this.playlistController_.mediaSource; // Proxy assignment of some properties to the main playlist\n    // controller. Using a custom property for backwards compatibility\n    // with < v2\n\n    Object.defineProperties(this, {\n      selectPlaylist: {\n        get() {\n          return this.playlistController_.selectPlaylist;\n        },\n        set(selectPlaylist) {\n          this.playlistController_.selectPlaylist = selectPlaylist.bind(this);\n        }\n      },\n      throughput: {\n        get() {\n          return this.playlistController_.mainSegmentLoader_.throughput.rate;\n        },\n        set(throughput) {\n          this.playlistController_.mainSegmentLoader_.throughput.rate = throughput; // By setting `count` to 1 the throughput value becomes the starting value\n          // for the cumulative average\n\n          this.playlistController_.mainSegmentLoader_.throughput.count = 1;\n        }\n      },\n      bandwidth: {\n        get() {\n          let playerBandwidthEst = this.playlistController_.mainSegmentLoader_.bandwidth;\n          const networkInformation = window$1.navigator.connection || window$1.navigator.mozConnection || window$1.navigator.webkitConnection;\n          const tenMbpsAsBitsPerSecond = 10e6;\n          if (this.options_.useNetworkInformationApi && networkInformation) {\n            // downlink returns Mbps\n            // https://developer.mozilla.org/en-US/docs/Web/API/NetworkInformation/downlink\n            const networkInfoBandwidthEstBitsPerSec = networkInformation.downlink * 1000 * 1000; // downlink maxes out at 10 Mbps. In the event that both networkInformationApi and the player\n            // estimate a bandwidth greater than 10 Mbps, use the larger of the two estimates to ensure that\n            // high quality streams are not filtered out.\n\n            if (networkInfoBandwidthEstBitsPerSec >= tenMbpsAsBitsPerSecond && playerBandwidthEst >= tenMbpsAsBitsPerSecond) {\n              playerBandwidthEst = Math.max(playerBandwidthEst, networkInfoBandwidthEstBitsPerSec);\n            } else {\n              playerBandwidthEst = networkInfoBandwidthEstBitsPerSec;\n            }\n          }\n          return playerBandwidthEst;\n        },\n        set(bandwidth) {\n          this.playlistController_.mainSegmentLoader_.bandwidth = bandwidth; // setting the bandwidth manually resets the throughput counter\n          // `count` is set to zero that current value of `rate` isn't included\n          // in the cumulative average\n\n          this.playlistController_.mainSegmentLoader_.throughput = {\n            rate: 0,\n            count: 0\n          };\n        }\n      },\n      /**\n       * `systemBandwidth` is a combination of two serial processes bit-rates. The first\n       * is the network bitrate provided by `bandwidth` and the second is the bitrate of\n       * the entire process after that - decryption, transmuxing, and appending - provided\n       * by `throughput`.\n       *\n       * Since the two process are serial, the overall system bandwidth is given by:\n       *   sysBandwidth = 1 / (1 / bandwidth + 1 / throughput)\n       */\n      systemBandwidth: {\n        get() {\n          const invBandwidth = 1 / (this.bandwidth || 1);\n          let invThroughput;\n          if (this.throughput > 0) {\n            invThroughput = 1 / this.throughput;\n          } else {\n            invThroughput = 0;\n          }\n          const systemBitrate = Math.floor(1 / (invBandwidth + invThroughput));\n          return systemBitrate;\n        },\n        set() {\n          videojs.log.error('The \"systemBandwidth\" property is read-only');\n        }\n      }\n    });\n    if (this.options_.bandwidth) {\n      this.bandwidth = this.options_.bandwidth;\n    }\n    if (this.options_.throughput) {\n      this.throughput = this.options_.throughput;\n    }\n    Object.defineProperties(this.stats, {\n      bandwidth: {\n        get: () => this.bandwidth || 0,\n        enumerable: true\n      },\n      mediaRequests: {\n        get: () => this.playlistController_.mediaRequests_() || 0,\n        enumerable: true\n      },\n      mediaRequestsAborted: {\n        get: () => this.playlistController_.mediaRequestsAborted_() || 0,\n        enumerable: true\n      },\n      mediaRequestsTimedout: {\n        get: () => this.playlistController_.mediaRequestsTimedout_() || 0,\n        enumerable: true\n      },\n      mediaRequestsErrored: {\n        get: () => this.playlistController_.mediaRequestsErrored_() || 0,\n        enumerable: true\n      },\n      mediaTransferDuration: {\n        get: () => this.playlistController_.mediaTransferDuration_() || 0,\n        enumerable: true\n      },\n      mediaBytesTransferred: {\n        get: () => this.playlistController_.mediaBytesTransferred_() || 0,\n        enumerable: true\n      },\n      mediaSecondsLoaded: {\n        get: () => this.playlistController_.mediaSecondsLoaded_() || 0,\n        enumerable: true\n      },\n      mediaAppends: {\n        get: () => this.playlistController_.mediaAppends_() || 0,\n        enumerable: true\n      },\n      mainAppendsToLoadedData: {\n        get: () => this.playlistController_.mainAppendsToLoadedData_() || 0,\n        enumerable: true\n      },\n      audioAppendsToLoadedData: {\n        get: () => this.playlistController_.audioAppendsToLoadedData_() || 0,\n        enumerable: true\n      },\n      appendsToLoadedData: {\n        get: () => this.playlistController_.appendsToLoadedData_() || 0,\n        enumerable: true\n      },\n      timeToLoadedData: {\n        get: () => this.playlistController_.timeToLoadedData_() || 0,\n        enumerable: true\n      },\n      buffered: {\n        get: () => timeRangesToArray(this.tech_.buffered()),\n        enumerable: true\n      },\n      currentTime: {\n        get: () => this.tech_.currentTime(),\n        enumerable: true\n      },\n      currentSource: {\n        get: () => this.tech_.currentSource_,\n        enumerable: true\n      },\n      currentTech: {\n        get: () => this.tech_.name_,\n        enumerable: true\n      },\n      duration: {\n        get: () => this.tech_.duration(),\n        enumerable: true\n      },\n      main: {\n        get: () => this.playlists.main,\n        enumerable: true\n      },\n      playerDimensions: {\n        get: () => this.tech_.currentDimensions(),\n        enumerable: true\n      },\n      seekable: {\n        get: () => timeRangesToArray(this.tech_.seekable()),\n        enumerable: true\n      },\n      timestamp: {\n        get: () => Date.now(),\n        enumerable: true\n      },\n      videoPlaybackQuality: {\n        get: () => this.tech_.getVideoPlaybackQuality(),\n        enumerable: true\n      }\n    });\n    this.tech_.one('canplay', this.playlistController_.setupFirstPlay.bind(this.playlistController_));\n    this.tech_.on('bandwidthupdate', () => {\n      if (this.options_.useBandwidthFromLocalStorage) {\n        updateVhsLocalStorage({\n          bandwidth: this.bandwidth,\n          throughput: Math.round(this.throughput)\n        });\n      }\n    });\n    this.playlistController_.on('selectedinitialmedia', () => {\n      // Add the manual rendition mix-in to VhsHandler\n      renditionSelectionMixin(this);\n    });\n    this.playlistController_.sourceUpdater_.on('createdsourcebuffers', () => {\n      this.setupEme_();\n    }); // the bandwidth of the primary segment loader is our best\n    // estimate of overall bandwidth\n\n    this.on(this.playlistController_, 'progress', function () {\n      this.tech_.trigger('progress');\n    }); // In the live case, we need to ignore the very first `seeking` event since\n    // that will be the result of the seek-to-live behavior\n\n    this.on(this.playlistController_, 'firstplay', function () {\n      this.ignoreNextSeekingEvent_ = true;\n    });\n    this.setupQualityLevels_(); // do nothing if the tech has been disposed already\n    // this can occur if someone sets the src in player.ready(), for instance\n\n    if (!this.tech_.el()) {\n      return;\n    }\n    this.mediaSourceUrl_ = window$1.URL.createObjectURL(this.playlistController_.mediaSource);\n    this.tech_.src(this.mediaSourceUrl_);\n  }\n  createKeySessions_() {\n    const audioPlaylistLoader = this.playlistController_.mediaTypes_.AUDIO.activePlaylistLoader;\n    this.logger_('waiting for EME key session creation');\n    waitForKeySessionCreation({\n      player: this.player_,\n      sourceKeySystems: this.source_.keySystems,\n      audioMedia: audioPlaylistLoader && audioPlaylistLoader.media(),\n      mainPlaylists: this.playlists.main.playlists\n    }).then(() => {\n      this.logger_('created EME key session');\n      this.playlistController_.sourceUpdater_.initializedEme();\n    }).catch(err => {\n      this.logger_('error while creating EME key session', err);\n      this.player_.error({\n        message: 'Failed to initialize media keys for EME',\n        code: 3\n      });\n    });\n  }\n  handleWaitingForKey_() {\n    // If waitingforkey is fired, it's possible that the data that's necessary to retrieve\n    // the key is in the manifest. While this should've happened on initial source load, it\n    // may happen again in live streams where the keys change, and the manifest info\n    // reflects the update.\n    //\n    // Because videojs-contrib-eme compares the PSSH data we send to that of PSSH data it's\n    // already requested keys for, we don't have to worry about this generating extraneous\n    // requests.\n    this.logger_('waitingforkey fired, attempting to create any new key sessions');\n    this.createKeySessions_();\n  }\n  /**\n   * If necessary and EME is available, sets up EME options and waits for key session\n   * creation.\n   *\n   * This function also updates the source updater so taht it can be used, as for some\n   * browsers, EME must be configured before content is appended (if appending unencrypted\n   * content before encrypted content).\n   */\n\n  setupEme_() {\n    const audioPlaylistLoader = this.playlistController_.mediaTypes_.AUDIO.activePlaylistLoader;\n    const didSetupEmeOptions = setupEmeOptions({\n      player: this.player_,\n      sourceKeySystems: this.source_.keySystems,\n      media: this.playlists.media(),\n      audioMedia: audioPlaylistLoader && audioPlaylistLoader.media()\n    });\n    this.player_.tech_.on('keystatuschange', e => {\n      if (e.status !== 'output-restricted') {\n        return;\n      }\n      const mainPlaylist = this.playlistController_.main();\n      if (!mainPlaylist || !mainPlaylist.playlists) {\n        return;\n      }\n      const excludedHDPlaylists = []; // Assume all HD streams are unplayable and exclude them from ABR selection\n\n      mainPlaylist.playlists.forEach(playlist => {\n        if (playlist && playlist.attributes && playlist.attributes.RESOLUTION && playlist.attributes.RESOLUTION.height >= 720) {\n          if (!playlist.excludeUntil || playlist.excludeUntil < Infinity) {\n            playlist.excludeUntil = Infinity;\n            excludedHDPlaylists.push(playlist);\n          }\n        }\n      });\n      if (excludedHDPlaylists.length) {\n        videojs.log.warn('DRM keystatus changed to \"output-restricted.\" Removing the following HD playlists ' + 'that will most likely fail to play and clearing the buffer. ' + 'This may be due to HDCP restrictions on the stream and the capabilities of the current device.', ...excludedHDPlaylists); // Clear the buffer before switching playlists, since it may already contain unplayable segments\n\n        this.playlistController_.fastQualityChange_();\n      }\n    });\n    this.handleWaitingForKey_ = this.handleWaitingForKey_.bind(this);\n    this.player_.tech_.on('waitingforkey', this.handleWaitingForKey_); // In IE11 this is too early to initialize media keys, and IE11 does not support\n    // promises.\n\n    if (videojs.browser.IE_VERSION === 11 || !didSetupEmeOptions) {\n      // If EME options were not set up, we've done all we could to initialize EME.\n      this.playlistController_.sourceUpdater_.initializedEme();\n      return;\n    }\n    this.createKeySessions_();\n  }\n  /**\n   * Initializes the quality levels and sets listeners to update them.\n   *\n   * @method setupQualityLevels_\n   * @private\n   */\n\n  setupQualityLevels_() {\n    const player = videojs.players[this.tech_.options_.playerId]; // if there isn't a player or there isn't a qualityLevels plugin\n    // or qualityLevels_ listeners have already been setup, do nothing.\n\n    if (!player || !player.qualityLevels || this.qualityLevels_) {\n      return;\n    }\n    this.qualityLevels_ = player.qualityLevels();\n    this.playlistController_.on('selectedinitialmedia', () => {\n      handleVhsLoadedMetadata(this.qualityLevels_, this);\n    });\n    this.playlists.on('mediachange', () => {\n      handleVhsMediaChange(this.qualityLevels_, this.playlists);\n    });\n  }\n  /**\n   * return the version\n   */\n\n  static version() {\n    return {\n      '@videojs/http-streaming': version$4,\n      'mux.js': version$3,\n      'mpd-parser': version$2,\n      'm3u8-parser': version$1,\n      'aes-decrypter': version\n    };\n  }\n  /**\n   * return the version\n   */\n\n  version() {\n    return this.constructor.version();\n  }\n  canChangeType() {\n    return SourceUpdater.canChangeType();\n  }\n  /**\n   * Begin playing the video.\n   */\n\n  play() {\n    this.playlistController_.play();\n  }\n  /**\n   * a wrapper around the function in PlaylistController\n   */\n\n  setCurrentTime(currentTime) {\n    this.playlistController_.setCurrentTime(currentTime);\n  }\n  /**\n   * a wrapper around the function in PlaylistController\n   */\n\n  duration() {\n    return this.playlistController_.duration();\n  }\n  /**\n   * a wrapper around the function in PlaylistController\n   */\n\n  seekable() {\n    return this.playlistController_.seekable();\n  }\n  /**\n   * Abort all outstanding work and cleanup.\n   */\n\n  dispose() {\n    if (this.playbackWatcher_) {\n      this.playbackWatcher_.dispose();\n    }\n    if (this.playlistController_) {\n      this.playlistController_.dispose();\n    }\n    if (this.qualityLevels_) {\n      this.qualityLevels_.dispose();\n    }\n    if (this.tech_ && this.tech_.vhs) {\n      delete this.tech_.vhs;\n    }\n    if (this.mediaSourceUrl_ && window$1.URL.revokeObjectURL) {\n      window$1.URL.revokeObjectURL(this.mediaSourceUrl_);\n      this.mediaSourceUrl_ = null;\n    }\n    if (this.tech_) {\n      this.tech_.off('waitingforkey', this.handleWaitingForKey_);\n    }\n    super.dispose();\n  }\n  convertToProgramTime(time, callback) {\n    return getProgramTime({\n      playlist: this.playlistController_.media(),\n      time,\n      callback\n    });\n  } // the player must be playing before calling this\n\n  seekToProgramTime(programTime, callback, pauseAfterSeek = true, retryCount = 2) {\n    return seekToProgramTime({\n      programTime,\n      playlist: this.playlistController_.media(),\n      retryCount,\n      pauseAfterSeek,\n      seekTo: this.options_.seekTo,\n      tech: this.options_.tech,\n      callback\n    });\n  }\n}\n/**\n * The Source Handler object, which informs video.js what additional\n * MIME types are supported and sets up playback. It is registered\n * automatically to the appropriate tech based on the capabilities of\n * the browser it is running in. It is not necessary to use or modify\n * this object in normal usage.\n */\n\nconst VhsSourceHandler = {\n  name: 'videojs-http-streaming',\n  VERSION: version$4,\n  canHandleSource(srcObj, options = {}) {\n    const localOptions = merge(videojs.options, options);\n    return VhsSourceHandler.canPlayType(srcObj.type, localOptions);\n  },\n  handleSource(source, tech, options = {}) {\n    const localOptions = merge(videojs.options, options);\n    tech.vhs = new VhsHandler(source, tech, localOptions);\n    tech.vhs.xhr = xhrFactory();\n    tech.vhs.src(source.src, source.type);\n    return tech.vhs;\n  },\n  canPlayType(type, options) {\n    const simpleType = simpleTypeFromSourceType(type);\n    if (!simpleType) {\n      return '';\n    }\n    const overrideNative = VhsSourceHandler.getOverrideNative(options);\n    const supportsTypeNatively = Vhs.supportsTypeNatively(simpleType);\n    const canUseMsePlayback = !supportsTypeNatively || overrideNative;\n    return canUseMsePlayback ? 'maybe' : '';\n  },\n  getOverrideNative(options = {}) {\n    const {\n      vhs = {}\n    } = options;\n    const defaultOverrideNative = !(videojs.browser.IS_ANY_SAFARI || videojs.browser.IS_IOS);\n    const {\n      overrideNative = defaultOverrideNative\n    } = vhs;\n    return overrideNative;\n  }\n};\n/**\n * Check to see if the native MediaSource object exists and supports\n * an MP4 container with both H.264 video and AAC-LC audio.\n *\n * @return {boolean} if  native media sources are supported\n */\n\nconst supportsNativeMediaSources = () => {\n  return browserSupportsCodec('avc1.4d400d,mp4a.40.2');\n}; // register source handlers with the appropriate techs\n\nif (supportsNativeMediaSources()) {\n  videojs.getTech('Html5').registerSourceHandler(VhsSourceHandler, 0);\n}\nvideojs.VhsHandler = VhsHandler;\nvideojs.VhsSourceHandler = VhsSourceHandler;\nvideojs.Vhs = Vhs;\nif (!videojs.use) {\n  videojs.registerComponent('Vhs', Vhs);\n}\nvideojs.options.vhs = videojs.options.vhs || {};\nif (!videojs.getPlugin || !videojs.getPlugin('reloadSourceOnError')) {\n  videojs.registerPlugin('reloadSourceOnError', reloadSourceOnError);\n}\n\nexport { videojs as default };\n","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Default exports for Node. Export the extended versions of VTTCue and\n// VTTRegion in Node since we likely want the capability to convert back and\n// forth between JSON. If we don't then it's not that big of a deal since we're\n// off browser.\n\nvar window = require('global/window');\n\nvar vttjs = module.exports = {\n  WebVTT: require(\"./vtt.js\"),\n  VTTCue: require(\"./vttcue.js\"),\n  VTTRegion: require(\"./vttregion.js\")\n};\n\nwindow.vttjs = vttjs;\nwindow.WebVTT = vttjs.WebVTT;\n\nvar cueShim = vttjs.VTTCue;\nvar regionShim = vttjs.VTTRegion;\nvar nativeVTTCue = window.VTTCue;\nvar nativeVTTRegion = window.VTTRegion;\n\nvttjs.shim = function() {\n  window.VTTCue = cueShim;\n  window.VTTRegion = regionShim;\n};\n\nvttjs.restore = function() {\n  window.VTTCue = nativeVTTCue;\n  window.VTTRegion = nativeVTTRegion;\n};\n\nif (!window.VTTCue) {\n  vttjs.shim();\n}\n","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* -*- Mode: Java; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n/* vim: set shiftwidth=2 tabstop=2 autoindent cindent expandtab: */\nvar document = require('global/document');\n\nvar _objCreate = Object.create || (function() {\n  function F() {}\n  return function(o) {\n    if (arguments.length !== 1) {\n      throw new Error('Object.create shim only accepts one parameter.');\n    }\n    F.prototype = o;\n    return new F();\n  };\n})();\n\n// Creates a new ParserError object from an errorData object. The errorData\n// object should have default code and message properties. The default message\n// property can be overriden by passing in a message parameter.\n// See ParsingError.Errors below for acceptable errors.\nfunction ParsingError(errorData, message) {\n  this.name = \"ParsingError\";\n  this.code = errorData.code;\n  this.message = message || errorData.message;\n}\nParsingError.prototype = _objCreate(Error.prototype);\nParsingError.prototype.constructor = ParsingError;\n\n// ParsingError metadata for acceptable ParsingErrors.\nParsingError.Errors = {\n  BadSignature: {\n    code: 0,\n    message: \"Malformed WebVTT signature.\"\n  },\n  BadTimeStamp: {\n    code: 1,\n    message: \"Malformed time stamp.\"\n  }\n};\n\n// Try to parse input as a time stamp.\nfunction parseTimeStamp(input) {\n\n  function computeSeconds(h, m, s, f) {\n    return (h | 0) * 3600 + (m | 0) * 60 + (s | 0) + (f | 0) / 1000;\n  }\n\n  var m = input.match(/^(\\d+):(\\d{1,2})(:\\d{1,2})?\\.(\\d{3})/);\n  if (!m) {\n    return null;\n  }\n\n  if (m[3]) {\n    // Timestamp takes the form of [hours]:[minutes]:[seconds].[milliseconds]\n    return computeSeconds(m[1], m[2], m[3].replace(\":\", \"\"), m[4]);\n  } else if (m[1] > 59) {\n    // Timestamp takes the form of [hours]:[minutes].[milliseconds]\n    // First position is hours as it's over 59.\n    return computeSeconds(m[1], m[2], 0,  m[4]);\n  } else {\n    // Timestamp takes the form of [minutes]:[seconds].[milliseconds]\n    return computeSeconds(0, m[1], m[2], m[4]);\n  }\n}\n\n// A settings object holds key/value pairs and will ignore anything but the first\n// assignment to a specific key.\nfunction Settings() {\n  this.values = _objCreate(null);\n}\n\nSettings.prototype = {\n  // Only accept the first assignment to any key.\n  set: function(k, v) {\n    if (!this.get(k) && v !== \"\") {\n      this.values[k] = v;\n    }\n  },\n  // Return the value for a key, or a default value.\n  // If 'defaultKey' is passed then 'dflt' is assumed to be an object with\n  // a number of possible default values as properties where 'defaultKey' is\n  // the key of the property that will be chosen; otherwise it's assumed to be\n  // a single value.\n  get: function(k, dflt, defaultKey) {\n    if (defaultKey) {\n      return this.has(k) ? this.values[k] : dflt[defaultKey];\n    }\n    return this.has(k) ? this.values[k] : dflt;\n  },\n  // Check whether we have a value for a key.\n  has: function(k) {\n    return k in this.values;\n  },\n  // Accept a setting if its one of the given alternatives.\n  alt: function(k, v, a) {\n    for (var n = 0; n < a.length; ++n) {\n      if (v === a[n]) {\n        this.set(k, v);\n        break;\n      }\n    }\n  },\n  // Accept a setting if its a valid (signed) integer.\n  integer: function(k, v) {\n    if (/^-?\\d+$/.test(v)) { // integer\n      this.set(k, parseInt(v, 10));\n    }\n  },\n  // Accept a setting if its a valid percentage.\n  percent: function(k, v) {\n    var m;\n    if ((m = v.match(/^([\\d]{1,3})(\\.[\\d]*)?%$/))) {\n      v = parseFloat(v);\n      if (v >= 0 && v <= 100) {\n        this.set(k, v);\n        return true;\n      }\n    }\n    return false;\n  }\n};\n\n// Helper function to parse input into groups separated by 'groupDelim', and\n// interprete each group as a key/value pair separated by 'keyValueDelim'.\nfunction parseOptions(input, callback, keyValueDelim, groupDelim) {\n  var groups = groupDelim ? input.split(groupDelim) : [input];\n  for (var i in groups) {\n    if (typeof groups[i] !== \"string\") {\n      continue;\n    }\n    var kv = groups[i].split(keyValueDelim);\n    if (kv.length !== 2) {\n      continue;\n    }\n    var k = kv[0].trim();\n    var v = kv[1].trim();\n    callback(k, v);\n  }\n}\n\nfunction parseCue(input, cue, regionList) {\n  // Remember the original input if we need to throw an error.\n  var oInput = input;\n  // 4.1 WebVTT timestamp\n  function consumeTimeStamp() {\n    var ts = parseTimeStamp(input);\n    if (ts === null) {\n      throw new ParsingError(ParsingError.Errors.BadTimeStamp,\n                            \"Malformed timestamp: \" + oInput);\n    }\n    // Remove time stamp from input.\n    input = input.replace(/^[^\\sa-zA-Z-]+/, \"\");\n    return ts;\n  }\n\n  // 4.4.2 WebVTT cue settings\n  function consumeCueSettings(input, cue) {\n    var settings = new Settings();\n\n    parseOptions(input, function (k, v) {\n      switch (k) {\n      case \"region\":\n        // Find the last region we parsed with the same region id.\n        for (var i = regionList.length - 1; i >= 0; i--) {\n          if (regionList[i].id === v) {\n            settings.set(k, regionList[i].region);\n            break;\n          }\n        }\n        break;\n      case \"vertical\":\n        settings.alt(k, v, [\"rl\", \"lr\"]);\n        break;\n      case \"line\":\n        var vals = v.split(\",\"),\n            vals0 = vals[0];\n        settings.integer(k, vals0);\n        settings.percent(k, vals0) ? settings.set(\"snapToLines\", false) : null;\n        settings.alt(k, vals0, [\"auto\"]);\n        if (vals.length === 2) {\n          settings.alt(\"lineAlign\", vals[1], [\"start\", \"center\", \"end\"]);\n        }\n        break;\n      case \"position\":\n        vals = v.split(\",\");\n        settings.percent(k, vals[0]);\n        if (vals.length === 2) {\n          settings.alt(\"positionAlign\", vals[1], [\"start\", \"center\", \"end\"]);\n        }\n        break;\n      case \"size\":\n        settings.percent(k, v);\n        break;\n      case \"align\":\n        settings.alt(k, v, [\"start\", \"center\", \"end\", \"left\", \"right\"]);\n        break;\n      }\n    }, /:/, /\\s/);\n\n    // Apply default values for any missing fields.\n    cue.region = settings.get(\"region\", null);\n    cue.vertical = settings.get(\"vertical\", \"\");\n    try {\n      cue.line = settings.get(\"line\", \"auto\");\n    } catch (e) {}\n    cue.lineAlign = settings.get(\"lineAlign\", \"start\");\n    cue.snapToLines = settings.get(\"snapToLines\", true);\n    cue.size = settings.get(\"size\", 100);\n    // Safari still uses the old middle value and won't accept center\n    try {\n      cue.align = settings.get(\"align\", \"center\");\n    } catch (e) {\n      cue.align = settings.get(\"align\", \"middle\");\n    }\n    try {\n      cue.position = settings.get(\"position\", \"auto\");\n    } catch (e) {\n      cue.position = settings.get(\"position\", {\n        start: 0,\n        left: 0,\n        center: 50,\n        middle: 50,\n        end: 100,\n        right: 100\n      }, cue.align);\n    }\n\n\n    cue.positionAlign = settings.get(\"positionAlign\", {\n      start: \"start\",\n      left: \"start\",\n      center: \"center\",\n      middle: \"center\",\n      end: \"end\",\n      right: \"end\"\n    }, cue.align);\n  }\n\n  function skipWhitespace() {\n    input = input.replace(/^\\s+/, \"\");\n  }\n\n  // 4.1 WebVTT cue timings.\n  skipWhitespace();\n  cue.startTime = consumeTimeStamp();   // (1) collect cue start time\n  skipWhitespace();\n  if (input.substr(0, 3) !== \"-->\") {     // (3) next characters must match \"-->\"\n    throw new ParsingError(ParsingError.Errors.BadTimeStamp,\n                           \"Malformed time stamp (time stamps must be separated by '-->'): \" +\n                           oInput);\n  }\n  input = input.substr(3);\n  skipWhitespace();\n  cue.endTime = consumeTimeStamp();     // (5) collect cue end time\n\n  // 4.1 WebVTT cue settings list.\n  skipWhitespace();\n  consumeCueSettings(input, cue);\n}\n\n// When evaluating this file as part of a Webpack bundle for server\n// side rendering, `document` is an empty object.\nvar TEXTAREA_ELEMENT = document.createElement && document.createElement(\"textarea\");\n\nvar TAG_NAME = {\n  c: \"span\",\n  i: \"i\",\n  b: \"b\",\n  u: \"u\",\n  ruby: \"ruby\",\n  rt: \"rt\",\n  v: \"span\",\n  lang: \"span\"\n};\n\n// 5.1 default text color\n// 5.2 default text background color is equivalent to text color with bg_ prefix\nvar DEFAULT_COLOR_CLASS = {\n  white: 'rgba(255,255,255,1)',\n  lime: 'rgba(0,255,0,1)',\n  cyan: 'rgba(0,255,255,1)',\n  red: 'rgba(255,0,0,1)',\n  yellow: 'rgba(255,255,0,1)',\n  magenta: 'rgba(255,0,255,1)',\n  blue: 'rgba(0,0,255,1)',\n  black: 'rgba(0,0,0,1)'\n};\n\nvar TAG_ANNOTATION = {\n  v: \"title\",\n  lang: \"lang\"\n};\n\nvar NEEDS_PARENT = {\n  rt: \"ruby\"\n};\n\n// Parse content into a document fragment.\nfunction parseContent(window, input) {\n  function nextToken() {\n    // Check for end-of-string.\n    if (!input) {\n      return null;\n    }\n\n    // Consume 'n' characters from the input.\n    function consume(result) {\n      input = input.substr(result.length);\n      return result;\n    }\n\n    var m = input.match(/^([^<]*)(<[^>]*>?)?/);\n    // If there is some text before the next tag, return it, otherwise return\n    // the tag.\n    return consume(m[1] ? m[1] : m[2]);\n  }\n\n  function unescape(s) {\n    TEXTAREA_ELEMENT.innerHTML = s;\n    s = TEXTAREA_ELEMENT.textContent;\n    TEXTAREA_ELEMENT.textContent = \"\";\n    return s;\n  }\n\n  function shouldAdd(current, element) {\n    return !NEEDS_PARENT[element.localName] ||\n           NEEDS_PARENT[element.localName] === current.localName;\n  }\n\n  // Create an element for this tag.\n  function createElement(type, annotation) {\n    var tagName = TAG_NAME[type];\n    if (!tagName) {\n      return null;\n    }\n    var element = window.document.createElement(tagName);\n    var name = TAG_ANNOTATION[type];\n    if (name && annotation) {\n      element[name] = annotation.trim();\n    }\n    return element;\n  }\n\n  var rootDiv = window.document.createElement(\"div\"),\n      current = rootDiv,\n      t,\n      tagStack = [];\n\n  while ((t = nextToken()) !== null) {\n    if (t[0] === '<') {\n      if (t[1] === \"/\") {\n        // If the closing tag matches, move back up to the parent node.\n        if (tagStack.length &&\n            tagStack[tagStack.length - 1] === t.substr(2).replace(\">\", \"\")) {\n          tagStack.pop();\n          current = current.parentNode;\n        }\n        // Otherwise just ignore the end tag.\n        continue;\n      }\n      var ts = parseTimeStamp(t.substr(1, t.length - 2));\n      var node;\n      if (ts) {\n        // Timestamps are lead nodes as well.\n        node = window.document.createProcessingInstruction(\"timestamp\", ts);\n        current.appendChild(node);\n        continue;\n      }\n      var m = t.match(/^<([^.\\s/0-9>]+)(\\.[^\\s\\\\>]+)?([^>\\\\]+)?(\\\\?)>?$/);\n      // If we can't parse the tag, skip to the next tag.\n      if (!m) {\n        continue;\n      }\n      // Try to construct an element, and ignore the tag if we couldn't.\n      node = createElement(m[1], m[3]);\n      if (!node) {\n        continue;\n      }\n      // Determine if the tag should be added based on the context of where it\n      // is placed in the cuetext.\n      if (!shouldAdd(current, node)) {\n        continue;\n      }\n      // Set the class list (as a list of classes, separated by space).\n      if (m[2]) {\n        var classes = m[2].split('.');\n\n        classes.forEach(function(cl) {\n          var bgColor = /^bg_/.test(cl);\n          // slice out `bg_` if it's a background color\n          var colorName = bgColor ? cl.slice(3) : cl;\n\n          if (DEFAULT_COLOR_CLASS.hasOwnProperty(colorName)) {\n            var propName = bgColor ? 'background-color' : 'color';\n            var propValue = DEFAULT_COLOR_CLASS[colorName];\n\n            node.style[propName] = propValue;\n          }\n        });\n\n        node.className = classes.join(' ');\n      }\n      // Append the node to the current node, and enter the scope of the new\n      // node.\n      tagStack.push(m[1]);\n      current.appendChild(node);\n      current = node;\n      continue;\n    }\n\n    // Text nodes are leaf nodes.\n    current.appendChild(window.document.createTextNode(unescape(t)));\n  }\n\n  return rootDiv;\n}\n\n// This is a list of all the Unicode characters that have a strong\n// right-to-left category. What this means is that these characters are\n// written right-to-left for sure. It was generated by pulling all the strong\n// right-to-left characters out of the Unicode data table. That table can\n// found at: http://www.unicode.org/Public/UNIDATA/UnicodeData.txt\nvar strongRTLRanges = [[0x5be, 0x5be], [0x5c0, 0x5c0], [0x5c3, 0x5c3], [0x5c6, 0x5c6],\n [0x5d0, 0x5ea], [0x5f0, 0x5f4], [0x608, 0x608], [0x60b, 0x60b], [0x60d, 0x60d],\n [0x61b, 0x61b], [0x61e, 0x64a], [0x66d, 0x66f], [0x671, 0x6d5], [0x6e5, 0x6e6],\n [0x6ee, 0x6ef], [0x6fa, 0x70d], [0x70f, 0x710], [0x712, 0x72f], [0x74d, 0x7a5],\n [0x7b1, 0x7b1], [0x7c0, 0x7ea], [0x7f4, 0x7f5], [0x7fa, 0x7fa], [0x800, 0x815],\n [0x81a, 0x81a], [0x824, 0x824], [0x828, 0x828], [0x830, 0x83e], [0x840, 0x858],\n [0x85e, 0x85e], [0x8a0, 0x8a0], [0x8a2, 0x8ac], [0x200f, 0x200f],\n [0xfb1d, 0xfb1d], [0xfb1f, 0xfb28], [0xfb2a, 0xfb36], [0xfb38, 0xfb3c],\n [0xfb3e, 0xfb3e], [0xfb40, 0xfb41], [0xfb43, 0xfb44], [0xfb46, 0xfbc1],\n [0xfbd3, 0xfd3d], [0xfd50, 0xfd8f], [0xfd92, 0xfdc7], [0xfdf0, 0xfdfc],\n [0xfe70, 0xfe74], [0xfe76, 0xfefc], [0x10800, 0x10805], [0x10808, 0x10808],\n [0x1080a, 0x10835], [0x10837, 0x10838], [0x1083c, 0x1083c], [0x1083f, 0x10855],\n [0x10857, 0x1085f], [0x10900, 0x1091b], [0x10920, 0x10939], [0x1093f, 0x1093f],\n [0x10980, 0x109b7], [0x109be, 0x109bf], [0x10a00, 0x10a00], [0x10a10, 0x10a13],\n [0x10a15, 0x10a17], [0x10a19, 0x10a33], [0x10a40, 0x10a47], [0x10a50, 0x10a58],\n [0x10a60, 0x10a7f], [0x10b00, 0x10b35], [0x10b40, 0x10b55], [0x10b58, 0x10b72],\n [0x10b78, 0x10b7f], [0x10c00, 0x10c48], [0x1ee00, 0x1ee03], [0x1ee05, 0x1ee1f],\n [0x1ee21, 0x1ee22], [0x1ee24, 0x1ee24], [0x1ee27, 0x1ee27], [0x1ee29, 0x1ee32],\n [0x1ee34, 0x1ee37], [0x1ee39, 0x1ee39], [0x1ee3b, 0x1ee3b], [0x1ee42, 0x1ee42],\n [0x1ee47, 0x1ee47], [0x1ee49, 0x1ee49], [0x1ee4b, 0x1ee4b], [0x1ee4d, 0x1ee4f],\n [0x1ee51, 0x1ee52], [0x1ee54, 0x1ee54], [0x1ee57, 0x1ee57], [0x1ee59, 0x1ee59],\n [0x1ee5b, 0x1ee5b], [0x1ee5d, 0x1ee5d], [0x1ee5f, 0x1ee5f], [0x1ee61, 0x1ee62],\n [0x1ee64, 0x1ee64], [0x1ee67, 0x1ee6a], [0x1ee6c, 0x1ee72], [0x1ee74, 0x1ee77],\n [0x1ee79, 0x1ee7c], [0x1ee7e, 0x1ee7e], [0x1ee80, 0x1ee89], [0x1ee8b, 0x1ee9b],\n [0x1eea1, 0x1eea3], [0x1eea5, 0x1eea9], [0x1eeab, 0x1eebb], [0x10fffd, 0x10fffd]];\n\nfunction isStrongRTLChar(charCode) {\n  for (var i = 0; i < strongRTLRanges.length; i++) {\n    var currentRange = strongRTLRanges[i];\n    if (charCode >= currentRange[0] && charCode <= currentRange[1]) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction determineBidi(cueDiv) {\n  var nodeStack = [],\n      text = \"\",\n      charCode;\n\n  if (!cueDiv || !cueDiv.childNodes) {\n    return \"ltr\";\n  }\n\n  function pushNodes(nodeStack, node) {\n    for (var i = node.childNodes.length - 1; i >= 0; i--) {\n      nodeStack.push(node.childNodes[i]);\n    }\n  }\n\n  function nextTextNode(nodeStack) {\n    if (!nodeStack || !nodeStack.length) {\n      return null;\n    }\n\n    var node = nodeStack.pop(),\n        text = node.textContent || node.innerText;\n    if (text) {\n      // TODO: This should match all unicode type B characters (paragraph\n      // separator characters). See issue #115.\n      var m = text.match(/^.*(\\n|\\r)/);\n      if (m) {\n        nodeStack.length = 0;\n        return m[0];\n      }\n      return text;\n    }\n    if (node.tagName === \"ruby\") {\n      return nextTextNode(nodeStack);\n    }\n    if (node.childNodes) {\n      pushNodes(nodeStack, node);\n      return nextTextNode(nodeStack);\n    }\n  }\n\n  pushNodes(nodeStack, cueDiv);\n  while ((text = nextTextNode(nodeStack))) {\n    for (var i = 0; i < text.length; i++) {\n      charCode = text.charCodeAt(i);\n      if (isStrongRTLChar(charCode)) {\n        return \"rtl\";\n      }\n    }\n  }\n  return \"ltr\";\n}\n\nfunction computeLinePos(cue) {\n  if (typeof cue.line === \"number\" &&\n      (cue.snapToLines || (cue.line >= 0 && cue.line <= 100))) {\n    return cue.line;\n  }\n  if (!cue.track || !cue.track.textTrackList ||\n      !cue.track.textTrackList.mediaElement) {\n    return -1;\n  }\n  var track = cue.track,\n      trackList = track.textTrackList,\n      count = 0;\n  for (var i = 0; i < trackList.length && trackList[i] !== track; i++) {\n    if (trackList[i].mode === \"showing\") {\n      count++;\n    }\n  }\n  return ++count * -1;\n}\n\nfunction StyleBox() {\n}\n\n// Apply styles to a div. If there is no div passed then it defaults to the\n// div on 'this'.\nStyleBox.prototype.applyStyles = function(styles, div) {\n  div = div || this.div;\n  for (var prop in styles) {\n    if (styles.hasOwnProperty(prop)) {\n      div.style[prop] = styles[prop];\n    }\n  }\n};\n\nStyleBox.prototype.formatStyle = function(val, unit) {\n  return val === 0 ? 0 : val + unit;\n};\n\n// Constructs the computed display state of the cue (a div). Places the div\n// into the overlay which should be a block level element (usually a div).\nfunction CueStyleBox(window, cue, styleOptions) {\n  StyleBox.call(this);\n  this.cue = cue;\n\n  // Parse our cue's text into a DOM tree rooted at 'cueDiv'. This div will\n  // have inline positioning and will function as the cue background box.\n  this.cueDiv = parseContent(window, cue.text);\n  var styles = {\n    color: \"rgba(255, 255, 255, 1)\",\n    backgroundColor:  \"rgba(0, 0, 0, 0.8)\",\n    position: \"relative\",\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    display: \"inline\",\n    writingMode: cue.vertical === \"\" ? \"horizontal-tb\"\n                                     : cue.vertical === \"lr\" ? \"vertical-lr\"\n                                                             : \"vertical-rl\",\n    unicodeBidi: \"plaintext\"\n  };\n\n  this.applyStyles(styles, this.cueDiv);\n\n  // Create an absolutely positioned div that will be used to position the cue\n  // div. Note, all WebVTT cue-setting alignments are equivalent to the CSS\n  // mirrors of them except middle instead of center on Safari.\n  this.div = window.document.createElement(\"div\");\n  styles = {\n    direction: determineBidi(this.cueDiv),\n    writingMode: cue.vertical === \"\" ? \"horizontal-tb\"\n                                     : cue.vertical === \"lr\" ? \"vertical-lr\"\n                                                             : \"vertical-rl\",\n    unicodeBidi: \"plaintext\",\n    textAlign: cue.align === \"middle\" ? \"center\" : cue.align,\n    font: styleOptions.font,\n    whiteSpace: \"pre-line\",\n    position: \"absolute\"\n  };\n\n  this.applyStyles(styles);\n  this.div.appendChild(this.cueDiv);\n\n  // Calculate the distance from the reference edge of the viewport to the text\n  // position of the cue box. The reference edge will be resolved later when\n  // the box orientation styles are applied.\n  var textPos = 0;\n  switch (cue.positionAlign) {\n  case \"start\":\n    textPos = cue.position;\n    break;\n  case \"center\":\n    textPos = cue.position - (cue.size / 2);\n    break;\n  case \"end\":\n    textPos = cue.position - cue.size;\n    break;\n  }\n\n  // Horizontal box orientation; textPos is the distance from the left edge of the\n  // area to the left edge of the box and cue.size is the distance extending to\n  // the right from there.\n  if (cue.vertical === \"\") {\n    this.applyStyles({\n      left:  this.formatStyle(textPos, \"%\"),\n      width: this.formatStyle(cue.size, \"%\")\n    });\n  // Vertical box orientation; textPos is the distance from the top edge of the\n  // area to the top edge of the box and cue.size is the height extending\n  // downwards from there.\n  } else {\n    this.applyStyles({\n      top: this.formatStyle(textPos, \"%\"),\n      height: this.formatStyle(cue.size, \"%\")\n    });\n  }\n\n  this.move = function(box) {\n    this.applyStyles({\n      top: this.formatStyle(box.top, \"px\"),\n      bottom: this.formatStyle(box.bottom, \"px\"),\n      left: this.formatStyle(box.left, \"px\"),\n      right: this.formatStyle(box.right, \"px\"),\n      height: this.formatStyle(box.height, \"px\"),\n      width: this.formatStyle(box.width, \"px\")\n    });\n  };\n}\nCueStyleBox.prototype = _objCreate(StyleBox.prototype);\nCueStyleBox.prototype.constructor = CueStyleBox;\n\n// Represents the co-ordinates of an Element in a way that we can easily\n// compute things with such as if it overlaps or intersects with another Element.\n// Can initialize it with either a StyleBox or another BoxPosition.\nfunction BoxPosition(obj) {\n  // Either a BoxPosition was passed in and we need to copy it, or a StyleBox\n  // was passed in and we need to copy the results of 'getBoundingClientRect'\n  // as the object returned is readonly. All co-ordinate values are in reference\n  // to the viewport origin (top left).\n  var lh, height, width, top;\n  if (obj.div) {\n    height = obj.div.offsetHeight;\n    width = obj.div.offsetWidth;\n    top = obj.div.offsetTop;\n\n    var rects = (rects = obj.div.childNodes) && (rects = rects[0]) &&\n                rects.getClientRects && rects.getClientRects();\n    obj = obj.div.getBoundingClientRect();\n    // In certain cases the outter div will be slightly larger then the sum of\n    // the inner div's lines. This could be due to bold text, etc, on some platforms.\n    // In this case we should get the average line height and use that. This will\n    // result in the desired behaviour.\n    lh = rects ? Math.max((rects[0] && rects[0].height) || 0, obj.height / rects.length)\n               : 0;\n\n  }\n  this.left = obj.left;\n  this.right = obj.right;\n  this.top = obj.top || top;\n  this.height = obj.height || height;\n  this.bottom = obj.bottom || (top + (obj.height || height));\n  this.width = obj.width || width;\n  this.lineHeight = lh !== undefined ? lh : obj.lineHeight;\n}\n\n// Move the box along a particular axis. Optionally pass in an amount to move\n// the box. If no amount is passed then the default is the line height of the\n// box.\nBoxPosition.prototype.move = function(axis, toMove) {\n  toMove = toMove !== undefined ? toMove : this.lineHeight;\n  switch (axis) {\n  case \"+x\":\n    this.left += toMove;\n    this.right += toMove;\n    break;\n  case \"-x\":\n    this.left -= toMove;\n    this.right -= toMove;\n    break;\n  case \"+y\":\n    this.top += toMove;\n    this.bottom += toMove;\n    break;\n  case \"-y\":\n    this.top -= toMove;\n    this.bottom -= toMove;\n    break;\n  }\n};\n\n// Check if this box overlaps another box, b2.\nBoxPosition.prototype.overlaps = function(b2) {\n  return this.left < b2.right &&\n         this.right > b2.left &&\n         this.top < b2.bottom &&\n         this.bottom > b2.top;\n};\n\n// Check if this box overlaps any other boxes in boxes.\nBoxPosition.prototype.overlapsAny = function(boxes) {\n  for (var i = 0; i < boxes.length; i++) {\n    if (this.overlaps(boxes[i])) {\n      return true;\n    }\n  }\n  return false;\n};\n\n// Check if this box is within another box.\nBoxPosition.prototype.within = function(container) {\n  return this.top >= container.top &&\n         this.bottom <= container.bottom &&\n         this.left >= container.left &&\n         this.right <= container.right;\n};\n\n// Check if this box is entirely within the container or it is overlapping\n// on the edge opposite of the axis direction passed. For example, if \"+x\" is\n// passed and the box is overlapping on the left edge of the container, then\n// return true.\nBoxPosition.prototype.overlapsOppositeAxis = function(container, axis) {\n  switch (axis) {\n  case \"+x\":\n    return this.left < container.left;\n  case \"-x\":\n    return this.right > container.right;\n  case \"+y\":\n    return this.top < container.top;\n  case \"-y\":\n    return this.bottom > container.bottom;\n  }\n};\n\n// Find the percentage of the area that this box is overlapping with another\n// box.\nBoxPosition.prototype.intersectPercentage = function(b2) {\n  var x = Math.max(0, Math.min(this.right, b2.right) - Math.max(this.left, b2.left)),\n      y = Math.max(0, Math.min(this.bottom, b2.bottom) - Math.max(this.top, b2.top)),\n      intersectArea = x * y;\n  return intersectArea / (this.height * this.width);\n};\n\n// Convert the positions from this box to CSS compatible positions using\n// the reference container's positions. This has to be done because this\n// box's positions are in reference to the viewport origin, whereas, CSS\n// values are in referecne to their respective edges.\nBoxPosition.prototype.toCSSCompatValues = function(reference) {\n  return {\n    top: this.top - reference.top,\n    bottom: reference.bottom - this.bottom,\n    left: this.left - reference.left,\n    right: reference.right - this.right,\n    height: this.height,\n    width: this.width\n  };\n};\n\n// Get an object that represents the box's position without anything extra.\n// Can pass a StyleBox, HTMLElement, or another BoxPositon.\nBoxPosition.getSimpleBoxPosition = function(obj) {\n  var height = obj.div ? obj.div.offsetHeight : obj.tagName ? obj.offsetHeight : 0;\n  var width = obj.div ? obj.div.offsetWidth : obj.tagName ? obj.offsetWidth : 0;\n  var top = obj.div ? obj.div.offsetTop : obj.tagName ? obj.offsetTop : 0;\n\n  obj = obj.div ? obj.div.getBoundingClientRect() :\n                obj.tagName ? obj.getBoundingClientRect() : obj;\n  var ret = {\n    left: obj.left,\n    right: obj.right,\n    top: obj.top || top,\n    height: obj.height || height,\n    bottom: obj.bottom || (top + (obj.height || height)),\n    width: obj.width || width\n  };\n  return ret;\n};\n\n// Move a StyleBox to its specified, or next best, position. The containerBox\n// is the box that contains the StyleBox, such as a div. boxPositions are\n// a list of other boxes that the styleBox can't overlap with.\nfunction moveBoxToLinePosition(window, styleBox, containerBox, boxPositions) {\n\n  // Find the best position for a cue box, b, on the video. The axis parameter\n  // is a list of axis, the order of which, it will move the box along. For example:\n  // Passing [\"+x\", \"-x\"] will move the box first along the x axis in the positive\n  // direction. If it doesn't find a good position for it there it will then move\n  // it along the x axis in the negative direction.\n  function findBestPosition(b, axis) {\n    var bestPosition,\n        specifiedPosition = new BoxPosition(b),\n        percentage = 1; // Highest possible so the first thing we get is better.\n\n    for (var i = 0; i < axis.length; i++) {\n      while (b.overlapsOppositeAxis(containerBox, axis[i]) ||\n             (b.within(containerBox) && b.overlapsAny(boxPositions))) {\n        b.move(axis[i]);\n      }\n      // We found a spot where we aren't overlapping anything. This is our\n      // best position.\n      if (b.within(containerBox)) {\n        return b;\n      }\n      var p = b.intersectPercentage(containerBox);\n      // If we're outside the container box less then we were on our last try\n      // then remember this position as the best position.\n      if (percentage > p) {\n        bestPosition = new BoxPosition(b);\n        percentage = p;\n      }\n      // Reset the box position to the specified position.\n      b = new BoxPosition(specifiedPosition);\n    }\n    return bestPosition || specifiedPosition;\n  }\n\n  var boxPosition = new BoxPosition(styleBox),\n      cue = styleBox.cue,\n      linePos = computeLinePos(cue),\n      axis = [];\n\n  // If we have a line number to align the cue to.\n  if (cue.snapToLines) {\n    var size;\n    switch (cue.vertical) {\n    case \"\":\n      axis = [ \"+y\", \"-y\" ];\n      size = \"height\";\n      break;\n    case \"rl\":\n      axis = [ \"+x\", \"-x\" ];\n      size = \"width\";\n      break;\n    case \"lr\":\n      axis = [ \"-x\", \"+x\" ];\n      size = \"width\";\n      break;\n    }\n\n    var step = boxPosition.lineHeight,\n        position = step * Math.round(linePos),\n        maxPosition = containerBox[size] + step,\n        initialAxis = axis[0];\n\n    // If the specified intial position is greater then the max position then\n    // clamp the box to the amount of steps it would take for the box to\n    // reach the max position.\n    if (Math.abs(position) > maxPosition) {\n      position = position < 0 ? -1 : 1;\n      position *= Math.ceil(maxPosition / step) * step;\n    }\n\n    // If computed line position returns negative then line numbers are\n    // relative to the bottom of the video instead of the top. Therefore, we\n    // need to increase our initial position by the length or width of the\n    // video, depending on the writing direction, and reverse our axis directions.\n    if (linePos < 0) {\n      position += cue.vertical === \"\" ? containerBox.height : containerBox.width;\n      axis = axis.reverse();\n    }\n\n    // Move the box to the specified position. This may not be its best\n    // position.\n    boxPosition.move(initialAxis, position);\n\n  } else {\n    // If we have a percentage line value for the cue.\n    var calculatedPercentage = (boxPosition.lineHeight / containerBox.height) * 100;\n\n    switch (cue.lineAlign) {\n    case \"center\":\n      linePos -= (calculatedPercentage / 2);\n      break;\n    case \"end\":\n      linePos -= calculatedPercentage;\n      break;\n    }\n\n    // Apply initial line position to the cue box.\n    switch (cue.vertical) {\n    case \"\":\n      styleBox.applyStyles({\n        top: styleBox.formatStyle(linePos, \"%\")\n      });\n      break;\n    case \"rl\":\n      styleBox.applyStyles({\n        left: styleBox.formatStyle(linePos, \"%\")\n      });\n      break;\n    case \"lr\":\n      styleBox.applyStyles({\n        right: styleBox.formatStyle(linePos, \"%\")\n      });\n      break;\n    }\n\n    axis = [ \"+y\", \"-x\", \"+x\", \"-y\" ];\n\n    // Get the box position again after we've applied the specified positioning\n    // to it.\n    boxPosition = new BoxPosition(styleBox);\n  }\n\n  var bestPosition = findBestPosition(boxPosition, axis);\n  styleBox.move(bestPosition.toCSSCompatValues(containerBox));\n}\n\nfunction WebVTT() {\n  // Nothing\n}\n\n// Helper to allow strings to be decoded instead of the default binary utf8 data.\nWebVTT.StringDecoder = function() {\n  return {\n    decode: function(data) {\n      if (!data) {\n        return \"\";\n      }\n      if (typeof data !== \"string\") {\n        throw new Error(\"Error - expected string data.\");\n      }\n      return decodeURIComponent(encodeURIComponent(data));\n    }\n  };\n};\n\nWebVTT.convertCueToDOMTree = function(window, cuetext) {\n  if (!window || !cuetext) {\n    return null;\n  }\n  return parseContent(window, cuetext);\n};\n\nvar FONT_SIZE_PERCENT = 0.05;\nvar FONT_STYLE = \"sans-serif\";\nvar CUE_BACKGROUND_PADDING = \"1.5%\";\n\n// Runs the processing model over the cues and regions passed to it.\n// @param overlay A block level element (usually a div) that the computed cues\n//                and regions will be placed into.\nWebVTT.processCues = function(window, cues, overlay) {\n  if (!window || !cues || !overlay) {\n    return null;\n  }\n\n  // Remove all previous children.\n  while (overlay.firstChild) {\n    overlay.removeChild(overlay.firstChild);\n  }\n\n  var paddedOverlay = window.document.createElement(\"div\");\n  paddedOverlay.style.position = \"absolute\";\n  paddedOverlay.style.left = \"0\";\n  paddedOverlay.style.right = \"0\";\n  paddedOverlay.style.top = \"0\";\n  paddedOverlay.style.bottom = \"0\";\n  paddedOverlay.style.margin = CUE_BACKGROUND_PADDING;\n  overlay.appendChild(paddedOverlay);\n\n  // Determine if we need to compute the display states of the cues. This could\n  // be the case if a cue's state has been changed since the last computation or\n  // if it has not been computed yet.\n  function shouldCompute(cues) {\n    for (var i = 0; i < cues.length; i++) {\n      if (cues[i].hasBeenReset || !cues[i].displayState) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  // We don't need to recompute the cues' display states. Just reuse them.\n  if (!shouldCompute(cues)) {\n    for (var i = 0; i < cues.length; i++) {\n      paddedOverlay.appendChild(cues[i].displayState);\n    }\n    return;\n  }\n\n  var boxPositions = [],\n      containerBox = BoxPosition.getSimpleBoxPosition(paddedOverlay),\n      fontSize = Math.round(containerBox.height * FONT_SIZE_PERCENT * 100) / 100;\n  var styleOptions = {\n    font: fontSize + \"px \" + FONT_STYLE\n  };\n\n  (function() {\n    var styleBox, cue;\n\n    for (var i = 0; i < cues.length; i++) {\n      cue = cues[i];\n\n      // Compute the intial position and styles of the cue div.\n      styleBox = new CueStyleBox(window, cue, styleOptions);\n      paddedOverlay.appendChild(styleBox.div);\n\n      // Move the cue div to it's correct line position.\n      moveBoxToLinePosition(window, styleBox, containerBox, boxPositions);\n\n      // Remember the computed div so that we don't have to recompute it later\n      // if we don't have too.\n      cue.displayState = styleBox.div;\n\n      boxPositions.push(BoxPosition.getSimpleBoxPosition(styleBox));\n    }\n  })();\n};\n\nWebVTT.Parser = function(window, vttjs, decoder) {\n  if (!decoder) {\n    decoder = vttjs;\n    vttjs = {};\n  }\n  if (!vttjs) {\n    vttjs = {};\n  }\n\n  this.window = window;\n  this.vttjs = vttjs;\n  this.state = \"INITIAL\";\n  this.buffer = \"\";\n  this.decoder = decoder || new TextDecoder(\"utf8\");\n  this.regionList = [];\n};\n\nWebVTT.Parser.prototype = {\n  // If the error is a ParsingError then report it to the consumer if\n  // possible. If it's not a ParsingError then throw it like normal.\n  reportOrThrowError: function(e) {\n    if (e instanceof ParsingError) {\n      this.onparsingerror && this.onparsingerror(e);\n    } else {\n      throw e;\n    }\n  },\n  parse: function (data) {\n    var self = this;\n\n    // If there is no data then we won't decode it, but will just try to parse\n    // whatever is in buffer already. This may occur in circumstances, for\n    // example when flush() is called.\n    if (data) {\n      // Try to decode the data that we received.\n      self.buffer += self.decoder.decode(data, {stream: true});\n    }\n\n    function collectNextLine() {\n      var buffer = self.buffer;\n      var pos = 0;\n      while (pos < buffer.length && buffer[pos] !== '\\r' && buffer[pos] !== '\\n') {\n        ++pos;\n      }\n      var line = buffer.substr(0, pos);\n      // Advance the buffer early in case we fail below.\n      if (buffer[pos] === '\\r') {\n        ++pos;\n      }\n      if (buffer[pos] === '\\n') {\n        ++pos;\n      }\n      self.buffer = buffer.substr(pos);\n      return line;\n    }\n\n    // 3.4 WebVTT region and WebVTT region settings syntax\n    function parseRegion(input) {\n      var settings = new Settings();\n\n      parseOptions(input, function (k, v) {\n        switch (k) {\n        case \"id\":\n          settings.set(k, v);\n          break;\n        case \"width\":\n          settings.percent(k, v);\n          break;\n        case \"lines\":\n          settings.integer(k, v);\n          break;\n        case \"regionanchor\":\n        case \"viewportanchor\":\n          var xy = v.split(',');\n          if (xy.length !== 2) {\n            break;\n          }\n          // We have to make sure both x and y parse, so use a temporary\n          // settings object here.\n          var anchor = new Settings();\n          anchor.percent(\"x\", xy[0]);\n          anchor.percent(\"y\", xy[1]);\n          if (!anchor.has(\"x\") || !anchor.has(\"y\")) {\n            break;\n          }\n          settings.set(k + \"X\", anchor.get(\"x\"));\n          settings.set(k + \"Y\", anchor.get(\"y\"));\n          break;\n        case \"scroll\":\n          settings.alt(k, v, [\"up\"]);\n          break;\n        }\n      }, /=/, /\\s/);\n\n      // Create the region, using default values for any values that were not\n      // specified.\n      if (settings.has(\"id\")) {\n        var region = new (self.vttjs.VTTRegion || self.window.VTTRegion)();\n        region.width = settings.get(\"width\", 100);\n        region.lines = settings.get(\"lines\", 3);\n        region.regionAnchorX = settings.get(\"regionanchorX\", 0);\n        region.regionAnchorY = settings.get(\"regionanchorY\", 100);\n        region.viewportAnchorX = settings.get(\"viewportanchorX\", 0);\n        region.viewportAnchorY = settings.get(\"viewportanchorY\", 100);\n        region.scroll = settings.get(\"scroll\", \"\");\n        // Register the region.\n        self.onregion && self.onregion(region);\n        // Remember the VTTRegion for later in case we parse any VTTCues that\n        // reference it.\n        self.regionList.push({\n          id: settings.get(\"id\"),\n          region: region\n        });\n      }\n    }\n\n    // draft-pantos-http-live-streaming-20\n    // https://tools.ietf.org/html/draft-pantos-http-live-streaming-20#section-3.5\n    // 3.5 WebVTT\n    function parseTimestampMap(input) {\n      var settings = new Settings();\n\n      parseOptions(input, function(k, v) {\n        switch(k) {\n        case \"MPEGT\":\n          settings.integer(k + 'S', v);\n          break;\n        case \"LOCA\":\n          settings.set(k + 'L', parseTimeStamp(v));\n          break;\n        }\n      }, /[^\\d]:/, /,/);\n\n      self.ontimestampmap && self.ontimestampmap({\n        \"MPEGTS\": settings.get(\"MPEGTS\"),\n        \"LOCAL\": settings.get(\"LOCAL\")\n      });\n    }\n\n    // 3.2 WebVTT metadata header syntax\n    function parseHeader(input) {\n      if (input.match(/X-TIMESTAMP-MAP/)) {\n        // This line contains HLS X-TIMESTAMP-MAP metadata\n        parseOptions(input, function(k, v) {\n          switch(k) {\n          case \"X-TIMESTAMP-MAP\":\n            parseTimestampMap(v);\n            break;\n          }\n        }, /=/);\n      } else {\n        parseOptions(input, function (k, v) {\n          switch (k) {\n          case \"Region\":\n            // 3.3 WebVTT region metadata header syntax\n            parseRegion(v);\n            break;\n          }\n        }, /:/);\n      }\n\n    }\n\n    // 5.1 WebVTT file parsing.\n    try {\n      var line;\n      if (self.state === \"INITIAL\") {\n        // We can't start parsing until we have the first line.\n        if (!/\\r\\n|\\n/.test(self.buffer)) {\n          return this;\n        }\n\n        line = collectNextLine();\n\n        var m = line.match(/^WEBVTT([ \\t].*)?$/);\n        if (!m || !m[0]) {\n          throw new ParsingError(ParsingError.Errors.BadSignature);\n        }\n\n        self.state = \"HEADER\";\n      }\n\n      var alreadyCollectedLine = false;\n      while (self.buffer) {\n        // We can't parse a line until we have the full line.\n        if (!/\\r\\n|\\n/.test(self.buffer)) {\n          return this;\n        }\n\n        if (!alreadyCollectedLine) {\n          line = collectNextLine();\n        } else {\n          alreadyCollectedLine = false;\n        }\n\n        switch (self.state) {\n        case \"HEADER\":\n          // 13-18 - Allow a header (metadata) under the WEBVTT line.\n          if (/:/.test(line)) {\n            parseHeader(line);\n          } else if (!line) {\n            // An empty line terminates the header and starts the body (cues).\n            self.state = \"ID\";\n          }\n          continue;\n        case \"NOTE\":\n          // Ignore NOTE blocks.\n          if (!line) {\n            self.state = \"ID\";\n          }\n          continue;\n        case \"ID\":\n          // Check for the start of NOTE blocks.\n          if (/^NOTE($|[ \\t])/.test(line)) {\n            self.state = \"NOTE\";\n            break;\n          }\n          // 19-29 - Allow any number of line terminators, then initialize new cue values.\n          if (!line) {\n            continue;\n          }\n          self.cue = new (self.vttjs.VTTCue || self.window.VTTCue)(0, 0, \"\");\n          // Safari still uses the old middle value and won't accept center\n          try {\n            self.cue.align = \"center\";\n          } catch (e) {\n            self.cue.align = \"middle\";\n          }\n          self.state = \"CUE\";\n          // 30-39 - Check if self line contains an optional identifier or timing data.\n          if (line.indexOf(\"-->\") === -1) {\n            self.cue.id = line;\n            continue;\n          }\n          // Process line as start of a cue.\n          /*falls through*/\n        case \"CUE\":\n          // 40 - Collect cue timings and settings.\n          try {\n            parseCue(line, self.cue, self.regionList);\n          } catch (e) {\n            self.reportOrThrowError(e);\n            // In case of an error ignore rest of the cue.\n            self.cue = null;\n            self.state = \"BADCUE\";\n            continue;\n          }\n          self.state = \"CUETEXT\";\n          continue;\n        case \"CUETEXT\":\n          var hasSubstring = line.indexOf(\"-->\") !== -1;\n          // 34 - If we have an empty line then report the cue.\n          // 35 - If we have the special substring '-->' then report the cue,\n          // but do not collect the line as we need to process the current\n          // one as a new cue.\n          if (!line || hasSubstring && (alreadyCollectedLine = true)) {\n            // We are done parsing self cue.\n            self.oncue && self.oncue(self.cue);\n            self.cue = null;\n            self.state = \"ID\";\n            continue;\n          }\n          if (self.cue.text) {\n            self.cue.text += \"\\n\";\n          }\n          self.cue.text += line.replace(/\\u2028/g, '\\n').replace(/u2029/g, '\\n');\n          continue;\n        case \"BADCUE\": // BADCUE\n          // 54-62 - Collect and discard the remaining cue.\n          if (!line) {\n            self.state = \"ID\";\n          }\n          continue;\n        }\n      }\n    } catch (e) {\n      self.reportOrThrowError(e);\n\n      // If we are currently parsing a cue, report what we have.\n      if (self.state === \"CUETEXT\" && self.cue && self.oncue) {\n        self.oncue(self.cue);\n      }\n      self.cue = null;\n      // Enter BADWEBVTT state if header was not parsed correctly otherwise\n      // another exception occurred so enter BADCUE state.\n      self.state = self.state === \"INITIAL\" ? \"BADWEBVTT\" : \"BADCUE\";\n    }\n    return this;\n  },\n  flush: function () {\n    var self = this;\n    try {\n      // Finish decoding the stream.\n      self.buffer += self.decoder.decode();\n      // Synthesize the end of the current cue or region.\n      if (self.cue || self.state === \"HEADER\") {\n        self.buffer += \"\\n\\n\";\n        self.parse();\n      }\n      // If we've flushed, parsed, and we're still on the INITIAL state then\n      // that means we don't have enough of the stream to parse the first\n      // line.\n      if (self.state === \"INITIAL\") {\n        throw new ParsingError(ParsingError.Errors.BadSignature);\n      }\n    } catch(e) {\n      self.reportOrThrowError(e);\n    }\n    self.onflush && self.onflush();\n    return this;\n  }\n};\n\nmodule.exports = WebVTT;\n","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar autoKeyword = \"auto\";\nvar directionSetting = {\n  \"\": 1,\n  \"lr\": 1,\n  \"rl\": 1\n};\nvar alignSetting = {\n  \"start\": 1,\n  \"center\": 1,\n  \"end\": 1,\n  \"left\": 1,\n  \"right\": 1,\n  \"auto\": 1,\n  \"line-left\": 1,\n  \"line-right\": 1\n};\n\nfunction findDirectionSetting(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n  var dir = directionSetting[value.toLowerCase()];\n  return dir ? value.toLowerCase() : false;\n}\n\nfunction findAlignSetting(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n  var align = alignSetting[value.toLowerCase()];\n  return align ? value.toLowerCase() : false;\n}\n\nfunction VTTCue(startTime, endTime, text) {\n  /**\n   * Shim implementation specific properties. These properties are not in\n   * the spec.\n   */\n\n  // Lets us know when the VTTCue's data has changed in such a way that we need\n  // to recompute its display state. This lets us compute its display state\n  // lazily.\n  this.hasBeenReset = false;\n\n  /**\n   * VTTCue and TextTrackCue properties\n   * http://dev.w3.org/html5/webvtt/#vttcue-interface\n   */\n\n  var _id = \"\";\n  var _pauseOnExit = false;\n  var _startTime = startTime;\n  var _endTime = endTime;\n  var _text = text;\n  var _region = null;\n  var _vertical = \"\";\n  var _snapToLines = true;\n  var _line = \"auto\";\n  var _lineAlign = \"start\";\n  var _position = \"auto\";\n  var _positionAlign = \"auto\";\n  var _size = 100;\n  var _align = \"center\";\n\n  Object.defineProperties(this, {\n    \"id\": {\n      enumerable: true,\n      get: function() {\n        return _id;\n      },\n      set: function(value) {\n        _id = \"\" + value;\n      }\n    },\n\n    \"pauseOnExit\": {\n      enumerable: true,\n      get: function() {\n        return _pauseOnExit;\n      },\n      set: function(value) {\n        _pauseOnExit = !!value;\n      }\n    },\n\n    \"startTime\": {\n      enumerable: true,\n      get: function() {\n        return _startTime;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\") {\n          throw new TypeError(\"Start time must be set to a number.\");\n        }\n        _startTime = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"endTime\": {\n      enumerable: true,\n      get: function() {\n        return _endTime;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\") {\n          throw new TypeError(\"End time must be set to a number.\");\n        }\n        _endTime = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"text\": {\n      enumerable: true,\n      get: function() {\n        return _text;\n      },\n      set: function(value) {\n        _text = \"\" + value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"region\": {\n      enumerable: true,\n      get: function() {\n        return _region;\n      },\n      set: function(value) {\n        _region = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"vertical\": {\n      enumerable: true,\n      get: function() {\n        return _vertical;\n      },\n      set: function(value) {\n        var setting = findDirectionSetting(value);\n        // Have to check for false because the setting an be an empty string.\n        if (setting === false) {\n          throw new SyntaxError(\"Vertical: an invalid or illegal direction string was specified.\");\n        }\n        _vertical = setting;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"snapToLines\": {\n      enumerable: true,\n      get: function() {\n        return _snapToLines;\n      },\n      set: function(value) {\n        _snapToLines = !!value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"line\": {\n      enumerable: true,\n      get: function() {\n        return _line;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\" && value !== autoKeyword) {\n          throw new SyntaxError(\"Line: an invalid number or illegal string was specified.\");\n        }\n        _line = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"lineAlign\": {\n      enumerable: true,\n      get: function() {\n        return _lineAlign;\n      },\n      set: function(value) {\n        var setting = findAlignSetting(value);\n        if (!setting) {\n          console.warn(\"lineAlign: an invalid or illegal string was specified.\");\n        } else {\n          _lineAlign = setting;\n          this.hasBeenReset = true;\n        }\n      }\n    },\n\n    \"position\": {\n      enumerable: true,\n      get: function() {\n        return _position;\n      },\n      set: function(value) {\n        if (value < 0 || value > 100) {\n          throw new Error(\"Position must be between 0 and 100.\");\n        }\n        _position = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"positionAlign\": {\n      enumerable: true,\n      get: function() {\n        return _positionAlign;\n      },\n      set: function(value) {\n        var setting = findAlignSetting(value);\n        if (!setting) {\n          console.warn(\"positionAlign: an invalid or illegal string was specified.\");\n        } else {\n          _positionAlign = setting;\n          this.hasBeenReset = true;\n        }\n      }\n    },\n\n    \"size\": {\n      enumerable: true,\n      get: function() {\n        return _size;\n      },\n      set: function(value) {\n        if (value < 0 || value > 100) {\n          throw new Error(\"Size must be between 0 and 100.\");\n        }\n        _size = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"align\": {\n      enumerable: true,\n      get: function() {\n        return _align;\n      },\n      set: function(value) {\n        var setting = findAlignSetting(value);\n        if (!setting) {\n          throw new SyntaxError(\"align: an invalid or illegal alignment string was specified.\");\n        }\n        _align = setting;\n        this.hasBeenReset = true;\n      }\n    }\n  });\n\n  /**\n   * Other <track> spec defined properties\n   */\n\n  // http://www.whatwg.org/specs/web-apps/current-work/multipage/the-video-element.html#text-track-cue-display-state\n  this.displayState = undefined;\n}\n\n/**\n * VTTCue methods\n */\n\nVTTCue.prototype.getCueAsHTML = function() {\n  // Assume WebVTT.convertCueToDOMTree is on the global.\n  return WebVTT.convertCueToDOMTree(window, this.text);\n};\n\nmodule.exports = VTTCue;\n","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar scrollSetting = {\n  \"\": true,\n  \"up\": true\n};\n\nfunction findScrollSetting(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n  var scroll = scrollSetting[value.toLowerCase()];\n  return scroll ? value.toLowerCase() : false;\n}\n\nfunction isValidPercentValue(value) {\n  return typeof value === \"number\" && (value >= 0 && value <= 100);\n}\n\n// VTTRegion shim http://dev.w3.org/html5/webvtt/#vttregion-interface\nfunction VTTRegion() {\n  var _width = 100;\n  var _lines = 3;\n  var _regionAnchorX = 0;\n  var _regionAnchorY = 100;\n  var _viewportAnchorX = 0;\n  var _viewportAnchorY = 100;\n  var _scroll = \"\";\n\n  Object.defineProperties(this, {\n    \"width\": {\n      enumerable: true,\n      get: function() {\n        return _width;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"Width must be between 0 and 100.\");\n        }\n        _width = value;\n      }\n    },\n    \"lines\": {\n      enumerable: true,\n      get: function() {\n        return _lines;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\") {\n          throw new TypeError(\"Lines must be set to a number.\");\n        }\n        _lines = value;\n      }\n    },\n    \"regionAnchorY\": {\n      enumerable: true,\n      get: function() {\n        return _regionAnchorY;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"RegionAnchorX must be between 0 and 100.\");\n        }\n        _regionAnchorY = value;\n      }\n    },\n    \"regionAnchorX\": {\n      enumerable: true,\n      get: function() {\n        return _regionAnchorX;\n      },\n      set: function(value) {\n        if(!isValidPercentValue(value)) {\n          throw new Error(\"RegionAnchorY must be between 0 and 100.\");\n        }\n        _regionAnchorX = value;\n      }\n    },\n    \"viewportAnchorY\": {\n      enumerable: true,\n      get: function() {\n        return _viewportAnchorY;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"ViewportAnchorY must be between 0 and 100.\");\n        }\n        _viewportAnchorY = value;\n      }\n    },\n    \"viewportAnchorX\": {\n      enumerable: true,\n      get: function() {\n        return _viewportAnchorX;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"ViewportAnchorX must be between 0 and 100.\");\n        }\n        _viewportAnchorX = value;\n      }\n    },\n    \"scroll\": {\n      enumerable: true,\n      get: function() {\n        return _scroll;\n      },\n      set: function(value) {\n        var setting = findScrollSetting(value);\n        // Have to check for false as an empty string is a legal value.\n        if (setting === false) {\n          console.warn(\"Scroll: an invalid or illegal string was specified.\");\n        } else {\n          _scroll = setting;\n        }\n      }\n    }\n  });\n}\n\nmodule.exports = VTTRegion;\n","function _extends() {\n  module.exports = _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _extends.apply(this, arguments);\n}\nmodule.exports = _extends, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","import * as React from \"react\";\nfunction XMarkIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 24 24\",\n    fill: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M5.47 5.47a.75.75 0 011.06 0L12 10.94l5.47-5.47a.75.75 0 111.06 1.06L13.06 12l5.47 5.47a.75.75 0 11-1.06 1.06L12 13.06l-5.47 5.47a.75.75 0 01-1.06-1.06L10.94 12 5.47 6.53a.75.75 0 010-1.06z\",\n    clipRule: \"evenodd\"\n  }));\n}\nconst ForwardRef = React.forwardRef(XMarkIcon);\nexport default ForwardRef;"],"names":["window","require","module","exports","callback","decodeResponseBody","err","response","responseBody","statusCode","cause","TextDecoder","charset","contentTypeHeader","toLowerCase","split","reduce","contentType","_contentType$split","type","value","trim","getCharset","headers","decode","e","String","fromCharCode","apply","Uint8Array","_extends","isFunction","createXHR","httpHandler","parseHeaders","result","forEach","row","index","indexOf","key","slice","Array","isArray","push","initParams","uri","options","params","_createXHR","Error","called","body","getBody","undefined","xhr","responseText","responseType","responseXML","firefoxBugTakenEffect","documentElement","nodeName","getXml","isJson","JSON","parse","errorFunc","evt","clearTimeout","timeoutTimer","failureResponse","loadFunc","aborted","status","useXDR","method","url","rawRequest","getAllResponseHeaders","cors","XDomainRequest","XMLHttpRequest","data","sync","json","stringify","onreadystatechange","readyState","setTimeout","onload","onerror","onprogress","onabort","ontimeout","open","username","password","withCredentials","timeout","abort","code","setRequestHeader","hasOwnProperty","obj","i","isEmpty","beforeSend","send","array","iterator","length","forEachArray","toUpperCase","freeze","object","oc","Object","MIME_TYPE","HTML","isHTML","XML_APPLICATION","XML_TEXT","XML_XHTML_APPLICATION","XML_SVG_IMAGE","NAMESPACE","SVG","XML","XMLNS","assign","target","source","TypeError","prototype","call","find","list","predicate","ac","item","conventions","dom","entities","sax","DOMImplementation","ParseError","XMLReader","normalizeLineEndings","input","replace","DOMParser","this","locator","DOMHandler","cdata","position","node","lineNumber","columnNumber","_locator","l","systemId","_toString","chars","start","substr","java","lang","appendElement","hander","currentElement","appendChild","doc","parseFromString","mimeType","domBuilder","errorHandler","defaultNSMap","xmlns","test","entityMap","HTML_ENTITIES","XML_ENTITIES","setDocumentLocator","errorImpl","isCallback","Function","build","fn","msg","buildErrorHandler","xml","normalize","error","startDocument","createDocument","documentURI","startElement","namespaceURI","localName","qName","attrs","el","createElementNS","len","getURI","getValue","attr","getQName","createAttributeNS","getLocator","nodeValue","setAttributeNode","endElement","current","tagName","parentNode","startPrefixMapping","prefix","endPrefixMapping","processingInstruction","ins","createProcessingInstruction","ignorableWhitespace","ch","characters","arguments","charNode","createCDATASection","createTextNode","skippedEntity","name","endDocument","comment","comm","createComment","startCDATA","endCDATA","startDTD","publicId","impl","implementation","createDocumentType","dt","doctype","warning","console","warn","fatalError","notEmptyString","orderedSetReducer","element","toOrderedSet","filter","splitOnASCIIWhitespace","keys","copy","src","dest","p","Class","Super","pt","t","constructor","NodeType","ELEMENT_NODE","ATTRIBUTE_NODE","TEXT_NODE","CDATA_SECTION_NODE","ENTITY_REFERENCE_NODE","ENTITY_NODE","PROCESSING_INSTRUCTION_NODE","COMMENT_NODE","DOCUMENT_NODE","DOCUMENT_TYPE_NODE","DOCUMENT_FRAGMENT_NODE","NOTATION_NODE","ExceptionCode","ExceptionMessage","HIERARCHY_REQUEST_ERR","INDEX_SIZE_ERR","DOMSTRING_SIZE_ERR","NOT_FOUND_ERR","WRONG_DOCUMENT_ERR","INVALID_CHARACTER_ERR","NO_DATA_ALLOWED_ERR","NO_MODIFICATION_ALLOWED_ERR","INUSE_ATTRIBUTE_ERR","NOT_SUPPORTED_ERR","INVALID_STATE_ERR","SYNTAX_ERR","INVALID_MODIFICATION_ERR","NAMESPACE_ERR","INVALID_ACCESS_ERR","DOMException","message","captureStackTrace","NodeList","LiveNodeList","refresh","_node","_refresh","_updateLiveList","inc","_inc","ownerDocument","ls","__set__","$$length","NamedNodeMap","_findNodeIndex","_addNamedNode","newAttr","oldAttr","ownerElement","_onRemoveAttribute","ns","_nsMap","_onAddAttribute","_removeNamedNode","lastIndex","Node","_xmlEncoder","c","charCodeAt","_visitNode","firstChild","nextSibling","Document","remove","_onUpdateChild","newChild","cs","childNodes","child","_removeChild","previous","previousSibling","next","lastChild","isDocTypeNode","nodeType","isElementNode","isTextNode","isElementInsertionPossible","parentChildNodes","docTypeNode","isElementReplacementPossible","assertPreInsertionValidity1to5","parent","hasValidParentNodeType","hasInsertableNodeType","assertPreInsertionValidityInDocument","nodeChildNodes","nodeChildElements","parentElementChild","assertPreReplacementValidityInDocument","_insertBefore","_inDocumentAssertion","cp","removeChild","newFirst","newLast","pre","Element","Attr","CharacterData","Text","Comment","CDATASection","DocumentType","Notation","Entity","EntityReference","DocumentFragment","ProcessingInstruction","XMLSerializer","nodeSerializeToString","isHtml","nodeFilter","buf","refNode","lookupPrefix","visibleNamespaces","namespace","serializeToString","join","needNamespaceDefine","addSerializedAttribute","qualifiedName","attributes","prefixedNodeName","defaultNS","ai","nsi","pubid","sysid","sub","internalSubset","importNode","deep","node2","cloneNode","n","v","attrs2","_ownerElement","toString","getNamedItem","setNamedItem","setNamedItemNS","getNamedItemNS","removeNamedItem","removeNamedItemNS","hasFeature","feature","version","root","insertBefore","refChild","replaceChild","oldChild","hasChildNodes","appendData","isSupported","hasAttributes","map","lookupNamespaceURI","isDefaultNamespace","importedNode","getElementById","id","rtv","getAttribute","getElementsByClassName","classNames","classNamesSet","base","nodeClassNames","matches","nodeClassNamesSet","every","createElement","createDocumentFragment","createAttribute","specified","createEntityReference","pl","hasAttribute","getAttributeNode","setAttribute","removeAttribute","removeAttributeNode","_appendSingleChild","setAttributeNodeNS","removeAttributeNS","old","getAttributeNodeNS","hasAttributeNS","getAttributeNS","setAttributeNS","getElementsByTagName","getElementsByTagNameNS","substringData","offset","count","substring","text","insertData","replaceData","deleteData","splitText","newText","newNode","defineProperty","getTextContent","get","set","amp","apos","gt","lt","quot","Aacute","aacute","Abreve","abreve","acd","acE","Acirc","acirc","acute","Acy","acy","AElig","aelig","af","Afr","afr","Agrave","agrave","alefsym","aleph","Alpha","alpha","Amacr","amacr","amalg","AMP","And","and","andand","andd","andslope","andv","ang","ange","angle","angmsd","angmsdaa","angmsdab","angmsdac","angmsdad","angmsdae","angmsdaf","angmsdag","angmsdah","angrt","angrtvb","angrtvbd","angsph","angst","angzarr","Aogon","aogon","Aopf","aopf","ap","apacir","apE","ape","apid","ApplyFunction","approx","approxeq","Aring","aring","Ascr","ascr","Assign","ast","asymp","asympeq","Atilde","atilde","Auml","auml","awconint","awint","backcong","backepsilon","backprime","backsim","backsimeq","Backslash","Barv","barvee","Barwed","barwed","barwedge","bbrk","bbrktbrk","bcong","Bcy","bcy","bdquo","becaus","Because","because","bemptyv","bepsi","bernou","Bernoullis","Beta","beta","beth","between","Bfr","bfr","bigcap","bigcirc","bigcup","bigodot","bigoplus","bigotimes","bigsqcup","bigstar","bigtriangledown","bigtriangleup","biguplus","bigvee","bigwedge","bkarow","blacklozenge","blacksquare","blacktriangle","blacktriangledown","blacktriangleleft","blacktriangleright","blank","blk12","blk14","blk34","block","bne","bnequiv","bNot","bnot","Bopf","bopf","bot","bottom","bowtie","boxbox","boxDL","boxDl","boxdL","boxdl","boxDR","boxDr","boxdR","boxdr","boxH","boxh","boxHD","boxHd","boxhD","boxhd","boxHU","boxHu","boxhU","boxhu","boxminus","boxplus","boxtimes","boxUL","boxUl","boxuL","boxul","boxUR","boxUr","boxuR","boxur","boxV","boxv","boxVH","boxVh","boxvH","boxvh","boxVL","boxVl","boxvL","boxvl","boxVR","boxVr","boxvR","boxvr","bprime","Breve","breve","brvbar","Bscr","bscr","bsemi","bsim","bsime","bsol","bsolb","bsolhsub","bull","bullet","bump","bumpE","bumpe","Bumpeq","bumpeq","Cacute","cacute","Cap","cap","capand","capbrcup","capcap","capcup","capdot","CapitalDifferentialD","caps","caret","caron","Cayleys","ccaps","Ccaron","ccaron","Ccedil","ccedil","Ccirc","ccirc","Cconint","ccups","ccupssm","Cdot","cdot","cedil","Cedilla","cemptyv","cent","CenterDot","centerdot","Cfr","cfr","CHcy","chcy","check","checkmark","Chi","chi","cir","circ","circeq","circlearrowleft","circlearrowright","circledast","circledcirc","circleddash","CircleDot","circledR","circledS","CircleMinus","CirclePlus","CircleTimes","cirE","cire","cirfnint","cirmid","cirscir","ClockwiseContourIntegral","CloseCurlyDoubleQuote","CloseCurlyQuote","clubs","clubsuit","Colon","colon","Colone","colone","coloneq","comma","commat","comp","compfn","complement","complexes","cong","congdot","Congruent","Conint","conint","ContourIntegral","Copf","copf","coprod","Coproduct","COPY","copysr","CounterClockwiseContourIntegral","crarr","Cross","cross","Cscr","cscr","csub","csube","csup","csupe","ctdot","cudarrl","cudarrr","cuepr","cuesc","cularr","cularrp","Cup","cup","cupbrcap","CupCap","cupcap","cupcup","cupdot","cupor","cups","curarr","curarrm","curlyeqprec","curlyeqsucc","curlyvee","curlywedge","curren","curvearrowleft","curvearrowright","cuvee","cuwed","cwconint","cwint","cylcty","Dagger","dagger","daleth","Darr","dArr","darr","dash","Dashv","dashv","dbkarow","dblac","Dcaron","dcaron","Dcy","dcy","DD","dd","ddagger","ddarr","DDotrahd","ddotseq","deg","Del","Delta","delta","demptyv","dfisht","Dfr","dfr","dHar","dharl","dharr","DiacriticalAcute","DiacriticalDot","DiacriticalDoubleAcute","DiacriticalGrave","DiacriticalTilde","diam","Diamond","diamond","diamondsuit","diams","die","DifferentialD","digamma","disin","div","divide","divideontimes","divonx","DJcy","djcy","dlcorn","dlcrop","dollar","Dopf","dopf","Dot","dot","DotDot","doteq","doteqdot","DotEqual","dotminus","dotplus","dotsquare","doublebarwedge","DoubleContourIntegral","DoubleDot","DoubleDownArrow","DoubleLeftArrow","DoubleLeftRightArrow","DoubleLeftTee","DoubleLongLeftArrow","DoubleLongLeftRightArrow","DoubleLongRightArrow","DoubleRightArrow","DoubleRightTee","DoubleUpArrow","DoubleUpDownArrow","DoubleVerticalBar","DownArrow","Downarrow","downarrow","DownArrowBar","DownArrowUpArrow","DownBreve","downdownarrows","downharpoonleft","downharpoonright","DownLeftRightVector","DownLeftTeeVector","DownLeftVector","DownLeftVectorBar","DownRightTeeVector","DownRightVector","DownRightVectorBar","DownTee","DownTeeArrow","drbkarow","drcorn","drcrop","Dscr","dscr","DScy","dscy","dsol","Dstrok","dstrok","dtdot","dtri","dtrif","duarr","duhar","dwangle","DZcy","dzcy","dzigrarr","Eacute","eacute","easter","Ecaron","ecaron","ecir","Ecirc","ecirc","ecolon","Ecy","ecy","eDDot","Edot","eDot","edot","ee","efDot","Efr","efr","eg","Egrave","egrave","egs","egsdot","elinters","ell","els","elsdot","Emacr","emacr","empty","emptyset","EmptySmallSquare","emptyv","EmptyVerySmallSquare","emsp","emsp13","emsp14","ENG","eng","ensp","Eogon","eogon","Eopf","eopf","epar","eparsl","eplus","epsi","Epsilon","epsilon","epsiv","eqcirc","eqcolon","eqsim","eqslantgtr","eqslantless","Equal","equals","EqualTilde","equest","Equilibrium","equiv","equivDD","eqvparsl","erarr","erDot","Escr","escr","esdot","Esim","esim","Eta","eta","ETH","eth","Euml","euml","euro","excl","exist","Exists","expectation","ExponentialE","exponentiale","fallingdotseq","Fcy","fcy","female","ffilig","fflig","ffllig","Ffr","ffr","filig","FilledSmallSquare","FilledVerySmallSquare","fjlig","flat","fllig","fltns","fnof","Fopf","fopf","ForAll","forall","fork","forkv","Fouriertrf","fpartint","frac12","frac13","frac14","frac15","frac16","frac18","frac23","frac25","frac34","frac35","frac38","frac45","frac56","frac58","frac78","frasl","frown","Fscr","fscr","gacute","Gamma","gamma","Gammad","gammad","gap","Gbreve","gbreve","Gcedil","Gcirc","gcirc","Gcy","gcy","Gdot","gdot","gE","ge","gEl","gel","geq","geqq","geqslant","ges","gescc","gesdot","gesdoto","gesdotol","gesl","gesles","Gfr","gfr","Gg","gg","ggg","gimel","GJcy","gjcy","gl","gla","glE","glj","gnap","gnapprox","gnE","gne","gneq","gneqq","gnsim","Gopf","gopf","grave","GreaterEqual","GreaterEqualLess","GreaterFullEqual","GreaterGreater","GreaterLess","GreaterSlantEqual","GreaterTilde","Gscr","gscr","gsim","gsime","gsiml","Gt","GT","gtcc","gtcir","gtdot","gtlPar","gtquest","gtrapprox","gtrarr","gtrdot","gtreqless","gtreqqless","gtrless","gtrsim","gvertneqq","gvnE","Hacek","hairsp","half","hamilt","HARDcy","hardcy","hArr","harr","harrcir","harrw","Hat","hbar","Hcirc","hcirc","hearts","heartsuit","hellip","hercon","Hfr","hfr","HilbertSpace","hksearow","hkswarow","hoarr","homtht","hookleftarrow","hookrightarrow","Hopf","hopf","horbar","HorizontalLine","Hscr","hscr","hslash","Hstrok","hstrok","HumpDownHump","HumpEqual","hybull","hyphen","Iacute","iacute","ic","Icirc","icirc","Icy","icy","Idot","IEcy","iecy","iexcl","iff","Ifr","ifr","Igrave","igrave","ii","iiiint","iiint","iinfin","iiota","IJlig","ijlig","Im","Imacr","imacr","image","ImaginaryI","imagline","imagpart","imath","imof","imped","Implies","in","incare","infin","infintie","inodot","Int","int","intcal","integers","Integral","intercal","Intersection","intlarhk","intprod","InvisibleComma","InvisibleTimes","IOcy","iocy","Iogon","iogon","Iopf","iopf","Iota","iota","iprod","iquest","Iscr","iscr","isin","isindot","isinE","isins","isinsv","isinv","it","Itilde","itilde","Iukcy","iukcy","Iuml","iuml","Jcirc","jcirc","Jcy","jcy","Jfr","jfr","jmath","Jopf","jopf","Jscr","jscr","Jsercy","jsercy","Jukcy","jukcy","Kappa","kappa","kappav","Kcedil","kcedil","Kcy","kcy","Kfr","kfr","kgreen","KHcy","khcy","KJcy","kjcy","Kopf","kopf","Kscr","kscr","lAarr","Lacute","lacute","laemptyv","lagran","Lambda","lambda","Lang","langd","langle","lap","Laplacetrf","laquo","Larr","lArr","larr","larrb","larrbfs","larrfs","larrhk","larrlp","larrpl","larrsim","larrtl","lat","lAtail","latail","late","lates","lBarr","lbarr","lbbrk","lbrace","lbrack","lbrke","lbrksld","lbrkslu","Lcaron","lcaron","Lcedil","lcedil","lceil","lcub","Lcy","lcy","ldca","ldquo","ldquor","ldrdhar","ldrushar","ldsh","lE","le","LeftAngleBracket","LeftArrow","Leftarrow","leftarrow","LeftArrowBar","LeftArrowRightArrow","leftarrowtail","LeftCeiling","LeftDoubleBracket","LeftDownTeeVector","LeftDownVector","LeftDownVectorBar","LeftFloor","leftharpoondown","leftharpoonup","leftleftarrows","LeftRightArrow","Leftrightarrow","leftrightarrow","leftrightarrows","leftrightharpoons","leftrightsquigarrow","LeftRightVector","LeftTee","LeftTeeArrow","LeftTeeVector","leftthreetimes","LeftTriangle","LeftTriangleBar","LeftTriangleEqual","LeftUpDownVector","LeftUpTeeVector","LeftUpVector","LeftUpVectorBar","LeftVector","LeftVectorBar","lEg","leg","leq","leqq","leqslant","les","lescc","lesdot","lesdoto","lesdotor","lesg","lesges","lessapprox","lessdot","lesseqgtr","lesseqqgtr","LessEqualGreater","LessFullEqual","LessGreater","lessgtr","LessLess","lesssim","LessSlantEqual","LessTilde","lfisht","lfloor","Lfr","lfr","lg","lgE","lHar","lhard","lharu","lharul","lhblk","LJcy","ljcy","Ll","ll","llarr","llcorner","Lleftarrow","llhard","lltri","Lmidot","lmidot","lmoust","lmoustache","lnap","lnapprox","lnE","lne","lneq","lneqq","lnsim","loang","loarr","lobrk","LongLeftArrow","Longleftarrow","longleftarrow","LongLeftRightArrow","Longleftrightarrow","longleftrightarrow","longmapsto","LongRightArrow","Longrightarrow","longrightarrow","looparrowleft","looparrowright","lopar","Lopf","lopf","loplus","lotimes","lowast","lowbar","LowerLeftArrow","LowerRightArrow","loz","lozenge","lozf","lpar","lparlt","lrarr","lrcorner","lrhar","lrhard","lrm","lrtri","lsaquo","Lscr","lscr","Lsh","lsh","lsim","lsime","lsimg","lsqb","lsquo","lsquor","Lstrok","lstrok","Lt","LT","ltcc","ltcir","ltdot","lthree","ltimes","ltlarr","ltquest","ltri","ltrie","ltrif","ltrPar","lurdshar","luruhar","lvertneqq","lvnE","macr","male","malt","maltese","Map","mapsto","mapstodown","mapstoleft","mapstoup","marker","mcomma","Mcy","mcy","mdash","mDDot","measuredangle","MediumSpace","Mellintrf","Mfr","mfr","mho","micro","mid","midast","midcir","middot","minus","minusb","minusd","minusdu","MinusPlus","mlcp","mldr","mnplus","models","Mopf","mopf","mp","Mscr","mscr","mstpos","Mu","mu","multimap","mumap","nabla","Nacute","nacute","nang","nap","napE","napid","napos","napprox","natur","natural","naturals","nbsp","nbump","nbumpe","ncap","Ncaron","ncaron","Ncedil","ncedil","ncong","ncongdot","ncup","Ncy","ncy","ndash","ne","nearhk","neArr","nearr","nearrow","nedot","NegativeMediumSpace","NegativeThickSpace","NegativeThinSpace","NegativeVeryThinSpace","nequiv","nesear","nesim","NestedGreaterGreater","NestedLessLess","NewLine","nexist","nexists","Nfr","nfr","ngE","nge","ngeq","ngeqq","ngeqslant","nges","nGg","ngsim","nGt","ngt","ngtr","nGtv","nhArr","nharr","nhpar","ni","nis","nisd","niv","NJcy","njcy","nlArr","nlarr","nldr","nlE","nle","nLeftarrow","nleftarrow","nLeftrightarrow","nleftrightarrow","nleq","nleqq","nleqslant","nles","nless","nLl","nlsim","nLt","nlt","nltri","nltrie","nLtv","nmid","NoBreak","NonBreakingSpace","Nopf","nopf","Not","not","NotCongruent","NotCupCap","NotDoubleVerticalBar","NotElement","NotEqual","NotEqualTilde","NotExists","NotGreater","NotGreaterEqual","NotGreaterFullEqual","NotGreaterGreater","NotGreaterLess","NotGreaterSlantEqual","NotGreaterTilde","NotHumpDownHump","NotHumpEqual","notin","notindot","notinE","notinva","notinvb","notinvc","NotLeftTriangle","NotLeftTriangleBar","NotLeftTriangleEqual","NotLess","NotLessEqual","NotLessGreater","NotLessLess","NotLessSlantEqual","NotLessTilde","NotNestedGreaterGreater","NotNestedLessLess","notni","notniva","notnivb","notnivc","NotPrecedes","NotPrecedesEqual","NotPrecedesSlantEqual","NotReverseElement","NotRightTriangle","NotRightTriangleBar","NotRightTriangleEqual","NotSquareSubset","NotSquareSubsetEqual","NotSquareSuperset","NotSquareSupersetEqual","NotSubset","NotSubsetEqual","NotSucceeds","NotSucceedsEqual","NotSucceedsSlantEqual","NotSucceedsTilde","NotSuperset","NotSupersetEqual","NotTilde","NotTildeEqual","NotTildeFullEqual","NotTildeTilde","NotVerticalBar","npar","nparallel","nparsl","npart","npolint","npr","nprcue","npre","nprec","npreceq","nrArr","nrarr","nrarrc","nrarrw","nRightarrow","nrightarrow","nrtri","nrtrie","nsc","nsccue","nsce","Nscr","nscr","nshortmid","nshortparallel","nsim","nsime","nsimeq","nsmid","nspar","nsqsube","nsqsupe","nsub","nsubE","nsube","nsubset","nsubseteq","nsubseteqq","nsucc","nsucceq","nsup","nsupE","nsupe","nsupset","nsupseteq","nsupseteqq","ntgl","Ntilde","ntilde","ntlg","ntriangleleft","ntrianglelefteq","ntriangleright","ntrianglerighteq","Nu","nu","num","numero","numsp","nvap","nVDash","nVdash","nvDash","nvdash","nvge","nvgt","nvHarr","nvinfin","nvlArr","nvle","nvlt","nvltrie","nvrArr","nvrtrie","nvsim","nwarhk","nwArr","nwarr","nwarrow","nwnear","Oacute","oacute","oast","ocir","Ocirc","ocirc","Ocy","ocy","odash","Odblac","odblac","odiv","odot","odsold","OElig","oelig","ofcir","Ofr","ofr","ogon","Ograve","ograve","ogt","ohbar","ohm","oint","olarr","olcir","olcross","oline","olt","Omacr","omacr","Omega","omega","Omicron","omicron","omid","ominus","Oopf","oopf","opar","OpenCurlyDoubleQuote","OpenCurlyQuote","operp","oplus","Or","or","orarr","ord","order","orderof","ordf","ordm","origof","oror","orslope","orv","oS","Oscr","oscr","Oslash","oslash","osol","Otilde","otilde","Otimes","otimes","otimesas","Ouml","ouml","ovbar","OverBar","OverBrace","OverBracket","OverParenthesis","par","para","parallel","parsim","parsl","part","PartialD","Pcy","pcy","percnt","period","permil","perp","pertenk","Pfr","pfr","Phi","phi","phiv","phmmat","phone","Pi","pi","pitchfork","piv","planck","planckh","plankv","plus","plusacir","plusb","pluscir","plusdo","plusdu","pluse","PlusMinus","plusmn","plussim","plustwo","pm","Poincareplane","pointint","Popf","popf","pound","Pr","pr","prap","prcue","prE","prec","precapprox","preccurlyeq","Precedes","PrecedesEqual","PrecedesSlantEqual","PrecedesTilde","preceq","precnapprox","precneqq","precnsim","precsim","Prime","prime","primes","prnap","prnE","prnsim","prod","Product","profalar","profline","profsurf","prop","Proportion","Proportional","propto","prsim","prurel","Pscr","pscr","Psi","psi","puncsp","Qfr","qfr","qint","Qopf","qopf","qprime","Qscr","qscr","quaternions","quatint","quest","questeq","QUOT","rAarr","race","Racute","racute","radic","raemptyv","Rang","rang","rangd","range","rangle","raquo","Rarr","rArr","rarr","rarrap","rarrb","rarrbfs","rarrc","rarrfs","rarrhk","rarrlp","rarrpl","rarrsim","Rarrtl","rarrtl","rarrw","rAtail","ratail","ratio","rationals","RBarr","rBarr","rbarr","rbbrk","rbrace","rbrack","rbrke","rbrksld","rbrkslu","Rcaron","rcaron","Rcedil","rcedil","rceil","rcub","Rcy","rcy","rdca","rdldhar","rdquo","rdquor","rdsh","Re","real","realine","realpart","reals","rect","REG","reg","ReverseElement","ReverseEquilibrium","ReverseUpEquilibrium","rfisht","rfloor","Rfr","rfr","rHar","rhard","rharu","rharul","Rho","rho","rhov","RightAngleBracket","RightArrow","Rightarrow","rightarrow","RightArrowBar","RightArrowLeftArrow","rightarrowtail","RightCeiling","RightDoubleBracket","RightDownTeeVector","RightDownVector","RightDownVectorBar","RightFloor","rightharpoondown","rightharpoonup","rightleftarrows","rightleftharpoons","rightrightarrows","rightsquigarrow","RightTee","RightTeeArrow","RightTeeVector","rightthreetimes","RightTriangle","RightTriangleBar","RightTriangleEqual","RightUpDownVector","RightUpTeeVector","RightUpVector","RightUpVectorBar","RightVector","RightVectorBar","ring","risingdotseq","rlarr","rlhar","rlm","rmoust","rmoustache","rnmid","roang","roarr","robrk","ropar","Ropf","ropf","roplus","rotimes","RoundImplies","rpar","rpargt","rppolint","rrarr","Rrightarrow","rsaquo","Rscr","rscr","Rsh","rsh","rsqb","rsquo","rsquor","rthree","rtimes","rtri","rtrie","rtrif","rtriltri","RuleDelayed","ruluhar","rx","Sacute","sacute","sbquo","Sc","sc","scap","Scaron","scaron","sccue","scE","sce","Scedil","scedil","Scirc","scirc","scnap","scnE","scnsim","scpolint","scsim","Scy","scy","sdot","sdotb","sdote","searhk","seArr","searr","searrow","sect","semi","seswar","setminus","setmn","sext","Sfr","sfr","sfrown","sharp","SHCHcy","shchcy","SHcy","shcy","ShortDownArrow","ShortLeftArrow","shortmid","shortparallel","ShortRightArrow","ShortUpArrow","shy","Sigma","sigma","sigmaf","sigmav","sim","simdot","sime","simeq","simg","simgE","siml","simlE","simne","simplus","simrarr","slarr","SmallCircle","smallsetminus","smashp","smeparsl","smid","smile","smt","smte","smtes","SOFTcy","softcy","sol","solb","solbar","Sopf","sopf","spades","spadesuit","spar","sqcap","sqcaps","sqcup","sqcups","Sqrt","sqsub","sqsube","sqsubset","sqsubseteq","sqsup","sqsupe","sqsupset","sqsupseteq","squ","Square","square","SquareIntersection","SquareSubset","SquareSubsetEqual","SquareSuperset","SquareSupersetEqual","SquareUnion","squarf","squf","srarr","Sscr","sscr","ssetmn","ssmile","sstarf","Star","star","starf","straightepsilon","straightphi","strns","Sub","subdot","subE","sube","subedot","submult","subnE","subne","subplus","subrarr","Subset","subset","subseteq","subseteqq","SubsetEqual","subsetneq","subsetneqq","subsim","subsub","subsup","succ","succapprox","succcurlyeq","Succeeds","SucceedsEqual","SucceedsSlantEqual","SucceedsTilde","succeq","succnapprox","succneqq","succnsim","succsim","SuchThat","Sum","sum","sung","Sup","sup","sup1","sup2","sup3","supdot","supdsub","supE","supe","supedot","Superset","SupersetEqual","suphsol","suphsub","suplarr","supmult","supnE","supne","supplus","Supset","supset","supseteq","supseteqq","supsetneq","supsetneqq","supsim","supsub","supsup","swarhk","swArr","swarr","swarrow","swnwar","szlig","Tab","Tau","tau","tbrk","Tcaron","tcaron","Tcedil","tcedil","Tcy","tcy","tdot","telrec","Tfr","tfr","there4","Therefore","therefore","Theta","theta","thetasym","thetav","thickapprox","thicksim","ThickSpace","thinsp","ThinSpace","thkap","thksim","THORN","thorn","Tilde","tilde","TildeEqual","TildeFullEqual","TildeTilde","times","timesb","timesbar","timesd","tint","toea","top","topbot","topcir","Topf","topf","topfork","tosa","tprime","TRADE","trade","triangle","triangledown","triangleleft","trianglelefteq","triangleq","triangleright","trianglerighteq","tridot","trie","triminus","TripleDot","triplus","trisb","tritime","trpezium","Tscr","tscr","TScy","tscy","TSHcy","tshcy","Tstrok","tstrok","twixt","twoheadleftarrow","twoheadrightarrow","Uacute","uacute","Uarr","uArr","uarr","Uarrocir","Ubrcy","ubrcy","Ubreve","ubreve","Ucirc","ucirc","Ucy","ucy","udarr","Udblac","udblac","udhar","ufisht","Ufr","ufr","Ugrave","ugrave","uHar","uharl","uharr","uhblk","ulcorn","ulcorner","ulcrop","ultri","Umacr","umacr","uml","UnderBar","UnderBrace","UnderBracket","UnderParenthesis","Union","UnionPlus","Uogon","uogon","Uopf","uopf","UpArrow","Uparrow","uparrow","UpArrowBar","UpArrowDownArrow","UpDownArrow","Updownarrow","updownarrow","UpEquilibrium","upharpoonleft","upharpoonright","uplus","UpperLeftArrow","UpperRightArrow","Upsi","upsi","upsih","Upsilon","upsilon","UpTee","UpTeeArrow","upuparrows","urcorn","urcorner","urcrop","Uring","uring","urtri","Uscr","uscr","utdot","Utilde","utilde","utri","utrif","uuarr","Uuml","uuml","uwangle","vangrt","varepsilon","varkappa","varnothing","varphi","varpi","varpropto","vArr","varr","varrho","varsigma","varsubsetneq","varsubsetneqq","varsupsetneq","varsupsetneqq","vartheta","vartriangleleft","vartriangleright","Vbar","vBar","vBarv","Vcy","vcy","VDash","Vdash","vDash","vdash","Vdashl","Vee","vee","veebar","veeeq","vellip","Verbar","verbar","Vert","vert","VerticalBar","VerticalLine","VerticalSeparator","VerticalTilde","VeryThinSpace","Vfr","vfr","vltri","vnsub","vnsup","Vopf","vopf","vprop","vrtri","Vscr","vscr","vsubnE","vsubne","vsupnE","vsupne","Vvdash","vzigzag","Wcirc","wcirc","wedbar","Wedge","wedge","wedgeq","weierp","Wfr","wfr","Wopf","wopf","wp","wr","wreath","Wscr","wscr","xcap","xcirc","xcup","xdtri","Xfr","xfr","xhArr","xharr","Xi","xi","xlArr","xlarr","xmap","xnis","xodot","Xopf","xopf","xoplus","xotime","xrArr","xrarr","Xscr","xscr","xsqcup","xuplus","xutri","xvee","xwedge","Yacute","yacute","YAcy","yacy","Ycirc","ycirc","Ycy","ycy","yen","Yfr","yfr","YIcy","yicy","Yopf","yopf","Yscr","yscr","YUcy","yucy","Yuml","yuml","Zacute","zacute","Zcaron","zcaron","Zcy","zcy","Zdot","zdot","zeetrf","ZeroWidthSpace","Zeta","zeta","Zfr","zfr","ZHcy","zhcy","zigrarr","Zopf","zopf","Zscr","zscr","zwj","zwnj","nameStartChar","nameChar","RegExp","tagNamePattern","S_TAG","S_ATTR","S_ATTR_SPACE","S_EQ","S_ATTR_NOQUOT_VALUE","S_ATTR_END","S_TAG_SPACE","S_TAG_CLOSE","copyLocator","f","parseElementStartPart","currentNSMap","entityReplacer","addAttribute","qname","startIndex","attributeNames","addValue","attrName","s","charAt","setTagName","closed","match","localNSMap","a","nsp","nsPrefix","_copy","parseHtmlSpecialContent","elStartEnd","elEndStart","fixSelfClosed","closeMap","pos","lastIndexOf","parseDCC","end","matchs","exec","lastMatch","endDTD","parseInstruction","ElementAttributes","defaultNSMapCopy","fixedFromCharCode","surrogate1","surrogate2","k","parseInt","appendText","xt","m","lineEnd","linePattern","lineStart","parseStack","tagStart","config","pop","endMatch","locator2","Math","max","getLocalName","doccy","topLevel","global","minDoc","document","win","self","string","alert","confirm","prompt","keyCode","searchInput","hasKeyCode","which","charCode","names","foundNamedKey","search","codes","aliases","isEventKey","event","nameOrCode","title","alias","getUint64","view","DataView","buffer","byteOffset","byteLength","flags","subarray","references","referenceId","getUint32","timescale","earliestPresentationTime","firstOffset","referenceCount","getUint16","referenceType","referencedSize","subsegmentDuration","startsWithSap","sapType","sapDeltaTime","secondsToVideoTs","secondsToAudioTs","videoTsToSeconds","audioTsToSeconds","audioTsToVideoTs","videoTsToAudioTs","metadataTsToSeconds","ONE_SECOND_IN_TS","seconds","sampleRate","timestamp","timelineStartPts","keepOriginalTimestamps","MAX_UINT32","pow","uint8","dv","getBigUint64","Number","MAX_SAFE_INTEGER","__assign","__rest","getOwnPropertySymbols","propertyIsEnumerable","beat","createAnimation","_a","_b","loading","_c","color","_d","speedMultiplier","_e","cssOverride","_f","size","_g","margin","additionalprops","wrapper","display","style","backgroundColor","width","cssValue","height","borderRadius","animation","concat","animationFillMode","React","loaderName","frames","suffix","animationName","styleEl","head","styleSheet","sheet","keyFrames","insertRule","cssUnit","cm","mm","px","pc","em","ex","rem","vw","vh","vmin","vmax","parseLengthAndUnit","unit","valueString","includes","parseFloat","lengthWithunit","reviver","URL_REGEX","FIRST_SEGMENT_REGEX","SLASH_DOT_REGEX","SLASH_DOT_DOT_REGEX","URLToolkit","buildAbsoluteURL","baseURL","relativeURL","opts","alwaysNormalize","basePartsForNormalise","parseURL","path","normalizePath","buildURLFromParts","relativeParts","scheme","baseParts","netLoc","pathParts","builtParts","query","fragment","baseURLPath","newPath","parts","reverse","DEFAULT_LOCATION","baseUrl","relativeUrl","href","nativeURL","protocolLess","removeLocation","newUrl","URL","protocol","Stream","listeners","_proto","on","listener","off","splice","trigger","callbacks","args","_length","_i","dispose","pipe","destination","decodeB64ToUint8Array","b64Text","decodedString","Buffer","from","DESCRIPTORS","LineStream","_Stream","_inherits","_super","_createSuper","_this","_classCallCheck","_createClass","nextNewline","TAB","parseByterange","byterangeString","parseAttributes","ParseStream","_Stream2","_super2","_this2","customParsers","tagMappers","line","_this3","acc","mapper","mappedLine","newLine","tagType","duration","number","playlistType","allowed","URI","BYTERANGE","byterange","RESOLUTION","resolution","BANDWIDTH","dateTimeString","dateTimeObject","Date","IV","Uint32Array","PRECISE","subkey","clientAttributePattern","isHexaDecimal","isDecimalFloating","_ref","_this4","expression","customType","dataParser","segment","_ref2","camelCaseKeys","str","setHoldBack","manifest","serverControl","targetDuration","partTargetDuration","tag","hb","phb","minTargetDuration","minPartDuration","Parser","_Stream3","_super3","_this5","lineStream","parseStream","currentMap","_assertThisInitialized","uris","currentUri","hasParts","noop","defaultMediaGroups","currentTimeline","allowCache","discontinuityStarts","segments","lastByterangeEnd","lastPartByterangeEnd","daterangeTags","preloadHints","timeline","preloadSegment","entry","mediaGroup","rendition","endlist","endList","inf","mediaSequence","discontinuitySequence","METHOD","KEYFORMAT","contentProtection","KEYID","schemeIdUri","keyId","pssh","iv","isFinite","playlist","playlists","mediaGroups","media","TYPE","NAME","mediaGroupType","default","DEFAULT","autoselect","AUTOSELECT","LANGUAGE","language","instreamId","CHARACTERISTICS","characteristics","FORCED","forced","discontinuity","targetduration","isNaN","timeOffset","precise","cueOut","cueOutCont","cueIn","skip","warnOnMissingAttributes_","_this6","segmentIndex","partIndex","renditionReports","r","canBlockReload","canSkipDateranges","hint","isPart","otherHint","report","required","partInf","partTarget","daterange","endDate","startDate","plannedDuration","endOnNextYes","endOnNext","class","newDateInSeconds","setSeconds","getSeconds","attribute","independentSegments","custom","identifier","missing","chunk","addParser","addTagMapper","regexs","mp4","webm","ogg","video","audio","muxerVideo","muxerAudio","muxerText","mediaTypes","upperMediaTypes","translateLegacyCodec","codec","orig","profile","avcLevel","parseCodecs","codecString","codecs","codecType","details","mediaType","isAudioCodec","getMimeForCodec","container","browserSupportsCodec","isTypeSupported","muxerSupportsCodec","DEFAULT_AUDIO_CODEC","MPEGURL_REGEX","DASH_REGEX","simpleTypeFromSourceType","isArrayBufferView","ArrayBuffer","isView","toUint8","bytes","BigInt","BYTE_TABLE","bytesToNumber","Uint16Array","b","_temp","_ref$signed","signed","_ref$le","total","byte","exponent","abs","numberToBytes","_temp2","_ref2$le","x","byteCount","ceil","countBits","byteIndex","stringToBytes","stringIsBytes","unescape","encodeURIComponent","bytesMatch","_temp3","_ref3","_ref3$offset","_ref3$mask","mask","bByte","isObject","merge","_len","objects","_key","values","o","flatten","lists","y","errors","urlTypeToSegment","_ref$baseUrl","_ref$source","_ref$range","_ref$indexRange","indexRange","resolvedUri","resolveUrl","ranges","startRange","endRange","parseEndNumber","endNumber","segmentRange","static","_attributes$timescale","sourceDuration","periodDuration","segmentDuration","dynamic","NOW","clientOffset","availabilityStartTime","_attributes$timescale2","_attributes$periodSta","periodStart","_attributes$minimumUp","minimumUpdatePeriod","_attributes$timeShift","timeShiftBufferDepth","Infinity","now","periodStartWC","segmentCount","availableStart","floor","availableEnd","min","parseByDuration","_attributes$timescale4","_segmentRange$type","_attributes$timescale3","_attributes$startNumb","startNumber","time","toSegments","sectionDuration","segmentsFromBase","_attributes$initializ","initialization","_attributes$indexRang","presentationTime","_attributes$number","initSegment","sourceURL","segmentTimeInfo","addSidxSegmentsToPlaylist$1","sidx","sidxByteRange","sidxEnd","mediaReferences","reference","endIndex","SUPPORTED_MEDIA_TYPES","getUniqueTimelineStarts","timelineStarts","keyFunction","sort","getMediaGroupPlaylists","master","mediaGroupPlaylists","properties","group","label","groupKey","labelKey","mediaProperties","updateMediaSequenceForPlaylist","positionManifestOnTimeline","_ref6","oldManifest","newManifest","oldPlaylists","newPlaylists","_ref4","findIndex","_ref5","oldPlaylist","findPlaylistWithName","firstNewSegment","oldMatchingSegmentIndex","oldSegment","unshift","updateSequenceNumbers","generateSidxKey","byteRangeToString","mergeDiscontiguousPlaylists","_acc$name$segments","_toConsumableArray","addSidxSegmentsToPlaylist","sidxMapping","sidxKey","sidxMatch","addSidxSegmentsToPlaylists","organizeAudioPlaylists","mainPlaylist","isAudioOnly","formattedPlaylists","role","roleLabel","formatted","_ref7","_defineProperty","bandwidth","CODECS","AUDIO","SUBTITLES","formatAudioPlaylist","organizeVttPlaylists","_ref8","m3u8Attributes","formatVttPlaylist","formatVideoPlaylist","_ref9","frameRate","videoOnly","_ref10","audioOnly","_ref11","vttOnly","_ref12","flattenMediaGroupPlaylists","mediaGroupObject","labelContents","getLiveRValue","_attributes$timescale5","_attributes$periodSta2","_attributes$minimumUp2","parseByTimeline","segmentTimeline","_attributes$minimumUp3","_attributes$media","_attributes$timescale6","_attributes$startNumb2","sIndex","S","d","repeat","segmentTime","nextS","identifierPattern","constructTemplateUrl","format","identifierReplacement","segmentsFromTemplate","templateValues","RepresentationID","Bandwidth","_attributes$initializ2","mapSegment","parseTemplateInfo","Time","presentationTimeOffset","segmentsFromList","_attributes$segmentUr","segmentUrls","segmentUrlMap","segmentUrlObject","segmentUrl","_attributes$initializ3","mediaRange","SegmentURLToSegmentObject","generateSegments","_ref16","segmentAttributes","segmentsFn","segmentInfo","template","segmentsInfo","_segmentAttributes","_segmentAttributes$ti","findChildren","_ref17","getContent","textContent","parseDuration","_match$slice","_match$slice2","_slicedToArray","year","month","day","hour","minute","second","parsers","mediaPresentationDuration","suggestedPresentationDelay","prev","parseDivisionValue","parsedValue","parseFn","keySystemsMap","buildBaseUrls","referenceUrls","baseUrlElements","baseUrlElement","getSegmentInformation","adaptationSet","segmentTemplate","segmentList","segmentBase","segmentTimelineParentNode","segmentInitializationParentNode","segmentInitialization","toEventStream","eventStream","eventStreamAttributes","eventAttributes","messageData","contentEncoding","toRepresentations","periodAttributes","periodBaseUrls","periodSegmentInfo","service","adaptationSetAttributes","adaptationSetBaseUrls","roleAttributes","accessibility","captionServices","channel","_value$split","_value$split2","_value$split3","_value$split4","_value$split4$","opt","_opt$split","_opt$split2","val","easyReader","aspectRatio","labelVal","keySystem","psshNode","representations","adaptationSetSegmentInfo","representation","repBaseUrlElements","repBaseUrls","representationSegmentInfo","inheritBaseUrls","toAdaptationSets","mpdAttributes","mpdBaseUrls","adaptationSets","stringToMpdXml","manifestString","mpd","parser","parsedManifestInfo","_options$manifestUri","manifestUri","_options$NOW","_options$clientOffset","periodNodes","locations","periods","priorPeriod","_ref18","priorPeriodAttributes","mpdType","getPeriodStart","representationInfo","inheritAttributes","_ref14","_mediaGroups","dashPlaylists","_ref14$sidxMapping","previousManifest","_dashPlaylists$0$attr","videoPlaylists","audioPlaylists","vttPlaylists","captions","Boolean","VIDEO","organizedAudioGroup","organizedVttGroup","playlistTimelineStarts","_ref15","_ref13","subs","cc","svcObj","svc","toM3u8","parseUTCTiming","UTCTimingNode","parseUTCTimingScheme","ID3","getId3Offset","returnSize","getId3Size","parseDescriptors","results","headerSize","z","_DESCRIPTORS$z","desc","dependsOnEsId","ocrEsId","descriptors","decodeURIComponent","escape","bytesToString","oti","streamType","bufferSize","maxBitrate","avgBitrate","findBox","paths","complete","normalizePaths","EBML_TAGS","EBML","DocType","Segment","SegmentInfo","Tracks","Track","TrackNumber","DefaultDuration","TrackEntry","TrackType","FlagDefault","CodecID","CodecPrivate","VideoTrack","AudioTrack","Cluster","Timestamp","TimestampScale","BlockGroup","BlockDuration","Block","SimpleBlock","LENGTH_TABLE","getvint","removeLength","getLength","valueBytes","getInfinityDataSize","innerid","dataHeader","findEbml","dataStart","dataEnd","NAL_TYPE_ONE","NAL_TYPE_TWO","EMULATION_PREVENTION","discardEmulationPreventionBytes","positions","newLength","newData","sourceIndex","shift","findNal","dataType","types","nalLimit","nalStart","nalsFound","nalOffset","nalType","CONSTANTS","_isLikely","aac","mp3","docType","mkv","matroska","mov","fmp4","moof","moov","ac3","ts","flac","avi","riff","wav","findH264Nal","findH265Nal","isLikelyTypes","isLikelyFn","browserApi","isLikely","detectContainerForBytes","version$6","hooks_","hooks","removeHook","FullscreenApi","prefixed","apiMap","specApi","history","log$1","createLogger$1","logByType","level","log","lvl","levels","lvlRegExp","window$1","info","LogByTypeFactory","createLogger","subname","all","debug","fname","historyItem","clear","disable","enable","_len2","_key2","_len3","_key3","_len4","_key4","each","initial","accum","isPlain","merge$1","_len5","sources","_key5","defineLazyProperty","enumerable","writable","configurable","ANDROID_VERSION","Obj","__proto__","IS_IPOD","IOS_VERSION","IS_ANDROID","IS_FIREFOX","IS_EDGE","IS_CHROMIUM","IS_CHROME","CHROMIUM_VERSION","CHROME_VERSION","IE_VERSION","IS_SAFARI","IS_WINDOWS","IS_IPAD","IS_IPHONE","TOUCH_ENABLED","isReal","maxTouchPoints","UAD","userAgentData","platform","brands","brand","USER_AGENT","userAgent","major","minor","IS_IOS","IS_ANY_SAFARI","browser","isNonBlankString","isEl","isInFrame","createQuerier","selector","context","ctx","createEl","content","getOwnPropertyNames","propName","appendContent","innerText","prependTo","hasClass","classToCheck","throwIfWhitespace","classList","contains","addClass","_element$classList","_len6","classesToAdd","_key6","add","removeClass","_element$classList2","_len7","classesToRemove","_key7","toggleClass","classToToggle","className","toggle","setAttributes","attrValue","getAttributes","knownBooleans","attrVal","blockTextSelection","focus","unblockTextSelection","getBoundingClientRect","computedStyle","findPosition","offsetParent","left","offsetWidth","offsetHeight","fullscreenElement","offsetLeft","offsetTop","getPointerPosition","translated","transform","boxTarget","box","boxW","offsetY","offsetX","changedTouches","pageX","pageY","emptyEl","normalizeContent","insertContent","isSingleLeftClick","button","buttons","$","$$","computedStyleValue","getPropertyValue","videojs$1","Dom","_windowLoaded","autoSetup","vids","audios","divs","mediaEls","mediaEl","autoSetupTimeout","player","wait","vjs","setWindowLoaded","_supportsPassive","createStyleElement","setTextContent","cssText","DomData","WeakMap","_guid","newGUID","_cleanUpEvents","elem","has","handlers","removeEventListener","dispatcher","detachEvent","disabled","delete","_handleMultipleEvents","fixEvent","fixed_","returnTrue","returnFalse","isPropagationStopped","isImmediatePropagationStopped","preventDefault","srcElement","relatedTarget","fromElement","toElement","returnValue","defaultPrevented","stopPropagation","cancelBubble","stopImmediatePropagation","clientX","scrollLeft","clientLeft","clientY","scrollTop","clientTop","supportsPassive","passiveEvents","guid","hash","handlersCopy","addEventListener","passive","attachEvent","removeType","elemData","bubbles","targetData","one","func","any","EVENT_MAP","Events","UPDATE_REFRESH_INTERVAL","bind_","uid","bound","bind","throttle","last","debounce","immediate","debounced","later","cancel","Fn","EventTarget$2","ael","allowedEvents_","oldTimeout","dispatchEvent","objName","name_","isEvented","eventBusEl_","isValidEventType","validateTarget","fnName","validateEventType","validateListener","normalizeListenArgs","isTargetingSelf","_args","_args2","listen","EventedMixin","_len8","_key8","_normalizeListenArgs","removeListenerOnDispose","removeRemoverOnTargetDispose","_len9","_key9","_normalizeListenArgs2","_len10","largs","_key10","_len11","_key11","_normalizeListenArgs3","_len12","_key12","targetOrType","typeOrListener","evented","eventBusKey","eventedCallbacks","el_","StatefulMixin","state","setState","stateUpdates","changes","to","stateful","defaultState","handleStateChanged","w","toTitleCase$1","titleCaseEquals","str1","str2","Str","toTitleCase","Component$1","ready","play","player_","isDisposed_","parentComponent_","options_","id_","handleLanguagechange","children_","childIndex_","childNameIndex_","setTimeoutIds_","Set","setIntervalIds_","rafIds_","namedRafs_","clearingTimersOnDispose_","initChildren","reportTouchActivity","enableTouchActivity","readyQueue_","restoreEl","tokens","defaultValue","languages","primaryCode","primaryLang","localizedString","ret","contentEl_","_len13","_key13","currentChild","getChild","component","componentName","componentClassName","componentClass","ComponentClass","getComponent","contentEl","childFound","compEl","_this7","children","workingChildren","parentOptions","Tech","some","wchild","isTech","playerOptions","addChild","isReady_","readyQueue","_len14","_key14","_len15","_key15","skipListeners","dimension","widthOrHeight","pxIndex","computedWidthOrHeight","rule","currentDimension","blur","keycode","handleKeyDown","couldBeTap","touchStart","firstTouch","touches","xdiff","ydiff","sqrt","noTap","reportUserActivity","touchHolding","clearInterval","setInterval","touchEnd","timeoutId","_this8","clearTimersOnDispose_","interval","intervalId","_this9","_this10","requestAnimationFrame","cancelAnimationFrame","_this11","idName","cancelName","ComponentToRegister","reason","isComp","isPrototypeOf","components_","Player","players","playerNames","pname","getRange","valueIndex","rangeIndex","maxIndex","rangeCheck","createTimeRangesObj","timeRangesObj","createTimeRanges$1","registerComponent","defaultImplementation","guide","h","gm","gh","setFormatTime","customImplementation","resetFormatTime","formatTime","createTimeRanges","createTimeRange","bufferedPercent","buffered","bufferedDuration","MediaError","defaultMessages","errorTypes","errNum","isPromise","then","silencePromise","trackToJson_","track","cues","cue","startTime","endTime","textTrackConverter","tech","trackEls","trackObjs","trackEl","textTracks","addedTrack","addRemoteTextTrack","addCue","MODAL_CLASS_NAME","ModalDialog","_Component$","_this12","handleKeyDown_","close_","close","opened_","hasBeenOpened_","hasBeenFilled_","closeable","uncloseable","descEl_","description","_get","_getPrototypeOf","buildCSSClass","tabIndex","previouslyActiveEl_","localize","fillAlways","fill","wasPlaying_","paused","pauseOnOpen","pause","hadControls_","controls","show","conditionalFocus_","hide","conditionalBlur_","temporary","closeable_","temp","controlText","fillWith","parentEl","nextSiblingEl","closeButton","content_","activeEl","playerEl","focusIndex","focusableEls","focusableEls_","querySelector","shiftKey","allChildren","querySelectorAll","TrackList","_EventTarget$","_this13","tracks","tracks_","addTrack","_this14","labelchange_","rtrack","change","addtrack","removetrack","labelchange","disableOthers$1","enabled","AudioTrackList","_TrackList","_this15","changing_","_this16","enabledChange_","disableOthers","selected","VideoTrackList","_TrackList2","_super4","_this17","_this18","selectedChange_","TextTrackList","_TrackList3","_super5","_this19","queueChange_","queueTrigger","triggerSelectedlanguagechange","triggerSelectedlanguagechange_","kind","selectedlanguagechange_","HtmlTrackElementList","trackElements","trackElements_","addTrackElement_","trackElement","trackElement_","TextTrackCueList","setCues_","length_","oldLength","cues_","defineProp","VideoTrackKind","alternative","main","sign","subtitles","commentary","AudioTrackKind","TextTrackKind","descriptions","chapters","metadata","TextTrackMode","hidden","showing","_EventTarget$2","_super6","_this20","trackProps","_loop","newLabel","parseUrl","props","host","getAbsoluteURL","getFileExtension","isCrossOrigin","winLoc","urlInfo","Url","parseCues","srcContent","StringDecoder","oncue","onparsingerror","onflush","groupCollapsed","groupEnd","flush","loadTrack","crossOrigin","tech_","XHR","loaded_","TextTrack","_Track","_super7","_this21","settings","srclang","mode","default_","activeCues_","preload_","preloadTextTracks","activeCues","changed","timeupdateHandler","isDisposed","rvf_","requestVideoFrameCallback","stopTracking","startTracking","defineProperties","newMode","ct","currentTime","active","cancelVideoFrameCallback","originalCue","VTTCue","originalCue_","removeCue","cuechange","_Track2","_super8","_this22","newEnabled","_Track3","_super9","_this23","newSelected","HTMLTrackElement","_EventTarget$3","_super10","_this24","NONE","LOADED","load","LOADING","ERROR","NORMAL","ListClass","TrackClass","capitalName","getterName","privateName","REMOTE","remoteText","remoteTextEl","ALL","_Component$2","_super11","_this25","onDurationChange_","onDurationChange","trackProgress_","trackProgress","trackCurrentTime_","trackCurrentTime","stopTrackingCurrentTime_","stopTrackingCurrentTime","disposeSourceHandler_","disposeSourceHandler","queuedHanders_","hasStarted_","featuresProgressEvents","manualProgressOn","featuresTimeupdateEvents","manualTimeUpdatesOn","nativeCaptions","nativeTextTracks","featuresNativeTextTracks","emulateTextTracks","autoRemoteTextTracks_","initTrackListeners","nativeControlsForTouch","emitTapEvents","_this26","triggerSourceset","manualProgress","stopTrackingProgress","progressInterval","numBufferedPercent","bufferedPercent_","duration_","manualTimeUpdates","currentTimeInterval","manuallyTriggered","clearTracks","manualProgressOff","manualTimeUpdatesOff","_this27","removeRemoteTextTrack","removeTrack","error_","_isScrubbing","_seconds","_this28","trackListChanges","_this29","vtt","script","addWebVttScript_","_this30","remoteTracks","remoteTextTracks","handleAddTrack","handleRemoveTrack","updateDisplay","textTracksChanges","createTrackHelper","_this31","manualCleanup","htmlTrackElement","createRemoteTextTrack","remoteTextTrackEls","getTrackElementByTrack_","removeTrackElement_","Promise","reject","cb","_this32","requestNamedAnimationFrame","cancelNamedAnimationFrame","override","_type","srcObj","canPlayType","techs_","canPlaySource","defaultTechOrder_","featuresVolumeControl","featuresMuteControl","featuresFullscreenResize","featuresPlaybackRate","featuresSourceset","featuresVideoFrameCallback","withSourceHandlers","_Tech","registerSourceHandler","handler","sourceHandlers","can","selectSourceHandler","canHandleSource","sh","originalFn","sourceHandler_","setSource","nativeSourceHandler","currentSource_","handleSource","cleanupAutoTextTracks","registerTech","middlewares","middlewareInstances","TERMINATOR","setSourceHelper","mediate","middleware","arg","callMethod","middlewareValue","middlewareIterator","terminated","mws","mw","executeRight","allowedGetters","muted","played","seekable","volume","ended","allowedSetters","setCurrentTime","setMuted","setVolume","allowedMediators","lastRun","_middleware","_toArray","mwFactory","mwrest","_mws$_i","mwf","mwi","getOrCreateFactory","_src","MimetypesKind","opus","ogv","m4v","m4a","caf","oga","m3u8","jpg","jpeg","gif","png","svg","webp","getMimetype","ext","filterSource","newsrc","srcobj","fixSource","mimetype","MediaLoader","_Component$3","_super12","_this33","j","techOrder","techName","getTech","loadTech_","ClickableComponent","_Component$4","_super13","_this34","handleMouseOver_","handleMouseOver","handleMouseOut_","handleMouseOut","handleClick_","handleClick","tabIndex_","createControlTextEl","controlTextEl_","controlText_","localizedText","nonIconControl","noUITitleAttributes","enabled_","clickHandler","PosterImage","_ClickableComponent","_super14","_this35","update","update_","crossorigin","poster","setSrc","alt","darkGray","lightGray","fontMap","monospace","sansSerif","serif","monospaceSansSerif","monospaceSerif","proportionalSansSerif","proportionalSerif","casual","smallcaps","constructColor","opacity","hex","tryUpdateStyle","TextTrackDisplay","_Component$5","_super15","_this36","updateDisplayHandler","toggleDisplay","preselectTrack","screenOrientation","orientation","changeOrientationEvent","firstDesc","firstCaptions","preferredTrack","modes","trackList","userPref","cache_","selectedLanguage","processCues","allowMultipleShowingTracks","clearDisplay","showingTracks","updateForTrack","descriptionsTrack","captionsSubtitlesTrack","overrides","textTrackSettings","getValues","cueDiv","displayState","textOpacity","backgroundOpacity","windowColor","windowOpacity","edgeStyle","textShadow","fontPercent","fontSize","fontFamily","fontVariant","cueEl","updateDisplayState","LoadingSpinner","_Component$6","_super16","isAudio","playerType","dir","Button","_ClickableComponent2","_super17","BigPlayButton","_Button","_super18","_this37","mouseused_","handleMouseDown","playPromise","playToggle","playFocus","CloseButton","_Button2","_super19","_this38","PlayToggle","_Button3","_super20","_this39","replay","handlePlay","handlePause","handleEnded","_this40","handleSeeked","TimeDisplay","_Component$7","_super21","_this41","updateContent","updateTextNode_","span","labelText_","textNode_","_this42","formattedTime_","oldNode","CurrentTimeDisplay","_TimeDisplay","_super22","scrubbing","getCache","DurationDisplay","_TimeDisplay2","_super23","_this43","TimeDivider","_Component$8","_super24","RemainingTimeDisplay","_TimeDisplay3","_super25","_this44","displayNegative","remainingTimeDisplay","remainingTime","LiveDisplay","_Component$9","_super26","_this45","updateShowing","SeekToLive","_Button4","_super27","_this46","updateLiveEdgeStatus","liveTracker","updateLiveEdgeStatusHandler_","textEl_","atLiveEdge","seekToLiveEdge","clamp","Num","Slider","_Component$10","_super28","_this47","handleMouseDown_","handleMouseUp_","handleMouseUp","handleMouseMove_","handleMouseMove","bar","barName","vertical","playerEvent","_this48","progress","getProgress","progress_","sizeKey","toFixed","getPercent","stepBack","stepForward","bool","vertical_","percentify","LoadProgressBar","_Component$11","_super29","_this49","partEls_","loadedText","separator","percentageEl_","_this50","isLive","seekableEnd","bufferedEnd","percent","percent_","dataset","TimeTooltip","_Component$12","_super30","_this51","seekBarRect","seekBarPoint","tooltipRect","playerRect","seekBarPointPx","spaceLeftOfPoint","spaceRightOfPoint","right","pullTooltipBy","round","write","_this52","liveWindow","secondsBehind","PlayProgressBar","_Component$13","_super31","_this53","timeTooltip","updateTime","MouseTimeDisplay","_Component$14","_super32","_this54","_this55","SeekBar","_Slider","_super33","_this56","setEventHandlers_","_this57","updateInterval","enableIntervalHandler_","enableInterval_","disableIntervalHandler_","disableInterval_","toggleVisibility_","_this58","getCurrentTime_","liveCurrentTime","currentTime_","nextSeekedFromUser","seekableStart","videoWasPlaying","mouseDown","newTime","distance","calculateDistance","userSeek_","mouseTimeDisplay","handleAction","gotoFraction","STEP_SECONDS","ProgressControl","_Component$15","_super34","_this59","throttledHandleMouseSeek","handleMouseSeek","handleMouseUpHandler_","handleMouseDownHandler_","seekBar","playProgressBar","seekBarEl","removeListenersAddedOnMousedownAndTouchstart","PictureInPictureToggle","_Button5","_super35","_this60","handlePictureInPictureChange","handlePictureInPictureEnabledChange","currentType","audioPosterMode","audioOnlyMode","isInPictureInPicture","exitPictureInPicture","disablePictureInPicture","enableDocumentPictureInPicture","requestPictureInPicture","FullscreenToggle","_Button6","_super36","_this61","handleFullscreenChange","fsApi_","fullscreenEnabled","isFullscreen","exitFullscreen","requestFullscreen","VolumeLevel","_Component$16","_super37","VolumeLevelTooltip","_Component$17","_super38","_this62","rangeBarRect","rangeBarPoint","volumeBarPointPx","_this63","MouseVolumeLevelDisplay","_Component$18","_super39","_this64","_this65","updateVolume","VolumeBar","_Slider2","_super40","_this66","updateLastVolume_","updateARIAAttributes","mouseVolumeLevelDisplay","volumeBarEl","volumeBarRect","volumeBarPoint","checkMuted","ariaValue","volumeAsPercentage_","_this67","volumeBeforeDrag","lastVolume_","VolumeControl","_Component$19","_super41","_this68","volumeBar","checkVolumeSupport","throttledHandleMouseMove","orientationClass","MuteToggle","_Button7","_super42","_this69","checkMuteSupport","vol","lastVolume","volumeToSet","updateIcon_","updateControlText_","VolumePanel","_Component$20","_super43","_this70","inline","volumeControl","handleKeyPressHandler_","handleKeyPress","volumePanelState_","muteToggle","handleVolumeControlKeyUp","sliderActive_","sliderInactive_","SkipForward","_Button8","_super44","_this71","validOptions","skipTime","getSkipForwardTime","controlBar","skipButtons","forward","currentVideoTime","SkipBackward","_Button9","_super45","_this72","getSkipBackwardTime","backward","Menu","_Component$21","_super46","_this73","menuButton_","menuButton","focusedChild_","boundHandleBlur_","handleBlur","boundHandleTapClick_","handleTapClick","removeEventListenerForItem","childComponent","addEventListenerForItem","contentElType","append","btn","buttonPressed_","unpressButton","childComponents","foundComponent","stepChild","MenuButton","_Component$22","_super47","_this74","buttonClass","handleMenuKeyUp_","handleMenuKeyUp","menu","handleMouseLeave","handleSubmenuKeyDown","createMenu","items","hideThreshold_","titleEl","titleComponent","addItem","createItems","buildWrapperCSSClass","menuButtonClass","pressButton","lockShowing","unlockShowing","TrackButton","_MenuButton","_super48","_this75","_possibleConstructorReturn","updateHandler","MenuKeys","MenuItem","_ClickableComponent3","_super49","_this76","selectable","isSelected_","multiSelectable","TextTrackMenuItem","_MenuItem","_super50","_this77","kinds","changeHandler","_len16","_key16","handleTracksChange","selectedLanguageChangeHandler","_len17","_key17","handleSelectedLanguageChange","onchange","initEvent","referenceTrack","shouldBeSelected","OffTextTrackMenuItem","_TextTrackMenuItem","_super51","allHidden","TextTrackButton","_TrackButton","_super52","TrackMenuItem","label_","kinds_","kind_","ChaptersTrackMenuItem","_MenuItem2","_super53","_this78","ChaptersButton","_TextTrackButton","_super54","_this79","selectCurrentItem_","track_","findChaptersTrack","setTrack","updateHandler_","remoteTextTrackEl","getMenuCaption","mi","DescriptionsButton","_TextTrackButton2","_super55","_this80","SubtitlesButton","_TextTrackButton3","_super56","CaptionSettingsMenuItem","_TextTrackMenuItem2","_super57","_this81","CaptionsButton","_TextTrackButton4","_super58","SubsCapsMenuItem","_TextTrackMenuItem3","_super59","parentSpan","SubsCapsButton","_TextTrackButton5","_super60","_this82","language_","AudioTrackMenuItem","_MenuItem3","_super61","_this83","audioTracks","_len18","_key18","featuresNativeAudioTracks","AudioTrackButton","_TrackButton2","_super62","PlaybackRateMenuItem","_MenuItem4","_super63","_this84","rate","playbackRate","PlaybackRateMenuButton","_MenuButton2","_super64","_this85","labelElId_","updateVisibility","updateLabel","handlePlaybackRateschange","labelEl_","rates","playbackRates","playbackRateSupported","Spacer","_Component$23","_super65","CustomControlSpacer","_Spacer","_super66","ControlBar","_Component$24","_super67","ErrorDisplay","_ModalDialog","_super68","_this86","LOCAL_STORAGE_KEY$1","COLOR_BLACK","COLOR_BLUE","COLOR_CYAN","COLOR_GREEN","COLOR_MAGENTA","COLOR_RED","COLOR_WHITE","COLOR_YELLOW","OPACITY_OPAQUE","OPACITY_SEMI","OPACITY_TRANS","selectConfigs","parseOptionValue","TextTrackSettings","_ModalDialog2","_super69","_this87","endDialog","setDefaults","persistTextTrackSettings","saveSettings","restoreSettings","_this88","legendId","selectLabelledbyIds","optionId","createElSelect_","innerHTML","createElFgColor_","createElBgColor_","createElWinColor_","defaultsDescription","createElColors_","createElFont_","createElControls_","_this89","selectedIndex","_this90","setSelectedOption","_this91","getItem","setValues","setItem","removeItem","ttDisplay","subsCapsBtn","subsCapsButton","ccBtn","captionsButton","ResizeManager","_Component$25","_super70","_this92","RESIZE_OBSERVER_AVAILABLE","ResizeObserver","loadListener_","resizeObserver_","debouncedHandler_","resizeHandler","observe","contentWindow","unloadListener_","unobserve","disconnect","resizeObserver","defaults","trackingThreshold","liveTolerance","LiveTracker","_Component$26","_super71","_this93","trackLiveHandler_","trackLive_","handlePlay_","handleFirstTimeupdate_","handleFirstTimeupdate","handleSeeked_","seekToLiveEdge_","reset_","handleDurationchange","toggleTracking","deltaTime","lastTime_","pastSeekEnd_","pastSeekEnd","isBehind","seekedBehindLive_","timeupdateSeen_","behindLiveEdge_","liveui","isTracking","hasStarted","trackingInterval_","timeDiff","nextSeekedFromUser_","lastSeekEnd_","seekableEnds","seekableStarts","behindLiveEdge","TitleBar","_Component$27","_super72","_this94","updateDom_","_this95","techEl","techAriaAttrs","techAriaAttr","sourcesetLoad","srcUrls","innerHTMLDescriptorPolyfill","dummy","docFrag","getDescriptor","priority","descriptor","getOwnPropertyDescriptor","firstSourceWatch","resetSourceWatch_","innerDescriptor","getInnerHTMLDescriptor","appendWrapper","appendFn","_len19","_key19","retval","srcDescriptorPolyfill","setupSourceset","resetSourceset_","srcDescriptor","getSrcDescriptor","oldSetAttribute","oldLoad","currentSrc","Html5","_Tech3","_super73","_this96","crossoriginTracks","initNetworkState_","handleLateInit_","enableSourceset","setupSourcesetHandling_","isScrubbing_","nodes","nodesLength","removeNodes","proxyNativeTracks_","restoreMetadataTracksInIOSNativePlayer_","setControls","proxyWebkitFullscreen_","triggerReady","disposeMediaElement","metadataTracksPreFullscreenState","takeMetadataTrackSnapshot","storedMode","restoreTrackMode","storedTrack","_this97","lowerCaseType","eventName","proxyNativeTracksForType_","overrideNative_","_this98","elTracks","techTracks","currentTarget","removeOldTracks","removeTracks","found","_this99","playerElIngest","movingMediaElementInDOM","clone","techId","playerId","preload","settingsAttrs","networkState","loadstartFired","setLoadstartFired","triggerLoadstart","eventsToTrigger","isScrubbing","fastSeek","_this100","checkProgress","NaN","_this101","endFn","beginFn","webkitPresentationMode","nativeIOSFullscreen","webkitEnterFullScreen","HAVE_METADATA","webkitDisplayingFullscreen","webkitExitFullScreen","webkitKeys","resetMediaElement","addTextTrack","getVideoPlaybackQuality","videoPlaybackQuality","webkitDroppedFrameCount","webkitDecodedFrameCount","droppedVideoFrames","totalVideoFrames","creationTime","TEST_VID","canControlVolume","canControl","canMuteVolume","canControlPlaybackRate","canOverrideAttributes","supportsNativeTextTracks","supportsNativeVideoTracks","videoTracks","supportsNativeAudioTracks","TECH_EVENTS_RETRIGGER","TECH_EVENTS_QUEUE","canplay","canplaythrough","playing","seeked","BREAKPOINT_ORDER","BREAKPOINT_CLASSES","DEFAULT_BREAKPOINTS","tiny","xsmall","small","medium","large","xlarge","huge","_Component$28","_super74","_this102","getTagSettings","closest","boundDocumentFullscreenChange_","documentFullscreenChange_","boundFullWindowOnEscKey_","fullWindowOnEscKey","boundUpdateStyleEl_","updateStyleEl_","boundApplyInitTime_","applyInitTime_","boundUpdateCurrentBreakpoint_","updateCurrentBreakpoint_","boundHandleTechClick_","handleTechClick_","boundHandleTechDoubleClick_","handleTechDoubleClick_","boundHandleTechTouchStart_","handleTechTouchStart_","boundHandleTechTouchMove_","handleTechTouchMove_","boundHandleTechTouchEnd_","handleTechTouchEnd_","boundHandleTechTap_","handleTechTap_","isFullscreen_","isPosterFromTech_","queuedCallbacks_","userActive_","debugEnabled_","audioOnlyMode_","audioPosterMode_","audioOnlyCache_","playerHeight","hiddenChildren","tagAttributes","languagesToLower","languages_","resetCache_","poster_","controls_","changingSrc_","playCallbacks_","playTerminatedQueue_","autoplay","plugins","scrubbing_","fullscreenchange","fluid_","playerOptionsCopy","middleware_","majorVersion","userActive","listenForUserActivity_","breakpoints","responsive","_this103","styleEl_","playerElIngest_","divEmbed","tabindex","defaultsStyleEl","fill_","fluid","links","linkEl","techGet_","techCall_","posterImage","privDimension","parsedVal","_this104","aspectRatio_","idClass","ratioParts","videoWidth","videoHeight","ratioMultiplier","width_","height_","_this105","unloadTech_","titleTechName","camelTechName","techName_","normalizeAutoplay","techOptions","playsinline","loop","techCanOverridePoster","TechClass","handleTechReady_","textTracksJson_","eventObj","seeking","handleTechLoadStart_","handleTechSourceset_","handleTechWaiting_","handleTechEnded_","handleTechSeeking_","handleTechPlay_","handleTechPause_","handleTechDurationChange_","handleTechFullscreenChange_","handleTechFullscreenError_","handleTechEnterPictureInPicture_","handleTechLeavePictureInPicture_","handleTechError_","handleTechPosterChange_","handleTechTextData_","handleTechRateChange_","usingNativeControls","addTechControlsListeners_","_this106","safety","removeTechControlsListeners_","manualAutoplay_","_this107","promise","resolveMuted","previouslyMuted","restoreMuted","mutedPromise","catch","matchingSources","findMimetype","sourceElSources","sourceEls","matchingSourceEls","sourceObj","_this108","updateSourceCaches","updateSourceCaches_","playerSrc","currentSource","eventSrc","lastSource_","techSrc","techGet","request","lastPlaybackRate","queued","_this109","timeWhenWaiting","timeUpdateListener","userActions","click","doubleClick","userWasActive","cancelable","targetPlayer","isFs","fullscreen","msMatchesSelector","_this110","initTime","inactivityTimeout","defaultPlaybackRate","reduceRight","_this111","resolve","play_","_this112","isSrcReady","isSafariOrIOS","waitToPlay_","resetProgressBar_","runPlayTerminatedQueue_","runPlayCallbacks_","queue","q","percentAsDecimal","defaultMuted","isFS","oldValue","toggleFullscreenClass_","fullscreenOptions","offHandler","requestFullscreenHelper_","fsOptions","_this113","supportsFullScreen","preferFullWindow","enterFullWindow","exitFullscreenHelper_","_this114","exitFullWindow","isFullWindow","docOrigOverflow","overflow","isPiP","isInPictureInPicture_","togglePictureInPictureClass_","_this115","pipContainer","titleBar","requestWindow","initialAspectRatio","copyStyleSheets","pipWindow","pipVideo","replaceWith","hotkeys","isContentEditable","excludeElement","activeElement","handleHotkeys","_hotkeys$fullscreenKe","fullscreenKey","keydownEvent","_hotkeys$muteKey","muteKey","_hotkeys$playPauseKey","playPauseKey","FSToggle","_this116","techs","findFirstPassingTechSourcePair","outerArray","innerArray","tester","outerChoice","innerChoice","finder","sourceOrder","isRetry","_this117","resetRetryOnError_","middlewareSource","src_","handleSrc_","notSupportedMessage","setTech","retry","stopListeningForErrors","_this118","sourceTech","selectSource","_this119","doReset_","resetControlBarUI_","resetPlaybackRate_","resetVolumeBar_","currentTimeDisplay","durationDisplay","progressControl","loadProgressBar","techAutoplay","newPoster","usingNativeControls_","_this120","hookFunction","newErr","suppressNotSupportedError","triggerSuppressedError","errorDisplay","userActivity_","mouseInProgress","lastMoveX","lastMoveY","handleActivity","handleMouseUpAndMouseLeave","screenX","screenY","isAudio_","_this121","playerChildren","controlBarHeight","currentHeight","_this122","exitPromises","enableAudioOnlyUI_","disableAudioOnlyUI_","_this123","enablePosterModeUI_","disablePosterModeUI_","_this124","modal","currentBreakpoint","currentWidth","candidateBreakpoint","breakpoints_","breakpoint_","currentBreakpointClass","responsive_","removeCurrentBreakpoint_","_this125","reset","_this$cache_$media","artist","artwork","tt","currentSources","previousLogLevel_","newRates","baseOptions","tagOptions","dataSetup","_safeParseTuple","safeParseTuple","_safeParseTuple2","childName","navigator","html5","userLanguage","navigationUI","BASE_PLUGIN_NAME","PLUGIN_CACHE_KEY","pluginStorage","pluginExists","getPlugin","markPluginAsActive","triggerSetupEvent","before","createPluginFactory","PluginSubClass","plugin","instance","_len20","_key20","_construct","getEventHash","Plugin","VERSION","isBasic","basicPluginWrapper","createBasicPlugin","deprecateForMajor","oldName","newName","warned","_len21","_key21","deprecate","registerPlugin","usingPlugin","hasPlugin","normalizeId","videojs","getPlayer","defaultView","PlayerComponent","hook","hookOnce","original","getPlayers","nId","_tag","getAllPlayers","use","writeable","mergeOptions","deregisterPlugin","getPlugins","getPluginVersion","addLanguage","EventTarget","QualityLevel","bitrate","QualityLevelList","_videojs$EventTarget","_super75","_this126","levels_","selectedIndex_","qualityLevel","getQualityLevelById","removed","addqualitylevel","removequalitylevel","version$5","qualityLevels","originalPluginFn","qualityLevelList","disposeHandler","initPlugin$1","_resolveUrl","resolveManifestRedirect","req","responseURL","logger","_len22","_key22","_len23","_key23","TIME_FUDGE_FACTOR","SAFE_TIME_DELTA","filterRanges","timeRanges","findRange","findNextRange","printableRange","strArr","timeRangesToArray","timeRangesList","lastBufferedEnd","timeAheadOf","segmentDurationWithParts","getPartsAndSegments","si","getLastParts","lastSegment","getKnownPartCount","partCount","liveEdgeDelay","partHoldBack","holdBack","intervalDuration","endSequence","expired","backwardDuration","forwardDuration","totalDuration","sumDurations","defaultDuration","durationList","durations","playlistEnd","useSafeLiveEnd","liveEdgePadding","lastSegmentEndTime","isExcluded","excludeUntil","isIncompatible","isEnabled","excluded","isLowestEnabledRendition","currentBandwidth","MAX_VALUE","playlistMatch","someAudioVariant","groupName","variant","_loop2","_ret","Playlist","getMediaInfoForTime","startingSegmentIndex","startingPartIndex","exactManifestTimings","partsAndSegments","partAndSegment","isDisabled","isAes","estimateSegmentRequestTime","bytesReceived","createPlaylistID","groupID","forEachMediaGroup","setupMediaPlaylist","playlistErrors_","addPropertiesToMain","createGroupID","phonyUri","audioOnlyMain","groupId","setupMediaPlaylists","resolveMediaGroupUris","EventTarget$1","updateSegment","skipped","resolveSegmentUris","baseUri","getAllSegments","isPlaylistUnchanged","updateMain$1","newMedia","unchangedCheck","oldMedia","mergedPlaylist","skippedSegments","oldSegments","newSegments","newIndex","newSegment","updateSegments","refreshDelay","lastPart","lastDuration","PlaylistLoader","_EventTarget$4","_super76","vhs","_this127","logger_","_options$withCredenti","vhs_","vhsOptions","customTagParsers","customTagMappers","llhls","handleMediaupdatetimeout_","_this128","parameters","nextMSN","nextPart","_HLS_part","_HLS_msn","canSkipUntil","_HLS_skip","parsedUri","searchParams","addLLHLSQueryDirectives","playlistRequestError","haveMetadata","playlistString","startingState","_this129","onwarn","oninfo","_ref15$customTagParse","_ref15$customTagMappe","customParser","parseManifest","_ref19","_ref20","playlistObject","parseManifest_","lastRequest","pendingMedia_","media_","updateMediaUpdateTimeout_","stopRequest","mediaUpdateTimeout","finalRenditionTimeout","oldRequest","shouldDelay","_this130","delay","mediaChange","mainPlaylistRef","started","_this131","_this132","_this133","setupInitialPlaylist","srcUri","mainForMedia","videojsXHR","callbackWrapper","reqResponse","responseTime","roundTripTime","requestTime","responseHeaders","timedout","xhrFactory","XhrFunction","beforeRequest","Vhs","newOptions","originalAbort","segmentXhrHeaders","Range","textRange","formatHexString","formatAsciiString","createTransferableMessage","transferable","initSegmentId","segmentKeyId","hexDump","step","utils","tagDump","_ref21","textRanges","getProgramTime","_ref22","_ref22$time","matchedSegment","segmentEnd","videoTimingInfo","transmuxedPresentationEnd","estimatedStart","transmuxedPresentationStart","findSegmentForPlayerTime","seekTime","programTimeObject","mediaSeconds","programTime","playerTime","transmuxerPrependedSeconds","offsetFromSegmentStart","getTime","playerTimeToProgramTime","programDateTime","toISOString","seekToProgramTime","_ref23","_ref23$retryCount","retryCount","seekTo","_ref23$pauseAfterSeek","pauseAfterSeek","verifyProgramDateTimeTags","lastSegmentStart","lastSegmentDuration","findSegmentForProgramTime","mediaOffset","comparisonTimeStamp","segmentDateTime","segmentTimeEpoch","getOffsetFromTimestamp","seekToTime","callbackOnCompleted","containerRequest","id3Offset","finished","endRequestAndCallback","_bytes","progressListener","newPart","buffers","totalLen","tempBuffer","concatTypedArrays","overrideMimeType","_ref24","loaded","dashPlaylistUnchanged","aSegment","bSegment","aByterange","bByterange","dashGroupId","playlistId","updateMain","oldMain","newMain","noChanges","playlistUpdate","removeOldMediaGroupLabels","compareSidxEntry","oldSidxMapping","newSidxMapping","currentSidxInfo","savedSidxInfo","sidxInfo","DashPlaylistLoader","_EventTarget","_super77","srcUrlOrPlaylist","_this134","mainPlaylistLoader","mainPlaylistLoader_","isMain_","_options$withCredenti2","refreshXml_","refreshMedia_","loadedPlaylists_","srcUrl","sidxMapping_","childPlaylist_","_this135","fin","requestErrored_","parseSidx","internal","playlistExclusionDuration","_playlist$sidx$bytera","mediaRequest_","minimumUpdatePeriodTimeout_","createMupOnMedia_","_this136","addSidxSegments_","sidxChanged","_ref26","isFinalRendition","_this137","updateMinimumUpdatePeriodTimeout_","_this138","requestMain_","mainChanged","haveMain_","hasPendingRequest","_this139","mainXml_","date","mainLoaded_","handleMain_","syncClientServerClock_","done","_this140","utcTiming","clientOffset_","serverTime","_ref25","mainXml","parseMainXml","location","mpl","mup","createMUPTimeout_","_this141","mediaGroupSidx","filterChangedSidxMappings","mediaID","_this142","mediaChanged","createMediaUpdateTimeout","Config","GOAL_BUFFER_LENGTH","MAX_GOAL_BUFFER_LENGTH","BACK_BUFFER_LENGTH","GOAL_BUFFER_LENGTH_RATE","INITIAL_BANDWIDTH","BANDWIDTH_VARIANCE","BUFFER_LOW_WATER_LINE","MAX_BUFFER_LOW_WATER_LINE","EXPERIMENTAL_MAX_BUFFER_LOW_WATER_LINE","BUFFER_LOW_WATER_LINE_RATE","BUFFER_HIGH_WATER_LINE","browserWorkerPolyFill","workerObj","factory","objectUrl","createObjectURL","Blob","blob","BlobBuilder","getBlob","worker","Worker","objURL","terminate","revokeObjectURL","getWorkerString","workerCode$1","commonjsGlobal","globalThis","Stream$8","init","flushSource","partialFlush","endTimeline","dinf","esds","ftyp","mdat","mfhd","minf","mvex","mvhd","trak","tkhd","mdia","mdhd","hdlr","sdtp","stbl","stsd","traf","trex","trun$1","MAJOR_BRAND","MINOR_VERSION","AVC1_BRAND","VIDEO_HDLR","AUDIO_HDLR","HDLR_TYPES","VMHD","SMHD","DREF","STCO","STSC","STSZ","STTS","stream","MAX_UINT32$1","numbers","avc1","avcC","btrt","dref","mp4a","pasp","smhd","stco","stsc","stsz","stts","styp","tfdt","tfhd","trun","vmhd","payload","setUint32","audioobjecttype","samplingfrequencyindex","channelcount","samplerate","sequenceNumber","trackFragments","boxes","samples","dependsOn","isDependedOn","hasRedundancy","videoSample","audioSample","avc1Box","sps","pps","sequenceParameterSets","pictureParameterSets","profileIdc","profileCompatibility","levelIdc","sarRatio","hSpacing","vSpacing","samplesize","trackFragmentHeader","trackFragmentDecodeTime","trackFragmentRun","sampleDependencyTable","upperWordBaseMediaDecodeTime","lowerWordBaseMediaDecodeTime","baseMediaDecodeTime","audioTrun","videoTrun","trunHeader","durationPresent","sizePresent","flagsPresent","compositionTimeOffset","bytesOffest","header","sample","isLeading","paddingValue","isNonSyncSample","degradationPriority","silence","mp4Generator","fileType","movie","sampleForFrame","frame","dataOffset","pts","dts","keyFrame","frameUtils$1","groupNalsIntoFrames","nalUnits","currentNal","currentFrame","nalCount","nalUnitType","groupFramesIntoGops","currentGop","gops","extendFirstKeyFrame","generateSampleTable","baseDataOffset","concatenateNalData","nalsByteLength","numberOfNals","generateSampleTableForFrame","concatenateNalDataForFrame","highPrefix","lowPrefix","zeroFill","ONE_SECOND_IN_TS$4","clock$2","coneOfSilence","metaTable","arr","clock$1","audioFrameUtils$1","prefixWithSilence","audioAppendStartTs","videoBaseMediaDecodeTime","baseMediaDecodeTimeTs","frameDuration","silentFrame","firstFrame","audioGapDuration","audioFillFrameCount","audioFillDuration","trimAdtsFramesByEarliestDts","adtsFrames","earliestAllowedDts","minSegmentDts","minSegmentPts","concatenateFrameData","sumFrameByteLengths","ONE_SECOND_IN_TS$3","trackDecodeInfo$1","clearDtsInfo","maxSegmentDts","maxSegmentPts","calculateTrackBaseMediaDecodeTime","timelineStartInfo","collectDtsInfo","captionPacketParser","parseSei","payloadType","payloadSize","parseUserData","sei","parseCaptionPackets","userData","ccData","emulationPreventionBytesPositions","USER_DATA_REGISTERED_ITU_T_T35","Stream$7","cea708Parser","CaptionStream$2","parse708captions_","parse708captions","captionPackets_","ccStreams_","Cea608Stream","cc708Stream_","Cea708Stream","newCaptionPackets","escapedRBSP","latestDts_","ignoreNextEqualDts_","numSameDts_","flushCCStreams","flushType","flushStream","idx","presortIndex","packet","dispatchCea608Packet","dispatchCea708Packet","activeCea608Channel_","ccStream","setsTextOrXDSActive","setsChannel1Active","setsChannel2Active","CHARACTER_TRANSLATION_708","within708TextBlock","Cea708Window","windowNum","clearText","pendingNewLine","winAttr","penAttr","penLoc","penColor","visible","rowLock","columnLock","relativePositioning","anchorVertical","anchorHorizontal","anchorPoint","rowCount","virtualRowCount","columnCount","windowStyle","penStyle","getText","rows","rowIdx","beforeRowOverflow","addText","backspace","Cea708Service","serviceNum","encoding","currentWindow","windows","createTextDecoder","startPts","setCurrentWindow","textDecoder_","serviceProps","captionServiceEncodings","serviceName","serviceEncodings","current708Packet","services","new708Packet","add708Bytes","push708Packet","ptsVals","byte0","byte1","packet708","packetData","blockSize","seq","sizeCode","pushServiceBlock","initService","handleText","multiByteCharacter","extendedCommands","defineWindow","clearWindows","deleteWindows","displayWindows","hideWindows","toggleWindows","setWindowAttributes","setPenAttributes","setPenColor","setPenLocation","isExtended","getPts","flushDisplayed","char","charCodeArray","isMultiByte","extended","currentByte","nextByte","newCode","get708CharFromCode","firstByte","secondByte","fillOpacity","fillRed","fillGreen","fillBlue","borderType","borderRed","borderGreen","borderBlue","wordWrap","printDirection","scrollDirection","justify","effectSpeed","effectDirection","displayEffect","displayedText","winId","endPts","pushCaption","textTag","penSize","italics","underline","edgeType","fontStyle","fgOpacity","fgRed","fgGreen","fgBlue","bgOpacity","bgRed","bgGreen","bgBlue","edgeRed","edgeGreen","edgeBlue","column","CHARACTER_TRANSLATION","getCharFromCode","ROWS","createDisplayBuffer","BOTTOM_ROW","field","dataChannel","field_","dataChannel_","setConstants","swap","char0","char1","lastControlCode_","PADDING_","RESUME_CAPTION_LOADING_","mode_","END_OF_CAPTION_","clearFormatting","displayed_","nonDisplayed_","startPts_","ROLL_UP_2_ROWS_","rollUpRows_","setRollUp","ROLL_UP_3_ROWS_","ROLL_UP_4_ROWS_","CARRIAGE_RETURN_","shiftRowsUp_","BACKSPACE_","row_","ERASE_DISPLAYED_MEMORY_","ERASE_NON_DISPLAYED_MEMORY_","RESUME_DIRECT_CAPTIONING_","isSpecialCharacter","column_","isExtCharacter","isMidRowCode","addFormatting","isOffsetControlCode","isPAC","formatting_","isColorPAC","isNormalChar","topRow_","BASE_","EXT_","CONTROL_","OFFSET_","newBaseRow","popOn","baseRow","rollUp","paintOn","captionStream","CaptionStream","streamTypes","H264_STREAM_TYPE","ADTS_STREAM_TYPE","METADATA_STREAM_TYPE","TYPE_SHARED","handleRollover$1","direction","TimestampRolloverStream$1","lastDTS","referenceDTS","type_","MetadataStream","timestampRolloverStream","typedArray","fromIndex","currentIndex","typedArrayIndexOf","textEncodingDescriptionByte","percentEncode$1","parseUtf8","parseIso88591$1","parseSyncSafeInteger$1","frameParsers","mimeTypeEndIndex","descriptionEndIndex","pictureType","pictureData","owner","privateData","parseId3","parseId3Frames","frameSize","frameStart","tagSize","parseSyncSafeInteger","Stream$5","StreamTypes$3","id3","dispatchType","dataAlignmentIndicator","timeStamp","TransportPacketStream","TransportParseStream","ElementaryStream","metadataStream","Stream$4","CaptionStream$1","StreamTypes$2","TimestampRolloverStream","MP2T_PACKET_LENGTH$1","bytesInBuffer","everything","parsePsi","parsePat","parsePmt","packetsWaitingForPmt","programMapTable","payloadUnitStartIndicator","pat","section_number","last_section_number","pmtPid","pmt","tableEnd","pid","processPes_","STREAM_TYPES","h264","adts","segmentHadPmt","timedMetadata","forceFlush","packetFlushable","trackId","pes","ptsDtsFlags","startPrefix","packetLength","parsePes","flushStreams_","m2ts$1","PAT_PID","MP2T_PACKET_LENGTH","AdtsStream$1","m2ts_1","Stream$3","ONE_SECOND_IN_TS$2","ADTS_SAMPLING_FREQUENCIES$1","handlePartialSegments","frameNum","skipWarn_","frameLength","protectionSkipBytes","oldBuffer","sampleCount","adtsFrameDuration","H264Stream$1","NalByteStream","PROFILES_WITH_OPTIONAL_SPS_DATA","Stream$2","ExpGolomb","workingData","workingBytesAvailable","workingWord","workingBitsAvailable","bitsAvailable","loadWord","workingBytes","availableBytes","skipBits","skipBytes","readBits","bits","valu","skipLeadingZeros","leadingZeroCount","skipUnsignedExpGolomb","skipExpGolomb","readUnsignedExpGolomb","clz","readExpGolomb","readBoolean","readUnsignedByte","syncPoint","swapBuffer","currentPts","currentDts","readSequenceParameterSet","skipScalingList","nalByteStream","nalUnitTypeCode","expGolombDecoder","lastScale","nextScale","chromaFormatIdc","picOrderCntType","numRefFramesInPicOrderCntCycle","picWidthInMbsMinus1","picHeightInMapUnitsMinus1","frameMbsOnlyFlag","scalingListCount","frameCropLeftOffset","frameCropRightOffset","frameCropTopOffset","frameCropBottomOffset","AacStream$1","H264Stream","ADTS_SAMPLING_FREQUENCIES","parseId3TagSize","isLikelyAacData","parseAdtsSize","lowThree","middle","parseType","parseSampleRate","parseAacTimestamp","percentEncode","aacUtils","setTimestamp","bytesLeft","tempLength","VideoSegmentStream","AudioSegmentStream","Transmuxer","CoalesceStream","frameUtils","audioFrameUtils","trackDecodeInfo","m2ts","clock","AdtsStream","AacStream","ONE_SECOND_IN_TS$1","AUDIO_PROPERTIES","VIDEO_PROPERTIES","retriggerForStream","addPipelineLogRetriggers","transmuxer","pipeline","arrayEquals","generateSegmentTimingInfo","startDts","endDts","prependedContentDuration","firstSequenceNumber","setEarliestDts","earliestDts","setVideoBaseMediaDecodeTime","setAudioAppendStart","videoClockCyclesOfSilencePrefixed","gopsToAlignWith","minPTS","gopCache_","nalUnit","gopForFusion","firstGop","lastGop","resetStream_","getGopForFusion_","alignedGops","alignGopsAtEnd","alignGopsAtEnd_","alignGopsAtStart_","gop","dtsDistance","nearestGopObj","currentGopObj","nearestDistance","alignIndex","gopIndex","align","alignEndIndex","matchFound","trimIndex","alignGopsWith","newGopsToAlignWith","numberOfTracks","remux","remuxTracks","pendingTracks","videoTrack","pendingBoxes","pendingCaptions","pendingMetadata","pendingBytes","emittedTracks","output","audioTrack","caption","captionStreams","cueTime","setRemux","hasFlushed","transmuxPipeline_","setupAacPipeline","aacStream","audioTimestampRolloverStream","timedMetadataTimestampRolloverStream","adtsStream","coalesceStream","headOfPipeline","audioSegmentStream","getLogTrigger_","hasAudio","hasVideo","setupTsPipeline","packetStream","elementaryStream","h264Stream","videoSegmentStream","id3Frame","setBaseMediaDecodeTime","isAac","resetCaptions","getTracks","getTimescaleFromMediaHeader","bin","parseType_1","toUnsigned$2","parseType$2","findBox_1","findBox$2","subresults","toUnsigned$1","getUint64$2","parseTfdt$2","parseSampleFlags","parseTrun$2","dataOffsetPresent","firstSampleFlagsPresent","sampleDurationPresent","sampleSizePresent","sampleFlagsPresent","sampleCompositionTimeOffsetPresent","getInt32","parseTfhd$2","baseDataOffsetPresent","sampleDescriptionIndexPresent","defaultSampleDurationPresent","defaultSampleSizePresent","defaultSampleFlagsPresent","durationIsEmpty","defaultBaseIsMoof","sampleDescriptionIndex","defaultSampleDuration","defaultSampleSize","defaultSampleFlags","baseDataOffsetIsMoof","findBox$1","parseTfdt$1","parseTrun$1","parseTfhd$1","window$2","mapToSample","approximateOffset","parseCaptionNals","videoTrackId","trafs","mdats","captionNals","mdatTrafPairs","matchingTraf","pair","headerInfo","truns","allSamples","parseSamples","avcStream","seiNal","lastMatchedSample","avcView","logs","seiNals","matchingSample","findSeiNals","captionParser","segmentCache","parsedCaptions","parsingPartial","isInitialized","isPartial","isNewInit","videoTrackIds","timescales","parsedData","cachedSegment","trackNals","parseEmbeddedCaptions","pushNals","nals","nal","clearParsedCaptions","resetCaptionStream","clearAllCaptions","uint8ToCString","curChar","retString","getUint64$1","isValidEmsgBox","emsg","hasScheme","scheme_id_uri","isValidV0Box","isDefined","presentation_time_delta","isValidV1Box","presentation_time","emsg$1","parseEmsgBox","boxData","event_duration","emsgBox","message_data","scaleTime","timeDelta","toUnsigned","toHexString","parseType$1","parseTfhd","parseTrun","parseTfdt","lowestTime","baseTime","scale","traks","tkhdVersion","getUint8","sampleDescriptions","codecConfig","codecBox","probe$2","StreamTypes$1","parsePid","parsePayloadUnitStartIndicator","parseAdaptionField","parseNalUnitType","probe$1","pusi","payloadOffset","parsePesType","parsePesTime","videoPacketContainsKeyFrame","frameBuffer","frameI","frameSyncPoint","foundKeyFrame","StreamTypes","handleRollover","probe","SYNC_BYTE","parseAudioPes_","pesType","parsed","endLoop","table","parseVideoPes_","firstKeyFrame","inspectTs_","parsePsi_","tsInspector","baseTimestamp","audioCount","audioTimescale","inspectAac_","audioBaseTimestamp","dtsTime","ptsTime","videoBaseTimestamp","adjustTimestamp_","MessageHandlers","initArray","postMessage","action","gopInfo","timingInfo","videoSegmentTimingInfo","presentation","audioSegmentTimingInfo","trackInfo","audioTimingInfo","wireTransmuxerEvents","trackIds","_ref27","_ref28","_ref29","baseStartTime","tsStartTime","timeInfo","videoStart","audioStart","timestampOffset","appendStart","onmessage","messageHandlers","TransmuxWorker","processTransmux","audioAppendStart","onData","onTrackInfo","onAudioTimingInfo","onVideoTimingInfo","onVideoSegmentTimingInfo","onAudioSegmentTimingInfo","onId3","onCaptions","onDone","onEndedTimeline","onTransmuxerLog","isEndOfTimeline","transmuxedData","waitForEndedTimelineEvent","currentTransmux","_event$data$segment","videoFrameDtsTime","videoFramePtsTime","handleData_","handleGopInfo_","_ref30","handleDone_","dequeue","transmuxQueue","processAction","enqueueAction","transmux","segmentTransmuxer","term","workerCallback","endAction","listenForEndEvent","isArrayBuffer","transfers","REQUEST_ERRORS","abortAll","activeXhrs","handleErrors","handleKeyResponse","finishProcessingFn","errorObj","parseInitSegment","_ref31","handleSegmentResponse","_ref33","newBytes","stringToArrayBuffer","lastReachedChar","stats","getRequestStats","encryptedBytes","transmuxAndNotify","_ref34","trackInfoFn","timingInfoFn","videoSegmentTimingInfoFn","audioSegmentTimingInfoFn","id3Fn","captionsFn","endedTimelineFn","dataFn","doneFn","fmp4Tracks","isMuxed","audioStartFn","audioEndFn","videoStartFn","videoEndFn","probeResult","id3Frames","handleSegmentBytes","_ref35","bytesAsUint8Array","isLikelyFmp4MediaSegment","isFmp4","audioCodec","videoCodec","finishLoading","_ref36","decrypt","_ref37","keyBytes","decryptionWorker","decryptionHandler","decrypted","encrypted","waitForCompletion","_ref39","didError","segmentFinish","_ref38","requestId","decryptedBytes","decryptSegment","endOfAllRequests","parseError","handleProgress","_ref41","progressFn","progressEvent","getProgressStats","firstBytesReceivedAt","mediaSegmentRequest","_ref42","xhrOptions","abortFn","keyXhr","mapKeyXhr","initSegmentOptions","initSegmentRequestCallback","_ref32","handleInitSegmentResponse","initSegmentXhr","segmentRequestOptions","segmentXhr","loadendState","activeXhr","_ref40","calledAbortFn","handleLoadEnd","logFn$1","isMaat","mediaAttributes","unwrapCodecList","codecList","_ref43","codecCount","codecObj","codecsForPlaylist","codecInfo","getCodecs","audioGroup","defaultCodecs","audioGroupId","audioType","codecsFromDefault","logFn","representationToString","safeGetComputedStyle","property","stableSort","sortFn","newArray","cmp","comparePlaylistBandwidth","leftBandwidth","rightBandwidth","simpleSelector","playerBandwidth","playerWidth","limitRenditionByPlayerDimensions","playlistController","getAudioTrackPlaylists_","sortedPlaylistReps","enabledPlaylistReps","rep","bandwidthPlaylistReps","highestRemainingBandwidthRep","bandwidthBestRep","chosenRep","haveResolution","resolutionBestRepList","resolutionPlusOneList","resolutionPlusOneSmallest","resolutionPlusOneRep","leastPixelDiffRep","resolutionBestRep","leastPixelDiffSelector","leastPixelDiffList","pixelDiff","lastBandwidthSelector","pixelRatio","useDevicePixelRatio","systemBandwidth","playlistController_","addMetadata","_ref45","inbandTextTracks","metadataArray","videoDuration","Cue","metadataTrack","metadataTrack_","deprecateOldCue","cuesArray","cuesGroupedByStartTime","timeSlot","sortedStartTimes","cueGroup","nextTime","removeCuesFromTrack","finite","MIN_SEGMENT_DURATION_TO_SAVE_STATS","segmentInfoString","startOfSegment","_segmentInfo$playlist","_segmentInfo$playlist2","mediaIndex","segmentLen","selection","isSyncRequest","independent","hasPartIndex","zeroBasedPartCount","timingInfoPropertyForMedia","shouldWaitForTimelineChange","_ref47","timelineChangeController","loaderType","audioDisabled","lastMainTimelineChange","lastTimelineChange","pendingAudioTimelineChange","pendingTimelineChange","segmentTooLong","_ref48","maxDuration","getTroublesomeSegmentDurationMessage","sourceType","timingInfos","typeTimingInfo","mediaDuration","isSegmentWayTooLong","isSegmentSlightlyTooLong","segmentTooLongMessage","severity","SegmentLoader","_videojs$EventTarget2","_super78","_this144","mediaSource","throughput","roundTrip","resetStats_","hasPlayed_","hasPlayed","seekable_","seeking_","mediaSource_","loaderType_","currentMediaInfo_","startingMediaInfo_","segmentMetadataTrack_","segmentMetadataTrack","goalBufferLength_","goalBufferLength","sourceType_","sourceUpdater_","sourceUpdater","inbandTextTracks_","state_","timelineChangeController_","shouldSaveSegmentTimingInfo_","useDtsForTimestampOffset_","useDtsForTimestampOffset","captionServices_","checkBufferTimeout_","currentTimeline_","pendingSegment_","xhrOptions_","pendingSegments_","audioDisabled_","isPendingTimestampOffset_","gopBuffer_","timeMapping_","safeAppend_","appendInitSegment_","playlistOfLastInitSegment_","callQueue_","loadQueue_","metadataQueue_","waitingOnRemove_","quotaExceededErrorRetryTimeout_","activeInitSegmentId_","initSegments_","cacheEncryptionKeys_","cacheEncryptionKeys","keyCache_","decrypter_","decrypter","syncController_","syncController","syncPoint_","transmuxer_","createTransmuxer_","triggerSyncInfoUpdate_","isEndOfStream_","ended_","fetchAtBuffer_","newState","hasEnoughInfoToAppend_","processCallQueue_","hasEnoughInfoToLoad_","processLoadQueue_","mediaBytesTransferred","mediaRequests","mediaRequestsAborted","mediaRequestsTimedout","mediaRequestsErrored","mediaTransferDuration","mediaSecondsLoaded","mediaAppends","abort_","removeAudio","monitorBuffer_","abortRequests","clearPendingTimelineChange","getMediaInfo_","videoBuffered","audioBuffered","storedMap","storedKey","playlist_","couldBeginLoading_","init_","resetEverything","newPlaylist","syncInfo","setDateTimeMappingForStart","oldId","resyncLoader","resetLoader","mediaSequenceDiff","saveExpiredSegmentInfo","force","removesRemaining","removeFinished","mapping","updatedBuffer","removeGopBuffer","removeVideo","monitorBufferTick_","fillBuffer_","updating","chooseNextRequest_","loadSegment_","appendedLastSegment","appendedLastPart","buffered_","bufferedTime","preloaded","haveEnoughBuffer","getSyncPoint","targetTime","timelineSegments","getSyncSegmentCandidate","_Playlist$getMediaInf","nextSegment","lastSegmentLastPart","generateSegmentInfo_","forceTimestampOffset","random","overrideCheck","timestampOffsetForSegment_","audioBufferedEnd","audioTimestampOffset","currentTimePts","gopsSafeToAlignWith","videoTimestampOffset","_ref46","timestampOffsetForSegment","measuredBandwidth","requestTimeRemaining","timeUntilRebuffer$1","timeUntilRebuffer","switchCandidate","compatiblePlaylists","enabledPlaylists","rebufferingEstimates","numRequests","rebufferingImpact","noRebufferingPlaylists","estimate","minRebufferMaxBandwidthSelector","timeSavedBySwitching","minimumTimeSaving","simpleSegment","earlyAbortWhenNeeded_","checkForAbort_","checkForIllegalMediaSwitch","akeys","bkeys","shallowEqual","timeType","timingInfoProperty","captionData","_this145","hasAppendedData_","captionTracks","captionTrack","trackName","_captionTracks$trackN","getTrackById","def","captionService","createCaptionsTrackIfNotExists","_ref44","captionArray","addCaptionData","handleCaptions_","inBandMetadataTrackDispatchType","createMetadataTrackIfNotExists","handleId3_","callQueue","fun","loadQueue","getCurrentMediaInfo_","setTimeMapping_","updateMediaSecondsLoaded_","initSegmentForMap","segmentKey","firstVideoFrameTimeForData","useVideoTimingInfo","trueSegmentStart_","currentStart","currentVideoTimestampOffset","updateAppendInitSegmentStatus","updateSourceBufferTimestampOffset_","updateTimingInfoEnd_","saveSegmentTimingInfo","shouldSaveTimelineMapping","processMetadataQueue_","appendData_","changedTimestampOffset","_ref49","_ref50","_this146","audioBufferStart","audioBufferEnd","videoBufferStart","videoBufferEnd","appendToSourceBuffer_","timeToRemoveUntil","MIN_BACK_BUFFER","_ref51","handleQuotaExceededError_","_ref52","segmentObj","concatSegments","appendBuffer","handleAppendError_","segmentTimingInfo","transmuxedDecodeStart","transmuxedDecodeEnd","getInitSegmentAndUpdateState_","_this147","trimBackBuffer_","updateTransmuxerAndRequestSegment_","_this148","shouldUpdateTransmuxerTimestampOffset_","createSimplifiedSegmentObj_","isEndOfStream","isWalkingForward","isDiscontinuity","handleAbort_","handleProgress_","handleTrackInfo_","handleTimingInfo_","handleSegmentTimingInfo_","segmentRequestFinished_","_ref53","removeToTime","trimTime","maxTrimTime","safeBackBufferTrimTime","previousSegment","saveTransferStats_","handleTimeout_","saveBandwidthRelatedStats_","updateGopBuffer","waitForAppendsToComplete_","timelineMapping","mappingForTimeline","_ref54","waitForVideo","waitForAudio","waitingOnAppends","checkAppendsDone_","videoQueueCallback","audioQueueCallback","handleAppendsDone_","illegalMediaSwitchError","startingMedia","illegalMediaSwitch","didChange","getSegmentStartTimeForTimestampOffsetCalculation_","_ref55","prioritizedTimingInfo","segmentDurationMessage","recordThroughput_","addSegmentMetadataCue_","badSegmentGuess","badPartGuess","endOfStream","segmentProcessingTime","segmentProcessingThroughput","Vhs$1","bufferTypes","sourceBuffer","queuePending","shiftQueue","queueIndex","queueEntry","nextQueueIndexOfType","cleanupBuffer","titleType","inSourceBuffers","sourceBuffers","actions","onError","mime","addSourceBuffer","removeSourceBuffer","changeType","pushQueue","_ref56","onUpdateend","SourceUpdater","_videojs$EventTarget3","_super79","_this149","sourceopenListener_","audioTimestampOffset_","videoTimestampOffset_","delayedAudioAppendQueue_","videoAppendQueued_","onVideoUpdateEnd_","onAudioUpdateEnd_","onVideoError_","videoError_","onAudioError_","audioError_","createdSourceBuffers_","initializedEme_","triggeredReady_","hasCreatedSourceBuffers","hasInitializedAnyEme","addOrChangeSourceBuffers","canRemoveSourceBuffer","canChangeType","_this150","_this151","processedAppend_","videoBuffer","que","audioBuffer","bufferA","bufferB","arity","extents","bufferIntersection","_this152","uint8ToUtf8","uintArray","VTT_LINE_TERMINATORS","NoVttJsError","_Error","_super80","_wrapNativeSuper","VTTSegmentLoader","_SegmentLoader","_super81","_this153","subtitlesTrack_","featuresNativeTextTracks_","loadVttJs","combinedByteLength","combinedSegment","_this154","timestampOffsetForTimeline","skipEmptySegments_","_this155","stopForError","requested","parseVTTCues_","updateTimeMapping_","timelines","duplicates","occurrences","dupe","removeDuplicateCuesFromTrack","decoder","decodeBytesToString","timestampmap","MPEGTS","LOCAL","ontimestampmap","mapData","segmentData","mappingObj","diff","firstStart","lastStart","findAdCue","mediaTime","adStartTime","adEndTime","syncPointStrategies","run","timelineToDatetimeMappings","lastDistance","datetimeMapping","discontinuitySync","discontinuities","SyncController","_videojs$EventTarget4","_super82","_this156","syncPoints","runStrategies_","selectSyncPoint_","strategy","bestSyncPoint","bestDistance","bestStrategy","newDistance","lastRemovedSegment","firstSegment","playlistTimestamp","_ref57","didCalculateSegmentTimeMapping","calculateSegmentTimeMapping_","saveDiscontinuitySyncInfo_","dateTime","accuracy","mediaIndexDiff","TimelineChangeController","_videojs$EventTarget5","_super83","_this157","pendingTimelineChanges_","lastTimelineChanges_","_ref58","_ref59","workerCode","aesTables","AES","tmp","xInv","x2","x4","tEnc","tDec","tables","encTable","decTable","sbox","sboxInv","th","precompute","_tables","keyLen","rcon","encKey","decKey","encrypted0","encrypted1","encrypted2","encrypted3","out","a2","b2","c2","nInnerRounds","kIndex","table0","table1","table2","table3","AsyncStream","_super84","_this158","jobs","timeout_","processJob_","job","ntoh","word","Decrypter","initVector","STEP","encrypted32","Int32Array","asyncStream_","decryptChunk_","padded","init0","init1","init2","init3","wordIx","decipher","decrypted32","audioTrackKind_","stopLoaders","segmentLoader","activePlaylistLoader","startLoaders","playlistLoader","segmentLoaders","excludePlaylist","activeTrack","activeGroup","defaultTrack","onTrackChanged","setupListeners","requestOptions","initialize","_settings$mediaTypes$","groups","variantLabel","isMainPlaylist","_settings$mediaTypes$2","_settings$mediaTypes$3","newProps","groupMatch","setupMediaGroups","_settings$segmentLoad3","audioSegmentLoader","mainSegmentLoader","variants","groupKeys","groupPropertyList","onGroupChanged","_settings$segmentLoad","getActiveGroup","previousActiveLoader","lastGroup","lastGroup_","lastTrack_","onGroupChanging","_settings$segmentLoad2","lastTrack","selectPlaylist","fastQualityChange_","setAudio","_ref60","activeTrack_","onAudioTrackChanged","loaderStats","sumLoaderStat","stat","audioSegmentLoader_","mainSegmentLoader_","PlaylistController","_videojs$EventTarget6","_super85","_this159","externVhs","useCueTags","enableLowInitialPlaylist","bufferBasedABR","maxPlaylistRetries","useCueTags_","cueTagsTrack_","requestOptions_","pauseLoading","mediaTypes_","createMediaTypes","handleDurationChange_","handleSourceOpen_","handleSourceEnded_","segmentLoaderSettings","setupMainPlaylistLoaderListeners_","subtitleSegmentLoader_","onLoad","setupSegmentLoaderListeners_","startABRTimer_","stopABRTimer_","triggeredFmp4Usage","loadOnPlay_","timeToLoadedData__","mainAppendsToLoadedData__","audioAppendsToLoadedData__","timeToLoadedDataStart","mainAppendsToLoadedData_","audioAppendsToLoadedData_","nextPlaylist","shouldSwitchToMedia_","switchMedia_","newId","_this160","abrTimer_","checkABR_","defaultPlaylists","defaultGroup","_this161","requestTimeout","triggerPresenceUsage_","setupFirstPlay","updatedPlaylist","selectedMedia","excludeUnsupportedVariants_","selectInitialPlaylist","initialMedia_","handleUpdatedMediaPlaylist","playlistToExclude","lastExcludeReason_","stuckAtPlaylistEnd_","updateAdCues_","updateDuration","defaultDemuxed","audioGroupKeys","currentPlaylist","bufferLowWaterLine","bufferHighWaterLine","_ref61","sharedLogLine","isBuffered","forwardBuffer","maxBufferLowWaterLine","nextBandwidth","currBandwidth","logLine","shouldSwitchToMedia","_this162","onSyncInfoUpdate_","onEndOfStream","delegateLoaders_","updateCodecs","tryToCreateSourceBuffers_","getCodecsOrExclude_","_this163","_this164","mainMediaInfo","getExpiredTime","absolutePlaylistEnd","_ref62","_ref62$playlistToExcl","_ref62$error","reincluded","errorMessage","delayDuration","fnNames","_this165","loaders","dontFilterPlaylist","loader","audioSeekable","mainSeekable","oldEnd","oldStart","updateDuration_","setDuration","_this166","usingAudioLoader","hasMainMediaInfo","hasAudioMediaInfo","_this167","getPendingSegmentPlaylist","playlistCodecs","unsupportedAudio","unsupportedCodecs","supporter","switchMessages","newCodec","oldCodec","areMediaTypesKnown_","createSourceBuffers","excludeIncompatibleVariants_","_this168","ids","unsupported","_this169","codecCount_","videoDetails","audioDetails","exclusionReasons","variantCodecs","variantCodecCount","variantVideoDetails","variantAudioDetails","_segment$cueOutCont$s","_segment$cueOutCont$s2","adOffset","adTotal","updateAdCues","newMax","Representation","vhsHandler","playlistID","changePlaylistFn","qualityChangeFunction","incompatible","currentlyEnabled","timerCancelEvents","PlaybackWatcher","_this170","allowSeeksWithinUnsafeLiveWindow","liveRangeSafeTimeDelta","consecutiveUpdates","lastRecordedTime","checkCurrentTimeTimeout_","playHandler","monitorCurrentTime_","canPlayHandler","waitingHandler","techWaiting_","cancelTimerHandler","resetTimeUpdate_","loaderTypes","loaderChecks","resetSegmentDownloads_","updateend","checkSegmentDownloads_","setSeekingHandlers","seekingAppendCheck_","fixesBadSeeks_","clearSeekingAppendCheck_","watchForBadSeeking_","checkCurrentTime_","isBufferedDifferent","isRangeDifferent","waiting_","afterSeekableWindow_","beforeSeekableWindow_","minAppendedDuration","bufferedToCheck","nextRange","currentRange","livePoint","videoUnderflow_","skipTheGap_","allowedEnd","_ref63","lastVideoRange","videoRange","audioRange","gapFromVideoUnderflow_","scheduledCurrentTime","gaps","findGaps","defaultOptions","errorInterval","getSource","IWillNotUseThisInPlugins","initPlugin","lastCalled","localOptions","loadedMetadataHandler","cleanupEvents","reloadSourceOnError","version$4","STANDARD_PLAYLIST_SELECTOR","INITIAL_PLAYLIST_SELECTOR","_this143","movingAverageBandwidthSelector","decay","average","lastSystemBandwidth","comparePlaylistResolution","leftWidth","rightWidth","LOCAL_STORAGE_KEY","handleVhsMediaChange","waitForKeySessionCreation","_ref64","sourceKeySystems","audioMedia","mainPlaylists","eme","initializeMediaKeys","keySystemsOptionsArr","keySystems","keySystemsArr","keySystemsOptions","keySystemsObj","keySystemOptions","getAllPsshKeySystemsOptions","initializationFinishedPromises","keySessionCreatedPromises","setupEmeOptions","_ref65","sourceOptions","audioPlaylist","videoContentType","audioContentType","keySystemContentTypes","emeKeySystems","getVhsLocalStorage","storedObject","supportsNativeHls","canItPlay","supportsNativeDash","supportsTypeNatively","VhsHandler","_Component","_super86","_this171","initialBandwidth","_player","source_","ignoreNextSeekingEvent_","setOptions_","overrideNative","overrideNativeAudioTracks","overrideNativeVideoTracks","featuresNativeVideoTracks","_this172","useBandwidthFromLocalStorage","useNetworkInformationApi","option","_this173","dataUri","playbackWatcherOptions","playbackWatcher_","defaultSelector","playerBandwidthEst","networkInformation","connection","mozConnection","webkitConnection","tenMbpsAsBitsPerSecond","networkInfoBandwidthEstBitsPerSec","downlink","invThroughput","invBandwidth","mediaRequests_","mediaRequestsAborted_","mediaRequestsTimedout_","mediaRequestsErrored_","mediaTransferDuration_","mediaBytesTransferred_","mediaSecondsLoaded_","mediaAppends_","mainAppendsToLoadedData","audioAppendsToLoadedData","appendsToLoadedData","appendsToLoadedData_","timeToLoadedData","timeToLoadedData_","currentTech","playerDimensions","currentDimensions","objectToStore","updateVhsLocalStorage","setupEme_","setupQualityLevels_","mediaSourceUrl_","_this174","audioPlaylistLoader","initializedEme","createKeySessions_","_this175","didSetupEmeOptions","_videojs$log","excludedHDPlaylists","handleWaitingForKey_","_this176","qualityLevels_","addQualityLevel","handleVhsLoadedMetadata","VhsSourceHandler","simpleType","getOverrideNative","_options$vhs","defaultOverrideNative","_vhs$overrideNative","vttjs","WebVTT","VTTRegion","cueShim","regionShim","nativeVTTCue","nativeVTTRegion","shim","restore","_objCreate","create","F","ParsingError","errorData","parseTimeStamp","computeSeconds","Settings","parseOptions","keyValueDelim","groupDelim","kv","parseCue","regionList","oInput","consumeTimeStamp","Errors","BadTimeStamp","skipWhitespace","region","vals","vals0","integer","lineAlign","snapToLines","center","positionAlign","consumeCueSettings","BadSignature","dflt","defaultKey","TEXTAREA_ELEMENT","TAG_NAME","u","ruby","rt","DEFAULT_COLOR_CLASS","white","lime","cyan","red","yellow","magenta","blue","black","TAG_ANNOTATION","NEEDS_PARENT","parseContent","nextToken","shouldAdd","annotation","rootDiv","tagStack","classes","cl","bgColor","colorName","propValue","strongRTLRanges","isStrongRTLChar","determineBidi","nodeStack","pushNodes","nextTextNode","StyleBox","CueStyleBox","styleOptions","styles","writingMode","unicodeBidi","applyStyles","textAlign","font","whiteSpace","textPos","formatStyle","move","BoxPosition","lh","rects","getClientRects","lineHeight","moveBoxToLinePosition","styleBox","containerBox","boxPositions","boxPosition","linePos","textTrackList","mediaElement","computeLinePos","axis","maxPosition","initialAxis","calculatedPercentage","bestPosition","specifiedPosition","percentage","overlapsOppositeAxis","within","overlapsAny","intersectPercentage","findBestPosition","toCSSCompatValues","toMove","overlaps","getSimpleBoxPosition","convertCueToDOMTree","cuetext","overlay","paddedOverlay","hasBeenReset","shouldCompute","reportOrThrowError","collectNextLine","parseHeader","parseTimestampMap","xy","anchor","lines","regionAnchorX","regionAnchorY","viewportAnchorX","viewportAnchorY","scroll","onregion","parseRegion","alreadyCollectedLine","hasSubstring","directionSetting","alignSetting","findAlignSetting","_id","_pauseOnExit","_startTime","_endTime","_text","_region","_vertical","_snapToLines","_line","_lineAlign","_position","_positionAlign","_size","_align","setting","findDirectionSetting","SyntaxError","getCueAsHTML","scrollSetting","isValidPercentValue","_width","_lines","_regionAnchorX","_regionAnchorY","_viewportAnchorX","_viewportAnchorY","_scroll","findScrollSetting","__esModule","ForwardRef","svgRef","titleId","_objectWithoutProperties","_excluded","viewBox","ref","fillRule","clipRule"],"sourceRoot":""}