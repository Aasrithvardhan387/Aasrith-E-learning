{"version":3,"file":"static/js/495.c8ade98a.chunk.js","mappings":"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","sources":["api/services/course/lesson-service.ts","api/endpoints/course/lesson.ts","components/common/bread-crumbs.tsx","hooks/useApiCall.ts","components/pages/course-pages/payment-confirmation-modal.tsx","components/common/login-confirmation-modal.tsx","components/pages/course-pages/pdf-viewer.tsx","components/shimmer/view-course-shimmer.tsx","components/pages/course-pages/view-course.tsx","../node_modules/@heroicons/react/24/outline/esm/ExclamationCircleIcon.js"],"sourcesContent":["import api from \"../../middlewares/protected-interceptor\";\r\nimport CONFIG_KEYS from \"../../../config\";\r\n\r\nexport const getLessonsByCourseService = async (\r\n    endpoint: string,\r\n    courseId: string\r\n  ) => {\r\n    const response = await api.get(\r\n      `${CONFIG_KEYS.API_BASE_URL}/${endpoint}/${courseId}`\r\n    );\r\n    return response.data;\r\n  };\r\n  \r\n  export const addLessonsService = async (\r\n    endpoint: string,\r\n    courseId: string,\r\n    lesson: FormData\r\n  ) => {\r\n    const response = await api.post(\r\n      `${CONFIG_KEYS.API_BASE_URL}/${endpoint}/${courseId}`,\r\n      lesson\r\n    );\r\n    return response.data;\r\n  };\r\n\r\n  export const editLessonsService = async (\r\n    endpoint: string,\r\n    lessonId: string,\r\n    lesson: FormData\r\n  ) => {\r\n    const response = await api.put(\r\n      `${CONFIG_KEYS.API_BASE_URL}/${endpoint}/${lessonId}`,\r\n      lesson\r\n    );\r\n    return response.data;\r\n  };\r\n  \r\n  export const getLessonsByIdService = async (\r\n    endpoint: string,\r\n    lessonId: string\r\n  ) => {\r\n    const response = await api.get(\r\n      `${CONFIG_KEYS.API_BASE_URL}/${endpoint}/${lessonId}`\r\n    );\r\n    return response.data;\r\n  };","import END_POINTS from \"../../../constants/endpoints\";\r\nimport { getLessonsByCourseService,addLessonsService,getLessonsByIdService, editLessonsService } from \"../../services/course/lesson-service\";\r\n\r\nexport const getLessonsByCourse = (courseId: string) => {\r\n    return getLessonsByCourseService(END_POINTS.GET_LESSONS_BY_COURSE, courseId);\r\n  };\r\n  \r\n  export const addLesson = (courseId: string, lesson: FormData) => {\r\n    return addLessonsService(END_POINTS.ADD_LESSON, courseId, lesson);\r\n  };\r\n\r\n  export const editLesson = (lessonId: string, lesson: FormData) => {\r\n    return editLessonsService(END_POINTS.EDIT_LESSON, lessonId, lesson);\r\n  };\r\n  \r\n  export const getLessonById = (lessonId:string)=>{\r\n    return getLessonsByIdService(END_POINTS.GET_LESSONS_BY_ID,lessonId)\r\n  }","import { Breadcrumbs } from \"@material-tailwind/react\";\r\nimport { capitalizeFirstLetter } from \"../../utils/helpers\";\r\nimport { Link } from \"react-router-dom\";\r\n  \r\nexport default function CustomBreadCrumbs({ paths }: { paths: string }) {\r\n  const trimmedPath = paths.substring(1);\r\n  const parts = trimmedPath.split(\"/\");\r\n  \r\n  return (\r\n    <Breadcrumbs>\r\n      {parts.map((path: string, index: number) => {\r\n        const href = `/${parts.slice(0, index + 1).join(\"/\")}`\r\n        return (\r\n          <Link to={href} className='opacity-60' key={index}>\r\n            {capitalizeFirstLetter(path)}\r\n          </Link>\r\n        );\r\n      })}\r\n    </Breadcrumbs>\r\n  );\r\n}\r\n","import { useState, useEffect } from 'react';\r\n\r\ntype RefreshDataFunction = () => void;\r\n\r\ninterface ApiDataResult<T> {\r\n  data: T | null;\r\n  isLoading: boolean;\r\n  isError: boolean;\r\n  error: any;\r\n  refreshData: RefreshDataFunction;\r\n}\r\n\r\nconst useApiData = <T>(apiCall: (...args: any[]) => Promise<T>, ...args: any[]): ApiDataResult<T> => {\r\n  const [data, setData] = useState<T | null>(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isError, setIsError] = useState(false);\r\n  const [error, setError] = useState<any>(null);\r\n  const [refreshFlag, setRefreshFlag] = useState(false);\r\n  \r\n  const refreshData = () => {\r\n    setRefreshFlag(!refreshFlag);\r\n  };\r\n\r\n  useEffect(() => {\r\n    let timerId:any;\r\n    const fetchData = async (): Promise<void> => {\r\n      setIsLoading(true);\r\n      try {\r\n        const response = await apiCall(...args);\r\n        setData(response);\r\n      } catch (error: any) {\r\n        setIsError(true);\r\n        setError(error);\r\n      }\r\n      timerId = setTimeout(()=>{\r\n        setIsLoading(false);\r\n      },2000)\r\n    };\r\n\r\n    fetchData();\r\n  }, [refreshFlag, ...args]); // Include the refreshFlag and args in the dependency array\r\n\r\n  return {\r\n    data,\r\n    isLoading,\r\n    isError,\r\n    error,\r\n    refreshData,\r\n  };\r\n};\r\n\r\nexport default useApiData;\r\n","import React, { useState, Fragment } from \"react\";\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogHeader,\r\n  DialogBody,\r\n  DialogFooter,\r\n  Typography,\r\n} from \"@material-tailwind/react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { ExclamationCircleIcon } from \"@heroicons/react/24/outline\";\r\nimport { formatToINR } from \"../../../utils/helpers\";\r\nimport { enrollStudent } from \"../../../api/endpoints/course/course\";\r\nimport { toast } from \"react-toastify\";\r\nimport { FaSpinner } from \"react-icons/fa\";\r\n\r\ninterface PaymentModalProps {\r\n  open: boolean;\r\n  setOpen: React.Dispatch<React.SetStateAction<boolean>>;\r\n  setUpdated: () => void;\r\n  courseDetails: {\r\n    price: number;\r\n    overview: string;\r\n    isPaid: boolean;\r\n  };\r\n}\r\n\r\nconst PaymentConfirmationModal: React.FC<PaymentModalProps> = ({\r\n  open,\r\n  setOpen,\r\n  setUpdated,\r\n  courseDetails,\r\n}) => {\r\n  const handleOpen = () => setOpen((cur) => !cur);\r\n  const { courseId } = useParams();\r\n  const [isLoading, setIsLoading] = useState<boolean>(false);\r\n  const navigate = useNavigate();\r\n  const handleClose = () => setOpen(false); \r\n  const handleConfirmPayment = async () => {\r\n    try {\r\n      setIsLoading(true);\r\n      const response = await enrollStudent(courseId ?? \"\");\r\n      setTimeout(() => {\r\n        setUpdated();\r\n        setIsLoading(false);\r\n        setOpen(false);\r\n        toast.success(response?.message, {\r\n          position: toast.POSITION.BOTTOM_RIGHT,\r\n        });\r\n      }, 3000);\r\n    } catch (error) {\r\n      setIsLoading(false);\r\n      toast.error(\"Something went wrong \", {\r\n        position: toast.POSITION.BOTTOM_RIGHT,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleCourseEnroll = () => {\r\n    if (courseDetails.isPaid) {\r\n      navigate(`/courses/${courseId}/payment`);\r\n    } else {\r\n      handleConfirmPayment();\r\n    }\r\n  };\r\n  const isFreeCourse = courseDetails?.isPaid === false;\r\n  return (\r\n    <Fragment>\r\n      <Dialog open={open} size='sm' handler={handleOpen}>\r\n        <DialogHeader>\r\n          <div className='flex items-center justify-center'>\r\n            <ExclamationCircleIcon className='h-8 w-8 text-yellow-500' />\r\n            <Typography variant='h5' color='gray' className='ml-2'>\r\n              Payment Confirmation\r\n            </Typography>\r\n          </div>\r\n        </DialogHeader>\r\n        <DialogBody divider>\r\n          <Typography variant='body' color='gray'>\r\n            Please review the details before proceeding:\r\n          </Typography>\r\n          <Typography variant='body' color='gray' className='mt-4'>\r\n            {isFreeCourse\r\n              ? \"This course is free!\"\r\n              : `Course Price: ${formatToINR(courseDetails?.price)}`}\r\n          </Typography>\r\n          <Typography variant='body' color='gray'>\r\n            Course Overview: {courseDetails?.overview}\r\n          </Typography>\r\n        </DialogBody>\r\n        <DialogFooter>\r\n          {isFreeCourse ? (\r\n            <Button\r\n            variant='gradient'\r\n            color='green'\r\n            onClick={handleCourseEnroll}\r\n            className='w-full flex items-center justify-center'\r\n          >\r\n            {isLoading ? (\r\n              <span className=\"flex items-center\">\r\n                <span>Loading</span>\r\n                <FaSpinner className='animate-spin ml-1' size={20} />\r\n              </span>\r\n            ) : (\r\n              <span>Start Course</span>\r\n            )}\r\n          </Button>\r\n          ) : (\r\n            <Button\r\n              variant='gradient'\r\n              color='green'\r\n              onClick={handleCourseEnroll}\r\n              className='w-full'\r\n            >\r\n              <span>Confirm Payment</span>\r\n            </Button>\r\n          )}\r\n          <Button\r\n            variant='outlined'\r\n            color='blue'\r\n            onClick={handleClose}\r\n            className='w-full mt-2'\r\n          >\r\n            <span>Cancel</span>\r\n          </Button>\r\n        </DialogFooter>\r\n      </Dialog>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default PaymentConfirmationModal;\r\n","import { Fragment } from \"react\";\r\nimport { Button, Dialog, DialogHeader, DialogBody, DialogFooter } from \"@material-tailwind/react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\ninterface Props {\r\n  confirm: boolean;\r\n  setConfirm: (value: boolean) => void;\r\n}\r\n\r\nconst LoginConfirmation: React.FC<Props> = ({ confirm, setConfirm }) => {\r\n  const navigate = useNavigate();\r\n\r\n  const handleOpen = () => setConfirm(false);\r\n  const handleConfirm = () => {\r\n    setConfirm(false);\r\n    // Check if the user is logged in here (you can implement your own logic)\r\n    navigate(\"/login\")\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Dialog open={confirm} size={\"sm\"} handler={handleOpen}>\r\n        <DialogHeader>Login Confirmation</DialogHeader>\r\n        <DialogBody divider>\r\n          To purchase this course, you need to be logged in. Please log in to continue.\r\n        </DialogBody>\r\n        <DialogFooter>\r\n          <Button variant=\"text\" color=\"red\" onClick={handleOpen} className=\"mr-1\">\r\n            <span>Cancel</span>\r\n          </Button>\r\n          <Button variant=\"gradient\" color=\"blue\" onClick={handleConfirm}>\r\n            <span>Proceed to Login</span>\r\n          </Button>\r\n        </DialogFooter>\r\n      </Dialog>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default LoginConfirmation;\r\n","import React from 'react';\r\nimport { Document, Page, pdfjs } from 'react-pdf';\r\nimport 'react-pdf/dist/esm/Page/AnnotationLayer.css'; \r\n\r\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\r\n\r\ninterface PdfViewerProps {\r\n  pdfUrl: string;\r\n}    \r\n\r\nconst PdfViewer: React.FC<PdfViewerProps> = ({ pdfUrl }) => {\r\n  return (\r\n    <div>\r\n      <Document file={pdfUrl}>\r\n        <Page pageNumber={1} />\r\n      </Document>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PdfViewer;\r\n","import React from 'react';\r\n\r\nconst ViewCourseShimmer: React.FC = () => {\r\n  return (\r\n    <div className=\"bg-white\">\r\n      <div className=\"flex flex-col pr-10 w-5/12  pt-5 pl-80\">\r\n        <div className=\"h-8 bg-gray-200 animate-pulse\" />\r\n      </div>\r\n      <div className=\"flex flex-col items-center \">\r\n        <div className=\"max-w-4xl overflow-hidden w-8/12\">\r\n          <div className=\"relative p-4\">\r\n            <div className=\"w-full h-64 bg-gray-200 animate-pulse\" />\r\n            <div className=\"absolute top-3 right-3 shadow-md bg-gray-200 text-gray-200 px-4 py-2 text-sm rounded-tl-lg rounded-br-lg animate-pulse\" />\r\n            <div className=\"p-6\">\r\n              <h2 className=\"text-3xl font-bold mb-4 bg-gray-200 h-8 animate-pulse\" />\r\n              <p className=\"text-gray-700 text-lg mb-6 bg-gray-200 h-6 animate-pulse\" />\r\n              <div className=\"flex items-center mb-4\">\r\n                <div className=\"bg-gray-200 text-gray-200 rounded-full px-3 py-1 text-sm mr-2 animate-pulse\" />\r\n                <div className=\"bg-gray-200 text-gray-200 rounded-full px-3 py-1 text-sm animate-pulse\" />\r\n              </div>\r\n              <div className=\"flex justify-between items-center mb-6\">\r\n                <div>\r\n                  <h4 className=\"text-xl font-semibold bg-gray-200 h-6 animate-pulse\" />\r\n                  <p className=\"text-gray-700 bg-gray-200 h-4 animate-pulse\" />\r\n                </div>\r\n                <div>\r\n                  <h4 className=\"text-xl font-semibold bg-gray-200 h-6 animate-pulse\" />\r\n                  <p className=\"text-gray-700 bg-gray-200 h-4 animate-pulse\" />\r\n                </div>\r\n                <div>\r\n                  <h4 className=\"text-xl font-semibold bg-gray-200 h-6 animate-pulse\" />\r\n                  <p className=\"text-gray-700 bg-gray-200 h-4 animate-pulse\" />\r\n                </div>\r\n              </div>\r\n              <div className=\"mb-8\">\r\n                <h4 className=\"text-2xl font-semibold mb-2 bg-gray-200 h-8 animate-pulse\" />\r\n                <ul className=\"text-gray-700 bg-gray-200 mt-2 rounded-lg shadow-lg border-2\">\r\n                  <li className=\"p-6 border-b-2 cursor-pointer bg-gray-200 h-8 animate-pulse\" />\r\n                </ul>\r\n              </div>\r\n              <div className=\"mb-8\">\r\n                <h4 className=\"text-2xl font-semibold mb-2 bg-gray-200 h-8 animate-pulse\" />\r\n                <p className=\"text-gray-700 mb-2 bg-gray-200 p-6 rounded-lg shadow-lg border-2 h-20 animate-pulse\" />\r\n              </div>\r\n              <div className=\"mb-8\">\r\n                <h4 className=\"text-2xl font-semibold mb-2 bg-gray-200 h-8 animate-pulse\" />\r\n                <ul className=\"text-gray-700 bg-gray-200 mt-2 border-2 shadow-md rounded-lg\">\r\n                  <li className=\"mb-2 p-3 pt-3 bg-gray-200 h-4 animate-pulse\" />\r\n                  <li className=\"mb-2 p-3 bg-gray-200 h-4 animate-pulse\" />\r\n                  <li className=\"mb-4 p-3 bg-gray-200 h-4 animate-pulse\" />\r\n                </ul>\r\n              </div>\r\n              <div className=\"flex items-center justify-end\">\r\n                <button className=\"rounded-full mr-2 bg-gray-200 h-10 w-24 animate-pulse\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ViewCourseShimmer;\r\n","import React, { useState } from \"react\";\r\nimport CustomBreadCrumbs from \"../../common/bread-crumbs\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport { Button, Chip } from \"@material-tailwind/react\";\r\nimport { getIndividualCourse } from \"../../../api/endpoints/course/course\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport { CourseInterface } from \"../../../types/course\";\r\nimport { formatToINR } from \"../../../utils/helpers\";\r\nimport { FaAngleDown, FaAngleUp } from \"react-icons/fa\";\r\nimport { BiVideo } from \"react-icons/bi\";\r\nimport { IoBookSharp } from \"react-icons/io5\";\r\nimport useApiData from \"../../../hooks/useApiCall\";\r\nimport { getLessonsByCourse } from \"../../../api/endpoints/course/lesson\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setCourseId } from \"../../../redux/reducers/courseSlice\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectStudentId } from \"../../../redux/reducers/studentSlice\";\r\nimport { MdDone } from \"react-icons/md\";\r\nimport PaymentConfirmationModal from \"./payment-confirmation-modal\";\r\nimport { selectIsLoggedIn } from \"../../../redux/reducers/authSlice\";\r\nimport LoginConfirmation from \"../../common/login-confirmation-modal\";\r\nimport PdfViewer from \"./pdf-viewer\";\r\nimport ViewCourseShimmer from \"components/shimmer/view-course-shimmer\";\r\nconst ViewCourseStudent: React.FC = () => {\r\n  const params = useParams();\r\n  const [expandedIndex, setExpandedIndex] = useState(null);\r\n  const courseId: string | undefined = params.courseId;\r\n  const [openPaymentConfirmation, setOpenPaymentConfirmation] =\r\n    useState<boolean>(false);\r\n  const dispatch = useDispatch();\r\n  const studentId = useSelector(selectStudentId);\r\n  const isLoggedIn = useSelector(selectIsLoggedIn);\r\n  const [loginConfirmation, setLoginConfirmation] = useState(false);\r\n  const [showPdf, setShowPdf] = useState(false);\r\n\r\n  const fetchCourse = async (courseId: string): Promise<CourseInterface> => {\r\n    try {\r\n      const course = await getIndividualCourse(courseId);\r\n      return course?.data?.data as CourseInterface;\r\n    } catch (error: any) {\r\n      toast.error(error.data.message, {\r\n        position: toast.POSITION.BOTTOM_RIGHT,\r\n      });\r\n      throw error;\r\n    }\r\n  };\r\n  const handleLiClick = (): void => {\r\n    setShowPdf(true);\r\n  };\r\n  const fetchLessons = async (courseId: string) => {\r\n    try {\r\n      const lessons = await getLessonsByCourse(courseId);\r\n      return lessons.data;\r\n    } catch (error: any) {\r\n      toast.error(error.data.message, {\r\n        position: toast.POSITION.BOTTOM_RIGHT,\r\n      });\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const { data, isLoading, refreshData } = useApiData(fetchCourse, courseId);\r\n  const { data: lessons, isLoading: isLessonsLoading } = useApiData(\r\n    fetchLessons,\r\n    courseId\r\n  );\r\n\r\n  const course: CourseInterface | null = data;\r\n  courseId && dispatch(setCourseId({ courseId }));\r\n\r\n  const handleToggle = (index: any) => {\r\n    setExpandedIndex(index === expandedIndex ? null : index);\r\n  };\r\n  const handleEnroll = () => {\r\n    if (!isLoggedIn) {\r\n      setLoginConfirmation(true);\r\n    } else {\r\n      setOpenPaymentConfirmation(true);\r\n    }\r\n  };\r\n  const location = useLocation();\r\n  if (isLoading || isLessonsLoading) {\r\n    return <ViewCourseShimmer />;\r\n  }\r\n  // if (location.hash === \"#success\") {\r\n  //   toast.success(\"Successfully enrolled into the course\", {\r\n  //     position: toast.POSITION.BOTTOM_RIGHT,\r\n  //   });\r\n  // }\r\n  const enrolled = course?.coursesEnrolled.includes(studentId ?? \"\");\r\n  return (\r\n    <div className='bg-white w-full'>\r\n      <LoginConfirmation\r\n        confirm={loginConfirmation}\r\n        setConfirm={setLoginConfirmation}\r\n      />\r\n      <PaymentConfirmationModal\r\n        open={openPaymentConfirmation}\r\n        setUpdated={refreshData}\r\n        courseDetails={{\r\n          price: course?.price ?? 0,\r\n          overview: course?.description ?? \"\",\r\n          isPaid: course?.isPaid ?? false,\r\n        }}\r\n        setOpen={setOpenPaymentConfirmation}\r\n      />\r\n      <div className='flex flex-col  pr-5 pl-3 pt-5 md:pl-50 lg:pl-80  '>\r\n        <h2>{location.hash}</h2>\r\n        <CustomBreadCrumbs paths={location.pathname} />\r\n      </div>\r\n      <div className='flex flex-col items-center '>\r\n        <div className='max-w-4xl overflow-hidden  sm:p-3'>\r\n          <div className='relative p-4 '>\r\n            <img\r\n              className='w-full h-64 object-cover'\r\n              src={course?.thumbnailUrl}\r\n              alt='Course Title'\r\n            />\r\n            <div className='absolute top-3 right-3 shadow-md bg-blue-500 text-white px-4 py-2 text-sm rounded-tl-lg rounded-br-lg'>\r\n              Bestseller\r\n            </div>\r\n          </div>\r\n          <div className='p-6'>\r\n            <h2 className='text-3xl font-bold mb-4'>{course?.title}</h2>\r\n            <p className='text-gray-700 text-lg mb-6'>{course?.description}</p>\r\n            <div className='flex items-center mb-4'>\r\n              <div>\r\n                <h2 className='text-md mr-2 font-semibold'>Difficulty:</h2>\r\n              </div>\r\n              <div\r\n                className={`rounded-full px-2 py-1 text-sm font-semibold text-white mr-2 ${\r\n                  course?.level === \"easy\"\r\n                    ? \"bg-green-500\"\r\n                    : course?.level === \"medium\"\r\n                    ? \"bg-orange-500\"\r\n                    : course?.level === \"hard\"\r\n                    ? \"bg-red-500\"\r\n                    : \"bg-blue-500\"\r\n                }`}\r\n              >\r\n                {course?.level}\r\n              </div>\r\n            </div>\r\n            <div className='flex justify-between items-center mb-6'>\r\n              <div>\r\n                <h4 className='text-xl font-semibold'>Instructor</h4>\r\n                <p className='text-gray-700'>John Doe</p>\r\n              </div>\r\n              <div>\r\n                <h4 className='text-xl font-semibold'>Duration</h4>\r\n                <p className='text-gray-700'>{course?.duration} weeks</p>\r\n              </div>\r\n              <div>\r\n                <h4 className='text-xl font-semibold'>Price</h4>\r\n                {course?.isPaid ? (\r\n                  <p className='text-gray-700'>\r\n                    {formatToINR(course?.price ?? 0)}\r\n                  </p>\r\n                ) : (\r\n                  <Chip\r\n                    variant='ghost'\r\n                    color='green'\r\n                    size='sm'\r\n                    value='Free'\r\n                    // icon={\r\n                    //   <span className=\"content-[''] block w-1 h-1 rounded-full mx-auto mt-1 bg-green-900\" />\r\n                    // }\r\n                  />\r\n                )}\r\n              </div>\r\n            </div>\r\n\r\n            <div className='mb-8'>\r\n              <h4 className='text-2xl font-semibold mb-2'>Syllabus</h4>\r\n              <ul className='text-gray-700 bg-white mt-2 rounded-lg shadow-lg border-2'>\r\n                <li\r\n                  className={` p-6 border-b-2 cursor-pointer ${\r\n                    expandedIndex === 0\r\n                      ? \"bg-blue-gray-50\"\r\n                      : \"hover:bg-blue-gray-50\"\r\n                  }`}\r\n                  onClick={() => handleToggle(0)}\r\n                >\r\n                  <div className='flex items-center'>\r\n                    <span className='text-blue-500 mr-2'>&#9679;</span>\r\n                    <span>Module 1: Introduction to the Course</span>\r\n                    {expandedIndex === 0 ? (\r\n                      <FaAngleUp className='ml-auto' />\r\n                    ) : (\r\n                      <FaAngleDown className='ml-auto' />\r\n                    )}\r\n                  </div>\r\n                </li>\r\n                {expandedIndex === 0 && (\r\n                  <li className=''>\r\n                    <ul>\r\n                      <li\r\n                        className='p-6 border-b flex items-center cursor-pointer hover:bg-customBlueShade'\r\n                        onClick={handleLiClick}\r\n                      >\r\n                        <IoBookSharp className='mr-2 text-blue-500' />\r\n                        <span className='flex-1'>Important guidelines</span>\r\n                      </li>\r\n                      {showPdf && <PdfViewer pdfUrl={course?.guidelinesUrl??\"\"} />}\r\n\r\n                      <Link to={\"watch-lessons/1\"}>\r\n                        <li className='p-6 border-b flex items-center cursor-pointer hover:bg-customBlueShade'>\r\n                          <BiVideo className='mr-2 text-blue-500' />\r\n                          <span className='flex-1'>Introduction video</span>\r\n                        </li>  \r\n                      </Link>\r\n                    </ul>\r\n                  </li>\r\n                )}\r\n                <li\r\n                  className={` p-6 border-b-2 cursor-pointer ${\r\n                    expandedIndex === 1\r\n                      ? \"bg-blue-gray-50\"\r\n                      : \"hover:bg-blue-gray-50\"\r\n                  }`}\r\n                  onClick={() => handleToggle(1)}\r\n                >\r\n                  <div className='flex items-center'>\r\n                    <span className='text-blue-500 mr-2'>&#9679;</span>\r\n                    <span>Module 2: Advanced Techniques</span>\r\n                    {expandedIndex === 0 ? (\r\n                      <FaAngleUp className='ml-auto' />\r\n                    ) : (\r\n                      <FaAngleDown className='ml-auto' />\r\n                    )}\r\n                  </div>\r\n                </li>\r\n                {expandedIndex === 1 && (\r\n                  <li className=''>\r\n                    <ul>\r\n                      {lessons.map((lesson: any) => {\r\n                        return (\r\n                          <Link\r\n                            to={`watch-lessons/${lesson._id}`}\r\n                            key={lesson._id}\r\n                          >\r\n                            <li className='p-6 border-b flex items-center cursor-pointer hover:bg-customBlueShade'>\r\n                              <BiVideo className='mr-2 text-blue-500' />\r\n                              <span className='flex-1'>{lesson.title}</span>\r\n                            </li>\r\n                          </Link>\r\n                        );\r\n                      })}\r\n                    </ul>\r\n                  </li>\r\n                )}\r\n              </ul>\r\n            </div>\r\n            <div className='mb-8'>\r\n              <h4 className='text-2xl font-semibold mb-2'>About this course</h4>\r\n              <h3 className='text-gray-700 mb-2 bg-white p-6 rounded-lg shadow-lg border-2 break-all'>\r\n                {course?.about}\r\n              </h3>\r\n            </div>\r\n\r\n            <div className='mb-8'>\r\n              <h4 className='text-2xl font-semibold mb-2'>Requirements</h4>\r\n              <ul className='text-gray-700 bg-white mt-2 border-2 shadow-md  rounded-lg'>\r\n                {course?.requirements.map((item, index) => {\r\n                  return (\r\n                    <li className='mb-2 p-3 pt-3' key={index}>\r\n                      <span className='text-blue-500 mr-2 '>&#9679;</span>\r\n                      {item}\r\n                    </li>\r\n                  );\r\n                })}\r\n              </ul>\r\n            </div>\r\n            <div className='flex items-center justify-end'>\r\n              <Button\r\n                disabled={enrolled}\r\n                color={enrolled ? `green` : \"blue\"}\r\n                className='rounded-full flex items-center justify-center mr-2'\r\n                onClick={handleEnroll}\r\n              >\r\n                {enrolled ? (\r\n                  <>\r\n                    <span className='mr-1'>Enrolled</span>\r\n                    <MdDone className='text-lg' />\r\n                  </>\r\n                ) : (\r\n                  <span>Enroll Now</span>\r\n                )}\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default ViewCourseStudent;\r\n","import * as React from \"react\";\nfunction ExclamationCircleIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M12 9v3.75m9-.75a9 9 0 11-18 0 9 9 0 0118 0zm-9 3.75h.008v.008H12v-.008z\"\n  }));\n}\nconst ForwardRef = React.forwardRef(ExclamationCircleIcon);\nexport default ForwardRef;"],"names":["getLessonsByCourseService","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","endpoint","courseId","response","wrap","_context","prev","next","api","get","concat","CONFIG_KEYS","API_BASE_URL","sent","abrupt","data","stop","_x","_x2","apply","arguments","addLessonsService","_ref2","_callee2","lesson","_context2","post","_x3","_x4","_x5","editLessonsService","_ref3","_callee3","lessonId","_context3","put","_x6","_x7","_x8","getLessonsByIdService","_ref4","_callee4","_context4","_x9","_x10","getLessonsByCourse","END_POINTS","GET_LESSONS_BY_COURSE","addLesson","ADD_LESSON","editLesson","EDIT_LESSON","getLessonById","GET_LESSONS_BY_ID","CustomBreadCrumbs","parts","paths","substring","split","_jsx","Breadcrumbs","children","map","path","index","href","slice","join","Link","to","className","capitalizeFirstLetter","apiCall","_len","length","args","Array","_key","_useState","useState","_useState2","_slicedToArray","setData","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","isError","setIsError","_useState7","_useState8","error","setError","_useState9","_useState10","refreshFlag","setRefreshFlag","useEffect","fetchData","t0","setTimeout","refreshData","open","setOpen","setUpdated","courseDetails","useParams","navigate","useNavigate","handleConfirmPayment","enrollStudent","toast","success","message","position","POSITION","BOTTOM_RIGHT","handleCourseEnroll","isPaid","isFreeCourse","Fragment","_jsxs","Dialog","size","handler","cur","DialogHeader","ExclamationCircleIcon","Typography","variant","color","DialogBody","divider","formatToINR","price","overview","DialogFooter","Button","onClick","FaSpinner","confirm","setConfirm","handleOpen","pdfjs","workerSrc","pdfUrl","Document","file","Page","pageNumber","_course$price","_course$description","_course$isPaid","_course$price2","_course$guidelinesUrl","params","expandedIndex","setExpandedIndex","openPaymentConfirmation","setOpenPaymentConfirmation","dispatch","useDispatch","studentId","useSelector","selectStudentId","isLoggedIn","selectIsLoggedIn","loginConfirmation","setLoginConfirmation","showPdf","setShowPdf","fetchCourse","_course$data","_course","getIndividualCourse","course","fetchLessons","_lessons","lessons","_useApiData","useApiData","_useApiData2","isLessonsLoading","setCourseId","handleToggle","location","useLocation","ViewCourseShimmer","enrolled","coursesEnrolled","includes","LoginConfirmation","PaymentConfirmationModal","description","hash","pathname","src","thumbnailUrl","alt","title","level","duration","Chip","value","FaAngleUp","FaAngleDown","IoBookSharp","PdfViewer","guidelinesUrl","BiVideo","_id","about","requirements","item","disabled","_Fragment","MdDone","ForwardRef","React","svgRef","titleId","props","_objectWithoutProperties","_excluded","Object","assign","xmlns","fill","viewBox","strokeWidth","stroke","ref","id","strokeLinecap","strokeLinejoin","d"],"sourceRoot":""}