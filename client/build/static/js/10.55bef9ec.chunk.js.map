{"version":3,"file":"static/js/10.55bef9ec.chunk.js","mappings":"+OAsBMA,EAAa,CAAC,UAAW,SAAU,SAAU,UAuMnD,UArM6B,WAC3B,IAAAC,GAAgCC,EAAAA,EAAAA,UAAqB,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjDI,EAAQF,EAAA,GAAEG,EAAWH,EAAA,GAE5BI,GAOIC,EAAAA,EAAAA,GAAcH,EARK,GAErBI,EAAWF,EAAXE,YACAC,EAAUH,EAAVG,WACAC,EAAWJ,EAAXI,YACAC,EAAQL,EAARK,SACAC,EAAYN,EAAZM,aACAC,EAAgBP,EAAhBO,iBAEIC,EAAa,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAH,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,GAEKC,EAAAA,EAAAA,MAAgB,KAAD,EAAhCL,EAAQE,EAAAI,KACdrB,EAAYe,EAASO,MAAML,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAM,GAAAN,EAAA,SAE3BO,EAAAA,GAAMC,MAAM,wBAAuB,yBAAAR,EAAAS,OAAA,GAAAZ,EAAA,kBAEtC,kBAPkB,OAAAJ,EAAAiB,MAAA,KAAAC,UAAA,KAYnB,OAHAC,EAAAA,EAAAA,YAAU,WACRpB,GACF,GAAG,KAEDqB,EAAAA,EAAAA,KAAA,OAAKC,UAAU,QAAOC,UACpBC,EAAAA,EAAAA,MAACC,EAAAA,KAAI,CAACH,UAAU,gBAAeC,SAAA,EAC7BF,EAAAA,EAAAA,KAACK,EAAAA,WAAU,CAACC,SAAS,EAAOC,QAAQ,EAAON,UAAU,eAAcC,UACjEC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,2CAA0CC,SAAA,EACvDC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEF,EAAAA,EAAAA,KAACQ,EAAAA,WAAU,CAACC,QAAQ,KAAKC,MAAM,YAAWR,SAAC,mBAG3CF,EAAAA,EAAAA,KAACQ,EAAAA,WAAU,CAACE,MAAM,OAAOT,UAAU,mBAAkBC,SAAC,2CAIxDF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,2CAA0CC,UACvDF,EAAAA,EAAAA,KAACW,EAAAA,MAAK,CACJC,MAAM,SACNC,MAAMb,EAAAA,EAAAA,KAACc,EAAAA,EAAmB,CAACb,UAAU,sBAK7CD,EAAAA,EAAAA,KAACe,EAAAA,SAAQ,CAACd,UAAU,uBAAsBC,UACxCC,EAAAA,EAAAA,MAAA,SAAOF,UAAU,6CAA4CC,SAAA,EAC3DF,EAAAA,EAAAA,KAAA,SAAAE,UACEF,EAAAA,EAAAA,KAAA,MAAAE,SACGtC,EAAWoD,KAAI,SAACC,EAAMC,GAAK,OAC1BlB,EAAAA,EAAAA,KAAA,MAEEC,UAAU,8GAA6GC,UAEvHC,EAAAA,EAAAA,MAACK,EAAAA,WAAU,CACTC,QAAQ,QACRC,MAAM,YACNT,UAAU,8EAA6EC,SAAA,CAEtFe,EAAM,IACNC,IAAUtD,EAAWuD,OAAS,IAC7BnB,EAAAA,EAAAA,KAACoB,EAAAA,EAAiB,CAChBC,YAAa,EACbpB,UAAU,gBAZXgB,EAgBF,SAIXjB,EAAAA,EAAAA,KAAA,SAAAE,SACc,OAAX3B,QAAW,IAAXA,OAAW,EAAXA,EAAayC,KACZ,SAAAM,EAcEJ,GAZKI,EAAHC,IAaE,IAZFC,EAAKF,EAALE,MACAC,EAASH,EAATG,UACAC,EAAQJ,EAARI,SACAC,EAAML,EAANK,OAEAC,GADMN,EAANO,OACSP,EAATM,WACAE,EAAYR,EAAZQ,aACAC,EAAUT,EAAVS,WACAC,EAAUV,EAAVU,WACAC,EAAUX,EAAVW,WAKIC,EADShB,IAAUjD,EAASkD,OAAS,EAEvC,MACA,mCAEJ,OACEhB,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,MAAIC,UAAWiC,EAAQhC,UACrBC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,0BAAyBC,SAAA,EACtCF,EAAAA,EAAAA,KAACmC,EAAAA,OAAM,CACLC,IAAKN,EAAuB,OAAVG,QAAU,IAAVA,OAAU,EAAVA,EAAYI,IAAIL,EAClCM,IAAK,QACLC,KAAK,QAEPpC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,gBAAeC,SAAA,EAC5BF,EAAAA,EAAAA,KAACQ,EAAAA,WAAU,CACTC,QAAQ,QACRC,MAAM,YACNT,UAAU,cAAaC,SAEtBuB,EAAY,IAAMC,KAErB1B,EAAAA,EAAAA,KAACQ,EAAAA,WAAU,CACTC,QAAQ,QACRC,MAAM,YACNT,UAAU,yBAAwBC,SAEjCsB,aAKTxB,EAAAA,EAAAA,KAAA,MAAIC,UAAWiC,EAAQhC,UACrBF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,gBAAeC,UAC5BF,EAAAA,EAAAA,KAACQ,EAAAA,WAAU,CACTC,QAAQ,QACRC,MAAM,YACNT,UAAU,cAAaC,SAEtByB,SAIP3B,EAAAA,EAAAA,KAAA,MAAIC,UAAWiC,EAAQhC,UACrBF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,QAAOC,UACpBF,EAAAA,EAAAA,KAACwC,EAAAA,KAAI,CACH/B,QAAQ,QACR8B,KAAK,KACLE,MAAQb,EAAuB,UAAX,SACpBlB,MAAOkB,EAAY,MAAQ,eAIjC5B,EAAAA,EAAAA,KAAA,MAAIC,UAAWiC,EAAQhC,UACrBF,EAAAA,EAAAA,KAACQ,EAAAA,WAAU,CACTC,QAAQ,QACRC,MAAM,YACNT,UAAU,cAAaC,UAEtBwC,EAAAA,EAAAA,IAAWX,SArDTb,EA0Db,YAKRf,EAAAA,EAAAA,MAACwC,EAAAA,WAAU,CAAC1C,UAAU,qEAAoEC,SAAA,EAC1FF,EAAAA,EAAAA,KAAC4C,EAAAA,OAAM,CACLnC,QAAQ,WACRC,MAAM,YACN6B,KAAK,KACLM,QAASnE,EACToE,SAA0B,IAAhBzE,EAAkB6B,SAC7B,cAGDF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,0BAAyBC,SACrC6C,MAAMC,KAAK,CAAE7B,OAAQ7C,IAAc,SAAC2E,EAAG/B,GAAK,OAAKA,EAAQ,CAAC,IAAEF,KAC3D,SAACkC,GAAU,OACTlD,EAAAA,EAAAA,KAACmD,EAAAA,WAAU,CAET1C,QAASyC,IAAe7E,EAAc,WAAa,OACnDqC,MAAM,YACN6B,KAAK,KACLM,QAAS,kBAAMrE,EAAS0E,EAAW,EAAChD,SAEnCgD,GANIA,EAOM,OAInBlD,EAAAA,EAAAA,KAAC4C,EAAAA,OAAM,CACLnC,QAAQ,WACRC,MAAM,YACN6B,KAAK,KACLM,QAASpE,EACTqE,SAAUzE,IAAgBC,EAAW4B,SACtC,gBAOT,C,wECpMA,IAAMkD,EAAaC,EAAAA,YAtBnB,SAA0BzE,EAIvB0E,GAAQ,IAHTC,EAAK3E,EAAL2E,MACAC,EAAO5E,EAAP4E,QACGC,GAAKC,EAAAA,EAAAA,GAAA9E,EAAA+E,GAER,OAAoBN,EAAAA,cAAoB,MAAOO,OAAOC,OAAO,CAC3DC,MAAO,6BACPC,KAAM,OACNC,QAAS,YACT3C,YAAa,IACb4C,OAAQ,eACR,cAAe,OACfC,IAAKZ,EACL,kBAAmBE,GAClBC,GAAQF,EAAqBF,EAAAA,cAAoB,QAAS,CAC3Dc,GAAIX,GACHD,GAAS,KAAmBF,EAAAA,cAAoB,OAAQ,CACzDe,cAAe,QACfC,eAAgB,QAChBC,EAAG,sDAEP,IAEA,K","sources":["components/pages/instructors/my-students.tsx","../node_modules/@heroicons/react/24/outline/esm/ChevronUpDownIcon.js"],"sourcesContent":["import {\r\n  MagnifyingGlassIcon,\r\n  ChevronUpDownIcon,\r\n} from \"@heroicons/react/24/outline\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  Input,\r\n  Typography,\r\n  Button,\r\n  CardBody,\r\n  Chip,\r\n  CardFooter,\r\n  Avatar,\r\n  IconButton\r\n} from \"@material-tailwind/react\";\r\nimport { getMyStudents } from \"../../../api/endpoints/instructor\";\r\nimport { useState, useEffect } from \"react\";\r\nimport usePagination from \"../../../hooks/usePagination\";\r\nimport { formatDate } from \"../../../utils/helpers\";\r\nimport { toast } from \"react-toastify\";\r\nimport { Students } from \"../../../api/types/student/student\";\r\nconst TABLE_HEAD = [\"Student\", \"Course\", \"Status\", \"Joined\"];\r\n\r\nconst MyStudents: React.FC = () => {\r\n  const [students, setStudents] = useState<Students[]>([]);\r\n  const ITEMS_PER_PAGE = 5;  \r\n  const {\r\n    currentPage,\r\n    totalPages,\r\n    currentData,\r\n    goToPage,\r\n    goToNextPage,\r\n    goToPreviousPage,\r\n  } = usePagination(students, ITEMS_PER_PAGE);\r\n  const fetchStudents = async () => {\r\n    try {\r\n      const response = await getMyStudents();\r\n      setStudents(response.data);\r\n    } catch (error) {\r\n      toast.error(\"Something went wrong\")\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchStudents();\r\n  }, []);\r\n  return (\r\n    <div className='pb-10'>\r\n      <Card className='h-full w-full'>\r\n        <CardHeader floated={false} shadow={false} className='rounded-none'>\r\n          <div className=' flex items-center justify-between gap-8'>\r\n            <div>\r\n              <Typography variant='h5' color='blue-gray'>\r\n                Students list\r\n              </Typography>\r\n              <Typography color='gray' className='mt-1 font-normal'>\r\n                See information about all students\r\n              </Typography>\r\n            </div>\r\n            <div className='flex shrink-0 flex-col gap-2 sm:flex-row'>\r\n              <Input\r\n                label='Search'\r\n                icon={<MagnifyingGlassIcon className='h-5 w-5' />}\r\n              />\r\n            </div>\r\n          </div>\r\n        </CardHeader>\r\n        <CardBody className='overflow-scroll px-0'>\r\n          <table className='mt-4 w-full min-w-max table-auto text-left'>\r\n            <thead>\r\n              <tr>\r\n                {TABLE_HEAD.map((head, index) => (\r\n                  <th\r\n                    key={head}\r\n                    className='cursor-pointer border-y border-blue-gray-100 bg-blue-gray-50/50 p-4 transition-colors hover:bg-blue-gray-50'\r\n                  >\r\n                    <Typography\r\n                      variant='small'\r\n                      color='blue-gray'\r\n                      className='flex items-center justify-between gap-2 font-normal leading-none opacity-70'\r\n                    >\r\n                      {head}{\" \"}\r\n                      {index !== TABLE_HEAD.length - 1 && (\r\n                        <ChevronUpDownIcon\r\n                          strokeWidth={2}\r\n                          className='h-4 w-4'\r\n                        />\r\n                      )}\r\n                    </Typography>\r\n                  </th>\r\n                ))}\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {currentData?.map(\r\n                (\r\n                  {\r\n                    _id,\r\n                    email,\r\n                    firstName,\r\n                    lastName,  \r\n                    course,\r\n                    mobile,\r\n                    isBlocked,\r\n                    isGoogleUser,\r\n                    dateJoined,\r\n                    profileUrl,\r\n                    profilePic\r\n                  },\r\n                  index\r\n                ) => {\r\n                  const isLast = index === students.length - 1;\r\n                  const classes = isLast\r\n                    ? \"p-4\"\r\n                    : \"p-4 border-b border-blue-gray-50\";\r\n   \r\n                  return (\r\n                    <tr key={index}>\r\n                      <td className={classes}>\r\n                        <div className='flex items-center gap-3'>\r\n                          <Avatar\r\n                            src={isGoogleUser?profilePic?.url:profileUrl}\r\n                            alt={\"image\"}  \r\n                            size='sm'\r\n                          />\r\n                          <div className='flex flex-col'>\r\n                            <Typography\r\n                              variant='small'\r\n                              color='blue-gray'\r\n                              className='font-normal'\r\n                            >\r\n                              {firstName + \" \" + lastName}\r\n                            </Typography>\r\n                            <Typography\r\n                              variant='small'\r\n                              color='blue-gray'\r\n                              className='font-normal opacity-70'\r\n                            >\r\n                              {email}\r\n                            </Typography>\r\n                          </div>\r\n                        </div>\r\n                      </td>\r\n                      <td className={classes}>\r\n                        <div className='flex flex-col'>\r\n                          <Typography\r\n                            variant='small'\r\n                            color='blue-gray'\r\n                            className='font-normal'\r\n                          >\r\n                            {course}\r\n                          </Typography>\r\n                        </div>\r\n                      </td>\r\n                      <td className={classes}>\r\n                        <div className='w-max'>\r\n                          <Chip\r\n                            variant='ghost'\r\n                            size='sm'\r\n                            value={!isBlocked ? \"active\" : \"blocked\"}\r\n                            color={isBlocked ? \"red\" : \"green\"}\r\n                          />\r\n                        </div>\r\n                      </td>\r\n                      <td className={classes}>\r\n                        <Typography\r\n                          variant='small'\r\n                          color='blue-gray'\r\n                          className='font-normal'\r\n                        >\r\n                          {formatDate(dateJoined)}\r\n                        </Typography>\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                }\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        </CardBody>\r\n        <CardFooter className='flex items-center justify-between border-t border-blue-gray-50 p-4'>\r\n        <Button\r\n          variant='outlined'\r\n          color='blue-gray'\r\n          size='sm'\r\n          onClick={goToPreviousPage}\r\n          disabled={currentPage === 1}\r\n        >\r\n          Previous\r\n        </Button>\r\n        <div className='flex items-center gap-2'>\r\n          {Array.from({ length: totalPages }, (_, index) => index + 1).map(\r\n            (pageNumber) => (\r\n              <IconButton\r\n                key={pageNumber}\r\n                variant={pageNumber === currentPage ? \"outlined\" : \"text\"}\r\n                color='blue-gray'\r\n                size='sm'\r\n                onClick={() => goToPage(pageNumber)}\r\n              >\r\n                {pageNumber}\r\n              </IconButton>\r\n            )\r\n          )}\r\n        </div>\r\n        <Button\r\n          variant='outlined'\r\n          color='blue-gray'\r\n          size='sm'\r\n          onClick={goToNextPage}\r\n          disabled={currentPage === totalPages}\r\n        >\r\n          Next\r\n        </Button>\r\n      </CardFooter>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyStudents;\r\n","import * as React from \"react\";\nfunction ChevronUpDownIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M8.25 15L12 18.75 15.75 15m-7.5-6L12 5.25 15.75 9\"\n  }));\n}\nconst ForwardRef = React.forwardRef(ChevronUpDownIcon);\nexport default ForwardRef;"],"names":["TABLE_HEAD","_useState","useState","_useState2","_slicedToArray","students","setStudents","_usePagination","usePagination","currentPage","totalPages","currentData","goToPage","goToNextPage","goToPreviousPage","fetchStudents","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_context","prev","next","getMyStudents","sent","data","t0","toast","error","stop","apply","arguments","useEffect","_jsx","className","children","_jsxs","Card","CardHeader","floated","shadow","Typography","variant","color","Input","label","icon","MagnifyingGlassIcon","CardBody","map","head","index","length","ChevronUpDownIcon","strokeWidth","_ref2","_id","email","firstName","lastName","course","isBlocked","mobile","isGoogleUser","dateJoined","profileUrl","profilePic","classes","Avatar","src","url","alt","size","Chip","value","formatDate","CardFooter","Button","onClick","disabled","Array","from","_","pageNumber","IconButton","ForwardRef","React","svgRef","title","titleId","props","_objectWithoutProperties","_excluded","Object","assign","xmlns","fill","viewBox","stroke","ref","id","strokeLinecap","strokeLinejoin","d"],"sourceRoot":""}