{"version":3,"file":"static/js/241.f50b8877.chunk.js","mappings":"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","sources":["components/pages/add-course/edit-course.tsx","validations/course/AddCourse.ts"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Formik, Field, Form, ErrorMessage} from \"formik\";\r\nimport { AddCourseValidationSchema } from \"../../../validations/course/AddCourse\";\r\nimport { Switch } from \"@material-tailwind/react\";\r\nimport { toast } from \"react-toastify\";\r\nimport { getIndividualCourse } from \"../../../api/endpoints/course/course\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { CourseInterface } from \"../../../types/course\";\r\nimport { ApiResponseCategory } from \"../../../api/types/apiResponses/api-response-category\";\r\nimport { getAllCategories } from \"../../../api/endpoints/category\";\r\nimport Modal from \"react-modal\";\r\nimport { Document, Page, pdfjs } from \"react-pdf\";\r\nimport { AiOutlineClose } from \"react-icons/ai\";\r\nimport { editCourse } from \"../../../api/endpoints/course/course\";\r\npdfjs.GlobalWorkerOptions.workerSrc = \"/path/to/pdf.worker.js\";\r\n\r\ninterface InitialValType {\r\n  title: string;\r\n  instructor: string;\r\n  about: string;\r\n  duration: string | number;\r\n  description: string;\r\n  requirements: string;\r\n  lessons: string;\r\n  category: string;\r\n  price: string | number;\r\n  tags: string;\r\n  syllabus: string;\r\n  level:string;\r\n  [key: string]: string | number;\r\n}\r\nconst initialValues: InitialValType = {\r\n  title: \"\",\r\n  instructor: \"\",\r\n  duration: \"\",\r\n  description: \"\",\r\n  requirements: \"\",\r\n  lessons: \"\",\r\n  category: \"\",\r\n  price: \"\",\r\n  tags: \"\",\r\n  about: \"\",\r\n  syllabus: \"\",\r\n  level:\"\"\r\n};\r\nconst levels = [\"easy\", \"medium\", \"hard\"];\r\nconst EditCourse: React.FC = () => {\r\n  const [paid, setPaid] = useState(false);\r\n  const [thumbnail, setThumbnail] = useState<File | null>(null);\r\n  const [guidelines, setGuidelines] = useState<File | null>(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [course, setCourse] = useState<CourseInterface | null>(null);\r\n  const { courseId } = useParams();\r\n  const [categories, setCategories] = useState<ApiResponseCategory[] | null>(\r\n    null\r\n  );\r\n  const [isThumbnailModalOpen, setIsThumbnailModalOpen] = useState(false);\r\n  const [isGuidelinesModalOpen, setIsGuidelinesModalOpen] = useState(false);\r\n  const fetchCategory = async () => {\r\n    try {\r\n      const response = await getAllCategories();\r\n      setCategories(response.data);\r\n    } catch (error) {\r\n      toast.error(\"something went wrong\");\r\n    }\r\n  };\r\n\r\n  const fetchCourse = async (courseId: string) => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await getIndividualCourse(courseId);\r\n      setCourse(response?.data?.data);\r\n      setLoading(false);\r\n    } catch (error) {\r\n      setLoading(false);\r\n      toast.error(\"something went wrong\");\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    if (course) {\r\n      initialValues.title = course.title;\r\n      initialValues.category = course.category;\r\n      initialValues.level=course.level\r\n      initialValues.description = course.description;\r\n      initialValues.duration = course.duration;\r\n      initialValues.tags = course.tags.join(\" \");\r\n      initialValues.price = course.price;  \r\n      initialValues.about = course.about;\r\n      initialValues.syllabus = course.syllabus.join(\"\");\r\n      initialValues.requirements = course.requirements.join(\"\");\r\n      setPaid(course.isPaid);\r\n    }\r\n  }, [course]);\r\n\r\n  const handleFormSubmit = async (values: any) => {\r\n    try {\r\n      const formData = new FormData();\r\n      guidelines && formData.append(\"files\", guidelines);\r\n      thumbnail && formData.append(\"files\", thumbnail);\r\n      Object.keys(values).forEach((key) => formData.append(key, values[key]));\r\n      const response = await editCourse(courseId ?? \"\", formData);\r\n      toast.success(response.data.message, {\r\n        position: toast.POSITION.BOTTOM_RIGHT,\r\n      });\r\n    } catch (error: any) {\r\n      toast.error(error.data.message, {\r\n        position: toast.POSITION.BOTTOM_RIGHT,\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchCategory();\r\n  }, []);\r\n  useEffect(() => {\r\n    if (courseId) {\r\n      fetchCourse(courseId);\r\n    }\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return <div>loading...</div>;\r\n  }\r\n\r\n  const handlePaid = () => {\r\n    setPaid(!paid);\r\n  };\r\n\r\n  const toggleThumbnailModal = () => {\r\n    setIsThumbnailModalOpen(!isThumbnailModalOpen);\r\n  };\r\n\r\n  const toggleGuidelinesModal = () => {\r\n    setIsGuidelinesModalOpen(!isGuidelinesModalOpen);\r\n  };\r\n\r\n  return (\r\n    <div className='mb-20'>\r\n      <div className='ml-12 pl-20'>\r\n        <h1 className='font-bold text-xl text-gray-800'>Edit Course</h1>\r\n      </div>\r\n      <Formik\r\n        initialValues={initialValues}\r\n        enableReinitialize\r\n        validationSchema={AddCourseValidationSchema}\r\n        onSubmit={handleFormSubmit}\r\n      >\r\n        <Form>\r\n          <div className='bg-white ml-32  rounded-lg border-2 border-gray-200 mr-32 mb-24 mt-2 p-5'>\r\n            <div className='flex  w-full justify-center mt-10 pt-3 space-x-14 '>\r\n              <div>\r\n                <div className='mb-3'>\r\n                  <label\r\n                    htmlFor='title'\r\n                    className='block text-sm font-medium leading-6 text-gray-900'\r\n                  >\r\n                    Title\r\n                  </label>\r\n                  <Field\r\n                    type='text'\r\n                    id='title'\r\n                    name='title'\r\n                    className='pl-2 block w-80 rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 focus:ring-2 focus:ring-inset focus:ring-indigo-700 focus-visible:outline-none focus-visible:ring-blue-600 sm:text-sm sm:leading-6'\r\n                  />\r\n                  <ErrorMessage\r\n                    name='title'\r\n                    component='div'\r\n                    className='text-red-500 text-sm'\r\n                  />\r\n                </div>\r\n\r\n                <div className='mb-3'>\r\n                  <label\r\n                    htmlFor='duration'\r\n                    className='block text-sm font-medium leading-6 text-gray-900'\r\n                  >\r\n                    Duration (in weeks)\r\n                  </label>\r\n                  <Field\r\n                    type='number'\r\n                    id='duration'\r\n                    name='duration'\r\n                    className='pl-2 block w-80 rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 focus:ring-2 focus:ring-inset focus:ring-indigo-700 focus-visible:outline-none focus-visible:ring-blue-600 sm:text-sm sm:leading-6'\r\n                  />\r\n                  <ErrorMessage\r\n                    name='duration'\r\n                    component='div'\r\n                    className='text-red-500 text-sm'\r\n                  />\r\n                </div>\r\n\r\n                <div className='mb-3'>\r\n                  <label\r\n                    htmlFor='category'\r\n                    className='block text-sm font-medium leading-6 text-gray-900'\r\n                  >\r\n                    Category\r\n                  </label>\r\n                  <Field\r\n                    as='select'\r\n                    id='category'\r\n                    name='category'\r\n                    className='pl-2 block w-80 rounded-md border-0 py-2.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 focus:ring-2 focus:ring-inset focus:ring-indigo-700 focus-visible:outline-none focus-visible:ring-blue-600 sm:text-sm sm:leading-6'\r\n                  >\r\n                    {categories?.map(({ _id, name }, index) => (\r\n                      <option value={name} key={_id}>\r\n                        {name}\r\n                      </option>\r\n                    ))}\r\n                  </Field>  \r\n                  <ErrorMessage\r\n                    name='category'\r\n                    component='div'\r\n                    className='text-red-500 text-sm'\r\n                  />\r\n                </div>\r\n\r\n                <div className='mb-3'>\r\n                  <label\r\n                    htmlFor='level'\r\n                    className='block text-sm font-medium leading-6 text-gray-900'\r\n                  >\r\n                    Level\r\n                  </label>\r\n                  <Field\r\n                    as='select'\r\n                    id='level'\r\n                    name='level'\r\n                    className='pl-2 block w-80 rounded-md border-0 py-2.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 focus:ring-2 focus:ring-inset focus:ring-indigo-700 focus-visible:outline-none focus-visible:ring-blue-600 sm:text-sm sm:leading-6'\r\n                  >\r\n                    {levels.map((level, index) => (\r\n                      <option key={index} value={level}>\r\n                        {level}\r\n                      </option>\r\n                    ))}\r\n                  </Field>\r\n                  <ErrorMessage\r\n                    name='level'\r\n                    component='div'\r\n                    className='text-red-500 text-sm'\r\n                  />\r\n                </div>\r\n                <div className='mb-3'>\r\n                  <label\r\n                    htmlFor='tags'\r\n                    className='block text-sm font-medium leading-6 text-gray-900'\r\n                  >\r\n                    Tags\r\n                  </label>\r\n                  <Field\r\n                    type='text'\r\n                    id='tags'\r\n                    name='tags'\r\n                    className='pl-2 block w-80 rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 focus:ring-2 focus:ring-inset focus:ring-indigo-700 focus-visible:outline-none focus-visible:ring-blue-600 sm:text-sm sm:leading-6'\r\n                  />\r\n                  <ErrorMessage\r\n                    name='tags'\r\n                    component='div'\r\n                    className='text-red-500 text-sm'\r\n                  />\r\n                </div>\r\n\r\n                <div className='mb-3'>\r\n                  <div className='mb-5 mt-2 pl-2 pt-5 '>\r\n                    <Switch\r\n                      id='auto-update'\r\n                      checked={paid}\r\n                      onChange={handlePaid}\r\n                      label='Paid'\r\n                    />\r\n                  </div>\r\n\r\n                  {paid && (\r\n                    <div className=''>\r\n                      <label\r\n                        htmlFor='price'\r\n                        className='block text-sm font-medium leading-6 text-gray-900'\r\n                      >\r\n                        Price\r\n                      </label>\r\n                      <Field\r\n                        type='number'\r\n                        id='price'\r\n                        name='price'\r\n                        className='pl-2 block w-80 rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 focus:ring-2 focus:ring-inset focus:ring-indigo-700 focus-visible:outline-none focus-visible:ring-blue-600 sm:text-sm sm:leading-6'\r\n                      />\r\n                      <ErrorMessage\r\n                        name='price'\r\n                        component='div'\r\n                        className='text-red-500 text-sm'\r\n                      />\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n              <div>\r\n                <div className='mb-2'>\r\n                  <label\r\n                    htmlFor='about'\r\n                    className='block text-sm font-medium leading-6 text-gray-900'\r\n                  >\r\n                    About\r\n                  </label>\r\n                  <Field\r\n                    as='textarea'\r\n                    id='about'\r\n                    name='about'\r\n                    rows={4}\r\n                    className='pl-2 block w-80 rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 focus:ring-2 focus:ring-inset focus:ring-indigo-700 focus-visible:outline-none focus-visible:ring-blue-600 sm:text-sm sm:leading-6'\r\n                  />\r\n                  <ErrorMessage\r\n                    name='about'\r\n                    component='div'\r\n                    className='text-red-500 text-sm'\r\n                  />\r\n                </div>\r\n                <div className='mb-2'>\r\n                  <label\r\n                    htmlFor='description'\r\n                    className='block text-sm font-medium leading-6 text-gray-900'\r\n                  >\r\n                    Description\r\n                  </label>\r\n                  <Field\r\n                    as='textarea'\r\n                    id='description'\r\n                    name='description'\r\n                    rows={4}\r\n                    className='pl-2 block w-80 rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 focus:ring-2 focus:ring-inset focus:ring-indigo-700 focus-visible:outline-none focus-visible:ring-blue-600 sm:text-sm sm:leading-6'\r\n                  />\r\n                  <ErrorMessage\r\n                    name='description'\r\n                    component='div'\r\n                    className='text-red-500 text-sm'\r\n                  />\r\n                </div>\r\n                <div className='mb-2'>\r\n                  <label\r\n                    htmlFor='syllabus'\r\n                    className='block text-sm font-medium leading-6 text-gray-900'\r\n                  >\r\n                    Syllabus\r\n                  </label>\r\n                  <Field\r\n                    as='textarea'\r\n                    id='syllabus'\r\n                    name='syllabus'\r\n                    rows={4}\r\n                    className='pl-2 block w-80 rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 focus:ring-2 focus:ring-inset focus:ring-indigo-700 focus-visible:outline-none focus-visible:ring-blue-600 sm:text-sm sm:leading-6'\r\n                  />\r\n                  <ErrorMessage\r\n                    name='syllabus'\r\n                    component='div'\r\n                    className='text-red-500 text-sm'\r\n                  />\r\n                </div>\r\n                <div className='mb-2'>\r\n                  <label\r\n                    htmlFor='syllabus'\r\n                    className='block text-sm font-medium leading-6 text-gray-900'\r\n                  >\r\n                    Requirements\r\n                  </label>\r\n                  <Field\r\n                    as='textarea'\r\n                    id='requirements'\r\n                    name='requirements'\r\n                    rows={4}\r\n                    className='pl-2 block w-80 rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 focus:ring-2 focus:ring-inset focus:ring-indigo-700 focus-visible:outline-none focus-visible:ring-blue-600 sm:text-sm sm:leading-6'\r\n                  />\r\n                  <ErrorMessage\r\n                    name='requirements'\r\n                    component='div'\r\n                    className='text-red-500 text-sm'\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className='flex w-full justify-center mt-14 pt-3 space-x-14'>\r\n              <div>\r\n                <div className='mb-2'>\r\n                  <label\r\n                    htmlFor='guidelines'\r\n                    className='block text-sm font-medium leading-6 text-gray-900'\r\n                  >\r\n                    Course guidelines\r\n                  </label>\r\n                  <input\r\n                    type='file'\r\n                    id='guidelines'\r\n                    name='guidelines'\r\n                    accept='application/pdf'\r\n                    onChange={(event) => {\r\n                      const file = event.target.files?.[0] || null;\r\n                      setGuidelines(file);\r\n                    }}\r\n                    className='pl-2 block w-80 rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 focus:ring-2 focus:ring-inset focus:ring-indigo-700 focus-visible:outline-none focus-visible:ring-blue-600 sm:text-sm sm:leading-6'\r\n                  />\r\n                  <ErrorMessage\r\n                    name='guidelines'\r\n                    component='div'\r\n                    className='text-red-500 text-sm'\r\n                  />\r\n                  {course?.guidelinesUrl && (\r\n                    <button\r\n                      type='button'\r\n                      onClick={toggleGuidelinesModal}\r\n                      className='mt-2'\r\n                    >\r\n                      View Guidelines PDF\r\n                    </button>\r\n                  )}\r\n                </div>\r\n              </div>\r\n\r\n              <div>\r\n                <div className='mb-2'>\r\n                  <label\r\n                    htmlFor='thumbnail'\r\n                    className='block text-sm font-medium leading-6 text-gray-900'\r\n                  >\r\n                    Thumbnail\r\n                  </label>\r\n                  <input\r\n                    type='file'\r\n                    id='thumbnail'\r\n                    name='thumbnail'\r\n                    accept='image/*'\r\n                    onChange={(event) => {\r\n                      const file = event.target.files?.[0] || null;\r\n                      setThumbnail(file);\r\n                    }}\r\n                    className='pl-2 block w-80 rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 focus:ring-2 focus:ring-inset focus:ring-indigo-700 focus-visible:outline-none focus-visible:ring-blue-600 sm:text-sm sm:leading-6'\r\n                  />\r\n                  <ErrorMessage\r\n                    name='thumbnail'\r\n                    component='div'\r\n                    className='text-red-500 text-sm'\r\n                  />\r\n                  {course?.thumbnailUrl && (\r\n                    <button\r\n                      type='button'\r\n                      onClick={toggleThumbnailModal}\r\n                      className='mt-2'\r\n                    >\r\n                      View Thumbnail\r\n                    </button>\r\n                  )}\r\n                </div>\r\n              </div>\r\n              <Modal\r\n                isOpen={isThumbnailModalOpen}\r\n                onRequestClose={toggleThumbnailModal}\r\n                contentLabel='Thumbnail Modal'\r\n              >\r\n                <button\r\n                  onClick={toggleThumbnailModal}\r\n                  className='absolute top-0 right-0 mt-3 mr-3 m-2 hover:bg-red-400 hover:text-white text-gray-600 '\r\n                >\r\n                  <AiOutlineClose />\r\n                </button>\r\n                {course?.thumbnailUrl && (\r\n                  <img\r\n                    src={\r\n                      thumbnail\r\n                        ? URL.createObjectURL(thumbnail)\r\n                        : course.thumbnailUrl\r\n                    }\r\n                    alt='Thumbnail'\r\n                    style={{ maxWidth: \"100%\", maxHeight: \"100%\" }}\r\n                  />\r\n                )}\r\n              </Modal>\r\n\r\n              <Modal\r\n                isOpen={isGuidelinesModalOpen}\r\n                onRequestClose={toggleGuidelinesModal}\r\n                contentLabel='Guidelines PDF Modal'\r\n              >\r\n                {guidelines && (\r\n                  <Document\r\n                    file={\r\n                      guidelines\r\n                        ? URL.createObjectURL(guidelines)\r\n                        : course?.guidelinesUrl\r\n                    }\r\n                  >\r\n                    <Page pageNumber={1} />\r\n                  </Document>\r\n                )}\r\n                <button onClick={toggleGuidelinesModal} className='mt-2'>\r\n                  Close Modal\r\n                </button>\r\n              </Modal>\r\n            </div>\r\n            <div className='flex justify-center  mt-8'>\r\n              <button\r\n                type='submit'\r\n                className='bg-blue-500 mt-5 text-white px-3 py-2 rounded-md'\r\n              >\r\n                Submit\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </Form>\r\n      </Formik>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditCourse;\r\n","import * as Yup from \"yup\";\r\nexport const AddCourseValidationSchema = Yup.object().shape({\r\n    title: Yup.string().required(\"Title is required\"),\r\n    duration: Yup.number()\r\n      .required(\"Duration is required\")\r\n      .positive(\"Duration must be a positive number\"),\r\n    \r\n    category: Yup.string().required(\"Category is required\"),\r\n    level:Yup.string().required(\"Level is required\"),\r\n    tags:Yup.string().required('Tags are required'),\r\n    about:Yup.string().required(\"About is required\"),\r\n    description: Yup.string().min(10,\"Description is too short\").required(\"Description is required\"),\r\n    syllabus:Yup.string().required(\"Syllabus is required\"),\r\n    requirements: Yup.string().required(\"requirements is required\"),\r\n    // price: Yup.number().when(\"paid\", {\r\n    //   is: true,\r\n    //   then: Yup.number().required(\"Price is required\") as any,\r\n    //   otherwise: Yup.number() as any,\r\n    // })\r\n    // thumbnail: Yup.mixed().required(\"Thumbnail is required\"),\r\n    // guidelines: Yup.mixed<CustomFile>().test(\r\n    //   \"fileFormat\",\r\n    //   \"Invalid file format. Only PDF files are allowed.\",\r\n    //   (value) => {\r\n    //     if (!value) return true; // If no file is selected, consider it valid\r\n  \r\n    //     const supportedFormats = [\"application/pdf\"];\r\n    //     return supportedFormats.includes(value.type);\r\n    //   }\r\n    // ),\r\n  });\r\n\r\n  interface CustomFile {\r\n    type: string;\r\n    size: number;\r\n    name: string;\r\n  }\r\n    \r\n export const QuizValidationSchema = Yup.object().shape({\r\n    questions: Yup.array().of(\r\n      Yup.object().shape({\r\n        question: Yup.string().required(\"Question is required\"),\r\n        options: Yup.array()\r\n          .of(\r\n            Yup.object().shape({\r\n              option: Yup.string().required(\"Option is required\"),\r\n              isCorrect: Yup.boolean().required(\"Specify if the option is correct\"),\r\n            })\r\n          )\r\n          .required(\"At least one option is required\"),\r\n      })\r\n    ),\r\n  });"],"names":["pdfjs","workerSrc","initialValues","title","instructor","duration","description","requirements","lessons","category","price","tags","about","syllabus","level","levels","_useState","useState","_useState2","_slicedToArray","paid","setPaid","_useState3","_useState4","thumbnail","setThumbnail","_useState5","_useState6","guidelines","setGuidelines","_useState7","_useState8","loading","setLoading","_useState9","_useState10","course","setCourse","courseId","useParams","_useState11","_useState12","categories","setCategories","_useState13","_useState14","isThumbnailModalOpen","setIsThumbnailModalOpen","_useState15","_useState16","isGuidelinesModalOpen","setIsGuidelinesModalOpen","fetchCategory","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_context","prev","next","getAllCategories","sent","data","t0","toast","error","stop","apply","arguments","fetchCourse","_ref2","_callee2","_response$data","_context2","getIndividualCourse","_x","useEffect","join","isPaid","handleFormSubmit","_ref3","_callee3","values","formData","_context3","FormData","append","Object","keys","forEach","key","editCourse","success","message","position","POSITION","BOTTOM_RIGHT","_x2","_jsx","children","toggleThumbnailModal","toggleGuidelinesModal","_jsxs","className","Formik","enableReinitialize","validationSchema","AddCourseValidationSchema","onSubmit","Form","htmlFor","Field","type","id","name","ErrorMessage","component","as","map","_ref4","index","_id","value","Switch","checked","onChange","label","rows","accept","event","_event$target$files","file","target","files","guidelinesUrl","onClick","_event$target$files2","thumbnailUrl","Modal","isOpen","onRequestClose","contentLabel","AiOutlineClose","src","URL","createObjectURL","alt","style","maxWidth","maxHeight","Document","Page","pageNumber","Yup","shape","required","positive","min","questions","of","question","options","option","isCorrect"],"sourceRoot":""}