{"version":3,"file":"static/js/150.83855709.chunk.js","mappings":"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","sources":["components/pages/student-dash/profile-from.tsx","components/pages/student-dash/chage-password-form.tsx","components/pages/student-dash/my-profile.tsx","validations/student.ts"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { useFormik } from \"formik\";\r\nimport { toast } from \"react-toastify\";\r\nimport { updateProfile } from \"../../../api/endpoints/student\";\r\nimport { UpdateProfileInfo } from \"../../../api/types/student/student\";\r\nimport { Avatar } from \"@material-tailwind/react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  selectStudent,\r\n  selectIsFetchingStudent,\r\n  selectStudentError,\r\n  fetchStudentData,\r\n} from \"../../../redux/reducers/studentSlice\";\r\nimport { USER_AVATAR } from \"../../../constants/common\";\r\n\r\ninterface Props {\r\n  editMode:boolean;\r\n  setEditMode:(val:boolean)=>void\r\n}\r\nconst ProfileForm:React.FC<Props> = ({editMode,setEditMode}) => {\r\n  const [previewImage, setPreviewImage] = useState<string | null>(null);\r\n  const studentInfo = useSelector(selectStudent)?.studentDetails;\r\n  let isFetching = useSelector(selectIsFetchingStudent);\r\n  const [loading, setLoading] = useState(false);\r\n  const error = useSelector(selectStudentError);\r\n  const [updated, setUpdated] = useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleFileChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const file = event.target.files?.[0];\r\n    if (file) {\r\n      const reader = new FileReader();\r\n      reader.onloadend = () => {\r\n        setPreviewImage(reader.result as string);\r\n      };\r\n      reader.readAsDataURL(file);\r\n      formik.setFieldValue(\"profilePic\", file);\r\n    } else {\r\n      setPreviewImage(null);\r\n      formik.setFieldValue(\"profilePic\", null);\r\n    }\r\n  };\r\n \r\n  useEffect(() =>{\r\n    dispatch(fetchStudentData());\r\n  }, [updated]);\r\n\r\n  useEffect(() => {\r\n    if (!studentInfo) {\r\n      setLoading(true);\r\n    } else {\r\n      setLoading(false);\r\n    }\r\n  }, [studentInfo]);\r\n\r\n  const handleSubmit = async (profileInfo: UpdateProfileInfo) => {\r\n    try {\r\n      const formData = new FormData();\r\n      if (profileInfo.profilePic) {\r\n        formData.append(\"image\", profileInfo.profilePic);\r\n      }\r\n      formData.append(\"email\", profileInfo.email || \"\");\r\n      formData.append(\"firstName\", profileInfo.firstName || \"\");     \r\n      formData.append(\"lastName\", profileInfo.lastName || \"\");\r\n      formData.append(\"mobile\", profileInfo.mobile || \"\");\r\n\r\n      const response = await updateProfile(formData);\r\n      // formik.resetForm();\r\n      setPreviewImage(null);\r\n      const fileInput = document.getElementById(\r\n        \"file_input\"\r\n      ) as HTMLInputElement;\r\n      if (fileInput) {\r\n        fileInput.value = \"\";\r\n      }\r\n      setUpdated(!updated);\r\n      setEditMode(false);\r\n      toast.success(response?.data?.message, {\r\n        position: toast.POSITION.BOTTOM_RIGHT,\r\n      });\r\n    } catch (error: any) {\r\n      setUpdated(!updated);\r\n      toast.error(error?.data?.message, {\r\n        position: toast.POSITION.BOTTOM_RIGHT,\r\n      });\r\n    }\r\n  };\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      email: studentInfo?.email || \"\",\r\n      firstName: studentInfo?.firstName || \"\",\r\n      lastName: studentInfo?.lastName || \"\",\r\n      mobile: studentInfo?.mobile || \"\",\r\n    },\r\n    onSubmit: (values) => {\r\n      handleSubmit(values);\r\n    },\r\n  });\r\n\r\n  // if (isFetching) {\r\n  //   return <div>Loading...</div>;\r\n  // }\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  // if (error) {\r\n  //   return <div>Error: {error}</div>;\r\n  // }\r\n\r\n  // if (!studentInfo) {\r\n  //   return <div>loading...</div>\r\n  // }\r\n\r\n  return (\r\n    <form onSubmit={formik.handleSubmit}>\r\n      <div>\r\n      </div>\r\n      <div className='p-5 flex '>\r\n        <Avatar\r\n          src={previewImage || studentInfo?.profilePic.url  ||USER_AVATAR}\r\n          alt='avatar'\r\n          size='xl'\r\n        />\r\n        <div className='pl-4'>\r\n          <label\r\n            className='block mb-2 text-sm font-medium text-gray-900 dark:text-white'\r\n            htmlFor='file_input'\r\n          >\r\n            Upload profile photo\r\n          </label>\r\n          <input\r\n            className='block w-full text-sm text-gray-900 border border-gray-300 rounded-lg cursor-pointer bg-gray-50 dark:text-gray-400 focus:outline-none dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400'\r\n            id='file_input'\r\n            onChange={handleFileChange}\r\n            type='file'\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className='grid md:grid-cols-2 md:gap-6'>\r\n        <div className='relative z-0 w-full mb-6 group'>\r\n          <input\r\n            type='text'\r\n            name='firstName'\r\n            id='floating_first_name'\r\n            value={formik.values.firstName}\r\n            onChange={formik.handleChange}\r\n            disabled={!editMode}\r\n            onBlur={formik.handleBlur}\r\n            className='block py-2.5 px-0 w-full text-sm text-gray-900 bg-transparent border-0 border-b-2 border-gray-300 appearance-none dark:text-white dark:border-gray-600 dark:focus:border-blue-500 focus:outline-none focus:ring-0 focus:border-blue-600 peer'\r\n            placeholder=' '\r\n            required\r\n          />\r\n          <label\r\n            htmlFor='floating_first_name'\r\n            className={`peer-focus:font-medium absolute text-sm text-gray-500 dark:text-gray-400 duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] ${\r\n              formik.values.firstName ? \"peer-placeholder-shown:scale-100\" : \"\"\r\n            } peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6`}\r\n          >\r\n            First name\r\n          </label>\r\n        </div>\r\n        <div className='relative z-0 w-full mb-6 group'>\r\n          <input\r\n            type='text'\r\n            name='lastName'\r\n            id='floating_last_name'\r\n            value={formik.values.lastName}\r\n            onChange={formik.handleChange}\r\n            onBlur={formik.handleBlur}\r\n            disabled={!editMode}\r\n            className='block py-2.5 px-0 w-full text-sm text-gray-900 bg-transparent border-0 border-b-2 border-gray-300 appearance-none dark:text-white dark:border-gray-600 dark:focus:border-blue-500 focus:outline-none focus:ring-0 focus:border-blue-600 peer'\r\n            placeholder=' '\r\n            required\r\n          />\r\n          <label\r\n            htmlFor='floating_last_name'\r\n            className={`peer-focus:font-medium absolute text-sm text-gray-500 dark:text-gray-400 duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] ${\r\n              formik.values.lastName ? \"peer-placeholder-shown:scale-100\" : \"\"\r\n            } peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6`}\r\n          >\r\n            Last name\r\n          </label>\r\n        </div>\r\n      </div>\r\n      <div className='relative z-0 w-full mb-6 group'>\r\n        <input\r\n          type='email'\r\n          name='email'\r\n          id='floating_email'\r\n          disabled={!editMode}\r\n          value={formik.values.email}\r\n          onChange={formik.handleChange}\r\n          onBlur={formik.handleBlur}\r\n          className='block py-2.5 px-0 w-full text-sm text-gray-900 bg-transparent border-0 border-b-2 border-gray-300 appearance-none dark:text-white dark:border-gray-600 dark:focus:border-blue-500 focus:outline-none focus:ring-0 focus:border-blue-600 peer'\r\n          placeholder=' '\r\n          required\r\n        />\r\n        <label\r\n          htmlFor='floating_email'\r\n          className={`peer-focus:font-medium absolute text-sm text-gray-500 dark:text-gray-400 duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] ${\r\n            formik.values.email ? \"peer-placeholder-shown:scale-100\" : \"\"\r\n          } peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6`}\r\n        >\r\n          Email address\r\n        </label>\r\n      </div>\r\n      <div className='relative z-0 w-full mb-6 group'>\r\n        <input\r\n          type='text'\r\n          name='mobile'\r\n          id='floating_phone'\r\n          disabled={!editMode}\r\n          value={formik.values.mobile}\r\n          onChange={formik.handleChange}\r\n          onBlur={formik.handleBlur}\r\n          className='block py-2.5 px-0 w-full text-sm text-gray-900 bg-transparent border-0 border-b-2 border-gray-300 appearance-none dark:text-white dark:border-gray-600 dark:focus:border-blue-500 focus:outline-none focus:ring-0 focus:border-blue-600 peer'\r\n          placeholder=' '\r\n          required\r\n        />\r\n        <label\r\n          htmlFor='floating_phone'\r\n          className={`peer-focus:font-medium absolute text-sm text-gray-500 dark:text-gray-400 duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] ${\r\n            formik.values.mobile ? \"peer-placeholder-shown:scale-100\" : \"\"\r\n          } peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6`}\r\n        >\r\n          Mobile\r\n        </label>\r\n      </div>\r\n      <div className='relative pt-10 pr-1'>\r\n        {editMode && (\r\n          <button\r\n            type={\"submit\"}\r\n            className='text-white absolute bottom-0 right-0  bg-blue-500 hover:bg-blue-600 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm w-full sm:w-auto px-5 py-2.5 text-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800'\r\n          >\r\n            Update\r\n          </button>\r\n        )}\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ProfileForm;\r\n","import { useState } from \"react\";\r\nimport { useFormik } from \"formik\";\r\nimport { changePassword } from \"../../../api/endpoints/student\";\r\nimport { toast } from \"react-toastify\";\r\nimport { PasswordInfo } from \"../../../api/types/student/student\";\r\nimport { PasswordValidationSchema } from \"../../../validations/student\";\r\nimport { AiOutlineEye, AiOutlineEyeInvisible } from \"react-icons/ai\";\r\nconst ChangePasswordForm = () => {\r\n  const [showCurrentPassword, setShowCurrentPassword] = useState(false);\r\n  const [showNewPassword, setShowNewPassword] = useState(false);\r\n  const [showRepeatPassword, setShowRepeatPassword] = useState(false);\r\n\r\n  const handleSubmit = async (passwordInfo: PasswordInfo) => {\r\n    try {\r\n      const response = await changePassword(passwordInfo);\r\n      response?.data?.status === \"success\" && formik.resetForm();\r\n      toast.success(response?.data?.message, {\r\n        position: toast.POSITION.BOTTOM_RIGHT,\r\n      });\r\n    } catch (error: any) {\r\n      toast.error(error?.data?.message, {\r\n        position: toast.POSITION.BOTTOM_RIGHT,\r\n      });\r\n    }\r\n  };\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      currentPassword: \"\",\r\n      newPassword: \"\",\r\n      repeatPassword: \"\",\r\n    },\r\n    validationSchema: PasswordValidationSchema,\r\n    onSubmit: (values) => {\r\n      handleSubmit(values);\r\n    },\r\n  });\r\n  \r\n\r\n  const togglePasswordVisibility = (field: string) => {\r\n    switch (field) {\r\n      case \"currentPassword\":\r\n        setShowCurrentPassword(!showCurrentPassword);\r\n        break;\r\n      case \"newPassword\":\r\n        setShowNewPassword(!showNewPassword);\r\n        break;\r\n      case \"repeatPassword\":\r\n        setShowRepeatPassword(!showRepeatPassword);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const getPasswordInputType = (field: string) => {\r\n    switch (field) {\r\n      case \"currentPassword\":\r\n        return showCurrentPassword ? \"text\" : \"password\";\r\n      case \"newPassword\":\r\n        return showNewPassword ? \"text\" : \"password\";\r\n      case \"repeatPassword\":\r\n        return showRepeatPassword ? \"text\" : \"password\";\r\n      default:\r\n        return \"password\";\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <form onSubmit={formik.handleSubmit}>\r\n      <div className='relative z-0 w-full mb-6 group'>\r\n        <input\r\n          type={getPasswordInputType(\"currentPassword\")}\r\n          name='currentPassword'\r\n          id='floating_current_password'\r\n          value={formik.values.currentPassword}\r\n          onChange={formik.handleChange}\r\n          onBlur={formik.handleBlur}\r\n          className={`block py-2.5 px-0 w-full text-sm text-gray-900 bg-transparent border-0 border-b-2 border-gray-300 appearance-none dark:text-white dark:border-gray-600 dark:focus:border-blue-500 focus:outline-none focus:ring-0 focus:border-blue-600 peer ${\r\n            formik.touched.currentPassword && formik.errors.currentPassword\r\n              ? \"border-red-500\"\r\n              : \"\"\r\n          }`}\r\n          placeholder=' '\r\n        />\r\n        {formik.touched.currentPassword && formik.errors.currentPassword && (\r\n          <div className='text-red-500 text-xs mt-1'>\r\n            {formik.errors.currentPassword}\r\n          </div>\r\n        )}\r\n        <label\r\n          htmlFor='floating_email'\r\n          className={`peer-focus:font-medium absolute text-sm text-gray-500 dark:text-gray-400 duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] ${\r\n            formik.values.currentPassword\r\n              ? \"peer-placeholder-shown:scale-100\"\r\n              : \"\"\r\n          } peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6`}\r\n        >\r\n          Current Password\r\n        </label>\r\n        <button\r\n          type='button'\r\n          className='absolute right-0 top-2/4 transform -translate-y-2/4 mr-2 focus:outline-none'\r\n          onClick={() => togglePasswordVisibility(\"currentPassword\")}\r\n        >\r\n          {showCurrentPassword ? (\r\n            <AiOutlineEyeInvisible className='text-gray-500' />\r\n          ) : (\r\n            <AiOutlineEye className='text-gray-500' />\r\n          )}\r\n        </button>\r\n      </div>\r\n      <div className='relative z-0 w-full mb-6 group'>\r\n        <input\r\n          type={getPasswordInputType(\"newPassword\")}\r\n          name='newPassword'\r\n          id='floating_password'\r\n          value={formik.values.newPassword}\r\n          onChange={formik.handleChange}\r\n          onBlur={formik.handleBlur}\r\n          className={`block py-2.5 px-0 w-full text-sm text-gray-900 bg-transparent border-0 border-b-2 border-gray-300 appearance-none dark:text-white dark:border-gray-600 dark:focus:border-blue-500 focus:outline-none focus:ring-0 focus:border-blue-600 peer ${\r\n            formik.touched.newPassword && formik.errors.newPassword\r\n              ? \"border-red-500\"\r\n              : \"\"\r\n          }`}\r\n          placeholder=' '\r\n        />\r\n        {formik.touched.newPassword && formik.errors.newPassword && (\r\n          <div className='text-red-500 text-xs mt-1'>\r\n            {formik.errors.newPassword}\r\n          </div>\r\n        )}\r\n        <label\r\n          htmlFor='floating_password'\r\n          className={`peer-focus:font-medium absolute text-sm text-gray-500 dark:text-gray-400 duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] ${\r\n            formik.values.newPassword ? \"peer-placeholder-shown:scale-100\" : \"\"\r\n          } peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6`}\r\n        >\r\n          Password\r\n        </label>\r\n        <button\r\n          type='button'\r\n          className='absolute right-0 top-2/4 transform -translate-y-2/4 mr-2 focus:outline-none'\r\n          onClick={() => togglePasswordVisibility(\"newPassword\")}\r\n        >\r\n          {showNewPassword ? (\r\n            <AiOutlineEyeInvisible className='text-gray-500' />\r\n          ) : (\r\n            <AiOutlineEye className='text-gray-500' />\r\n          )}\r\n        </button>\r\n      </div>\r\n      <div className='relative z-0 w-full mb-6 group'>\r\n        <input\r\n          type={getPasswordInputType(\"repeatPassword\")}\r\n          name='repeatPassword'\r\n          id='floating_repeat_password'\r\n          value={formik.values.repeatPassword}\r\n          onChange={formik.handleChange}\r\n          onBlur={formik.handleBlur}\r\n          className={`block py-2.5 px-0 w-full text-sm text-gray-900 bg-transparent border-0 border-b-2 border-gray-300 appearance-none dark:text-white dark:border-gray-600 dark:focus:border-blue-500 focus:outline-none focus:ring-0 focus:border-blue-600 peer ${\r\n            formik.touched.repeatPassword && formik.errors.repeatPassword\r\n              ? \"border-red-500\"\r\n              : \"\"\r\n          }`}\r\n          placeholder=' '\r\n        />\r\n        {formik.touched.repeatPassword && formik.errors.repeatPassword && (\r\n          <div className='text-red-500 text-xs mt-1'>\r\n            {formik.errors.repeatPassword}\r\n          </div>\r\n        )}\r\n        <label\r\n          htmlFor='floating_repeat_password'\r\n          className={`peer-focus:font-medium absolute text-sm text-gray-500 dark:text-gray-400 duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] ${\r\n            formik.values.repeatPassword\r\n              ? \"peer-placeholder-shown:scale-100\"\r\n              : \"\"\r\n          } peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6`}\r\n        >\r\n          Confirm password\r\n        </label>\r\n        <button\r\n          type='button'\r\n          className='absolute right-0 top-2/4 transform -translate-y-2/4 mr-2 focus:outline-none'\r\n          onClick={() => togglePasswordVisibility(\"repeatPassword\")}\r\n        >\r\n          {showRepeatPassword ? (\r\n            <AiOutlineEyeInvisible className='text-gray-500' />\r\n          ) : (\r\n            <AiOutlineEye className='text-gray-500' />\r\n          )}\r\n        </button>\r\n      </div>\r\n      <div className='relative pt-14 pr-1'>\r\n        <button\r\n          type='submit'   \r\n          className='text-white absolute bottom-0 right-0 bg-blue-500 hover:bg-blue-600 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm w-full sm:w-auto px-5 py-2.5 text-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800'\r\n        >\r\n          Reset  \r\n        </button>  \r\n      </div>\r\n    </form>\r\n  );  \r\n};\r\n\r\nexport default ChangePasswordForm;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport ProfileForm from \"./profile-from\";\r\nimport ChangePasswordForm from \"./chage-password-form\";\r\nimport { fetchStudentData } from \"../../../redux/reducers/studentSlice\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { FiEdit } from \"react-icons/fi\";\r\n\r\ntype Props = {};\r\n\r\nconst MyProfile: React.FC = (props: Props) => {\r\n  const dispatch = useDispatch();\r\n  const [editMode, setEditMode] = useState(false);\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchStudentData());\r\n  }, [dispatch]);\r\n\r\n  const handleEditClick = () => {\r\n    setEditMode(true);  \r\n  };\r\n\r\n  return (\r\n    <div className='w-full flex justify-center items-center'>\r\n      <div className='w-11/12'>\r\n        <div>\r\n          <div className='pt-5 pb-6 w-full'>\r\n            <h2 className='text-3xl font-semibold text-customFontColorBlack'>\r\n              Edit profile info\r\n            </h2>\r\n          </div>\r\n        </div>\r\n        <div className='flex flex-col md:flex-row gap-x-10 h-full pb-10'>\r\n          <div className='border md:w-7/12 w-full h-full rounded-md bg-white border-gray-300'>\r\n            <div className='flex justify-between'>\r\n              <h3 className='pl-5 pt-5 text-lg text-customFontColorBlack font-semibold'>\r\n                Account Info\r\n              </h3>\r\n              <div>\r\n                <button className='p-5' onClick={handleEditClick}>\r\n                  <FiEdit className='text-customFontColorBlack text-lg' />\r\n                </button>\r\n              </div>  \r\n            </div>\r\n            <div className='p-6'>\r\n              <ProfileForm editMode={editMode} setEditMode={setEditMode} />\r\n            </div>  \r\n          </div>   \r\n          <div className='border my-7 md:mt-0 pt-5 pb-10 md:w-5/12 w-full h-full rounded-md bg-white border-gray-300'>\r\n            <h3 className='pl-5 text-lg text-customFontColorBlack font-semibold'>\r\n              Change password\r\n            </h3>\r\n            <div className='p-6'>\r\n              <ChangePasswordForm />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyProfile;\r\n","import * as Yup from \"yup\";\r\n\r\nexport const PasswordValidationSchema = Yup.object().shape({\r\n    currentPassword: Yup.string().required('Current password is required'),\r\n    newPassword: Yup.string()\r\n      .required('New password is required')\r\n      .min(8, 'Password must be at least 8 characters'),\r\n    repeatPassword: Yup.string()\r\n      .required('Confirm password is required')\r\n      .test('password-match', 'Passwords must match', function (value) {\r\n        return value === this.parent.newPassword;\r\n      }),\r\n  });"],"names":["_ref","_useSelector","editMode","setEditMode","_useState","useState","_useState2","_slicedToArray","previewImage","setPreviewImage","studentInfo","useSelector","selectStudent","studentDetails","_useState3","selectIsFetchingStudent","_useState4","loading","setLoading","_useState5","selectStudentError","_useState6","updated","setUpdated","dispatch","useDispatch","useEffect","fetchStudentData","handleSubmit","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","profileInfo","_response$data","formData","response","fileInput","_error$data","wrap","_context","prev","next","FormData","profilePic","append","email","firstName","lastName","mobile","updateProfile","sent","document","getElementById","value","toast","success","data","message","position","POSITION","BOTTOM_RIGHT","t0","error","stop","_x","apply","arguments","formik","useFormik","initialValues","onSubmit","values","_jsx","children","_jsxs","className","Avatar","src","url","USER_AVATAR","alt","size","htmlFor","id","onChange","event","_event$target$files","file","target","files","reader","FileReader","onloadend","result","readAsDataURL","setFieldValue","type","name","handleChange","disabled","onBlur","handleBlur","placeholder","required","concat","showCurrentPassword","setShowCurrentPassword","showNewPassword","setShowNewPassword","showRepeatPassword","setShowRepeatPassword","passwordInfo","_response$data2","changePassword","status","resetForm","currentPassword","newPassword","repeatPassword","validationSchema","PasswordValidationSchema","togglePasswordVisibility","field","getPasswordInputType","touched","errors","onClick","AiOutlineEyeInvisible","AiOutlineEye","props","FiEdit","ProfileForm","ChangePasswordForm","Yup","shape","min","test","this","parent"],"sourceRoot":""}