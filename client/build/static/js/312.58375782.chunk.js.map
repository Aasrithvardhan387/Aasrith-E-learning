{"version":3,"file":"static/js/312.58375782.chunk.js","mappings":"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","sources":["components/pages/admin/revenue-chart.tsx","components/pages/admin/trending-chart.tsx","components/pages/admin/progress-chart.tsx","api/services/dashboard-data-service.ts","components/pages/admin/admin-home-page.tsx","api/endpoints/dashboard-data.ts"],"sourcesContent":["import React from 'react';\r\nimport ReactApexChart from 'react-apexcharts';\r\nimport { ApexOptions } from 'apexcharts';\r\n\r\ninterface DataPoint {\r\n  month: string;\r\n  revenue: number;\r\n  coursesAdded: number;\r\n  coursesEnrolled: number;\r\n}\r\n\r\ninterface Props {\r\n  data: DataPoint[];\r\n}\r\n\r\nconst RevenueChart: React.FC<Props> = ({ data }) => {\r\n  const chartOptions: Partial<ApexOptions> = {\r\n    chart: {\r\n      id: 'revenue-chart',\r\n      animations: {\r\n        enabled: true,\r\n        easing: 'linear',\r\n        speed: 300,\r\n      },\r\n    },\r\n    xaxis: {\r\n      categories: data.map((d) => d.month),\r\n    },\r\n    yaxis: {\r\n      title: {\r\n        text: 'Amount',\r\n      },\r\n    },\r\n    stroke: {\r\n      curve: 'smooth',\r\n    },\r\n  };\r\n\r\n  const chartSeries = [\r\n    {\r\n      name: 'Monthly Revenue',\r\n      data: data.map((d) => d.revenue),\r\n    },\r\n    {\r\n      name: 'Courses Added',\r\n      data: data.map((d) => d.coursesAdded),\r\n    },\r\n    {\r\n      name: 'Courses Enrolled',\r\n      data: data.map((d) => d.coursesEnrolled),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"bg-white p-4 shadow rounded-md\">\r\n      <ReactApexChart\r\n        options={chartOptions}\r\n        series={chartSeries}\r\n        type=\"line\"\r\n        height={300}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RevenueChart;\r\n","import React from 'react';\r\nimport ReactApexChart from 'react-apexcharts';\r\nimport { ApexOptions } from 'apexcharts';\r\n\r\ninterface CourseData {\r\n  title: string;\r\n  enrolled: number;\r\n}\r\n\r\ninterface Props {\r\n  data: CourseData[];\r\n}\r\n\r\nconst TrendingCoursesChart: React.FC<Props> = ({ data }) => {\r\n  const sortedData = data.sort((a, b) => b.enrolled - a.enrolled).slice(0, 5);\r\n\r\n  const chartOptions: Partial<ApexOptions> = {\r\n    chart: {\r\n      id: 'trending-courses-chart',\r\n    },\r\n    xaxis: {\r\n      categories: sortedData.map((course) => course.title),\r\n      labels: {\r\n        show: false,\r\n      },\r\n    },\r\n    yaxis: {\r\n      title: {\r\n        text: 'Enrollment Count',\r\n      },\r\n    },\r\n    plotOptions: {\r\n      bar: {\r\n        horizontal: false,\r\n        columnWidth:35,\r\n      },\r\n    },\r\n  };\r\n\r\n  const chartSeries = [\r\n    {\r\n      name: 'Enrollment Count',\r\n      data: sortedData.map((course) => course.enrolled),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"bg-white p-4 shadow rounded-md\">\r\n      <ReactApexChart\r\n        options={chartOptions}\r\n        series={chartSeries}\r\n        type=\"bar\" \r\n        height={255}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TrendingCoursesChart;\r\n","import React from 'react';\r\nimport ReactApexChart from 'react-apexcharts';\r\n\r\ninterface CourseCategory {\r\n  _id: string;\r\n  name: string;\r\n  courseCount: number;\r\n}\r\n\r\ninterface Props {\r\n  data: CourseCategory[];\r\n}\r\n\r\nconst CourseCategoryChart: React.FC<Props> = ({ data }) => {\r\n  const categoryNames = data.map((category) => category.name);\r\n  const courseCounts = data.map((category) => category.courseCount);\r\n\r\n  const donutChartOptions: ApexCharts.ApexOptions = {\r\n    chart: {\r\n      id: 'course-category-donut-chart',\r\n      type: 'donut',\r\n    },\r\n    plotOptions: {\r\n      pie: {\r\n        donut: {\r\n          size: '65%',\r\n        },\r\n      },\r\n    },\r\n    labels: categoryNames,\r\n    legend: {\r\n      show: true,\r\n      position: 'bottom',\r\n      horizontalAlign: 'center',\r\n    },\r\n  };\r\n\r\n  const donutChartSeries:any = courseCounts;\r\n\r\n  return (\r\n    <div className=\"bg-white p-4 shadow rounded-md\">\r\n      <ReactApexChart options={donutChartOptions} series={donutChartSeries} type=\"donut\" height={300} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CourseCategoryChart;\r\n","import CONFIG_KEYS from \"../../config\";\r\nimport api from \"../middlewares/protected-interceptor\";\r\n\r\nexport const getDashBoardDataService = async (endpoint: string) => {\r\n  const response = await api.get(\r\n    `${CONFIG_KEYS.API_BASE_URL}/${endpoint}`\r\n  );\r\n  return response.data\r\n};\r\n\r\nexport const getGraphDataService = async (endpoint: string) => {\r\n  const response = await api.get(\r\n    `${CONFIG_KEYS.API_BASE_URL}/${endpoint}`\r\n  );\r\n  return response.data\r\n};","import React, { useState, useEffect } from \"react\";\r\nimport RevenueChart from \"./revenue-chart\";\r\nimport TrendingCoursesChart from \"./trending-chart\";\r\nimport CourseCategoryChart from \"./progress-chart\";\r\nimport { Typography } from \"@material-tailwind/react\";\r\nimport { FaRupeeSign } from \"react-icons/fa\";\r\nimport {\r\n  AiOutlineUser,\r\n  AiOutlineBook,\r\n  AiOutlineUsergroupAdd,\r\n} from \"react-icons/ai\";\r\nimport {\r\n  getDashboardData,\r\n  getGraphData,\r\n} from \"../../../api/endpoints/dashboard-data\";\r\nimport {\r\n  DashData,\r\n  GraphData,\r\n} from \"../../../api/types/apiResponses/api-response-dash\";\r\nimport { formatToINR } from \"../../../utils/helpers\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst AdminHomePage: React.FC = () => {\r\n  const [dashboardData, seDashboardData] = useState<DashData | null>(null);\r\n  const [graphData, setGraphData] = useState<GraphData | null>(null);\r\n  const fetchDashboardDetails = async () => {\r\n    try {\r\n      const response = await getDashboardData();\r\n      seDashboardData(response.data);\r\n    } catch (error) {\r\n      toast.error(\"Something went wrong\")\r\n    }\r\n  };\r\n\r\n  const fetchGraphData = async () => {\r\n    try {\r\n      const response = await getGraphData();\r\n      setGraphData(response.data);\r\n    } catch (error) {\r\n      toast.error(\"Something went wrong\")\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    fetchDashboardDetails();\r\n    fetchGraphData();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=' pl-1'>\r\n      <div className='ml-3 mr-3 flex items-center justify-between'>\r\n        <div className='bg-white flex-1 rounded-md pb-5 pr-5 pl-5 border shadow-sm border-gray-200 mr-4'>\r\n          <div className='flex items-center '>\r\n            <FaRupeeSign size={26} className='text-green-500 mr-3' />\r\n            <div>\r\n              <Typography variant='h6' color='blue-gray' className='pt-2 '>\r\n                Monthly revenue\r\n              </Typography>\r\n              <Typography variant='body' color='gray'>\r\n                {formatToINR(dashboardData?.monthlyRevenue ?? 0)}\r\n              </Typography>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className='bg-white flex-1 rounded-md pb-5 pr-5 pl-5 shadow-sm border border-gray-200 mr-4'>\r\n          <div className='flex items-center'>\r\n            <AiOutlineBook size={26} className='text-blue-500 mr-3' />\r\n            <div>\r\n              <Typography variant='h6' color='blue-gray' className='pt-2 '>\r\n                Courses\r\n              </Typography>\r\n              <Typography variant='body' color='gray'>\r\n                {dashboardData?.numberOfCourses}\r\n              </Typography>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className='bg-white flex-1 rounded-md pb-5 shadow-sm pr-5 pl-5 border border-gray-200 mr-4'>\r\n          <div className='flex items-center'>\r\n            <AiOutlineUser size={26} className='text-yellow-500 mr-3' />\r\n            <div>\r\n              <Typography variant='h6' color='blue-gray' className='pt-2 '>\r\n                Instructors\r\n              </Typography>\r\n              <Typography variant='body' color='gray'>\r\n                {dashboardData?.numberInstructors}\r\n              </Typography>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className='bg-white flex-1 rounded-md pb-5 shadow-sm pr-5 pl-5 border border-gray-200'>\r\n          <div className='flex items-center'>\r\n            <AiOutlineUsergroupAdd size={26} className='text-red-500 mr-3' />\r\n            <div>\r\n              <Typography variant='h6' color='blue-gray' className='pt-2 '>\r\n                Students\r\n              </Typography>\r\n              <Typography variant='body' color='gray'>\r\n                {dashboardData?.numberOfStudents}\r\n              </Typography>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className='py-5 px-4'>\r\n        <Typography variant='h3' color='blue-gray' className='mb-4'>\r\n          Monthly Revenue Chart\r\n        </Typography>\r\n        <RevenueChart data={graphData?.revenue ?? []} />\r\n      </div>\r\n      <div className='flex items-center '>\r\n        <div className='py-5 px-4 w-6/12'>\r\n          <Typography variant='h4' color='blue-gray' className='mb-4'>\r\n            Trending Courses\r\n          </Typography>\r\n          <TrendingCoursesChart data={graphData?.trendingCourses??[]} />\r\n        </div>\r\n        <div className='px-4 w-6/12'>\r\n          <Typography variant='h4' color='blue-gray' className='mb-4'>\r\n            Categories\r\n          </Typography>\r\n          <CourseCategoryChart data={graphData?.courseByCategory??[]} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminHomePage;\r\n","import {\r\n  getDashBoardDataService,\r\n  getGraphDataService,\r\n} from \"../services/dashboard-data-service\";\r\nimport END_POINTS from \"../../constants/endpoints\";\r\n\r\nexport const getDashboardData = () => {\r\n  return getDashBoardDataService(END_POINTS.ADMIN_DASHBOARD_DATA);\r\n};\r\n\r\nexport const getGraphData = () => {\r\n  return getGraphDataService(END_POINTS.GET_GRAPH_DATA_ADMIN);\r\n};\r\n"],"names":["_ref","data","chartOptions","chart","id","animations","enabled","easing","speed","xaxis","categories","map","d","month","yaxis","title","text","stroke","curve","chartSeries","name","revenue","coursesAdded","coursesEnrolled","_jsx","className","children","ReactApexChart","options","series","type","height","sortedData","sort","a","b","enrolled","slice","course","labels","show","plotOptions","bar","horizontal","columnWidth","donutChartOptions","pie","donut","size","category","legend","position","horizontalAlign","donutChartSeries","courseCount","getDashBoardDataService","_asyncToGenerator","_regeneratorRuntime","mark","_callee","endpoint","response","wrap","_context","prev","next","api","get","concat","CONFIG_KEYS","API_BASE_URL","sent","abrupt","stop","_x","apply","arguments","getGraphDataService","_ref2","_callee2","_context2","_x2","_dashboardData$monthl","_graphData$revenue","_graphData$trendingCo","_graphData$courseByCa","_useState","useState","_useState2","_slicedToArray","dashboardData","seDashboardData","_useState3","_useState4","graphData","setGraphData","fetchDashboardDetails","END_POINTS","ADMIN_DASHBOARD_DATA","t0","toast","error","fetchGraphData","GET_GRAPH_DATA_ADMIN","useEffect","_jsxs","FaRupeeSign","Typography","variant","color","formatToINR","monthlyRevenue","AiOutlineBook","numberOfCourses","AiOutlineUser","numberInstructors","AiOutlineUsergroupAdd","numberOfStudents","RevenueChart","TrendingCoursesChart","trendingCourses","CourseCategoryChart","courseByCategory"],"sourceRoot":""}